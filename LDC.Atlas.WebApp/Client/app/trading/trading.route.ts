import { NgModule } from '@angular/core';
import { RouterModule, Routes } from '@angular/router';
import { MasterDataProps } from '../shared/entities/masterdata-props.entity';
import { CanDeactivateGuard } from '../shared/guards/can-deactivate-guard.service';
import { SecurityGuard } from '../shared/guards/security.guard';
import { CompanyDateResolver } from '../shared/resolvers/company-date.resolver';
import { FormConfigurationResolver } from '../shared/resolvers/form-configuration.resolver';
import { MasterDataResolver } from '../shared/resolvers/masterdata.resolver';
import { CostsToAdjustComponent } from './components/contract-physical-capture/costs-tab/costs-to-adjust/costs-to-adjust.component';
import { TradeMergeComponent } from './components/contract-physical-capture/form-components/trade-merge/trade-merge.component';
import { TradeCapturePageComponent } from './components/contract-physical-capture/trade-capture-page.component';
import { CostmatrixCreateComponent } from './components/costmatrices/components/costmatrix-create/costmatrix-create.component';
import { FxDealsCaptureComponent } from './components/fx-deals/capture/fx-deals-capture.component';
import { GroupAmendmentsComponent } from './components/group-amendments/group-amendments.component';
import { GroupFunctionsComponent } from './components/group-functions/group-functions.component';
import { TradeCostBulkUpdateComponent } from './components/group-functions/trade-cost-bulk-update/trade-cost-bulk-update.component';
import { TradeAllocationComponent } from './components/trade-allocation/trade-allocation.component';
import { TradesTabComponent } from './components/trades-tab/trades-tab.component';

export const routes: Routes = [
    {
        path: '',
        component: TradesTabComponent,
        canActivate: [SecurityGuard],
        data: {
            isSnapshot: false,
            masterdataList: [
                MasterDataProps.Counterparties,
                MasterDataProps.ContractTypes,
                MasterDataProps.ContractTerms,
                MasterDataProps.PaymentTerms,
                MasterDataProps.Ports,
            ],
        },
        resolve: {
            companyDate: CompanyDateResolver,
            masterdata: MasterDataResolver,
        },
    },
    {
        path: 'snapshot/:dataVersionId',
        component: TradesTabComponent,
        canActivate: [SecurityGuard],
        data: {
            title: 'Snapshot', isHomePage: false, privilegeLevel1Name: null,
            isSnapshot: true,
            authorizations: [
                {
                    privilegeName: 'AmendSnapshot',
                    permission: 2,
                    parentLevelOne: 'Trades',
                    parentLevelTwo: 'Physicals',
                },
            ],
            masterdataList: [
                MasterDataProps.Counterparties,
                MasterDataProps.ContractTypes,
                MasterDataProps.ContractTerms,
                MasterDataProps.PaymentTerms,
                MasterDataProps.Ports,
            ],
        },
        resolve: {
            companyDate: CompanyDateResolver,
            masterdata: MasterDataResolver,
        },
    },
    {
        path: 'allocateTrade/:sectionId',
        component: TradeAllocationComponent,
        canActivate: [SecurityGuard],
        canDeactivate: [CanDeactivateGuard],
        data: {
            formId: 'TradeAllocation',
            animation: 'tradeAllocation',
            title: 'Trade Allocation', isHomePage: false, privilegeLevel1Name: null,
            masterdataList: [
                MasterDataProps.Commodities,
                MasterDataProps.WeightUnits,
            ],
            authorizations: [
                {
                    privilegeName: 'AllocateDeallocate',
                    permission: 2,
                    parentLevelOne: 'Trades',
                    parentLevelTwo: 'Physicals',
                },
            ],
        },
        resolve: {
            masterdata: MasterDataResolver,
            formConfiguration: FormConfigurationResolver,
            companyDate: CompanyDateResolver,
        },
    },
    {
        path: 'snapshot/:dataVersionId/allocateTrade/:sectionId',
        component: TradeAllocationComponent,
        canActivate: [SecurityGuard],
        data: {
            formId: 'TradeAllocation',
            animation: 'tradeAllocation',
            title: 'Trade Allocation', isHomePage: false, privilegeLevel1Name: null,
            isSnapshot: true,
            masterdataList: [
                MasterDataProps.Commodities,
                MasterDataProps.WeightUnits,
            ],
            authorizations: [
                {
                    privilegeName: 'AllocateDeallocate',
                    permission: 2,
                    parentLevelOne: 'Trades',
                    parentLevelTwo: 'Physicals',
                },
            ],
        },
        resolve: {
            masterdata: MasterDataResolver,
            formConfiguration: FormConfigurationResolver,
            companyDate: CompanyDateResolver,
        },
    },
    {
        path: 'capture',
        component: TradeCapturePageComponent,
        canActivate: [SecurityGuard],
        canDeactivate: [CanDeactivateGuard],
        data: {
            animation: 'tradeNew',
            title: 'Trade Capture',
            formId: 'PhysicalTradeCapture', isHomePage: false, privilegeLevel1Name: null,
            masterdataList: [
                MasterDataProps.Arbitrations,
                MasterDataProps.Commodities,
                MasterDataProps.ContractTerms,
                MasterDataProps.Counterparties,
                MasterDataProps.Currencies,
                MasterDataProps.Departments,
                MasterDataProps.BusinessSectors,
                MasterDataProps.PaymentTerms,
                MasterDataProps.PeriodTypes,
                MasterDataProps.PositionMonthTypes,
                MasterDataProps.Ports,
                MasterDataProps.PriceUnits,
                MasterDataProps.WeightUnits,
                MasterDataProps.CostTypes,
            ],
            authorizations: [
                {
                    privilegeName: 'CreateTrade',
                    permission: 2,
                    parentLevelOne: 'Trades',
                    parentLevelTwo: 'Physicals',
                },
            ],
        },
        resolve: {
            masterdata: MasterDataResolver,
            formConfiguration: FormConfigurationResolver,
            companyDate: CompanyDateResolver,
        },
    },
    {
        path: 'snapshot/:dataVersionId/capture',
        component: TradeCapturePageComponent,
        canActivate: [SecurityGuard],
        canDeactivate: [CanDeactivateGuard],
        data: {
            animation: 'tradeNew',
            title: 'Trade Capture for Snapshot',
            formId: 'PhysicalTradeCapture', isHomePage: false, privilegeLevel1Name: null,
            isSnapshot: true,
            masterdataList: [
                MasterDataProps.Arbitrations,
                MasterDataProps.Commodities,
                MasterDataProps.ContractTerms,
                MasterDataProps.Counterparties,
                MasterDataProps.Currencies,
                MasterDataProps.Departments,
                MasterDataProps.BusinessSectors,
                MasterDataProps.PaymentTerms,
                MasterDataProps.PeriodTypes,
                MasterDataProps.PositionMonthTypes,
                MasterDataProps.Ports,
                MasterDataProps.PriceUnits,
                MasterDataProps.WeightUnits,
                MasterDataProps.CostTypes,
            ],
            authorizations: [
                {
                    privilegeName: 'CreateTrade',
                    permission: 2,
                    parentLevelOne: 'Trades',
                    parentLevelTwo: 'Physicals',
                },
            ],
        },
        resolve: {
            masterdata: MasterDataResolver,
            formConfiguration: FormConfigurationResolver,
        },
    },
    {
        path: 'display/:sectionId',
        component: TradeCapturePageComponent,
        canActivate: [SecurityGuard],
        data: {
            animation: 'tradeDisplay',
            title: 'Display Trade',
            formId: 'PhysicalTradeCapture', isHomePage: false, privilegeLevel1Name: null,
            masterdataList: [
                MasterDataProps.Arbitrations,
                MasterDataProps.Commodities,
                MasterDataProps.ContractTerms,
                MasterDataProps.Counterparties,
                MasterDataProps.Currencies,
                MasterDataProps.Departments,
                MasterDataProps.BusinessSectors,
                MasterDataProps.PaymentTerms,
                MasterDataProps.PeriodTypes,
                MasterDataProps.Ports,
                MasterDataProps.PriceUnits,
                MasterDataProps.WeightUnits,
                MasterDataProps.Vessels,
                MasterDataProps.CostTypes,
                MasterDataProps.InvoiceStatus,
                MasterDataProps.InvoiceTypes,
                MasterDataProps.Vats,
            ],
            authorizations: [
                {
                    privilegeName: 'Physicals',
                    permission: 1,
                    parentLevelOne: 'Trades',
                },
            ],
        },
        resolve: {
            masterdata: MasterDataResolver,
            formConfiguration: FormConfigurationResolver,
            companyDate: CompanyDateResolver,
        },
    },
    {
        path: 'transferCosts/:sectionId',
        component: CostsToAdjustComponent,
        canActivate: [SecurityGuard],
        data: {
            animation: 'transferCosts',
            title: 'Transfer',
            formId: 'TransferCosts', isHomePage: false, privilegeLevel1Name: null,
            masterdataList: [
                MasterDataProps.Arbitrations,
                MasterDataProps.Commodities,
                MasterDataProps.ContractTerms,
                MasterDataProps.Counterparties,
                MasterDataProps.Currencies,
                MasterDataProps.Departments,
                MasterDataProps.BusinessSectors,
                MasterDataProps.PaymentTerms,
                MasterDataProps.PeriodTypes,
                MasterDataProps.Ports,
                MasterDataProps.PriceUnits,
                MasterDataProps.WeightUnits,
                MasterDataProps.Vessels,
                MasterDataProps.CostTypes,
                MasterDataProps.InvoiceStatus,
                MasterDataProps.InvoiceTypes,
            ],
            authorizations: [
                {
                    privilegeName: 'Physicals',
                    permission: 1,
                    parentLevelOne: 'Trades',
                },
            ],
        },
        resolve: {
            masterdata: MasterDataResolver,
            formConfiguration: FormConfigurationResolver,
            companyDate: CompanyDateResolver,
        },
    },
    {
        path: 'tradeMerge/:currentSection.sectionId',
        component: TradeMergeComponent,
        canActivate: [SecurityGuard],
        data: {
            animation: 'tradeMerge',
            title: 'Merge',
            formId: 'tradeMerge', isHomePage: false, privilegeLevel1Name: null,
            masterdataList: [
                MasterDataProps.Arbitrations,
                MasterDataProps.Commodities,
                MasterDataProps.ContractTerms,
                MasterDataProps.Counterparties,
                MasterDataProps.Currencies,
                MasterDataProps.Departments,
                MasterDataProps.BusinessSectors,
                MasterDataProps.PaymentTerms,
                MasterDataProps.PeriodTypes,
                MasterDataProps.Ports,
                MasterDataProps.PriceUnits,
                MasterDataProps.WeightUnits,
                MasterDataProps.Vessels,
                MasterDataProps.CostTypes,
                MasterDataProps.InvoiceStatus,
                MasterDataProps.InvoiceTypes,
            ],
            authorizations: [
                {
                    privilegeName: 'Physicals',
                    permission: 1,
                    parentLevelOne: 'Trades',
                },
            ],
        },
        resolve: {
            masterdata: MasterDataResolver,
            formConfiguration: FormConfigurationResolver,
            companyDate: CompanyDateResolver,
        },
    },
    {
        path: 'snapshot/:dataVersionId/display/:sectionId',
        component: TradeCapturePageComponent,
        canActivate: [SecurityGuard],
        data: {
            animation: 'tradeDisplay',
            title: 'Display Trade for Snapshot',
            formId: 'PhysicalTradeCapture', isHomePage: false, privilegeLevel1Name: null,
            isSnapshot: true,
            masterdataList: [
                MasterDataProps.Arbitrations,
                MasterDataProps.Commodities,
                MasterDataProps.ContractTerms,
                MasterDataProps.Counterparties,
                MasterDataProps.Currencies,
                MasterDataProps.Departments,
                MasterDataProps.BusinessSectors,
                MasterDataProps.PaymentTerms,
                MasterDataProps.PeriodTypes,
                MasterDataProps.Ports,
                MasterDataProps.PriceUnits,
                MasterDataProps.WeightUnits,
                MasterDataProps.Vessels,
                MasterDataProps.CostTypes,
                MasterDataProps.InvoiceStatus,
            ],
            authorizations: [
                {
                    privilegeName: 'Physicals',
                    permission: 1,
                    parentLevelOne: 'Trades',
                },
            ],
        },
        resolve: {
            masterdata: MasterDataResolver,
            formConfiguration: FormConfigurationResolver,
        },
    },
    {
        path: 'edit/:sectionId',
        component: TradeCapturePageComponent,
        canActivate: [SecurityGuard],
        canDeactivate: [CanDeactivateGuard],
        data: {
            animation: 'tradeEdit',
            title: 'Trade Edition',
            formId: 'PhysicalTradeCapture', isHomePage: false, privilegeLevel1Name: null,
            isEdit: true,
            masterdataList: [
                MasterDataProps.Arbitrations,
                MasterDataProps.Commodities,
                MasterDataProps.ContractTerms,
                MasterDataProps.Counterparties,
                MasterDataProps.Currencies,
                MasterDataProps.Departments,
                MasterDataProps.BusinessSectors,
                MasterDataProps.PaymentTerms,
                MasterDataProps.PeriodTypes,
                MasterDataProps.PositionMonthTypes,
                MasterDataProps.Ports,
                MasterDataProps.PriceUnits,
                MasterDataProps.WeightUnits,
                MasterDataProps.Vessels,
                MasterDataProps.CostTypes,
                MasterDataProps.InvoiceTypes,
            ],
            authorizations: [
                {
                    privilegeName: 'Physicals',
                    permission: 2,
                    parentLevelOne: 'Trades',
                },
            ],
            tabIndex: 0,
        },
        resolve: {
            masterdata: MasterDataResolver,
            formConfiguration: FormConfigurationResolver,
            companyDate: CompanyDateResolver,
        },
    },
    {
        path: 'snapshot/:dataVersionId/edit/:sectionId',
        component: TradeCapturePageComponent,
        canActivate: [SecurityGuard],
        canDeactivate: [CanDeactivateGuard],
        data: {
            animation: 'tradeEdit',
            title: 'Trade Edition for Snapshot',
            formId: 'PhysicalTradeCapture', isHomePage: false, privilegeLevel1Name: null,
            isEdit: true,
            isSnapshot: true,
            masterdataList: [
                MasterDataProps.Arbitrations,
                MasterDataProps.Commodities,
                MasterDataProps.ContractTerms,
                MasterDataProps.Counterparties,
                MasterDataProps.Currencies,
                MasterDataProps.Departments,
                MasterDataProps.BusinessSectors,
                MasterDataProps.PaymentTerms,
                MasterDataProps.PeriodTypes,
                MasterDataProps.PositionMonthTypes,
                MasterDataProps.Ports,
                MasterDataProps.PriceUnits,
                MasterDataProps.WeightUnits,
                MasterDataProps.Vessels,
                MasterDataProps.CostTypes,
            ],
            authorizations: [
                {
                    privilegeName: 'Physicals',
                    permission: 2,
                    parentLevelOne: 'Trades',
                },
            ],
            tabIndex: 0,
        },
        resolve: {
            masterdata: MasterDataResolver,
            formConfiguration: FormConfigurationResolver,
            companyDate: CompanyDateResolver,
        },
    },
    {
        path: 'edit/:sectionId/:tabIndex',
        component: TradeCapturePageComponent,
        canActivate: [SecurityGuard],
        canDeactivate: [CanDeactivateGuard],
        data: {
            animation: 'tradeEdit',
            title: 'Trade Edition',
            formId: 'PhysicalTradeCapture', isHomePage: false, privilegeLevel1Name: null,
            isEdit: true,
            masterdataList: [
                MasterDataProps.Arbitrations,
                MasterDataProps.Commodities,
                MasterDataProps.ContractTerms,
                MasterDataProps.Counterparties,
                MasterDataProps.Currencies,
                MasterDataProps.Departments,
                MasterDataProps.BusinessSectors,
                MasterDataProps.PaymentTerms,
                MasterDataProps.PeriodTypes,
                MasterDataProps.PositionMonthTypes,
                MasterDataProps.Ports,
                MasterDataProps.PriceUnits,
                MasterDataProps.WeightUnits,
                MasterDataProps.Vessels,
                MasterDataProps.CostTypes,
                MasterDataProps.InvoiceTypes,
            ],
            authorizations: [
                {
                    privilegeName: 'Physicals',
                    permission: 2,
                    parentLevelOne: 'Trades',
                },
            ],
        },
        resolve: {
            masterdata: MasterDataResolver,
            formConfiguration: FormConfigurationResolver,
            companyDate: CompanyDateResolver,
        },
    },
    {
        path: 'snapshot/:dataVersionId/edit/:sectionId/:tabIndex',
        component: TradeCapturePageComponent,
        canActivate: [SecurityGuard],
        canDeactivate: [CanDeactivateGuard],
        data: {
            animation: 'tradeEdit',
            title: 'Trade Edition',
            formId: 'PhysicalTradeCapture', isHomePage: false, privilegeLevel1Name: null,
            isEdit: true,
            isSnapshot: true,
            masterdataList: [
                MasterDataProps.Arbitrations,
                MasterDataProps.Commodities,
                MasterDataProps.ContractTerms,
                MasterDataProps.Counterparties,
                MasterDataProps.Currencies,
                MasterDataProps.Departments,
                MasterDataProps.BusinessSectors,
                MasterDataProps.PaymentTerms,
                MasterDataProps.PeriodTypes,
                MasterDataProps.PositionMonthTypes,
                MasterDataProps.Ports,
                MasterDataProps.PriceUnits,
                MasterDataProps.WeightUnits,
                MasterDataProps.Vessels,
                MasterDataProps.CostTypes,
            ],
            authorizations: [
                {
                    privilegeName: 'Physicals',
                    permission: 2,
                    parentLevelOne: 'Trades',
                },
            ],
        },
        resolve: {
            masterdata: MasterDataResolver,
            formConfiguration: FormConfigurationResolver,
            companyDate: CompanyDateResolver,
        },
    },
    {
        path: 'image/:sectionId',
        component: TradeCapturePageComponent,
        canActivate: [SecurityGuard],
        canDeactivate: [CanDeactivateGuard],
        data: {
            animation: 'tradeEdit&Image',
            title: 'Trade Creation',
            formId: 'PhysicalTradeCapture', isHomePage: false, privilegeLevel1Name: null,
            masterdataList: [
                MasterDataProps.Arbitrations,
                MasterDataProps.Commodities,
                MasterDataProps.ContractTerms,
                MasterDataProps.Counterparties,
                MasterDataProps.Currencies,
                MasterDataProps.Departments,
                MasterDataProps.BusinessSectors,
                MasterDataProps.PaymentTerms,
                MasterDataProps.PeriodTypes,
                MasterDataProps.PositionMonthTypes,
                MasterDataProps.Ports,
                MasterDataProps.PriceUnits,
                MasterDataProps.WeightUnits,
                MasterDataProps.Vessels,
                MasterDataProps.CostTypes,
            ],
            isImage: true,
            authorizations: [
                {
                    privilegeName: 'Physicals',
                    permission: 2,
                    parentLevelOne: 'Trades',
                },
            ],
        },
        resolve: {
            masterdata: MasterDataResolver,
            formConfiguration: FormConfigurationResolver,
            companyDate: CompanyDateResolver,
        },
    },
    {
        path: 'edit/:pricingMethod/:sectionId',
        component: TradeCapturePageComponent,
        canActivate: [SecurityGuard],
        canDeactivate: [CanDeactivateGuard],
        data: {
            animation: 'tradeNew',
            title: 'Trade Edition',
            formId: 'PhysicalTradeCapture', isHomePage: false, privilegeLevel1Name: null,
            masterdataList: [
                MasterDataProps.Arbitrations,
                MasterDataProps.Commodities,
                MasterDataProps.ContractTerms,
                MasterDataProps.Counterparties,
                MasterDataProps.Currencies,
                MasterDataProps.Departments,
                MasterDataProps.BusinessSectors,
                MasterDataProps.PaymentTerms,
                MasterDataProps.PeriodTypes,
                MasterDataProps.Ports,
                MasterDataProps.PriceUnits,
                MasterDataProps.WeightUnits,
                MasterDataProps.Vessels,
                MasterDataProps.CostTypes,
            ],
            authorizations: [
                {
                    privilegeName: 'CreateTrade',
                    permission: 2,
                    parentLevelOne: 'Trades',
                    parentLevelTwo: 'Physicals',
                },
            ],
        },
        resolve: {
            masterdata: MasterDataResolver,
            formConfiguration: FormConfigurationResolver,
            companyDate: CompanyDateResolver,
        },
    },

    {
        path: 'bulkActions/costs/:bulkActionTypeId/:charterId',
        component: TradeCostBulkUpdateComponent,
        canActivate: [SecurityGuard],
        canDeactivate: [CanDeactivateGuard],
        data: {
            animation: 'bulkActions',
            title: 'Bulk Actions',
            isHomePage: false,
            privilegeLevel1Name: null,
            formId: 'GroupFunctions',
            masterdataList: [
                MasterDataProps.WeightUnits,
                MasterDataProps.Counterparties,
                MasterDataProps.Commodities,
                MasterDataProps.ContractTerms,
                MasterDataProps.Ports,
                MasterDataProps.Arbitrations,
                MasterDataProps.Currencies,
                MasterDataProps.PriceUnits,
                MasterDataProps.PaymentTerms,
                MasterDataProps.Ports,
                MasterDataProps.BusinessSectors,
                MasterDataProps.Vessels,
                MasterDataProps.PositionMonthTypes,
                MasterDataProps.Departments,
                MasterDataProps.PeriodTypes,
                MasterDataProps.CostTypes,
            ],
        },
        resolve: {
            masterdata: MasterDataResolver,
            formConfiguration: FormConfigurationResolver,
            companyDate: CompanyDateResolver,
        },
    },

    {
        path: 'costmatrix/create',
        component: CostmatrixCreateComponent,
        canActivate: [SecurityGuard],
        canDeactivate: [CanDeactivateGuard],
        data: {
            animation: 'costmatrixNew',
            title: 'Cost Matrix Creation',
            formId: 'CostmatrixCreate', isHomePage: false, privilegeLevel1Name: null,
            masterdataList: [
                MasterDataProps.CostTypes,
                MasterDataProps.Counterparties,
                MasterDataProps.PriceUnits,
                MasterDataProps.Currencies,
                MasterDataProps.RateTypes,
            ],
            authorizations: [
                {
                    privilegeName: 'CostMatrices',
                    permission: 2,
                    parentLevelOne: 'Trades',
                    parentLevelTwo: null,
                },
            ],
        },
        resolve: {
            masterdata: MasterDataResolver,
            formConfiguration: FormConfigurationResolver,
            companyDate: CompanyDateResolver,
        },
    },
    {
        path: 'costmatrix/display/:costmatrixId',
        component: CostmatrixCreateComponent,
        canActivate: [SecurityGuard],
        data: {
            animation: 'CostmatrixEdit',
            title: 'Cost Matrix',
            formId: 'CostmatrixEdit', isHomePage: false, icon: '',
            isDisplay: true,
            masterdataList: [
                MasterDataProps.CostTypes,
                MasterDataProps.Counterparties,
                MasterDataProps.PriceUnits,
                MasterDataProps.Currencies,
                MasterDataProps.RateTypes,
            ],
        },
        resolve: {
            masterdata: MasterDataResolver,
            formConfiguration: FormConfigurationResolver,
            companyDate: CompanyDateResolver,
        },
    },
    {
        path: 'costmatrix/edit/:costmatrixId',
        component: CostmatrixCreateComponent,
        canActivate: [SecurityGuard],
        canDeactivate: [CanDeactivateGuard],
        data: {
            animation: 'costmatrixEdit',
            title: 'Cost Matrix Edition',
            formId: 'CostmatrixEdit', isHomePage: false, icon: '',
            masterdataList: [
                MasterDataProps.CostTypes,
                MasterDataProps.Counterparties,
                MasterDataProps.PriceUnits,
                MasterDataProps.Currencies,
                MasterDataProps.RateTypes,
            ],
            authorizations: [
                {
                    privilegeName: 'EditCostMatrices',
                    permission: 2,
                    parentLevelOne: 'Trades',
                    parentLevelTwo: 'CostMatrices',
                },
            ],
        },
        resolve: {
            masterdata: MasterDataResolver,
            formConfiguration: FormConfigurationResolver,
            companyDate: CompanyDateResolver,
        },
    },
    {
        path: 'costmatrix/image/:originalCostMatrixId',
        component: CostmatrixCreateComponent,
        canActivate: [SecurityGuard],
        data: {
            animation: 'costmatrixImage',
            title: 'Image Cost Matrix',
            formId: 'CostmatrixCreate', isHomePage: false, privilegeLevel1Name: null,
            isImage: true,
            masterdataList: [
                MasterDataProps.CostTypes,
                MasterDataProps.Counterparties,
                MasterDataProps.PriceUnits,
                MasterDataProps.Currencies,
                MasterDataProps.RateTypes,
            ],
            authorizations: [
                {
                    privilegeName: 'CostMatrices',
                    permission: 2,
                    parentLevelOne: 'Trades',
                    parentLevelTwo: null,
                },
            ],
        },
        resolve: {
            masterdata: MasterDataResolver,
            formConfiguration: FormConfigurationResolver,
            companyDate: CompanyDateResolver,
        },
    },
    {
        path: 'bulkActions/:bulkActionTypeId',
        component: GroupFunctionsComponent,
        canActivate: [SecurityGuard],
        canDeactivate: [CanDeactivateGuard],
        data: {
            animation: 'bulkActions',
            title: 'Bulk Actions',
            isHomePage: false,
            privilegeLevel1Name: null,
            formId: 'GroupFunctions',
            masterdataList: [
                MasterDataProps.WeightUnits,
                MasterDataProps.Counterparties,
                MasterDataProps.Commodities,
                MasterDataProps.ContractTerms,
                MasterDataProps.Ports,
                MasterDataProps.Arbitrations,
                MasterDataProps.Currencies,
                MasterDataProps.PriceUnits,
                MasterDataProps.PaymentTerms,
                MasterDataProps.Ports,
                MasterDataProps.BusinessSectors,
                MasterDataProps.Vessels,
                MasterDataProps.PositionMonthTypes,
                MasterDataProps.Departments,
                MasterDataProps.PeriodTypes,
                MasterDataProps.CostTypes,
            ],
            // commented temporarily as it should be handled for bulk approval and bulk edit seperately
            // authorizations: [
            //     {
            //         privilegeName: 'BulkApproval',
            //         permission: 2,
            //         parentLevelOne: 'Trades',
            //         parentLevelTwo: 'GroupFunctions',
            //     },
            // ],
        },
        resolve: {
            masterdata: MasterDataResolver,
            formConfiguration: FormConfigurationResolver,
            companyDate: CompanyDateResolver,
        },
    },
    {
        path: 'groupfunctions',
        component: GroupAmendmentsComponent,
        canActivate: [SecurityGuard],
        canDeactivate: [CanDeactivateGuard],
        data: {
            animation: 'groupFunctions',
            title: 'Group Functions',
            formId: 'GroupFunctions', isHomePage: false, privilegeLevel1Name: null,
            masterdataList: [
            ],

        },
        resolve: {
            masterdata: MasterDataResolver,
            formConfiguration: FormConfigurationResolver,
            companyDate: CompanyDateResolver,
        },
    },
    {
        path: 'image/:sectionId/:multipleImage',
        component: TradeCapturePageComponent,
        canActivate: [SecurityGuard],
        canDeactivate: [CanDeactivateGuard],
        data: {
            animation: 'tradeEdit&Image',
            title: 'Trades Creation',
            formId: 'PhysicalTradeCapture', isHomePage: false, privilegeLevel1Name: null,
            masterdataList: [
                MasterDataProps.Arbitrations,
                MasterDataProps.Commodities,
                MasterDataProps.ContractTerms,
                MasterDataProps.Counterparties,
                MasterDataProps.Currencies,
                MasterDataProps.Departments,
                MasterDataProps.BusinessSectors,
                MasterDataProps.PaymentTerms,
                MasterDataProps.PeriodTypes,
                MasterDataProps.PositionMonthTypes,
                MasterDataProps.Ports,
                MasterDataProps.PriceUnits,
                MasterDataProps.WeightUnits,
                MasterDataProps.Vessels,
                MasterDataProps.CostTypes,
            ],
            isImage: true,
            authorizations: [
                {
                    privilegeName: 'Physicals',
                    permission: 2,
                    parentLevelOne: 'Trades',
                },
            ],
        },
        resolve: {
            masterdata: MasterDataResolver,
            formConfiguration: FormConfigurationResolver,
            companyDate: CompanyDateResolver,
        },
    },
    {
        path: 'display/:sectionId/:tabIndex',
        component: TradeCapturePageComponent,
        canActivate: [SecurityGuard],
        data: {
            animation: 'tradeDisplay',
            title: 'Display Trade',
            formId: 'PhysicalTradeCapture', isHomePage: false, privilegeLevel1Name: null,
            masterdataList: [
                MasterDataProps.Arbitrations,
                MasterDataProps.Commodities,
                MasterDataProps.ContractTerms,
                MasterDataProps.Counterparties,
                MasterDataProps.Currencies,
                MasterDataProps.Departments,
                MasterDataProps.BusinessSectors,
                MasterDataProps.PaymentTerms,
                MasterDataProps.PeriodTypes,
                MasterDataProps.Ports,
                MasterDataProps.PriceUnits,
                MasterDataProps.WeightUnits,
                MasterDataProps.Vessels,
                MasterDataProps.CostTypes,
                MasterDataProps.InvoiceStatus,
                MasterDataProps.InvoiceTypes,
            ],
            authorizations: [
                {
                    privilegeName: 'Physicals',
                    permission: 1,
                    parentLevelOne: 'Trades',
                },
            ],
        },
        resolve: {
            masterdata: MasterDataResolver,
            formConfiguration: FormConfigurationResolver,
            companyDate: CompanyDateResolver,
        },
    },
    {
        path: 'fxdeal/capture',
        component: FxDealsCaptureComponent,
        data: {
            title: 'Fx Deal Capture',
            formId: 'FxDealCapture', isHomePage: false, privilegeLevel1Name: null,
            isCreate: true,
            masterdataList: [
                MasterDataProps.Companies,
                MasterDataProps.Counterparties,
                MasterDataProps.Currencies,
                MasterDataProps.Departments,
                MasterDataProps.FxTradeTypes,
                MasterDataProps.NominalAccounts,
                MasterDataProps.Traders,
            ],
            authorizations: [
                {
                    privilegeName: 'CreateEditFxDeal',
                    permission: 2,
                    parentLevelOne: 'Trades',
                    parentLevelTwo: 'FXDeals',
                },
            ],
        },
        resolve: {
            masterdata: MasterDataResolver,
            formConfiguration: FormConfigurationResolver,
            companyDate: CompanyDateResolver,
        },
    },

    {
        path: 'fxdeal/display/:fxDealId',
        component: FxDealsCaptureComponent,
        data: {
            title: 'Display Fx Deal',
            formId: 'FxDealCapture', isHomePage: false, privilegeLevel1Name: null,
            isView: true,
            masterdataList: [
                MasterDataProps.Companies,
                MasterDataProps.Counterparties,
                MasterDataProps.Currencies,
                MasterDataProps.Departments,
                MasterDataProps.FxTradeTypes,
                MasterDataProps.NominalAccounts,
                MasterDataProps.Traders,
            ],
        },
        resolve: {
            masterdata: MasterDataResolver,
            formConfiguration: FormConfigurationResolver,
            companyDate: CompanyDateResolver,
        },
    },

    {
        path: 'fxdeal/edit/:fxDealId',
        component: FxDealsCaptureComponent,
        data: {
            title: 'Fx Deal Edition',
            formId: 'FxDealCapture', isHomePage: false, privilegeLevel1Name: null,
            isEdit: true,
            masterdataList: [
                MasterDataProps.Companies,
                MasterDataProps.Counterparties,
                MasterDataProps.Currencies,
                MasterDataProps.Departments,
                MasterDataProps.FxTradeTypes,
                MasterDataProps.NominalAccounts,
                MasterDataProps.Traders,
            ],
            authorizations: [
                {
                    privilegeName: 'CreateEditFxDeal',
                    permission: 2,
                    parentLevelOne: 'Trades',
                    parentLevelTwo: 'FXDeals',
                },
            ],
        },
        resolve: {
            masterdata: MasterDataResolver,
            formConfiguration: FormConfigurationResolver,
            companyDate: CompanyDateResolver,
        },
    },
];

@NgModule({
    imports: [RouterModule.forChild(routes)],
    exports: [RouterModule],
    providers: [],
})
export class TradingRoutingModule { }
