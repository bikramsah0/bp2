import { AssignedCost } from './assigned-cost';
import { InvoiceAssociatedToSectionClose } from './invoice-associated-to-section-close';

export class ContractsForBulkFunctions {
    dataVersionId: number;
    status: string;
    allocatedSectionId: number;
    invoicingStatusId: number;
    contractType: string;
    physicalContractId: number;
    invoicingStatus: string;
    sectionId: number;
    sectionOriginId: number;
    contractLabel: string;
    contractDate: Date;
    userId: number;
    departmentId: number;
    buyerCounterpartyId: number;
    sellerCounterpartyId: number;
    counterpartyReference: string;
    commodityId: number;
    cropYear: string;
    weightUnitId: number;
    quantity: number;
    contractQuantity: number;
    contractTermId: number;
    portTermId: number;
    arbitrationId: number;
    currencyCode: string;
    priceUnitId: number;
    contractValue: number;
    paymentTermsId: number;
    contractPrice: number;
    periodTypeId: number;
    periodTypeDescription: string;
    deliveryPeriodStart: Date;
    deliveryPeriodEnd: Date;
    positionMonth: Date;
    positionMonthType: number;
    monthPositionIndex: number;
    portOriginId: number;
    portDestinationId: number;
    businessSectorId: number;
    premiumDiscountBasis: number;
    premiumDiscountCurrency: string;
    premiumDiscountTypeId: number;
    premiumDiscountValue: number;
    memorandum: string;
    lastModifiedDate: Date;
    otherReference: string;
    vesselId: number;
    blDate: Date;
    blReference: string;
    isLocked: boolean;
    lockMessage: string;
    charterReference: string;
    counterparty: string;
    allocatedContractReference?: string;
    maturityDate?: Date;
    isBlDateUpdatable: boolean;
    validationError: boolean = false;
    allocatedInvoiceStatus: number;
    contractIssuedDate: Date;
    contractSentDate: Date;
    contractReturnedDate: Date;
    lastEmailReceivedDate: Date;
    shipmentPeriod: string;
    isWashout: boolean;
    isTradeCancelled: string;
    isTradeClosed: string;
    removeSectionTrafficInfo: boolean;
    postingStatusId: number;
    isCashMatched: boolean;
    contractTypeId: number;
    invoicePercent: number;
    netAccrual: number;
    invoices: InvoiceAssociatedToSectionClose;
    costs: AssignedCost;
    approvalStatus: boolean;
    groupingNumber: number;
    isInvoiced: boolean;
}
