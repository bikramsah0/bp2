export interface TransactionReportSearchResult {
    clientAccount: string;
    accountTitle: string;
    documentReference: string;
    postingLineId: number;
    nominalAccount: string;
    matchFlag: string;
    clientReference: string;
    costType: string;
    costCenter: string;
    dmsId: string;
    transactionalCurrency: number;
    department: string;
    associatedAccountCode: string;
    paymentTerms: string;
    contractRef: string;
    secondaryDocumentReference: string;
    currency: string;
    period: string;
    documentDate: Date;
    valueDate: Date;
    postedDate: Date;
    functionalCurrency: number;
    statutoryCcyAmount: number;
    securePayment: string;
    vatTurnover: number;
    accountCategory: string;
    province: string;
    preMatchDocRef: string;
    interfaceStatus: string;
    originalReferenceId: string;
    payee: string;
    roe: number;
    roeType: string;
    commodity: string;
    accuralNumber: number;
    backOfficeDocId: string;
    gLDate: Date;
    backOfficePostingDate: Date;
    documentType: string;
    paymentTraxId: string;
    postedTime: string;
    setupUser: string;
    setupDate: Date;
    setupTime: string;
    originalValueDate: Date;
    vatCode: string;
    paymentMatchDate: Date;
    matchTime: string;
    paymentDocumentDate: Date;
    narrative: string;
    inhouseExternal: string;
    accountLineType: string;
    charter: string;
    contractCommodityDescription: string;
    contractCommodityType: string;
    contractIncoTerms: string;
    contractBLDate: Date;
    clientGroupAccount: string;
    contractGroupNumber: number;
    contractPortOrigin: string;
    contractPortDestination: string;
    contractIntercomPort: string;
    contractShippingPeriod: string;
    contractTrader: string;
    contractVessel: string;
    contractVesselImo: string;
    accountingDate: Date;
    weight: string;
    mdmId: number;
    counterpartyCode: string;
    counterpartyType: string;
    name: string;
    tradeStatus: string;
    status: string;
    headOfFamily: number;
    countryCode: string;
    clientProvince: string;
    c2CCode: string;
    vatRegistrationNumber: string;
    fiscalRegistrationNumber: string;
    mdmCategoryCode: string;
    address1: string;
    address2: string;
    city: string;
    zipCode: string;
    nominalMDMID: number;
    accountNumber: string;
    mainAccountTitle: string;
    detailAccountTitle: string;
    accType: string;
    bankAcc: string;
    custVendor: string;
    alternativeAccount: string;
    alternativeDescription: string;
    otherAlternativeAccount: string;
    revalxRequired: string;
    incInCCYEXP: string;
    interfaceBankCode: string;
    datelastposted: Date;
    inactive: string;
    toPayToReceive :string
}
