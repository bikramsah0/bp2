import { ContractStatus } from '../enums/contract-status.enum';
import { ContractTypes } from '../enums/contract-type.enum';
import { InvoicingStatus } from '../enums/invoicing-status.enum';

export class AssignedSection {
    contractType: ContractTypes;
    sectionId: number;
    contractLabel: string;
    buyerCode: string;
    sellerCode: string;
    quantity: number;
    weightUnitId: number;
    commodityId: number;
    allocatedTo: string;
    sectionAllocated: string;
    blDate?: Date;
    price: string;
    priceUnitId: number;
    currency: string;
    departmentId: number;
    charterRef: string;
    assignedCharterReference: string;
    assignmentDate: string;
    vessel: string;
    groupNumber: string;
    portOrigin: string;
    portDestination: string;
    blRef: string;
    counterparty: string;
    invoiceRef: string;
    pricingMethodId: number;
    contractStatusCode: ContractStatus;
    createdDateTime: Date;
    modifiedDateTime: Date;
    modifiedBy: string;
    paymentTermCode: string;
    shipmentPeriod: string;
    removeSectionTrafficInfo: boolean;
    invoicingStatus: InvoicingStatus;
    contractBlDate: string;
    marketSector: string;
    allocatedSectionId: number;
    allocatedToSectionId: number;
    allocatedDateTime: Date;
    amendedBy: string;
    amendedOn: Date;
    arbitrationCode: string;
    arbitrationDescription: string;
    buyerDescription: string;
    commodity1: string;
    commodity2: string;
    commodity3: string;
    commodity4: string;
    commodity5: string;
    commodityDescription: string;
    companyId: string;
    contractIssuedOn: Date;
    contractQuantity: number;
    contractTermCode: string;
    contractTermDescription: string;
    contractTermLocationPortCode: string;
    contractTermLocationDescription: string;
    contractValue: number;
    counterpartyRef: string;
    contractDate: Date;
    createdBy: string;
    cropYear: number;
    currencyDescription: string;
    deliveryPeriodStart: Date;
    deliveryPeriodEnd: Date;
    departmentCode: string;
    departmentDescription: string;
    groupingNumber: number;
    displayContractType: string;
    invoiceValue: number;
    displayInvoicingStatus: string;
    mainInvoiceReference: string;
    mainInvoiceDate: Date;
    memo: string;
    otherReference: string;
    parentContractLabel: string;
    paymentDate: Date;
    paymentTermDescription: string;
    percentageInvoiced: number;
    periodType: string;
    physicalContractCode: string;
    portOfOrigin: string;
    portOfOriginDescription: string;
    portOfDestination: string;
    portOfDestinationDescription: string;
    positionMonth: Date;
    positionType: string;
    originalQuantity: number;
    priceCode: string;
    priceUnitDescription: string;
    quantityCodeInvoiced: string;
    quantityInvoiced: number;
    sellerDescription: string;
    traderDisplayName: string;
    vesselName: string;
    weightUnitCode: string;
    weightUnitDescription: string;
    principalCommodity: string;
    part2: string;
    part3: string;
    WeightCode: string;

}
