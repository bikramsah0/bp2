import { AssignedSection } from '../entities/assigned-section.entity';
import { ContractStatus } from '../enums/contract-status.enum';
import { ContractTypes } from '../enums/contract-type.enum';

export class AssignedSectionView {
    contractType: ContractTypes;
    sectionId: number;
    contractLabel: string;
    buyerCode: string;
    sellerCode: string;
    quantity: number;
    originalQuantity: number;
    weightUnitId: number;
    commodityId: number;
    allocatedTo: string;
    sectionAllocated: string;
    blDate?: Date;
    price: string;
    priceUnitId: number;
    currency: string;
    departmentId: number;
    charterRef: string;
    assignedCharterReference: string;
    assignmentDate: string;
    vessel: string;
    groupNumber: string;
    portOrigin: string;
    portDestination: string;
    blRef: string;
    counterparty: string;
    invoiceRef: string;
    pricingMethodId: number;
    contractStatusCode: ContractStatus;
    createdDateTime: Date;
    modifiedDateTime: Date;
    modifiedBy: string;
    paymentTermCode: string;
    shipmentPeriod: string;
    removeSectionTrafficInfo: boolean;
    isTouched: boolean;
    isValid: boolean;
    isValidAllocatedTo: boolean;
    invoicingStatus: number;
    isSaleFullyInvoiced: boolean;
    reasonForDeassignment: string;
    reasonForReassignment: string;
    highLightRow: boolean;
    automatedChanged: boolean;
    quantityStyleChangeForQuantity: boolean;
    quantityStyleChangeForAllocatedTo: boolean;
    editableAllocatedTo: boolean;
    allocatedSectionId: number;
    allocatedToSectionId: number;
    isChecked: boolean;
    contractBlDate: string;
    marketSector: string;
    allocatedDateTime: Date;
    amendedBy: string;
    amendedOn: Date;
    arbitrationCode: string;
    arbitrationDescription: string;
    buyerDescription: string;
    commodity1: string;
    commodity2: string;
    commodity3: string;
    commodity4: string;
    commodity5: string;
    commodityDescription: string;
    companyId: string;
    contractIssuedOn: Date;
    contractQuantity: number;
    contractTermCode: string;
    contractTermDescription: string;
    contractTermLocationPortCode: string;
    contractTermLocationDescription: string;
    contractValue: number;
    counterpartyRef: string;
    contractDate: Date;
    createdBy: string;
    cropYear: number;
    currencyDescription: string;
    dataVersionId: number;
    deliveryPeriodStart: Date;
    deliveryPeriodEnd: Date;
    departmentCode: string;
    departmentDescription: string;
    groupingNumber: number;
    displayContractType: string;
    invoiceValue: number;
    displayInvoicingStatus: string;
    mainInvoiceReference: string;
    mainInvoiceDate: Date;
    memo: string;
    otherReference: string;
    parentContractLabel: string;
    paymentDate: Date;
    paymentTermDescription: string;
    percentageInvoiced: number;
    periodType: string;
    physicalContractCode: string;
    portOfOrigin: string;
    portOfOriginDescription: string;
    portOfDestination: string;
    portOfDestinationDescription: string;
    positionMonth: Date;
    positionType: string;
    priceCode: string;
    priceUnitDescription: string;
    quantityCodeInvoiced: string;
    quantityInvoiced: number;
    sellerDescription: string;
    traderDisplayName: string;
    vesselName: string;
    weightUnitCode: string;
    weightUnitDescription: string;
    reassignQuantity: number;
    isnavopen: boolean;
    isWashout: boolean;
    principalCommodity: string;
    part2: string;
    part3: string;
    WeightCode: string;
    constructor(section: AssignedSection) {
        this.contractType = section.contractType;
        this.contractLabel = section.contractLabel;
        this.commodityId = section.commodityId;
        this.departmentId = section.departmentId;
        this.buyerCode = section.buyerCode;
        this.sellerCode = section.sellerCode;
        this.currency = section.currency;
        this.price = section.price;
        this.blDate = section.blDate;
        this.allocatedTo = section.allocatedTo;
        this.assignedCharterReference = section.assignedCharterReference;
        this.weightUnitId = section.weightUnitId;
        this.priceUnitId = section.priceUnitId;
        this.sectionId = section.sectionId;
        this.quantity = section.quantity;
        this.sectionAllocated = section.sectionAllocated;
        this.charterRef = section.charterRef;
        this.assignmentDate = section.assignmentDate;
        this.vessel = section.vessel;
        this.groupNumber = section.groupNumber;
        this.portOrigin = section.portOrigin;
        this.portDestination = section.portDestination;
        this.marketSector = section.marketSector;
        this.blRef = section.blRef;
        this.counterparty = section.counterparty;
        this.invoiceRef = section.invoiceRef;
        this.pricingMethodId = section.pricingMethodId;
        this.contractStatusCode = section.contractStatusCode;
        this.createdDateTime = section.createdDateTime;
        this.modifiedDateTime = section.modifiedDateTime;
        this.modifiedBy = section.modifiedBy;
        this.paymentTermCode = section.paymentTermCode;
        this.shipmentPeriod = section.shipmentPeriod;
        this.removeSectionTrafficInfo = section.removeSectionTrafficInfo;
        this.isTouched = false;
        this.originalQuantity = this.quantity;
        this.isValid = true;
        this.isValidAllocatedTo = true;
        this.invoicingStatus = section.invoicingStatus;
        this.isSaleFullyInvoiced = false;
        this.reasonForDeassignment = '';
        this.highLightRow = false;
        this.automatedChanged = false;
        this.quantityStyleChangeForQuantity = false;
        this.quantityStyleChangeForAllocatedTo = false;
        this.editableAllocatedTo = (section.allocatedTo) ? false : true;
        this.isChecked = false;
        this.contractBlDate = section.contractBlDate;
        this.allocatedDateTime = section.allocatedDateTime;
        this.amendedBy = section.amendedBy;
        this.amendedOn = section.amendedOn;
        this.arbitrationCode = section.arbitrationCode;
        this.arbitrationDescription = section.arbitrationDescription;
        this.buyerDescription = section.buyerDescription;
        this.commodity1 = section.commodity1;
        this.commodity2 = section.commodity2;
        this.commodity3 = section.commodity3;
        this.commodity4 = section.commodity4;
        this.commodity5 = section.commodity5;
        this.commodityDescription = section.commodityDescription;
        this.companyId = section.companyId;
        this.contractIssuedOn = section.contractIssuedOn;
        this.contractQuantity = section.contractQuantity;
        this.contractTermCode = section.contractTermCode;
        this.contractTermDescription = section.contractTermDescription;
        this.contractTermLocationPortCode = section.contractTermLocationPortCode;
        this.contractTermLocationDescription = section.contractTermLocationDescription;
        this.contractValue = section.contractValue;
        this.counterpartyRef = section.counterpartyRef;
        this.contractDate = section.contractDate;
        this.createdBy = section.createdBy;
        this.cropYear = section.cropYear;
        this.currencyDescription = section.currencyDescription;
        this.deliveryPeriodStart = section.deliveryPeriodStart;
        this.deliveryPeriodEnd = section.deliveryPeriodEnd;
        this.departmentCode = section.departmentCode;
        this.departmentDescription = section.departmentDescription;
        this.groupingNumber = section.groupingNumber;
        this.displayContractType = section.displayContractType;
        this.invoiceValue = section.invoiceValue;
        this.displayInvoicingStatus = section.displayInvoicingStatus;
        this.mainInvoiceReference = section.mainInvoiceReference;
        this.mainInvoiceDate = section.mainInvoiceDate;
        this.memo = section.memo;
        this.otherReference = section.otherReference;
        this.parentContractLabel = section.parentContractLabel;
        this.paymentDate = section.paymentDate;
        this.paymentTermDescription = section.paymentTermDescription;
        this.percentageInvoiced = section.percentageInvoiced;
        this.periodType = section.periodType;
        this.physicalContractCode = section.physicalContractCode;
        this.portOfOrigin = section.portOfOrigin;
        this.portOfOriginDescription = section.portOfOriginDescription;
        this.portOfDestination = section.portOfDestination;
        this.portOfDestinationDescription = section.portOfDestinationDescription;
        this.positionMonth = section.positionMonth;
        this.positionType = section.positionType;
        this.priceCode = section.priceCode;
        this.priceUnitDescription = section.priceUnitDescription;
        this.quantityCodeInvoiced = section.quantityCodeInvoiced;
        this.quantityInvoiced = section.quantityInvoiced;
        this.sellerDescription = section.sellerDescription;
        this.traderDisplayName = section.traderDisplayName;
        this.vesselName = section.vesselName;
        this.weightUnitCode = section.weightUnitCode;
        this.weightUnitDescription = section.weightUnitDescription;
        this.isnavopen = false;
        this.allocatedSectionId = section.allocatedSectionId;
        this.allocatedToSectionId = section.allocatedToSectionId;
        this.isWashout = false;
        this.principalCommodity = section.principalCommodity;
        this.part2 = section.part2;
        this.part3 = section.part3;
        this.departmentCode = section.departmentCode;
        this.departmentDescription = section.departmentDescription;
        this.WeightCode = section.WeightCode;

    }
}
