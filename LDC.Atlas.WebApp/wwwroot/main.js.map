{"version":3,"sources":["webpack:///./Client/$_lazy_route_resource lazy namespace object","webpack:///./Client/app/admin/services/admin-actions.service.ts","webpack:///./Client/app/app.component.css","webpack:///./Client/app/app.component.html","webpack:///./Client/app/app.component.ts","webpack:///./Client/app/app.module.ts","webpack:///./Client/app/app.route.ts","webpack:///./Client/app/core/core.module.ts","webpack:///./Client/app/core/enums/oauth-refresh-response.enum.ts","webpack:///./Client/app/core/errors-handler.ts","webpack:///./Client/app/core/services/app-insights-logger.service.ts","webpack:///./Client/app/core/services/atlas-storage.ts","webpack:///./Client/app/core/services/atlas-translation.service.ts","webpack:///./Client/app/core/services/authentication.service.ts","webpack:///./Client/app/core/services/authorization.service.ts","webpack:///./Client/app/core/services/company-manager.service.ts","webpack:///./Client/app/dashboard/dashboard-home/dashboard-home.component.css","webpack:///./Client/app/dashboard/dashboard-home/dashboard-home.component.html","webpack:///./Client/app/dashboard/dashboard-home/dashboard-home.component.ts","webpack:///./Client/app/dashboard/dashboard.module.ts","webpack:///./Client/app/home/company-redirection/company-redirection.component.html","webpack:///./Client/app/home/company-redirection/company-redirection.component.scss","webpack:///./Client/app/home/company-redirection/company-redirection.component.ts","webpack:///./Client/app/home/execution-dashboard/execution-dashboard.component.html","webpack:///./Client/app/home/execution-dashboard/execution-dashboard.component.scss","webpack:///./Client/app/home/execution-dashboard/execution-dashboard.component.ts","webpack:///./Client/app/home/home-page/home-page.component.html","webpack:///./Client/app/home/home-page/home-page.component.scss","webpack:///./Client/app/home/home-page/home-page.component.ts","webpack:///./Client/app/home/home.module.ts","webpack:///./Client/app/home/trading-dashboard/trading-dashboard.component.html","webpack:///./Client/app/home/trading-dashboard/trading-dashboard.component.scss","webpack:///./Client/app/home/trading-dashboard/trading-dashboard.component.ts","webpack:///./Client/app/mdm/mdm.module.ts","webpack:///./Client/app/shared/components/ag-contextual-menu/ag-contextual-menu.component.html","webpack:///./Client/app/shared/components/ag-contextual-menu/ag-contextual-menu.component.scss","webpack:///./Client/app/shared/components/ag-contextual-menu/ag-contextual-menu.component.ts","webpack:///./Client/app/shared/components/ag-grid-accrual-number/ag-grid-accrual-number.component.html","webpack:///./Client/app/shared/components/ag-grid-accrual-number/ag-grid-accrual-number.component.scss","webpack:///./Client/app/shared/components/ag-grid-accrual-number/ag-grid-accrual-number.component.ts","webpack:///./Client/app/shared/components/ag-grid-checkbox/ag-grid-checkbox.component.html","webpack:///./Client/app/shared/components/ag-grid-checkbox/ag-grid-checkbox.component.scss","webpack:///./Client/app/shared/components/ag-grid-checkbox/ag-grid-checkbox.component.ts","webpack:///./Client/app/shared/components/ag-grid-copy-icon/ag-grid-copy-icon.component.html","webpack:///./Client/app/shared/components/ag-grid-copy-icon/ag-grid-copy-icon.component.scss","webpack:///./Client/app/shared/components/ag-grid-copy-icon/ag-grid-copy-icon.component.ts","webpack:///./Client/app/shared/components/ag-grid-hyperlink-for-accountentries/ag-grid-hyperlink-for-accountentries.component.html","webpack:///./Client/app/shared/components/ag-grid-hyperlink-for-accountentries/ag-grid-hyperlink-for-accountentries.component.scss","webpack:///./Client/app/shared/components/ag-grid-hyperlink-for-accountentries/ag-grid-hyperlink-for-accountentries.component.ts","webpack:///./Client/app/shared/components/ag-grid-hyperlink-for-tradechildsections/ag-grid-hyperlink-for-tradechildsections.component.html","webpack:///./Client/app/shared/components/ag-grid-hyperlink-for-tradechildsections/ag-grid-hyperlink-for-tradechildsections.component.scss","webpack:///./Client/app/shared/components/ag-grid-hyperlink-for-tradechildsections/ag-grid-hyperlink-for-tradechildsections.component.ts","webpack:///./Client/app/shared/components/ag-grid-hyperlink/ag-grid-hyperlink.component.html","webpack:///./Client/app/shared/components/ag-grid-hyperlink/ag-grid-hyperlink.component.scss","webpack:///./Client/app/shared/components/ag-grid-hyperlink/ag-grid-hyperlink.component.ts","webpack:///./Client/app/shared/components/ag-grid-list-and-search-picklist-field/ag-grid-list-and-search-picklist-field.component.html","webpack:///./Client/app/shared/components/ag-grid-list-and-search-picklist-field/ag-grid-list-and-search-picklist-field.component.scss","webpack:///./Client/app/shared/components/ag-grid-list-and-search-picklist-field/ag-grid-list-and-search-picklist-field.component.ts","webpack:///./Client/app/shared/components/ag-grid-select/ag-grid-select.component.html","webpack:///./Client/app/shared/components/ag-grid-select/ag-grid-select.component.scss","webpack:///./Client/app/shared/components/ag-grid-select/ag-grid-select.component.ts","webpack:///./Client/app/shared/components/ag-grid-user-preferences/ag-grid-user-preferences.component.html","webpack:///./Client/app/shared/components/ag-grid-user-preferences/ag-grid-user-preferences.component.scss","webpack:///./Client/app/shared/components/ag-grid-user-preferences/ag-grid-user-preferences.component.ts","webpack:///./Client/app/shared/components/ag-grid-user-preferences/grid-view-save-dialog/grid-view-save-dialog.component.html","webpack:///./Client/app/shared/components/ag-grid-user-preferences/grid-view-save-dialog/grid-view-save-dialog.component.scss","webpack:///./Client/app/shared/components/ag-grid-user-preferences/grid-view-save-dialog/grid-view-save-dialog.component.ts","webpack:///./Client/app/shared/components/ag-grid/ag-grid-multiple-autocomplete-department/ag-grid-multiple-autocomplete-department.component.html","webpack:///./Client/app/shared/components/ag-grid/ag-grid-multiple-autocomplete-department/ag-grid-multiple-autocomplete-department.component.scss","webpack:///./Client/app/shared/components/ag-grid/ag-grid-multiple-autocomplete-department/ag-grid-multiple-autocomplete-department.component.ts","webpack:///./Client/app/shared/components/ag-grid/ag-grid-multiple-autocomplete/ag-grid-multiple-autocomplete.component.html","webpack:///./Client/app/shared/components/ag-grid/ag-grid-multiple-autocomplete/ag-grid-multiple-autocomplete.component.scss","webpack:///./Client/app/shared/components/ag-grid/ag-grid-multiple-autocomplete/ag-grid-multiple-autocomplete.component.ts","webpack:///./Client/app/shared/components/ag-grid/autocomplete/ag-grid-autocomplete.component.html","webpack:///./Client/app/shared/components/ag-grid/autocomplete/ag-grid-autocomplete.component.scss","webpack:///./Client/app/shared/components/ag-grid/autocomplete/ag-grid-autocomplete.component.ts","webpack:///./Client/app/shared/components/ag-grid/checkbox-tri-state/ag-grid-checkbox-tri-state.component.html","webpack:///./Client/app/shared/components/ag-grid/checkbox-tri-state/ag-grid-checkbox-tri-state.component.scss","webpack:///./Client/app/shared/components/ag-grid/checkbox-tri-state/ag-grid-checkbox-tri-state.component.ts","webpack:///./Client/app/shared/components/ag-grid/contextual-search/ag-grid-contextual-search.component.html","webpack:///./Client/app/shared/components/ag-grid/contextual-search/ag-grid-contextual-search.component.scss","webpack:///./Client/app/shared/components/ag-grid/contextual-search/ag-grid-contextual-search.component.ts","webpack:///./Client/app/shared/components/api-collection-autocomplete-dropdown/api-collection-autocomplete-dropdown.component.html","webpack:///./Client/app/shared/components/api-collection-autocomplete-dropdown/api-collection-autocomplete-dropdown.component.scss","webpack:///./Client/app/shared/components/api-collection-autocomplete-dropdown/api-collection-autocomplete-dropdown.component.ts","webpack:///./Client/app/shared/components/autocomplete-dropdown/autocomplete-dropdown.component.html","webpack:///./Client/app/shared/components/autocomplete-dropdown/autocomplete-dropdown.component.scss","webpack:///./Client/app/shared/components/autocomplete-dropdown/autocomplete-dropdown.component.ts","webpack:///./Client/app/shared/components/base-form-component/base-form-component.component.html","webpack:///./Client/app/shared/components/base-form-component/base-form-component.component.scss","webpack:///./Client/app/shared/components/base-form-component/base-form-component.component.ts","webpack:///./Client/app/shared/components/cell-editor-date-picker/cell-editor-date-picker.component.html","webpack:///./Client/app/shared/components/cell-editor-date-picker/cell-editor-date-picker.component.scss","webpack:///./Client/app/shared/components/cell-editor-date-picker/cell-editor-date-picker.component.ts","webpack:///./Client/app/shared/components/cell-editor-month-date-picker/cell-editor-month-date-picker.component.html","webpack:///./Client/app/shared/components/cell-editor-month-date-picker/cell-editor-month-date-picker.component.ts","webpack:///./Client/app/shared/components/cell-editor-numeric/cell-editor-atlas-numeric/cell-editor-atlas-numeric.component.ts","webpack:///./Client/app/shared/components/cell-editor-numeric/cell-editor-numeric.component.html","webpack:///./Client/app/shared/components/cell-editor-numeric/cell-editor-numeric.component.scss","webpack:///./Client/app/shared/components/cell-editor-numeric/cell-editor-numeric.component.ts","webpack:///./Client/app/shared/components/cell-editor-select/cell-editor-select.component.html","webpack:///./Client/app/shared/components/cell-editor-select/cell-editor-select.component.scss","webpack:///./Client/app/shared/components/cell-editor-select/cell-editor-select.component.ts","webpack:///./Client/app/shared/components/cell-editor-year-picker/cell-editor-year-picker.component.html","webpack:///./Client/app/shared/components/cell-editor-year-picker/cell-editor-year-picker.component.ts","webpack:///./Client/app/shared/components/chip-list/chip-list.component.html","webpack:///./Client/app/shared/components/chip-list/chip-list.component.scss","webpack:///./Client/app/shared/components/chip-list/chip-list.component.ts","webpack:///./Client/app/shared/components/commodity-input/commodity-input.component.html","webpack:///./Client/app/shared/components/commodity-input/commodity-input.component.scss","webpack:///./Client/app/shared/components/commodity-input/commodity-input.component.ts","webpack:///./Client/app/shared/components/company-picker/company-picker.component.html","webpack:///./Client/app/shared/components/company-picker/company-picker.component.scss","webpack:///./Client/app/shared/components/company-picker/company-picker.component.ts","webpack:///./Client/app/shared/components/confirmation-dialog/confirmation-dialog.component.html","webpack:///./Client/app/shared/components/confirmation-dialog/confirmation-dialog.component.scss","webpack:///./Client/app/shared/components/confirmation-dialog/confirmation-dialog.component.ts","webpack:///./Client/app/shared/components/contextual-search/base-light-box/contextual-search-base-light-box.component.html","webpack:///./Client/app/shared/components/contextual-search/base-light-box/contextual-search-base-light-box.component.scss","webpack:///./Client/app/shared/components/contextual-search/base-light-box/contextual-search-base-light-box.component.ts","webpack:///./Client/app/shared/components/contextual-search/base-light-box/contextual-search-user-preferences-light-box/contextual-search-user-preferences-light-box.component.html","webpack:///./Client/app/shared/components/contextual-search/base-light-box/contextual-search-user-preferences-light-box/contextual-search-user-preferences-light-box.component.scss","webpack:///./Client/app/shared/components/contextual-search/base-light-box/contextual-search-user-preferences-light-box/contextual-search-user-preferences-light-box.component.ts","webpack:///./Client/app/shared/components/contextual-search/multiple-select-light-box/contextual-search-multiple-select-light-box.component.html","webpack:///./Client/app/shared/components/contextual-search/multiple-select-light-box/contextual-search-multiple-select-light-box.component.scss","webpack:///./Client/app/shared/components/contextual-search/multiple-select-light-box/contextual-search-multiple-select-light-box.component.ts","webpack:///./Client/app/shared/components/contract-status-label/contract-status-label.component.html","webpack:///./Client/app/shared/components/contract-status-label/contract-status-label.component.scss","webpack:///./Client/app/shared/components/contract-status-label/contract-status-label.component.ts","webpack:///./Client/app/shared/components/date-label/date-label.component.html","webpack:///./Client/app/shared/components/date-label/date-label.component.scss","webpack:///./Client/app/shared/components/date-label/date-label.component.ts","webpack:///./Client/app/shared/components/document-generation-confirmation-dialog-box/document-generation-confirmation-dialog-box.component.html","webpack:///./Client/app/shared/components/document-generation-confirmation-dialog-box/document-generation-confirmation-dialog-box.component.scss","webpack:///./Client/app/shared/components/document-generation-confirmation-dialog-box/document-generation-confirmation-dialog-box.component.ts","webpack:///./Client/app/shared/components/empty-state/empty-state.component.html","webpack:///./Client/app/shared/components/empty-state/empty-state.component.scss","webpack:///./Client/app/shared/components/empty-state/empty-state.component.ts","webpack:///./Client/app/shared/components/error-page/error-page.component.html","webpack:///./Client/app/shared/components/error-page/error-page.component.scss","webpack:///./Client/app/shared/components/error-page/error-page.component.ts","webpack:///./Client/app/shared/components/favourites-list-display/favourites-list-display.component.html","webpack:///./Client/app/shared/components/favourites-list-display/favourites-list-display.component.scss","webpack:///./Client/app/shared/components/favourites-list-display/favourites-list-display.component.ts","webpack:///./Client/app/shared/components/file-upload-dialog-box/file-upload-dialog-box.component.html","webpack:///./Client/app/shared/components/file-upload-dialog-box/file-upload-dialog-box.component.scss","webpack:///./Client/app/shared/components/file-upload-dialog-box/file-upload-dialog-box.component.ts","webpack:///./Client/app/shared/components/filter-set-display/filter-set-display.component.html","webpack:///./Client/app/shared/components/filter-set-display/filter-set-display.component.scss","webpack:///./Client/app/shared/components/filter-set-display/filter-set-display.component.ts","webpack:///./Client/app/shared/components/filter-set-display/filter-set-edit-dialog/filter-set-edit-dialog.component.html","webpack:///./Client/app/shared/components/filter-set-display/filter-set-edit-dialog/filter-set-edit-dialog.component.scss","webpack:///./Client/app/shared/components/filter-set-display/filter-set-edit-dialog/filter-set-edit-dialog.component.ts","webpack:///./Client/app/shared/components/filter-set-editor/filter-set-editor.component.html","webpack:///./Client/app/shared/components/filter-set-editor/filter-set-editor.component.scss","webpack:///./Client/app/shared/components/filter-set-editor/filter-set-editor.component.ts","webpack:///./Client/app/shared/components/floating-action-button/floating-action-button-type.enum.ts","webpack:///./Client/app/shared/components/floating-action-button/floating-action-button.component.html","webpack:///./Client/app/shared/components/floating-action-button/floating-action-button.component.scss","webpack:///./Client/app/shared/components/floating-action-button/floating-action-button.component.ts","webpack:///./Client/app/shared/components/form-components/date-picker/date-picker.component.html","webpack:///./Client/app/shared/components/form-components/date-picker/date-picker.component.scss","webpack:///./Client/app/shared/components/form-components/date-picker/date-picker.component.ts","webpack:///./Client/app/shared/components/form-components/date-picker/month-date-picker/month-date-picker.component.html","webpack:///./Client/app/shared/components/form-components/date-picker/month-date-picker/month-date-picker.component.scss","webpack:///./Client/app/shared/components/form-components/date-picker/month-date-picker/month-date-picker.component.ts","webpack:///./Client/app/shared/components/form-components/date-picker/year-picker/year-picker.component.html","webpack:///./Client/app/shared/components/form-components/date-picker/year-picker/year-picker.component.scss","webpack:///./Client/app/shared/components/form-components/date-picker/year-picker/year-picker.component.ts","webpack:///./Client/app/shared/components/form-components/dropdown-select-list/dropdown-select-list.component.html","webpack:///./Client/app/shared/components/form-components/dropdown-select-list/dropdown-select-list.component.scss","webpack:///./Client/app/shared/components/form-components/dropdown-select-list/dropdown-select-list.component.ts","webpack:///./Client/app/shared/components/form-components/dropdown-select/dropdown-select.component.html","webpack:///./Client/app/shared/components/form-components/dropdown-select/dropdown-select.component.scss","webpack:///./Client/app/shared/components/form-components/dropdown-select/dropdown-select.component.ts","webpack:///./Client/app/shared/components/form-components/form-component-base/form-component-base.component.html","webpack:///./Client/app/shared/components/form-components/form-component-base/form-component-base.component.scss","webpack:///./Client/app/shared/components/form-components/form-component-base/form-component-base.component.ts","webpack:///./Client/app/shared/components/form-components/form-input/form-input.component.html","webpack:///./Client/app/shared/components/form-components/form-input/form-input.component.scss","webpack:///./Client/app/shared/components/form-components/form-input/form-input.component.ts","webpack:///./Client/app/shared/components/form-components/form-toggle/form-toggle.component.html","webpack:///./Client/app/shared/components/form-components/form-toggle/form-toggle.component.scss","webpack:///./Client/app/shared/components/form-components/form-toggle/form-toggle.component.ts","webpack:///./Client/app/shared/components/form-components/masterdata/masterdata-input/masterdata-input.component.html","webpack:///./Client/app/shared/components/form-components/masterdata/masterdata-input/masterdata-input.component.scss","webpack:///./Client/app/shared/components/form-components/masterdata/masterdata-input/masterdata-input.component.ts","webpack:///./Client/app/shared/components/form-components/masterdata/masterdata-input/masterdata-user-preferences-input/masterdata-user-preferences-input.component.ts","webpack:///./Client/app/shared/components/form-components/multiple-autocomplete-dropdown/contextual-search/contextual-search-multiple-autocomplete-select.component.html","webpack:///./Client/app/shared/components/form-components/multiple-autocomplete-dropdown/contextual-search/contextual-search-multiple-autocomplete-select.component.scss","webpack:///./Client/app/shared/components/form-components/multiple-autocomplete-dropdown/contextual-search/contextual-search-multiple-autocomplete-select.component.ts","webpack:///./Client/app/shared/components/generic-report-viewer/generic-report-viewer.component.html","webpack:///./Client/app/shared/components/generic-report-viewer/generic-report-viewer.component.scss","webpack:///./Client/app/shared/components/generic-report-viewer/generic-report-viewer.component.ts","webpack:///./Client/app/shared/components/grid-enlargement/enlarged-grid-dialog/enlarged-grid-dialog.component.html","webpack:///./Client/app/shared/components/grid-enlargement/enlarged-grid-dialog/enlarged-grid-dialog.component.scss","webpack:///./Client/app/shared/components/grid-enlargement/enlarged-grid-dialog/enlarged-grid-dialog.component.ts","webpack:///./Client/app/shared/components/grid-enlargement/grid-enlargement.component.html","webpack:///./Client/app/shared/components/grid-enlargement/grid-enlargement.component.scss","webpack:///./Client/app/shared/components/grid-enlargement/grid-enlargement.component.ts","webpack:///./Client/app/shared/components/information-banner/information-banner.component.html","webpack:///./Client/app/shared/components/information-banner/information-banner.component.scss","webpack:///./Client/app/shared/components/information-banner/information-banner.component.ts","webpack:///./Client/app/shared/components/list-and-search/list-and-search-contextual-menu.component.ts","webpack:///./Client/app/shared/components/list-and-search/list-and-search.component.html","webpack:///./Client/app/shared/components/list-and-search/list-and-search.component.scss","webpack:///./Client/app/shared/components/list-and-search/list-and-search.component.ts","webpack:///./Client/app/shared/components/lock-interval/lock-interval.component.html","webpack:///./Client/app/shared/components/lock-interval/lock-interval.component.scss","webpack:///./Client/app/shared/components/lock-interval/lock-interval.component.ts","webpack:///./Client/app/shared/components/multiple-autocomplete-dropdown/multiple-autocomplete-dropdown.component.html","webpack:///./Client/app/shared/components/multiple-autocomplete-dropdown/multiple-autocomplete-dropdown.component.scss","webpack:///./Client/app/shared/components/multiple-autocomplete-dropdown/multiple-autocomplete-dropdown.component.ts","webpack:///./Client/app/shared/components/params-list/params-list.component.html","webpack:///./Client/app/shared/components/params-list/params-list.component.scss","webpack:///./Client/app/shared/components/params-list/params-list.component.ts","webpack:///./Client/app/shared/components/params-sidenav-selector/params-sidenav-selector.component.html","webpack:///./Client/app/shared/components/params-sidenav-selector/params-sidenav-selector.component.scss","webpack:///./Client/app/shared/components/params-sidenav-selector/params-sidenav-selector.component.ts","webpack:///./Client/app/shared/components/picklist/picklist.component.html","webpack:///./Client/app/shared/components/picklist/picklist.component.scss","webpack:///./Client/app/shared/components/picklist/picklist.component.ts","webpack:///./Client/app/shared/components/privilege-level1-icon/privilege-level1-icon.component.html","webpack:///./Client/app/shared/components/privilege-level1-icon/privilege-level1-icon.component.scss","webpack:///./Client/app/shared/components/privilege-level1-icon/privilege-level1-icon.component.ts","webpack:///./Client/app/shared/components/row-selection-button/row-selection-button.component.html","webpack:///./Client/app/shared/components/row-selection-button/row-selection-button.component.scss","webpack:///./Client/app/shared/components/row-selection-button/row-selection-button.component.ts","webpack:///./Client/app/shared/components/select-multiple-autocomplete/select-multiple-autocomplete.component.html","webpack:///./Client/app/shared/components/select-multiple-autocomplete/select-multiple-autocomplete.component.scss","webpack:///./Client/app/shared/components/select-multiple-autocomplete/select-multiple-autocomplete.component.ts","webpack:///./Client/app/shared/components/side-nav/side-nav.component.css","webpack:///./Client/app/shared/components/side-nav/side-nav.component.html","webpack:///./Client/app/shared/components/side-nav/side-nav.component.ts","webpack:///./Client/app/shared/components/ssrs-report-viewer/ssrsreport-viewer.component.html","webpack:///./Client/app/shared/components/ssrs-report-viewer/ssrsreport-viewer.component.scss","webpack:///./Client/app/shared/components/ssrs-report-viewer/ssrsreport-viewer.component.ts","webpack:///./Client/app/shared/components/sum-columntotal/sum-columntotal.component.html","webpack:///./Client/app/shared/components/sum-columntotal/sum-columntotal.component.scss","webpack:///./Client/app/shared/components/sum-columntotal/sum-columntotal.component.ts","webpack:///./Client/app/shared/components/top-nav/top-nav.component.html","webpack:///./Client/app/shared/components/top-nav/top-nav.component.scss","webpack:///./Client/app/shared/components/top-nav/top-nav.component.ts","webpack:///./Client/app/shared/components/user-avatar/user-avatar.component.html","webpack:///./Client/app/shared/components/user-avatar/user-avatar.component.scss","webpack:///./Client/app/shared/components/user-avatar/user-avatar.component.ts","webpack:///./Client/app/shared/components/vessel-contextual-search/vessel-contextual-search.component.html","webpack:///./Client/app/shared/components/vessel-contextual-search/vessel-contextual-search.component.scss","webpack:///./Client/app/shared/components/vessel-contextual-search/vessel-contextual-search.component.ts","webpack:///./Client/app/shared/components/warning-banner/warning-banner.component.html","webpack:///./Client/app/shared/components/warning-banner/warning-banner.component.scss","webpack:///./Client/app/shared/components/warning-banner/warning-banner.component.ts","webpack:///./Client/app/shared/directives/app-flag.directive.ts","webpack:///./Client/app/shared/directives/authorization.directive.ts","webpack:///./Client/app/shared/directives/autocomplete-dropdown.directive.ts","webpack:///./Client/app/shared/directives/datepicker-localdate.directive.ts","webpack:///./Client/app/shared/directives/mattoolbar-backgroundcolor.directive.ts","webpack:///./Client/app/shared/directives/number-decimals.directive.ts","webpack:///./Client/app/shared/directives/sign-number.directive.ts","webpack:///./Client/app/shared/directives/special-character.directive.ts","webpack:///./Client/app/shared/dtos/list-and-search/list-and-search-filter-dto.dto.ts","webpack:///./Client/app/shared/dtos/list-and-search/user-filter-set-dto.dto.ts","webpack:///./Client/app/shared/dtos/user-grid-view-dto.dto.ts","webpack:///./Client/app/shared/entities/atlas-ag-grid-param.entity.ts","webpack:///./Client/app/shared/entities/atlas-form-control.ts","webpack:///./Client/app/shared/entities/atlas-number.entity.ts","webpack:///./Client/app/shared/entities/bulk-approval.entity.ts","webpack:///./Client/app/shared/entities/cancel-section-command.entity.ts","webpack:///./Client/app/shared/entities/http-services/http-request-options.entity.ts","webpack:///./Client/app/shared/entities/http-services/paging-options.ts","webpack:///./Client/app/shared/entities/list-and-search/list-and-search-filter-predicate.entity.ts","webpack:///./Client/app/shared/entities/list-and-search/list-and-search-filter.entity.ts","webpack:///./Client/app/shared/entities/list-and-search/list-and-search-operator.entity.ts","webpack:///./Client/app/shared/entities/list-and-search/list-and-search-predicate-preset.entity.ts","webpack:///./Client/app/shared/entities/list-and-search/providers/list-and-search-date-predicate-preset-provider.entity.ts","webpack:///./Client/app/shared/entities/list-and-search/providers/list-and-search-numeric-predicate-preset-provider.entity.ts","webpack:///./Client/app/shared/entities/list-and-search/providers/list-and-search-picklist-predicate-preset-provider.entity.ts","webpack:///./Client/app/shared/entities/list-and-search/providers/list-and-search-text-predicate-preset-provider.entity.ts","webpack:///./Client/app/shared/entities/lock-resource-information.entity.ts","webpack:///./Client/app/shared/entities/masterdata-props.entity.ts","webpack:///./Client/app/shared/entities/masterdata.entity.ts","webpack:///./Client/app/shared/entities/posting-process-start-stop.entity.ts","webpack:///./Client/app/shared/entities/section-traffic.entity.ts","webpack:///./Client/app/shared/entities/section.entity.ts","webpack:///./Client/app/shared/entities/trade-property-privilege.entity.ts","webpack:///./Client/app/shared/entities/user-grid-preferences-parameters.entity.ts","webpack:///./Client/app/shared/entities/user.entity.ts","webpack:///./Client/app/shared/entities/window-injection-token.ts","webpack:///./Client/app/shared/enums/action-default-behaviours.enum.ts","webpack:///./Client/app/shared/enums/contract-invoice-type.enum.ts","webpack:///./Client/app/shared/enums/contract-status.enum.ts","webpack:///./Client/app/shared/enums/contract-type.enum.ts","webpack:///./Client/app/shared/enums/costmatrix-parameters-fields.enum.ts","webpack:///./Client/app/shared/enums/credit-against-type.enum.ts","webpack:///./Client/app/shared/enums/date-format.enum.ts","webpack:///./Client/app/shared/enums/discount-basis.enum.ts","webpack:///./Client/app/shared/enums/discount-type.enum.ts","webpack:///./Client/app/shared/enums/document-entity-type.enum.ts","webpack:///./Client/app/shared/enums/document-type.enum.ts","webpack:///./Client/app/shared/enums/foreign-exchange-rate-creationmode.enum.ts","webpack:///./Client/app/shared/enums/freeze-type.enum.ts","webpack:///./Client/app/shared/enums/generate-document-action.enum.ts","webpack:///./Client/app/shared/enums/invoice-status.enum.ts","webpack:///./Client/app/shared/enums/invoice-type.enum.ts","webpack:///./Client/app/shared/enums/list-and-search-filter-type.enum.ts","webpack:///./Client/app/shared/enums/list-and-search-keywords.enum.ts","webpack:///./Client/app/shared/enums/permission-level.enum.ts","webpack:///./Client/app/shared/enums/pricing-method.enum.ts","webpack:///./Client/app/shared/enums/section-type.enum.ts","webpack:///./Client/app/shared/enums/tri-state-checkbox-status.enum.ts","webpack:///./Client/app/shared/guards/can-deactivate-guard.service.ts","webpack:///./Client/app/shared/guards/security.guard.ts","webpack:///./Client/app/shared/http-interceptors/auth-interceptor.ts","webpack:///./Client/app/shared/http-interceptors/date-interceptor.ts","webpack:///./Client/app/shared/http-interceptors/index.ts","webpack:///./Client/app/shared/material.module.ts","webpack:///./Client/app/shared/mocks/mock-form-configuration.ts","webpack:///./Client/app/shared/models/error-display-view.ts","webpack:///./Client/app/shared/models/tranche-split-display-view.ts","webpack:///./Client/app/shared/numberMask.ts","webpack:///./Client/app/shared/pipes/format-date-pipe.pipe.ts","webpack:///./Client/app/shared/pipes/user-initials-pipe.pipe.ts","webpack:///./Client/app/shared/resolvers/company-date.resolver.ts","webpack:///./Client/app/shared/resolvers/form-configuration.resolver.ts","webpack:///./Client/app/shared/resolvers/masterdata.resolver.ts","webpack:///./Client/app/shared/router.animations.ts","webpack:///./Client/app/shared/services/ag-grid.service.ts","webpack:///./Client/app/shared/services/autocomplete.service.ts","webpack:///./Client/app/shared/services/base-configuration-provider.service.ts","webpack:///./Client/app/shared/services/common/abstract-control.service.ts","webpack:///./Client/app/shared/services/configuration/dtos/functional-object-table-fields.ts","webpack:///./Client/app/shared/services/cookies.service.ts","webpack:///./Client/app/shared/services/date-converter.service.ts","webpack:///./Client/app/shared/services/discovery.service.ts","webpack:///./Client/app/shared/services/document-popup.service.ts","webpack:///./Client/app/shared/services/execution/dtos/Update-Invoice-Marking-Percent-Lines-Command.ts","webpack:///./Client/app/shared/services/execution/dtos/allocate-section-command.ts","webpack:///./Client/app/shared/services/execution/dtos/allocate-section-list-command.ts","webpack:///./Client/app/shared/services/execution/dtos/create-charter-command.ts","webpack:///./Client/app/shared/services/execution/dtos/invoice-marking-list-command.ts","webpack:///./Client/app/shared/services/execution/dtos/invoice-marking-posting-status.ts","webpack:///./Client/app/shared/services/execution/dtos/manual-journal-command.ts","webpack:///./Client/app/shared/services/execution/dtos/reassign-sections-command.ts","webpack:///./Client/app/shared/services/execution/dtos/remove-assigned-sections-command.ts","webpack:///./Client/app/shared/services/execution/dtos/section.ts","webpack:///./Client/app/shared/services/execution/dtos/update-charter-command.ts","webpack:///./Client/app/shared/services/filter-provider.service.ts","webpack:///./Client/app/shared/services/filter-service.service.ts","webpack:///./Client/app/shared/services/form-configuration-provider.service.ts","webpack:///./Client/app/shared/services/grid-configuration-provider.service.ts","webpack:///./Client/app/shared/services/http-services/accounting-document.service.ts","webpack:///./Client/app/shared/services/http-services/configuration.service.ts","webpack:///./Client/app/shared/services/http-services/controlling.service.ts","webpack:///./Client/app/shared/services/http-services/document.service.ts","webpack:///./Client/app/shared/services/http-services/execution.service.ts","webpack:///./Client/app/shared/services/http-services/feature-flag.service.ts","webpack:///./Client/app/shared/services/http-services/foreign-exchange.service.ts","webpack:///./Client/app/shared/services/http-services/form-configuration.service.ts","webpack:///./Client/app/shared/services/http-services/freeze.service.ts","webpack:///./Client/app/shared/services/http-services/grid-configuration.service.ts","webpack:///./Client/app/shared/services/http-services/http-base.service.ts","webpack:///./Client/app/shared/services/http-services/lock.service.ts","webpack:///./Client/app/shared/services/http-services/masterdata.service.ts","webpack:///./Client/app/shared/services/http-services/preaccounting.service.ts","webpack:///./Client/app/shared/services/http-services/trading.service.ts","webpack:///./Client/app/shared/services/http-services/user-identity.service.ts","webpack:///./Client/app/shared/services/list-and-search/accountingEntries-data-loader.ts","webpack:///./Client/app/shared/services/list-and-search/clientReport-data-loader.ts","webpack:///./Client/app/shared/services/list-and-search/document-data-loader.ts","webpack:///./Client/app/shared/services/list-and-search/export/list-and-search-export-base.ts","webpack:///./Client/app/shared/services/list-and-search/invoice-data-loader.ts","webpack:///./Client/app/shared/services/list-and-search/nominalReport-data-loader.ts","webpack:///./Client/app/shared/services/list-and-search/trade-data-loader.ts","webpack:///./Client/app/shared/services/lock/dtos/delete-locks-command.ts","webpack:///./Client/app/shared/services/lock/dtos/lock-resource-command.ts","webpack:///./Client/app/shared/services/lock/dtos/refresh-lock-ownership-command.ts","webpack:///./Client/app/shared/services/lock/dtos/unlock-resource-command.ts","webpack:///./Client/app/shared/services/masterdata/dtos/commodity-search-term.ts","webpack:///./Client/app/shared/services/preaccounting/dtos/accounting-document-status-command.ts","webpack:///./Client/app/shared/services/preaccounting/dtos/accounting-document-status-dto-command.ts","webpack:///./Client/app/shared/services/preaccounting/dtos/create-accounting-document-command.ts","webpack:///./Client/app/shared/services/security.service.ts","webpack:///./Client/app/shared/services/snackbar.service.ts","webpack:///./Client/app/shared/services/split-create-and-allocate.service.ts","webpack:///./Client/app/shared/services/title.service.ts","webpack:///./Client/app/shared/services/trade-edit.service.ts","webpack:///./Client/app/shared/services/trading/dtos/save-bulk-cost-command.ts","webpack:///./Client/app/shared/services/trading/dtos/save-trade-merge-command.ts","webpack:///./Client/app/shared/services/trading/dtos/section.ts","webpack:///./Client/app/shared/services/ui.service.ts","webpack:///./Client/app/shared/services/url-management.service.ts","webpack:///./Client/app/shared/services/user-identity/dtos/user.ts","webpack:///./Client/app/shared/services/util.service.ts","webpack:///./Client/app/shared/services/web-storage.service.ts","webpack:///./Client/app/shared/shared.module.ts","webpack:///./Client/app/shared/validators/date-validators.validator.ts","webpack:///./Client/app/shared/validators/grid-view-name.validator.ts","webpack:///./Client/app/trading/Library/trading-businessrules.ts","webpack:///./Client/app/trading/entities/section-reference.ts","webpack:///./Client/app/trading/resolvers/atlas-trading-translation.resolver.ts","webpack:///./Client/app/trading/services/trade-actions.service.ts","webpack:///./Client/environments/environment.dev.ts","webpack:///./Client/environments/environment.ts","webpack:///./Client/main.ts","webpack:///./node_modules/chart.js/node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./node_modules/hammerjs/hammer.js","webpack:///./node_modules/moment/locale sync ^\\.\\/.*$"],"names":[],"mappings":"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AI,CAAC,CAAC,CAAC;SACrD;IACL,CAAC;IA1BQ,iBAAiB;QAH7B,gEAAU,CAAC;YACR,UAAU,EAAE,MAAM;SACrB,CAAC;;OACW,iBAAiB,CA2B7B;IAAD,wBAAC;CAAA;AA3B6B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLiB;AACuC;AACpB;AACiB;AACd;AACtB;AACO;AACP;AACK;AACqD;AACW;AACjB;AACE;AACwD;AACY;AACnE;AAC2D;AACpE;AAC6B;AACgB;AACuC;AAChC;AAClC;AACgB;AACF;AACiC;AAC3C;AAChB;AACoB;AACiB;AACS;AACrC;AACH;AACc;AACxC;AACkB;AACH;AACe;AACoC;AACoE;AACpC;AAC/D;AAChC;AACgG;AAC7F;AACH;AACsC;AACJ;AACX;AAC8B;AACjC;AACe;AAChB;AAC6B;AACjB;AACc;AACd;AACW;AAC1B;AACG;AAC0B;AACkE;AACY;AAC3F;AACc;AAC5B;AACM;AACoB;AAC9B;AACL;AACkD;AACxD;AACmC;AAC3C;AACqC;AACZ;AACiC;AAC3D;AAC4B;AACP;AACxB;AACY;AACsC;AAC7B;AACvB;AACI;AACgB;AACJ;AACN;AACR;AACY;AACiE;AACM;AACE;AACR;AAC9F;AACL;AACY;AACQ;AACC;AACY;AACf;AACV;AACW;AACV;AACa;AACA;AACE;AACT;AACgC;AACA;AAChB;AACJ;AACa;AACI;AACf;AACM;AACZ;AACW;AACkB;AACV;AACR;AACF;AACY;AAChB;AACjB;AACA;AAC+B;AACrC;AACS;AACf;AACuB;AACnB;AAE/C,IAAM,kBAAkB,GAAG;IAC9B,KAAK,EAAE;QACH,SAAS,EAAE,YAAY;KAC1B;IACD,OAAO,EAAE;QACL,SAAS,EAAE,YAAY;QACvB,cAAc,EAAE,UAAU;QAC1B,aAAa,EAAE,YAAY;QAC3B,kBAAkB,EAAE,UAAU;KACjC;C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;QACV,KAAK,EAAE,EAAE;KACZ;IACD,mBAAmB,EAAE;QACjB,kBAAkB,EAAE,EAAE;KACzB;IACD,kBAAkB,EAAE;QAChB,aAAa,EAAE,IAAI;KACtB;CACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;AC7C6C;AAC4B;AACvB;AAClC;AAC2B;AACY;AAEzD,2CAA2C;AAC3C,iEAAc,CAAC,aAAa,CAAC,kJAAkJ,CAAC,CAAC;AACjL,IAAI,qEAAW,CAAC,UAAU,EAAE;IACxB,oEAAc,EAAE,CAAC;CACpB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC,CAAC;;;;;;;;;;;;ACbpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mG;;;;;;;;;;;AC7PA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,UAAU;;AAE/D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,UAAU;AACrB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B,0BAA0B;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,WAAW,MAAM;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,YAAY;AACvB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,eAAe;AAC3B;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,MAAM,OAAO,KAAK,EAAE,KAAK,EAAE,KAAK;AAC3C,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,aAAa,MAAM,GAAG,KAAK,EAAE,KAAK;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,YAAY;AACvB,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,yBAAyB,EAAE;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,MAAM;AACjB,YAAY,OAAO;AACnB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO,KAAK;AACvB,WAAW,OAAO,KAAK;AACvB,WAAW,MAAM;AACjB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yBAAyB;;AAEzB;AACA;;AAEA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,CAAC;;AAED;AACA,UAAU;AACV,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,gBAAgB;AAC7B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,CAAC;;AAED;AACA,UAAU;AACV,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,gBAAgB;AAC7B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,6BAA6B;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;;AAEL;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA,4BAA4B,8BAA8B;;AAE1D;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA,gBAAgB;;AAEhB;AACA;AACA,eAAe,OAAO;AACtB,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,eAAe,WAAW;AAC1B,iBAAiB,WAAW;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,eAAe,WAAW;AAC1B,iBAAiB,WAAW;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,eAAe,WAAW;AAC1B,iBAAiB,WAAW;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,eAAe,WAAW;AAC1B,iBAAiB,WAAW;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,eAAe,WAAW;AAC1B,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iCAAiC;;AAEjC,oCAAoC;AACpC;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA,sCAAsC;;AAEtC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,MAAM;AACvB;AACA,kCAAkC,EAAE;;AAEpC;AACA;AACA;AACA,iBAAiB;AACjB;AACA,gCAAgC,EAAE;;AAElC;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;;AAEA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,MAAM;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,kBAAkB;AAC7B,WAAW,WAAW;AACtB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,EAAE;AACnB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,WAAW,YAAY;AACvB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,4BAA4B,cAAc;AAC1C,2BAA2B,cAAc;AACzC,2BAA2B,gCAAgC;AAC3D,yBAAyB,gCAAgC;AACzD;AACA,yBAAyB,4BAA4B;AACrD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,OAAO;AAClB;AACA;AACA;AACA,4BAA4B,gCAAgC;;AAE5D;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE;AAClE;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,eAAe,kBAAkB;AACjC,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,wBAAwB;AAC/C;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,WAAW;AAC1B,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA,eAAe,kBAAkB;AACjC,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB,iBAAiB,aAAa;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;;AAEL;AACA;AACA,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB,iBAAiB,aAAa;AAC9B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA,KAAK;;AAEL;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,mGAAmG,GAAG;AACtG;;AAEA;AACA;AACA;AACA,KAAK;AAAA;AACL,CAAC,QAID;;AAEA,CAAC;;;;;;;;;;;;ACllgBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6E","file":"main.js","sourcesContent":["var map = {\n\t\"./admin/admin.module\": [\n\t\t\"./Client/app/admin/admin.module.ts\",\n\t\t\"common\",\n\t\t\"admin-admin-module\"\n\t],\n\t\"./controlling/controlling.module\": [\n\t\t\"./Client/app/controlling/controlling.module.ts\",\n\t\t\"controlling-controlling-module\"\n\t],\n\t\"./execution/execution.module\": [\n\t\t\"./Client/app/execution/execution.module.ts\",\n\t\t\"execution-execution-module~financial-financial-module~reporting-reporting-module~trading-trading-mod~4658959d\",\n\t\t\"execution-execution-module~trading-trading-module\",\n\t\t\"common\",\n\t\t\"execution-execution-module\"\n\t],\n\t\"./financial/financial.module\": [\n\t\t\"./Client/app/financial/financial.module.ts\",\n\t\t\"execution-execution-module~financial-financial-module~reporting-reporting-module~trading-trading-mod~4658959d\",\n\t\t\"common\",\n\t\t\"financial-financial-module\"\n\t],\n\t\"./hidden/hidden.module\": [\n\t\t\"./Client/app/hidden/hidden.module.ts\",\n\t\t\"hidden-hidden-module\"\n\t],\n\t\"./referential/referential.module\": [\n\t\t\"./Client/app/referential/referential.module.ts\",\n\t\t\"common\",\n\t\t\"referential-referential-module\"\n\t],\n\t\"./reporting/reporting.module\": [\n\t\t\"./Client/app/reporting/reporting.module.ts\",\n\t\t\"execution-execution-module~financial-financial-module~reporting-reporting-module~trading-trading-mod~4658959d\",\n\t\t\"common\",\n\t\t\"reporting-reporting-module\"\n\t],\n\t\"./trading/trading.module\": [\n\t\t\"./Client/app/trading/trading.module.ts\",\n\t\t\"execution-execution-module~financial-financial-module~reporting-reporting-module~trading-trading-mod~4658959d\",\n\t\t\"execution-execution-module~trading-trading-module\",\n\t\t\"common\",\n\t\t\"trading-trading-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\tvar module = __webpack_require__(ids[0]);\n\t\treturn module;\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./Client/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Subject } from 'rxjs';\r\nimport { CompanyManagerService } from '../../core/services/company-manager.service';\r\nimport { CompanyTabIndex } from '../entities/company-tab-index';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\n\r\nexport class AdminActionsService {\r\n\r\n    public editCompanySubject = new Subject();\r\n    public createCompanySubject = new Subject();\r\n    public userPreferenceSubject = new Subject();\r\n\r\n    constructor(\r\n        private companyManager: CompanyManagerService,\r\n        private router: Router) {\r\n        this.editCompanySubject.subscribe((companyTabIndex: CompanyTabIndex) => {\r\n            const companyId = companyTabIndex.companyId;\r\n            const tabIndex = companyTabIndex.tabIndex;\r\n            if (!companyId || tabIndex < 0) { return; }\r\n            this.router.navigate(['/' + this.companyManager.getCurrentCompanyId() + '/admin/company-configuration/edit'\r\n                , companyId, tabIndex]);\r\n        });\r\n\r\n        this.createCompanySubject.subscribe(() => {\r\n            this.router.navigate(['/' + this.companyManager.getCurrentCompanyId() + '/admin/companies/create']);\r\n        });\r\n        this.userPreferenceSubject.subscribe(() => {\r\n            this.router.navigate(['/' + this.companyManager.getCurrentCompanyId() + '/admin/global-parameters/user-preferences/']);\r\n        });\r\n\r\n    }\r\n}\r\n","module.exports = \"html,\\r\\nbody,\\r\\natlas-root,\\r\\nmat-sidenav-container,\\r\\n.my-content {\\r\\n    margin: 0;\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    font-family: Roboto, 'Helvetica Neue', sans-serif;\\r\\n    -webkit-font-smoothing: antialiased;\\r\\n    -moz-osx-font-smoothing: grayscale;\\r\\n}\\r\\n\\r\\n.mat-toolbar .mat-icon {\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n/* /deep/ .mat-placeholder-required {\\r\\n\\tcolor: red !important;\\r\\n} */\\r\\n\\r\\n/deep/ .mat-header-row {\\r\\n    font-size: 14px;\\r\\n}\\r\\n\\r\\n.mat-sidenav.closedSidenav {\\r\\n    width: 64px;\\r\\n    transition: width .2s !important;\\r\\n}\\r\\n\\r\\n.mat-sidenav.openSidenav {\\r\\n    width: 210px;\\r\\n    transition: width .2s !important;\\r\\n}\\r\\n\\r\\n.closedSidenavContent {\\r\\n    margin-left: 64px !important;\\r\\n    transition: margin-left .2s !important;\\r\\n}\\r\\n\\r\\n.openSidenavContent {\\r\\n    margin-left: 185px !important;\\r\\n    transition: margin-left .2s !important;\\r\\n}\\r\\n\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<!--<h1 >Redirecting to authentication page...</h1>-->\\r\\n<div *ngIf=\\\"!isAuthorizationLoaded\\\"\\r\\n     id=\\\"loader\\\">\\r\\n    <div id=\\\"loaderContent\\\"></div>\\r\\n</div>\\r\\n\\r\\n<ng-progress [thick]=\\\"true\\\"\\r\\n             [spinner]=\\\"false\\\"\\r\\n             [color]=\\\"'#52C234'\\\"></ng-progress>\\r\\n<mat-sidenav-container autosize\\r\\n                       *ngIf=\\\"isAuthorizationLoaded && isUserAuthorized\\\"\\r\\n                       fullscreen>\\r\\n\\r\\n    <mat-sidenav #sidenav\\r\\n                 mode=\\\"side\\\"\\r\\n                 class=\\\"sidenav\\\"\\r\\n                 [class.openSidenav]=\\\"isExpanded\\\"\\r\\n                 [class.closedSidenav]=\\\"!isExpanded\\\"\\r\\n                 opened=\\\"true\\\">\\r\\n        <mat-nav-list>\\r\\n            <nav>\\r\\n                <div class=\\\"atlas-logo-title\\\">\\r\\n                    <div class=\\\"atlas-logo\\\"\\r\\n                         (click)=\\\"toggleSideBar()\\\"\\r\\n                         matTooltip=\\\"Toggle Menu\\\"> <img src=\\\"./assets/Atlas-logo.svg\\\"\\r\\n                             alt=\\\"atlas logo\\\">\\r\\n                    </div>\\r\\n                    <div class=\\\"atlas-title\\\"\\r\\n                         [hidden]=\\\"!isExpanded\\\"> <img src=\\\"./assets/Atlas-text.svg\\\"\\r\\n                             alt=\\\"atlas company name\\\"> </div>\\r\\n                </div>\\r\\n                <atlas-side-nav></atlas-side-nav>\\r\\n            </nav>\\r\\n        </mat-nav-list>\\r\\n    </mat-sidenav>\\r\\n\\r\\n    <mat-sidenav-content cdkScrollable\\r\\n                         [class.closedSidenavContent]=\\\"!isExpanded\\\"\\r\\n                         [class.openSidenavContent]=\\\"isExpanded\\\">\\r\\n        <mat-progress-bar *ngIf=\\\"loading\\\"\\r\\n                          color=\\\"accent\\\"\\r\\n                          mode=\\\"indeterminate\\\">\\r\\n        </mat-progress-bar>\\r\\n        <mat-toolbar color=\\\"red\\\">\\r\\n            <atr-top-nav></atr-top-nav>\\r\\n        </mat-toolbar>\\r\\n        <div [@routerTransition]=\\\"getRouteAnimation(route)\\\">\\r\\n            <router-outlet #route=\\\"outlet\\\"></router-outlet>\\r\\n        </div>\\r\\n    </mat-sidenav-content>\\r\\n</mat-sidenav-container>\\r\\n<mat-sidenav-container *ngIf=\\\"isAuthorizationLoaded && !isUserAuthorized\\\"\\r\\n                       fullscreen>\\r\\n    <mat-progress-bar *ngIf=\\\"loading\\\"\\r\\n                      color=\\\"accent\\\"\\r\\n                      mode=\\\"indeterminate\\\">\\r\\n    </mat-progress-bar>\\r\\n    <div [@routerTransition]=\\\"getRouteAnimation(route)\\\">\\r\\n        <router-outlet #route=\\\"outlet\\\"></router-outlet>\\r\\n    </div>\\r\\n</mat-sidenav-container>\\r\\n\"","// star scrolling\r\nimport { CdkScrollable, ScrollDispatcher } from '@angular/cdk/scrolling';\r\nimport { AfterViewInit, ChangeDetectorRef, Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog, MatIconRegistry } from '@angular/material';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { NavigationCancel, NavigationEnd, NavigationError, NavigationStart, Router } from '@angular/router';\r\nimport { OAuthInfoEvent } from 'angular-oauth2-oidc';\r\nimport { Subject } from 'rxjs';\r\nimport { concatMap, filter, map, takeUntil } from 'rxjs/operators';\r\nimport { environment } from '../environments/environment.dev';\r\nimport { OAuthRefreshResponse } from './core/enums/oauth-refresh-response.enum';\r\nimport { AppInsightsLoggerService } from './core/services/app-insights-logger.service';\r\nimport { AuthenticationService } from './core/services/authentication.service';\r\nimport { AuthorizationService } from './core/services/authorization.service';\r\nimport { ConfirmationDialogComponent } from './shared/components/confirmation-dialog/confirmation-dialog.component';\r\nimport { routerTransition } from './shared/router.animations';\r\nimport { DiscoveryService } from './shared/services/discovery.service';\r\nimport { UserIdentityService } from './shared/services/http-services/user-identity.service';\r\n// end scrolling\r\nimport { SecurityService } from './shared/services/security.service';\r\n\r\n@Component({\r\n    selector: 'atlas-root',\r\n    animations: [routerTransition],\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.css'],\r\n})\r\n\r\nexport class AppComponent implements OnInit, AfterViewInit, OnDestroy {\r\n    title = 'app';\r\n    isExpanded = false;\r\n    // star add by souhir:for scrolling\r\n    @ViewChild(CdkScrollable) scrollable: CdkScrollable;\r\n    private readonly ELEVATION_BREAKPOINT = 32;\r\n    private readonly ELEVATION_CLASS = 'mat-elevation-z6';\r\n    name = 'cdkScrollable w/ hardcoded classList';\r\n    destroy$ = new Subject();\r\n    loading = false;\r\n    isAuthorizationLoaded = false;\r\n    isUserAuthorized = false;\r\n    // end scrolling\r\n\r\n    constructor(private securityService: SecurityService,\r\n        // star add by souhir:for scrolling\r\n        private scroll: ScrollDispatcher,\r\n        // end scrolling\r\n        private authorizationService: AuthorizationService,\r\n        private authenticationService: AuthenticationService,\r\n        sanitizer: DomSanitizer,\r\n        iconRegistry: MatIconRegistry,\r\n        private router: Router,\r\n        private discoveryService: DiscoveryService,\r\n        private userIdentityService: UserIdentityService,\r\n        private dialog: MatDialog,\r\n        private loggerService: AppInsightsLoggerService,\r\n        private cdr: ChangeDetectorRef,\r\n    ) {\r\n\r\n        iconRegistry.addSvgIcon('fix_price', sanitizer.bypassSecurityTrustResourceUrl('assets/fix_price_icon.svg'));\r\n        iconRegistry.addSvgIcon('trades', sanitizer.bypassSecurityTrustResourceUrl('assets/trades.svg'));\r\n        iconRegistry.addSvgIcon('documents', sanitizer.bypassSecurityTrustResourceUrl('assets/documents.svg'));\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.scroll.scrolled(200)\r\n            .pipe(map(() => {\r\n                if (this.scrollable.getElementRef().nativeElement.scrollTop > this.ELEVATION_BREAKPOINT) {\r\n                    this.scrollable.getElementRef().nativeElement.children[0].classList.add(this.ELEVATION_CLASS);\r\n                } else {\r\n                    this.scrollable.getElementRef().nativeElement.children[0].classList.remove(this.ELEVATION_CLASS);\r\n                }\r\n            }))\r\n            .subscribe();\r\n    }\r\n\r\n    getRouteAnimation(route) {\r\n        return route.activatedRouteData.animation;\r\n    }\r\n\r\n    handleAuthEvents() {\r\n        this.authenticationService.events\r\n            .pipe(\r\n                filter((event) => event.type === 'silent_refresh_error'),\r\n                takeUntil(this.destroy$),\r\n            )\r\n            .subscribe(() => {\r\n                if (environment.tokenConfiguration.silentRefresh) {\r\n                    this.authenticationService.refresh().then((result: OAuthRefreshResponse) => {\r\n                        if (result === OAuthRefreshResponse.InteractionRequired) {\r\n                            const confirmDialog = this.dialog.open(ConfirmationDialogComponent, {\r\n                                data: {\r\n                                    title: 'Token expiration',\r\n                                    text: 'Your token is about to expire and to continue to use the application '\r\n                                        + 'your interaction is required. '\r\n                                        + 'You will be redirected to the token provider.',\r\n                                    okButton: 'Got it',\r\n                                },\r\n                            });\r\n                            confirmDialog.afterClosed().subscribe((answer) => {\r\n                                if (answer) {\r\n                                    this.authenticationService.login();\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n    async ngOnInit() {\r\n        this.observeAuthorization();\r\n        this.setLastConnectionDate();\r\n        this.handleRouterEvents();\r\n\r\n        this.discoveryService.getOAuthConfig()\r\n            .pipe(\r\n                takeUntil(this.destroy$),\r\n            )\r\n            .subscribe(async (data) => {\r\n                this.authenticationService.initialize(data);\r\n                this.handleAuthEvents();\r\n                if (environment.tokenConfiguration.silentRefresh) {\r\n                    this.authenticationService.setupSilentRefresh();\r\n                }\r\n\r\n                await this.authenticationService.tryLogin();\r\n\r\n                if (!this.authenticationService.hasValidToken()) {\r\n                    this.authenticationService.login();\r\n                } else {\r\n                    this.securityService.load();\r\n                    this.securityService.isSecurityReady().subscribe(() => {\r\n                        this.loggerService.initialize();\r\n                    });\r\n                }\r\n            });\r\n\r\n        this.router.routeReuseStrategy.shouldReuseRoute = () => {\r\n            return false;\r\n        };\r\n    }\r\n\r\n    setLastConnectionDate() {\r\n        this.securityService.isSecurityReady()\r\n            .pipe(\r\n                concatMap(() => {\r\n                    return this.userIdentityService.setMyLastConnectionDateTime();\r\n                }),\r\n                takeUntil(this.destroy$),\r\n            )\r\n            .subscribe();\r\n    }\r\n\r\n    handleRouterEvents() {\r\n        this.router.events.subscribe((evt) => {\r\n            if (evt instanceof NavigationEnd) {\r\n                this.router.navigated = false;\r\n                this.loading = false;\r\n                this.cdr.detectChanges();\r\n                window.scrollTo(0, 0);\r\n            } else if (evt instanceof NavigationCancel) {\r\n                this.loading = false;\r\n                this.cdr.detectChanges();\r\n            } else if (evt instanceof NavigationError) {\r\n                this.loading = false;\r\n                this.cdr.detectChanges();\r\n            } else if (evt instanceof NavigationStart) {\r\n                this.loading = true;\r\n                this.cdr.detectChanges();\r\n            }\r\n        });\r\n    }\r\n\r\n    observeAuthorization() {\r\n        this.authorizationService.authorizationLoaded$.subscribe((isAuthorizationLoaded) => {\r\n            this.isAuthorizationLoaded = isAuthorizationLoaded;\r\n        });\r\n\r\n        this.authorizationService.isUserAuthorized$.subscribe((isUserAuthorized) => {\r\n            this.isUserAuthorized = isUserAuthorized;\r\n        });\r\n    }\r\n\r\n    toggleSideBar() {\r\n        this.isExpanded = !this.isExpanded;\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destroy$.next();\r\n        this.destroy$.complete();\r\n    }\r\n}\r\n","import { APP_BASE_HREF, Location } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MAT_MOMENT_DATE_ADAPTER_OPTIONS, MomentDateAdapter } from '@angular/material-moment-adapter';\r\nimport { DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from '@angular/material/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NgProgressModule } from '@ngx-progressbar/core';\r\nimport { NgProgressHttpModule } from '@ngx-progressbar/http';\r\nimport { AgGridModule } from 'ag-grid-angular';\r\nimport { OAuthModule, OAuthService, OAuthStorage, UrlHelperService } from 'angular-oauth2-oidc';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { AppComponent } from './app.component';\r\nimport { AppRoutingModule } from './app.route';\r\nimport { CoreModule } from './core/core.module';\r\nimport { AtlasStorage } from './core/services/atlas-storage';\r\nimport { DashboardModule } from './dashboard/dashboard.module';\r\nimport { HomeModule } from './home/home.module';\r\nimport { MdmModule } from './mdm/mdm.module';\r\nimport { WINDOW } from './shared/entities/window-injection-token';\r\nimport { CanDeactivateGuard } from './shared/guards/can-deactivate-guard.service';\r\nimport { httpInterceptorProviders } from './shared/http-interceptors';\r\nimport { MaterialModule } from './shared/material.module';\r\nimport { DiscoveryService } from './shared/services/discovery.service';\r\nimport { ATLAS_DATE_FORMATS, SharedModule } from './shared/shared.module';\r\nimport { AtlasTradingTranslationResolver } from './trading/resolvers/atlas-trading-translation.resolver';\r\n\r\ndeclare var readCookie: (cookie: string) => string;\r\n\r\nexport function initializeApplicationPathRoot(): string {\r\n    const basePath = decodeURIComponent(readCookie('EnvSuffix'));\r\n    return basePath;\r\n}\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        BrowserAnimationsModule,\r\n        FormsModule,\r\n        MaterialModule,\r\n        HttpClientModule,\r\n        SharedModule.forRoot(),\r\n        OAuthModule.forRoot(),\r\n        AppRoutingModule,\r\n        HomeModule,\r\n        MdmModule,\r\n        DashboardModule,\r\n        AgGridModule.withComponents([]),\r\n        NgProgressModule.forRoot(),\r\n        NgProgressHttpModule,\r\n        FlexLayoutModule,\r\n        CoreModule,\r\n    ],\r\n    providers: [\r\n        {\r\n            provide: APP_BASE_HREF,\r\n            useFactory: initializeApplicationPathRoot,\r\n            deps: [],\r\n        },\r\n        { provide: MAT_DATE_LOCALE, useValue: 'en' },\r\n        { provide: MAT_DATE_FORMATS, useValue: ATLAS_DATE_FORMATS },\r\n        { provide: MAT_MOMENT_DATE_ADAPTER_OPTIONS, useValue: { useUtc: true } },\r\n        { provide: DateAdapter, useClass: MomentDateAdapter },\r\n        { provide: WINDOW, useValue: window },\r\n        OAuthService,\r\n        UrlHelperService,\r\n        CookieService,\r\n        httpInterceptorProviders,\r\n        DiscoveryService,\r\n        Location,\r\n        CanDeactivateGuard,\r\n        AtlasTradingTranslationResolver,\r\n    ],\r\n    bootstrap: [AppComponent],\r\n    schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n})\r\nexport class AppModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { DashboardHomeComponent } from './dashboard/dashboard-home/dashboard-home.component';\r\nimport { CompanyRedirectionComponent } from './home/company-redirection/company-redirection.component';\r\nimport { HomePageComponent } from './home/home-page/home-page.component';\r\nimport { ErrorPageComponent } from './shared/components/error-page/error-page.component';\r\nimport { SecurityGuard } from './shared/guards/security.guard';\r\nimport { CompanyDateResolver } from './shared/resolvers/company-date.resolver';\r\nimport { AtlasTradingTranslationResolver } from './trading/resolvers/atlas-trading-translation.resolver';\r\nexport const routes: Routes = [\r\n    {\r\n        path: '', pathMatch: 'full', component: CompanyRedirectionComponent,\r\n    },\r\n    {\r\n        path: 'error/:status',\r\n        component: ErrorPageComponent,\r\n        data: { animation: 'error', title: 'Error', isHomePage: false, privilegeLevel1Name: null },\r\n    },\r\n    {\r\n        path: ':company', redirectTo: ':company/home', pathMatch: 'full',\r\n        resolve: {\r\n            companyDate: CompanyDateResolver,\r\n        },\r\n    },\r\n    {\r\n        path: ':company/home',\r\n        component: HomePageComponent,\r\n        canActivate: [SecurityGuard],\r\n        data: { animation: 'home', title: 'Home', isHomePage: true, privilegeLevel1Name: 'Home' },\r\n        resolve: {\r\n            companyDate: CompanyDateResolver,\r\n        },\r\n    },\r\n    {\r\n        path: ':company/dashboard',\r\n        component: DashboardHomeComponent,\r\n        canActivate: [SecurityGuard],\r\n        data: { animation: 'dashboard', title: 'Dashboard', isHomePage: true, privilegeLevel1Name: null },\r\n        resolve: {\r\n            companyDate: CompanyDateResolver,\r\n        },\r\n    },\r\n    {\r\n        path: ':company/error/:status',\r\n        component: ErrorPageComponent,\r\n        data: { animation: 'error', title: 'Error', isHomePage: false, privilegeLevel1Name: null },\r\n        resolve: {\r\n            companyDate: CompanyDateResolver,\r\n        },\r\n    },\r\n    {\r\n        path: ':company/trades',\r\n        loadChildren: './trading/trading.module#TradingModule',\r\n        data: { title: 'Trades', isHomePage: true, privilegeLevel1Name: 'Trades' },\r\n        resolve: {\r\n            companyDate: CompanyDateResolver,\r\n            tradingTranslation: AtlasTradingTranslationResolver,\r\n        },\r\n    },\r\n    {\r\n        path: ':company/execution',\r\n        loadChildren: './execution/execution.module#ExecutionModule',\r\n        data: { title: 'Execution', isHomePage: true, privilegeLevel1Name: null },\r\n        resolve: {\r\n            companyDate: CompanyDateResolver,\r\n        },\r\n    },\r\n    {\r\n        path: ':company/controlling',\r\n        loadChildren: './controlling/controlling.module#ControllingModule',\r\n        data: { title: 'Controlling', isHomePage: true, privilegeLevel1Name: null },\r\n        resolve: {\r\n            companyDate: CompanyDateResolver,\r\n        },\r\n    },\r\n    {\r\n        path: ':company/reporting',\r\n        loadChildren: './reporting/reporting.module#ReportingModule',\r\n        data: { title: 'Reports', isHomePage: true, privilegeLevel1Name: 'Reports' },\r\n        resolve: {\r\n            companyDate: CompanyDateResolver,\r\n        },\r\n    },\r\n    {\r\n        path: ':company/admin',\r\n        loadChildren: './admin/admin.module#AdminModule',\r\n        data: { title: 'Administration panel', isHomePage: true, privilegeLevel1Name: 'Administration' },\r\n        resolve: {\r\n            companyDate: CompanyDateResolver,\r\n        },\r\n    },\r\n\r\n    {\r\n        path: ':company/referential',\r\n        loadChildren: './referential/referential.module#ReferentialModule',\r\n        data: { title: 'Referential', isHomePage: true, privilegeLevel1Name: 'Referential' },\r\n        resolve: {\r\n            companyDate: CompanyDateResolver,\r\n        },\r\n    },\r\n    {\r\n        path: ':company/financial',\r\n        loadChildren: './financial/financial.module#FinancialModule',\r\n        data: { title: 'Financials', isHomePage: true, privilegeLevel1Name: 'Financials' },\r\n        resolve: {\r\n            companyDate: CompanyDateResolver,\r\n        },\r\n    },\r\n    {\r\n        path: ':company/hidden', loadChildren: './hidden/hidden.module#HiddenModule',\r\n        resolve: {\r\n            companyDate: CompanyDateResolver,\r\n        },\r\n    },\r\n\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes)],\r\n    exports: [RouterModule],\r\n    providers: [],\r\n})\r\nexport class AppRoutingModule { }\r\n","import { CommonModule } from '@angular/common';\r\nimport { ErrorHandler, NgModule } from '@angular/core';\r\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\r\nimport { MaterialModule } from '../shared/material.module';\r\nimport { ErrorsHandler } from './errors-handler';\r\nimport { AppInsightsLoggerService } from './services/app-insights-logger.service';\r\nimport { AtlasTranslationService } from './services/atlas-translation.service';\r\nimport { AuthenticationService } from './services/authentication.service';\r\nimport { AuthorizationService } from './services/authorization.service';\r\nimport { CompanyManagerService } from './services/company-manager.service';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        MaterialModule,\r\n        TranslateModule.forRoot(),\r\n    ],\r\n    declarations: [],\r\n    providers: [\r\n        AppInsightsLoggerService,\r\n        AuthorizationService,\r\n        AtlasTranslationService,\r\n        { provide: ErrorHandler, useClass: ErrorsHandler },\r\n        AuthenticationService,\r\n        CompanyManagerService,\r\n    ],\r\n})\r\n\r\nexport class CoreModule {\r\n    constructor(protected translateService: TranslateService) {\r\n        translateService.addLangs(['en', 'fr']);\r\n        translateService.setDefaultLang('en');\r\n        translateService.use(translateService.getBrowserLang());\r\n    }\r\n}\r\n","export enum OAuthRefreshResponse {\r\n\tSuccess,\r\n\tInteractionRequired,\r\n\tError,\r\n}\r\n","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { ErrorHandler, Injectable, Injector, NgZone } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ProblemDetail } from '../shared/entities/problem-detail.entity';\r\nimport { SnackbarService } from '../shared/services/snackbar.service';\r\nimport { AppInsightsLoggerService } from './services/app-insights-logger.service';\r\nimport { CompanyManagerService } from './services/company-manager.service';\r\n\r\n@Injectable()\r\nexport class ErrorsHandler implements ErrorHandler {\r\n    problemDetail: ProblemDetail;\r\n\r\n    constructor(\r\n        private injector: Injector,\r\n    ) { }\r\n\r\n    handleError(error: Error | HttpErrorResponse) {\r\n        // use injector for snackbar to avoid cyclic dependency\r\n        const snackbarService = this.injector.get(SnackbarService);\r\n        if (error instanceof HttpErrorResponse) {\r\n            if (!navigator.onLine) {\r\n                snackbarService.throwErrorSnackBar('No internet connection');\r\n            } else {\r\n                if (([500, 401].indexOf(error.status) > -1)\r\n                    || ((error.status === 403)\r\n                        && error.hasOwnProperty('displayAtlasErrorPage')\r\n                        && error['displayAtlasErrorPage'] === true)) {\r\n                    this.redirectToErrorPage(error.status);\r\n                } else {\r\n                    this.problemDetail = error.error as ProblemDetail;\r\n\r\n                    // Handle Http Error (error.status === 403, 404...)\r\n                    if (this.problemDetail != null && this.problemDetail.title !== undefined\r\n                        && this.problemDetail.detail !== undefined) {\r\n\r\n                        snackbarService.throwErrorSnackBar(this.problemDetail.title + ': ' + this.problemDetail.detail);\r\n                    } else {\r\n                        this.defaultErrorMessage(snackbarService);\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            this.defaultErrorMessage(snackbarService, error);\r\n        }\r\n\r\n        console.error('An error occured: ', error);\r\n    }\r\n\r\n    redirectToErrorPage(status: number) {\r\n        const companyManagerService = this.injector.get(CompanyManagerService);\r\n        const company = companyManagerService.getCurrentCompanyId();\r\n        let link = 'error/' + status;\r\n        if (company !== '') {\r\n            link = company + '/' + link;\r\n        }\r\n        const ngZone = this.injector.get(NgZone);\r\n        const router = this.injector.get(Router);\r\n        ngZone.run(() => { router.navigate([link], { skipLocationChange: true }); });\r\n    }\r\n\r\n    defaultErrorMessage(snackbarService: SnackbarService, error?: Error) {\r\n        if (!this.isTypeScriptError(error)) {\r\n            snackbarService.throwErrorSnackBar('Something went wrong');\r\n        }\r\n        if (error) {\r\n            const appInsightsLoggerService = this.injector.get(AppInsightsLoggerService);\r\n            appInsightsLoggerService.logError(error);\r\n        }\r\n    }\r\n\r\n    isTypeScriptError(error?: Error): boolean {\r\n        if (error) {\r\n            if (error.message.includes('of undefined')) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, ResolveEnd, Router } from '@angular/router';\r\nimport { AppInsights } from 'applicationinsights-js';\r\nimport { environment } from '../../../environments/environment';\r\nimport { AuthorizationService } from './authorization.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class AppInsightsLoggerService {\r\n\r\n    private isInitialized: boolean;\r\n\r\n    constructor(private router: Router,\r\n        private authorizationService: AuthorizationService) {\r\n    }\r\n\r\n    /* Call downloadAndSetup to download full ApplicationInsights script from CDN and initialize it with instrumentation key */\r\n    initialize() {\r\n        this.isInitialized = false;\r\n\r\n        if (environment.applicationInsights && environment.applicationInsights.instrumentationKey.length > 1) {\r\n            try {\r\n                AppInsights.downloadAndSetup({\r\n                    instrumentationKey: environment.applicationInsights.instrumentationKey,\r\n                });\r\n                this.isInitialized = true;\r\n                const user = this.authorizationService.getCurrentUser();\r\n                if (user) {\r\n                    AppInsights.setAuthenticatedUserContext(user.userId.toString(), user.samAccountName);\r\n                }\r\n\r\n                this.router.events.subscribe((event) => {\r\n                    if (event instanceof ResolveEnd) {\r\n                        const activatedComponent = this.getActivatedComponent(event.state.root);\r\n                        if (activatedComponent) {\r\n                            this.logPageView(\r\n                                `${activatedComponent.name} ${this.getRouteTemplate(event.state.root)}`,\r\n                                event.state.root.params,\r\n                                event.urlAfterRedirects);\r\n                        }\r\n                    }\r\n                });\r\n            } catch (e) {\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    /*\r\n    AppInsights.trackPageView(\r\n            \"FirstPage\", // (optional) page name\r\n            null,  // (optional) page url if available\r\n    { prop1: \"prop1\", prop2: \"prop2\" }, // (optional) dimension dictionary\r\n    { measurement1: 1 }, // (optional) metric dictionary\r\n    123  //page view duration in milliseconds\r\n        );\r\n\t//*/\r\n    public logPageView(pageName: string, properties?: { [name: string]: string; }, url?: string) {\r\n        if (this.isInitialized) {\r\n            AppInsights.trackPageView(\r\n                pageName,\r\n                url,\r\n                properties,\r\n            );\r\n        }\r\n    }\r\n\r\n    public logError(error: Error, properties?: { [key: string]: string }, measurements?: { [key: string]: number }) {\r\n        AppInsights.trackException(error, null, this.addGlobalProperties(properties), measurements);\r\n    }\r\n\r\n    private addGlobalProperties(properties?: { [key: string]: string }): { [key: string]: string } {\r\n        if (!properties) {\r\n            properties = {};\r\n        }\r\n\r\n        return properties;\r\n    }\r\n\r\n    public logEvent(eventName: string, properties?: { [name: string]: string; }) {\r\n        if (this.isInitialized) {\r\n            AppInsights.trackEvent(\r\n                eventName,\r\n                properties);\r\n        }\r\n    }\r\n\r\n    private getActivatedComponent(snapshot: ActivatedRouteSnapshot): any {\r\n\r\n        if (snapshot.firstChild) {\r\n            return this.getActivatedComponent(snapshot.firstChild);\r\n        }\r\n\r\n        return snapshot.component;\r\n    }\r\n\r\n    private getRouteTemplate(snapshot: ActivatedRouteSnapshot): string {\r\n        let path = '';\r\n        if (snapshot.routeConfig) {\r\n            path += snapshot.routeConfig.path;\r\n        }\r\n\r\n        if (snapshot.firstChild) {\r\n            return path + this.getRouteTemplate(snapshot.firstChild);\r\n        }\r\n\r\n        return path;\r\n    }\r\n}\r\n","import { OAuthStorage } from 'angular-oauth2-oidc';\r\n\r\nexport class AtlasStorage extends OAuthStorage {\r\n    prefix = '';\r\n\r\n    constructor(private baseRef: string) {\r\n        super();\r\n        this.prefix = `${window.location.hostname}-${baseRef.replace(/\\//gi, '')}`;\r\n    }\r\n\r\n    getItem(key: string): string | null {\r\n        return localStorage.getItem(`${this.prefix}-${key}`);\r\n    }\r\n\r\n    removeItem(key: string): void {\r\n        localStorage.removeItem(`${this.prefix}-${key}`);\r\n    }\r\n\r\n    setItem(key: string, data: string): void {\r\n        localStorage.setItem(`${this.prefix}-${key}`, data);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport * as agGrid from 'ag-grid-community';\r\nimport { forkJoin as observableForkJoin, from, Observable, of } from 'rxjs';\r\nimport { map, mergeMap } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class AtlasTranslationService {\r\n\r\n    /* loadedFiles map:\r\n        keys = names of translation files already loaded in minimum one language\r\n        values = maps whose keys are the languages already loaded for the file name given in key\r\n                (values are booleans set on true)\r\n    */\r\n    private loadedFiles: Map<string, Map<string, boolean>> = new Map();\r\n\r\n    constructor(public translateService: TranslateService) { }\r\n\r\n    loadTranslationFile(fileName: string, englishTranslationFile: object): Observable<boolean> {\r\n        const local: string = this.translateService.currentLang;\r\n        // case where no translation file has been loaded for this module\r\n        if (!this.loadedFiles[fileName]) {\r\n            this.loadedFiles[fileName] = new Map();\r\n            // load English translation file\r\n            this.translateService.setTranslation('en', englishTranslationFile, true);\r\n            this.loadedFiles[fileName].set('en', true);\r\n        }\r\n        if (!this.loadedFiles[fileName][local]) {\r\n            // To do: implement API call to get translation file\r\n            this.loadedFiles[fileName].set(local, true);\r\n        }\r\n        return of(true);\r\n    }\r\n\r\n    getTranslation(key: string): Observable<[string, string]> {\r\n        return this.translateService.get(key).pipe(\r\n            map((value: string) => {\r\n                const keyValuePair: [string, string] = [key, value];\r\n                return keyValuePair;\r\n            }),\r\n        );\r\n    }\r\n\r\n    getTranslatedRessourceMap(ressourceMap: Map<string, string>) {\r\n        from(ressourceMap)\r\n            .pipe(\r\n                mergeMap((keyValuePair: [string, string]) => {\r\n                    return this.getTranslation(keyValuePair[0]);\r\n                }),\r\n            ).subscribe((translatedKeyValuePair: [string, string]) => {\r\n                ressourceMap[translatedKeyValuePair[0]] = translatedKeyValuePair[1];\r\n            });\r\n    }\r\n\r\n    getTranslatedColumnDefs(columnDefinitions: agGrid.ColDef[], gridApi: agGrid.GridApi): Observable<agGrid.ColDef[]> {\r\n        const observableList: Array<Observable<[string, string]>> = [];\r\n        columnDefinitions.forEach((column) => {\r\n            if (column.colId) {\r\n                const headerToTranslate: string = column.colId;\r\n                observableList.push(this.getTranslation(headerToTranslate));\r\n            }\r\n        });\r\n\r\n        return observableForkJoin(observableList).pipe(\r\n            map((result: Array<[string, string]>) => {\r\n                result.forEach((keyValuePair: [string, string]) => {\r\n                    const columnToTranslate: agGrid.ColDef = columnDefinitions\r\n                        .find((column: agGrid.ColDef) => column.colId === keyValuePair[0]);\r\n                    // ag grid makes an internal copy of header names instead of create a reference\r\n                    columnToTranslate.headerName = keyValuePair[1];\r\n                    gridApi.getColumnDef(keyValuePair[0]).headerName = keyValuePair[1];\r\n                });\r\n                return columnDefinitions;\r\n            }));\r\n    }\r\n\r\n    translateGridOptionsColDefs(gridOptions: agGrid.GridOptions) {\r\n        return this.getTranslatedColumnDefs(gridOptions.columnDefs, gridOptions.api);\r\n    }\r\n\r\n}\r\n","import { APP_BASE_HREF, Location } from '@angular/common';\r\nimport { Inject, Injectable } from '@angular/core';\r\nimport { AuthConfig, OAuthEvent, OAuthService } from 'angular-oauth2-oidc';\r\nimport { Observable } from 'rxjs';\r\nimport { OAuth2Config } from '../../shared/entities/o-auth2-config.entity';\r\nimport { OAuthRefreshResponse } from '../enums/oauth-refresh-response.enum';\r\nimport { AppInsightsLoggerService } from './app-insights-logger.service';\r\nimport {AtlasStorage} from './atlas-storage';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class AuthenticationService {\r\n\r\n    private readonly errors: string[] = [\r\n        'interaction_required',\r\n        'login_required',\r\n        'account_selection_required',\r\n        'consent_required',\r\n    ];\r\n\r\n    constructor(private oauthService: OAuthService,\r\n        private location: Location,\r\n        private loggerService: AppInsightsLoggerService,\r\n        @Inject(APP_BASE_HREF) private baseRef: string) { }\r\n\r\n    get events(): Observable<OAuthEvent> {\r\n        return this.oauthService.events;\r\n    }\r\n\r\n    get state(): string {\r\n        return this.oauthService.state;\r\n    }\r\n\r\n    set state(state: string) {\r\n        this.oauthService.state = state;\r\n    }\r\n\r\n    private loadConfiguration(oAuth2: OAuth2Config) {\r\n        const configuration: AuthConfig = {\r\n            redirectUri: window.location.origin + window['base-href'],\r\n            silentRefreshRedirectUri: window.location.origin + window['base-href'] + 'silent-refresh.html',\r\n            strictDiscoveryDocumentValidation: false,\r\n            requireHttps: false,\r\n            oidc: true,\r\n            clearHashAfterLogin: true,\r\n            skipIssuerCheck: true,\r\n            responseType: 'id_token token',\r\n            loginUrl: oAuth2.loginUrl,\r\n            clientId: oAuth2.clientId,\r\n            resource: oAuth2.resource,\r\n            logoutUrl: oAuth2.logoutUrl,\r\n            issuer: oAuth2.issuer,\r\n            scope: oAuth2.scope,\r\n        };\r\n        return configuration;\r\n    }\r\n\r\n    public initialize(configuration: OAuth2Config) {\r\n        this.oauthService.configure(this.loadConfiguration(configuration));\r\n        this.oauthService.setStorage(new AtlasStorage(this.baseRef));\r\n    }\r\n\r\n    public login(targetUrl?: string) {\r\n        this.oauthService.initImplicitFlow(encodeURIComponent(targetUrl || this.location.path()));\r\n    }\r\n\r\n    public tryLogin(): Promise<void> {\r\n        return this.oauthService.tryLogin();\r\n    }\r\n\r\n    public logout() {\r\n        this.oauthService.logOut();\r\n    }\r\n\r\n    public refresh(): Promise<OAuthRefreshResponse> {\r\n        return this.oauthService.silentRefresh()\r\n            .then(() => {\r\n                return OAuthRefreshResponse.Success;\r\n            })\r\n            .catch((error) => {\r\n                this.loggerService.logError(error, { operation: 'Atlas_Silent_Refresh', errorDetails: JSON.stringify(error) });\r\n                if (error\r\n                    && error.params && error.params.error\r\n                    && this.errors.indexOf(error.params.error) >= 0) {\r\n                    return OAuthRefreshResponse.InteractionRequired;\r\n                }\r\n                return OAuthRefreshResponse.Error;\r\n            });\r\n    }\r\n\r\n    public setupSilentRefresh() {\r\n        this.oauthService.setupAutomaticSilentRefresh();\r\n    }\r\n\r\n    public hasValidToken(): boolean {\r\n        return this.oauthService.hasValidAccessToken();\r\n    }\r\n\r\n    public getAccessToken() {\r\n        return this.oauthService.getAccessToken();\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of, Subject } from 'rxjs';\r\nimport { shareReplay } from 'rxjs/operators';\r\nimport { HttpClient } from '../../../../node_modules/@angular/common/http';\r\nimport { CompanyPrivileges } from '../../shared/entities/company-privileges.entity';\r\nimport { UserPermission } from '../../shared/entities/user-permission.entity';\r\nimport { UserPreferenceResult } from '../../shared/entities/user-preference-result.entity';\r\nimport { User } from '../../shared/entities/user.entity';\r\nimport { PermissionLevels } from '../../shared/enums/permission-level.enum';\r\nimport { UserCompanyPrivilegeDto } from '../../shared/services/authorization/dtos/user-company-privilege';\r\nimport { ConfigurationService } from '../../shared/services/http-services/configuration.service';\r\nimport { HttpBaseService } from '../../shared/services/http-services/http-base.service';\r\nimport { CompanyManagerService } from './company-manager.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class AuthorizationService extends HttpBaseService {\r\n    private authorizationLoadedSubject = new Subject<boolean>();\r\n    private isAuthorizedSubject = new Subject<boolean>();\r\n    companyPrivileges: { [company: string]: UserCompanyPrivilegeDto[] } = {};\r\n    user: User;\r\n    authorizationLoaded$ = this.authorizationLoadedSubject.asObservable();\r\n    isUserAuthorized$ = this.isAuthorizedSubject.asObservable().pipe(\r\n        shareReplay(1),\r\n    );\r\n\r\n    constructor(protected http: HttpClient,\r\n        protected companyManager: CompanyManagerService,\r\n        protected configurationService: ConfigurationService) {\r\n        super(http);\r\n        this.user = new User();\r\n    }\r\n\r\n    addNewCompanyPrivileges(companyPrivileges: CompanyPrivileges[]) {\r\n        if (companyPrivileges) {\r\n            companyPrivileges.forEach((element) => {\r\n                if (!(element.companyId in this.companyPrivileges)) {\r\n                    this.companyPrivileges[element.companyId] = element.privileges;\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    initializeCompanies(user: User): Observable<void> {\r\n        const companiesId: string[] = [];\r\n        user.permissions.forEach((element: UserPermission) => {\r\n            companiesId.push(element.companyId);\r\n        });\r\n        return this.companyManager.initialize(companiesId);\r\n    }\r\n\r\n    isCompanyPrivilegesLoaded(company: string): boolean {\r\n        return (company in this.companyPrivileges);\r\n    }\r\n\r\n    isPrivilegeAllowed(\r\n        company: string,\r\n        privilege: string,\r\n        permission: PermissionLevels = null): boolean {\r\n        if (this.isCompanyPrivilegesLoaded(company) && this.companyPrivileges[company] !== undefined) {\r\n            if (this.companyManager.getCompany(company).isFrozen) {\r\n                return false;\r\n            }\r\n            const values = this.companyPrivileges[company]\r\n                .filter((p) => (p.privilegeName.toLowerCase() === privilege.toLowerCase()) &&\r\n                    (permission ? p.permission >= permission : true));\r\n            return (values.length === 1);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getCurrentUser(): User {\r\n        return this.user;\r\n    }\r\n\r\n    isUserAllowedForCompany(companyId: string) {\r\n        return this.companyManager.getCompany(companyId) !== null && this.companyManager.getCompany(companyId) !== undefined;\r\n    }\r\n\r\n    getPermissionLevel(company: string, privilege: string, parentLevelOne: string = null, parentLevelTwo: string = null): PermissionLevels {\r\n\r\n        let permissionLevel: PermissionLevels = PermissionLevels.None;\r\n        // check if user has right to the company\r\n        if (this.isCompanyPrivilegesLoaded(company) && this.companyPrivileges[company] !== undefined) {\r\n\r\n            // check if user has the privilege\r\n            let permission = this.companyPrivileges[company]\r\n                .filter((p) => (p.privilegeName.toLowerCase() === privilege.toLowerCase()));\r\n            if (permission.length > 0 && !this.companyManager.getCompany(company).isFrozen) {\r\n                permissionLevel = permission[0].permission as PermissionLevels;\r\n            } else {\r\n                permissionLevel = PermissionLevels.Read as PermissionLevels;\r\n            }\r\n\r\n            // check if the privilege should be in a tree and has the rights of the parent - Level 1\r\n            if (parentLevelOne && permissionLevel !== PermissionLevels.None) {\r\n                permission = this.companyPrivileges[company]\r\n                    .filter((p) => (p.privilegeName.toLowerCase() === parentLevelOne.toLowerCase()));\r\n                if (permission.length === 0) {\r\n                    permissionLevel = PermissionLevels.None;\r\n                } else if (this.companyManager.getCompany(company).isFrozen) {\r\n                    permissionLevel = PermissionLevels.Read as PermissionLevels;\r\n                }\r\n            }\r\n\r\n            // check if the privilege should be in a tree and has the rights of the parent - Level 2\r\n            if (parentLevelTwo && permissionLevel !== PermissionLevels.None) {\r\n                permission = this.companyPrivileges[company]\r\n                    .filter((p) => (p.privilegeName.toLowerCase() === parentLevelTwo.toLowerCase()));\r\n                if (permission.length === 0) {\r\n                    permissionLevel = PermissionLevels.None;\r\n                } else if (this.companyManager.getCompany(company).isFrozen) {\r\n                    permissionLevel = PermissionLevels.Read as PermissionLevels;\r\n                }\r\n            }\r\n        }\r\n\r\n        return permissionLevel;\r\n    }\r\n\r\n    isAdministrator(company: string) {\r\n        const companyPermission = this.user.permissions.find((permission) => permission.companyId === company);\r\n        return companyPermission && companyPermission.profileName === 'Administrator';\r\n    }\r\n\r\n    authorizationLoaded() {\r\n        this.authorizationLoadedSubject.next(true);\r\n    }\r\n\r\n    authorizeUser() {\r\n        this.isAuthorizedSubject.next(true);\r\n    }\r\n\r\n    denyUser() {\r\n        this.isAuthorizedSubject.next(false);\r\n    }\r\n\r\n    // -- this code will be refactored later on and moved a a new UserIdentityManagement Service\r\n    getUserDateFormat(): string {\r\n        let result = 'DD/MM/YYYY';\r\n        const company = this.companyManager.getCurrentCompanyId();\r\n        if (this.user.companyPreferences[company]) {\r\n            if (this.user.companyPreferences[company].dateFormat) {\r\n                result = this.user.companyPreferences[company].dateFormat;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    // is used inside company date resolver\r\n    loadCompanyPreferences(): Observable<UserPreferenceResult[]> {\r\n        this.user.companyPreferences = new Map<string, UserPreferenceResult>();\r\n        const company = this.companyManager.getCurrentCompanyId();\r\n        if (!this.user.companyPreferences.has(company)) {\r\n            return this.configurationService.getUserPreference(this.user.userId);\r\n        } else {\r\n            return of(null);\r\n        }\r\n    }\r\n    //\r\n\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Inject, Injectable, Optional } from '@angular/core';\r\nimport { MAT_DATE_LOCALE } from '@angular/material';\r\nimport { MAT_MOMENT_DATE_ADAPTER_OPTIONS, MatMomentDateAdapterOptions } from '@angular/material-moment-adapter';\r\nimport * as moment from 'moment';\r\nimport { forkJoin, Observable, of } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { environment } from '../../../environments/environment';\r\nimport { Company } from '../../shared/entities/company.entity';\r\nimport { ApiPaginatedCollection } from '../../shared/services/common/models';\r\nimport { HttpBaseService } from '../../shared/services/http-services/http-base.service';\r\nimport { UrlManagementService } from '../../shared/services/url-management.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class CompanyManagerService extends HttpBaseService {\r\n    private currentCompany: Company;\r\n    private userLoadedCompanies: Company[] = null;\r\n    private locale: string;\r\n    private useUtc: boolean;\r\n\r\n    constructor(protected http: HttpClient,\r\n        private urlManager: UrlManagementService,\r\n        @Optional() @Inject(MAT_DATE_LOCALE)\r\n        private dateLocale: string,\r\n        @Optional() @Inject(MAT_MOMENT_DATE_ADAPTER_OPTIONS)\r\n        private options: MatMomentDateAdapterOptions) {\r\n        super(http);\r\n        this.locale = dateLocale || moment.locale();\r\n        this.useUtc = this.options && this.options.useUtc;\r\n    }\r\n\r\n    initialize(companyIdList: string[]): Observable<void> {\r\n        if (!this.userLoadedCompanies) {\r\n            this.userLoadedCompanies = [];\r\n            const observableList: Array<Observable<Company>> = [];\r\n\r\n            companyIdList.forEach((companyId: string) => {\r\n                observableList.push(this.get<Company>(\r\n                    `${environment.masterDataServiceLink}/${encodeURIComponent(companyId)}`\r\n                    + '/Companies/' + encodeURIComponent(companyId)));\r\n            });\r\n\r\n            if (observableList.length > 0) {\r\n                return forkJoin(observableList).pipe(\r\n                    map((companies: Company[]) => {\r\n                        this.userLoadedCompanies = companies;\r\n                        this.userLoadedCompanies.forEach((comp) => {\r\n                            comp.lastDateRefresh = moment().subtract(1, 'days');\r\n                        });\r\n                    }));\r\n            }\r\n            return of(null);\r\n        }\r\n        return of(null);\r\n    }\r\n\r\n    getCurrentCompanyId(): string {\r\n        return this.currentCompany ? this.currentCompany.companyId : '';\r\n    }\r\n\r\n    getCurrentCompany(): Company {\r\n        return this.currentCompany;\r\n    }\r\n\r\n    getCompany(companyId: string): Company {\r\n        return this.userLoadedCompanies.find((company: Company) => company.companyId === companyId);\r\n    }\r\n\r\n    getLoadedCompanies(): Company[] {\r\n        return this.userLoadedCompanies;\r\n    }\r\n\r\n    changeCurrentCompany(companyId: string) {\r\n        if (companyId !== this.currentCompany.companyId) {\r\n            const companyIndex = this.userLoadedCompanies.findIndex((company: Company) => company.companyId === companyId);\r\n            if (companyIndex > -1) {\r\n                this.urlManager.navigateToCompany(companyId, this.currentCompany.companyId);\r\n                this.currentCompany = this.userLoadedCompanies[companyId];\r\n                // trigger company change event?\r\n            }\r\n        }\r\n        /*\r\n        else{\r\n            // trigger no access to selected company\r\n        }\r\n        */\r\n    }\r\n\r\n    private getCompanyDate(companyId: string) {\r\n        return this.get<Date>(\r\n            `${environment.masterDataServiceLink}/${encodeURIComponent(companyId)}`\r\n            + '/Companies/' + encodeURIComponent(companyId) + '/date');\r\n    }\r\n\r\n    refreshCompanyDate(companyId: string = null): Observable<moment.Moment> {\r\n        const compId = companyId ? companyId : this.currentCompany.companyId;\r\n        const companyToRefresh = this.userLoadedCompanies.find((comp) => comp.companyId === compId);\r\n        // if (companyToRefresh && companyToRefresh.lastDateRefresh.diff(moment(), 'days') !== 0) {\r\n        return this.getCompanyDate(compId).pipe(\r\n            map((compDate) => {\r\n                companyToRefresh.companyDate = (this.useUtc) ?\r\n                    moment.utc(compDate).locale(this.locale) :\r\n                    moment(compDate).locale(this.locale);\r\n                companyToRefresh.lastDateRefresh = moment();\r\n                return of(companyToRefresh.companyDate);\r\n            }),\r\n            catchError((error) => {\r\n                console.error(error);\r\n                return of(null);\r\n            }));\r\n        // }\r\n        // return of(null);\r\n    }\r\n\r\n    getCurrentCompanyDate(): moment.Moment {\r\n        const currentCompany = this.userLoadedCompanies.find((company: Company) => company.companyId === this.currentCompany.companyId);\r\n        let res: moment.Moment = null;\r\n        if (currentCompany && currentCompany.activeDate !== null && currentCompany.activeDate !== undefined) {\r\n            res = (this.useUtc) ?\r\n                moment.utc(currentCompany.activeDate).locale(this.locale) :\r\n                moment(currentCompany.activeDate).locale(this.locale);\r\n        } else {\r\n            res = (this.currentCompany && this.useUtc) ?\r\n                moment(this.currentCompany.companyDate).utc().startOf('day').locale(this.locale) :\r\n                moment(this.currentCompany.companyDate).startOf('day').locale(this.locale);\r\n        }\r\n        return res;\r\n    }\r\n\r\n    refreshCurrentCompany(compId: string = null) {\r\n\r\n        const companyId = compId ? compId :\r\n            this.urlManager.getCurrentCompanyId();\r\n\r\n        if (companyId && (!this.currentCompany || this.currentCompany.companyId !== companyId)) {\r\n            this.currentCompany = this.userLoadedCompanies.find((comp) => {\r\n                return comp.companyId === companyId;\r\n            });\r\n        }\r\n\r\n        return this.currentCompany ? this.currentCompany.companyId : '';\r\n    }\r\n\r\n    resetToCompany(companyId: string) {\r\n        this.urlManager.resetToCompany(companyId);\r\n        this.currentCompany = this.userLoadedCompanies.find((comp) => {\r\n            return comp.companyId === companyId;\r\n        });\r\n    }\r\n\r\n    getConfiguration(counterpartyId: number) {\r\n        const company = this.getCurrentCompanyId();\r\n        const apiUrl = `${environment.masterDataServiceLink}/${encodeURIComponent(company)}`\r\n            + '/Companies/getConfiguration/' + encodeURIComponent(counterpartyId.toString());\r\n\r\n        const list = this.get<ApiPaginatedCollection<Company>>(apiUrl)\r\n            .pipe(\r\n                map((data) => {\r\n                    return data.value;\r\n                }),\r\n            );\r\n        return list;\r\n    }\r\n\r\n    public checkCompanyNameExists(companyname: string) {\r\n        const company = this.getCurrentCompanyId();\r\n        {\r\n            return this.http\r\n                .head(`${environment.masterDataServiceLink}/${encodeURIComponent(company)}` + '/Companies/' + companyname, {\r\n                    headers: this.defaultHttpHeaders,\r\n                    observe: 'response',\r\n                })\r\n                .pipe(map((resp) => resp.status === 200));\r\n        }\r\n    }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<p>\\r\\n    dashboard-home works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n\tselector: 'atr-dashboard-home',\r\n\ttemplateUrl: './dashboard-home.component.html',\r\n\tstyleUrls: ['./dashboard-home.component.css']\r\n})\r\nexport class DashboardHomeComponent implements OnInit {\r\n\r\n\tconstructor() { }\r\n\r\n\tngOnInit() {\r\n\t}\r\n\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\r\nimport { DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from '@angular/material';\r\nimport { MomentDateAdapter } from '@angular/material-moment-adapter';\r\nimport { AppRoutingModule } from '../app.route';\r\nimport { MaterialModule } from '../shared/material.module';\r\nimport { ATLAS_DATE_FORMATS, SharedModule } from '../shared/shared.module';\r\nimport { DashboardHomeComponent } from './dashboard-home/dashboard-home.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        MaterialModule,\r\n        AppRoutingModule,\r\n        SharedModule,\r\n    ],\r\n    exports: [\r\n        DashboardHomeComponent,\r\n    ],\r\n    declarations: [DashboardHomeComponent],\r\n    providers: [\r\n        { provide: MAT_DATE_LOCALE, useValue: 'en' },\r\n        { provide: DateAdapter, useClass: MomentDateAdapter },\r\n        { provide: MAT_DATE_FORMATS, useValue: ATLAS_DATE_FORMATS },\r\n    ],\r\n    schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n})\r\nexport class DashboardModule { }\r\n","module.exports = \"<mat-expansion-panel expanded=\\\"true\\\">\\r\\n\\t<mat-expansion-panel-header>\\r\\n\\t\\t<mat-panel-title>\\r\\n\\t\\t\\t<h2>Loading</h2>\\r\\n\\t\\t\\t<div class=\\\"custom-line-title\\\"></div>\\r\\n\\t\\t</mat-panel-title>\\r\\n\\t</mat-expansion-panel-header>\\r\\n\\t<div fxLayout=\\\"row\\\"\\r\\n\\t     fxLayoutAlign=\\\"center center\\\"\\r\\n\\t     fxLayoutWrap\\r\\n\\t     fxLayoutGap=\\\"20px\\\">\\r\\n\\t\\t<mat-spinner color=\\\"accent\\\"></mat-spinner>\\r\\n\\t</div>\\r\\n</mat-expansion-panel>\\r\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthenticationService } from '../../core/services/authentication.service';\r\nimport { CompanyManagerService } from '../../core/services/company-manager.service';\r\nimport { CookiesProps, CookiesService } from '../../shared/services/cookies.service';\r\nimport { SecurityService } from '../../shared/services/security.service';\r\n\r\n@Component({\r\n    selector: 'atlas-company-redirection',\r\n    templateUrl: './company-redirection.component.html',\r\n    styleUrls: ['./company-redirection.component.scss'],\r\n})\r\nexport class CompanyRedirectionComponent implements OnInit {\r\n\r\n    constructor(private cookieService: CookiesService,\r\n        private securityService: SecurityService,\r\n        private authenticationService: AuthenticationService,\r\n        private companyManager: CompanyManagerService,\r\n        private router: Router) { }\r\n\r\n    ngOnInit() {\r\n        this.securityService.isSecurityReady().subscribe(() => {\r\n            let defaultComp = this.cookieService.getCookie(CookiesProps.currentCompany);\r\n            if (!defaultComp) {\r\n                const companyList = this.companyManager.getLoadedCompanies();\r\n                defaultComp = (companyList.length > 0) ? companyList[0].companyId : null;\r\n            }\r\n            if (this.authenticationService.state) {\r\n                this.router.navigateByUrl(decodeURIComponent(this.authenticationService.state));\r\n            } else if (defaultComp) {\r\n                this.companyManager.resetToCompany(defaultComp);\r\n            }\r\n        });\r\n    }\r\n}\r\n","module.exports = \"<div class=\\\"container container-custom\\\">\\r\\n\\t<div fxLayout=\\\"row\\\"\\r\\n\\t     fxLayout.xs=\\\"column\\\"\\r\\n\\t     fxFlexFill\\r\\n\\t     fxLayoutGap=\\\"1rem\\\"\\r\\n\\t     fxLayoutAlign=\\\"start\\\"\\r\\n\\t     class=\\\"container\\\">\\r\\n\\r\\n\\t\\t<mat-card class=\\\"dashboard-card elevated-container\\\"\\r\\n\\t\\t          fxFlex>\\r\\n\\t\\t\\t<mat-card-header>\\r\\n\\t\\t\\t\\t<mat-card-title (click)=\\\"goToMissingInvoices()\\\">Missing invoices</mat-card-title>\\r\\n\\t\\t\\t</mat-card-header>\\r\\n\\t\\t\\t<mat-card-content>\\r\\n\\t\\t\\t\\t<canvas baseChart\\r\\n\\t\\t\\t\\t        [datasets]=\\\"barChartData\\\"\\r\\n\\t\\t\\t\\t        [labels]=\\\"barChartLabels\\\"\\r\\n\\t\\t\\t\\t        [options]=\\\"barChartOptions\\\"\\r\\n\\t\\t\\t\\t        [legend]=\\\"barChartLegend\\\"\\r\\n\\t\\t\\t\\t        [chartType]=\\\"barChartType\\\"\\r\\n\\t\\t\\t\\t        [colors]=\\\"chartColors\\\"\\r\\n\\t\\t\\t\\t        (chartHover)=\\\"chartHovered($event)\\\"\\r\\n\\t\\t\\t\\t        (chartClick)=\\\"missingInvoicesChartClicked($event)\\\"></canvas>\\r\\n\\t\\t\\t</mat-card-content>\\r\\n\\t\\t\\t<mat-card-actions>\\r\\n\\t\\t\\t\\t<div fxLayout\\r\\n\\t\\t\\t\\t     fxLayout.xs=\\\"row\\\"\\r\\n\\t\\t\\t\\t     fxLayoutAlign=\\\"center\\\"\\r\\n\\t\\t\\t\\t     fxLayoutGap=\\\"10px\\\"\\r\\n\\t\\t\\t\\t     fxLayoutGap.xs=\\\"0\\\">\\r\\n\\t\\t\\t\\t\\t<div fxFlex=\\\"70%\\\">\\r\\n\\t\\t\\t\\t\\t\\t<mat-form-field class=\\\"dashboardInput\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<mat-select placeholder=\\\"Select View\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t            class=\\\"dashboardInput\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-option value=\\\"317\\\">Grains, A8, Sales, Carlos</mat-option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-option value=\\\"751\\\">Oilseeds, A8, Sales, Mathilde</mat-option>\\r\\n\\t\\t\\t\\t\\t\\t\\t</mat-select>\\r\\n\\t\\t\\t\\t\\t\\t</mat-form-field>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div fxFlex=\\\"25%\\\"\\r\\n\\t\\t\\t\\t\\t     class=\\\"dashboardLinkContainer\\\">\\r\\n\\t\\t\\t\\t\\t\\t<mat-button class=\\\"dashboardLink\\\"\\r\\n\\t\\t\\t\\t\\t\\t            routerLink=\\\"/{{company}}/execution/invoicing/missinginvoices\\\">Overview ></mat-button>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</mat-card-actions>\\r\\n\\t\\t</mat-card>\\r\\n\\r\\n\\t\\t<mat-card class=\\\"dashboard-card elevated-container\\\"\\r\\n\\t\\t          fxFlex>\\r\\n\\t\\t\\t<mat-card-header>\\r\\n\\t\\t\\t\\t<mat-card-title>Washouts</mat-card-title>\\r\\n\\t\\t\\t</mat-card-header>\\r\\n\\t\\t\\t<mat-card-content>\\r\\n\\t\\t\\t\\t<canvas baseChart\\r\\n\\t\\t\\t\\t        [datasets]=\\\"washoutsBarChartData\\\"\\r\\n\\t\\t\\t\\t        [labels]=\\\"washoutsBarChartLabels\\\"\\r\\n\\t\\t\\t\\t        [options]=\\\"washoutsBarChartOptions\\\"\\r\\n\\t\\t\\t\\t        [legend]=\\\"washoutsBarChartLegend\\\"\\r\\n\\t\\t\\t\\t        [chartType]=\\\"washoutsBarChartType\\\"\\r\\n\\t\\t\\t\\t        [colors]=\\\"chartColors\\\"\\r\\n\\t\\t\\t\\t        (chartHover)=\\\"chartHovered($event)\\\"\\r\\n\\t\\t\\t\\t        (chartClick)=\\\"chartClicked($event)\\\"></canvas>\\r\\n\\t\\t\\t</mat-card-content>\\r\\n\\t\\t\\t<mat-card-actions>\\r\\n\\t\\t\\t\\t<div fxLayout\\r\\n\\t\\t\\t\\t     fxLayout.xs=\\\"row\\\"\\r\\n\\t\\t\\t\\t     fxLayoutAlign=\\\"center\\\"\\r\\n\\t\\t\\t\\t     fxLayoutGap=\\\"10px\\\"\\r\\n\\t\\t\\t\\t     fxLayoutGap.xs=\\\"0\\\">\\r\\n\\t\\t\\t\\t\\t<div fxFlex=\\\"70%\\\">\\r\\n\\t\\t\\t\\t\\t\\t<mat-form-field class=\\\"dashboardInput\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<mat-select placeholder=\\\"Select View\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t            class=\\\"dashboardInput\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-option value=\\\"317\\\">Grains, A8, Sales, Carlos</mat-option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-option value=\\\"751\\\">Oilseeds, A8, Sales, Mathilde</mat-option>\\r\\n\\t\\t\\t\\t\\t\\t\\t</mat-select>\\r\\n\\t\\t\\t\\t\\t\\t</mat-form-field>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div fxFlex=\\\"25%\\\"\\r\\n\\t\\t\\t\\t\\t     class=\\\"dashboardLinkContainer\\\">\\r\\n\\t\\t\\t\\t\\t\\t<mat-button class=\\\"dashboardLink\\\"\\r\\n\\t\\t\\t\\t\\t\\t            routerLink=\\\"/{{company}}/\\\">Overview ></mat-button>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</mat-card-actions>\\r\\n\\t\\t</mat-card>\\r\\n\\r\\n\\r\\n\\t\\t<mat-card class=\\\"dashboard-card elevated-container\\\"\\r\\n\\t\\t          fxFlex>\\r\\n\\t\\t\\t<mat-card-header>\\r\\n\\t\\t\\t\\t<mat-card-title>Open Positions and Stock</mat-card-title>\\r\\n\\t\\t\\t</mat-card-header>\\r\\n\\t\\t\\t<mat-card-content>\\r\\n\\t\\t\\t\\t<canvas baseChart\\r\\n\\t\\t\\t\\t        [datasets]=\\\"openPositionsBarChartData\\\"\\r\\n\\t\\t\\t\\t        [labels]=\\\"openPositionsBarChartLabels\\\"\\r\\n\\t\\t\\t\\t        [options]=\\\"openPositionsBarChartOptions\\\"\\r\\n\\t\\t\\t\\t        [legend]=\\\"openPositionsBarChartLegend\\\"\\r\\n\\t\\t\\t\\t        [chartType]=\\\"openPositionsBarChartType\\\"\\r\\n\\t\\t\\t\\t        (chartHover)=\\\"chartHovered($event)\\\"\\r\\n\\t\\t\\t\\t        [colors]=\\\"chartColors\\\"\\r\\n\\t\\t\\t\\t        (chartClick)=\\\"chartClicked($event)\\\"></canvas>\\r\\n\\t\\t\\t</mat-card-content>\\r\\n\\t\\t\\t<mat-card-actions>\\r\\n\\t\\t\\t\\t<div fxLayout\\r\\n\\t\\t\\t\\t     fxLayout.xs=\\\"row\\\"\\r\\n\\t\\t\\t\\t     fxLayoutAlign=\\\"center\\\"\\r\\n\\t\\t\\t\\t     fxLayoutGap=\\\"10px\\\"\\r\\n\\t\\t\\t\\t     fxLayoutGap.xs=\\\"0\\\">\\r\\n\\t\\t\\t\\t\\t<div fxFlex=\\\"70%\\\">\\r\\n\\t\\t\\t\\t\\t\\t<mat-form-field class=\\\"dashboardInput\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<mat-select placeholder=\\\"Select View\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t            class=\\\"dashboardInput\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-option value=\\\"317\\\">Grains, A8, Sales, Carlos</mat-option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-option value=\\\"751\\\">Oilseeds, A8, Sales, Mathilde</mat-option>\\r\\n\\t\\t\\t\\t\\t\\t\\t</mat-select>\\r\\n\\t\\t\\t\\t\\t\\t</mat-form-field>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div fxFlex=\\\"25%\\\"\\r\\n\\t\\t\\t\\t\\t     class=\\\"dashboardLinkContainer\\\">\\r\\n\\t\\t\\t\\t\\t\\t<mat-button class=\\\"dashboardLink\\\"\\r\\n\\t\\t\\t\\t\\t\\t            routerLink=\\\"/{{company}}/\\\">Overview ></mat-button>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</mat-card-actions>\\r\\n\\t\\t</mat-card>\\r\\n\\r\\n\\r\\n\\t</div>\\r\\n\\r\\n\\t<div fxLayout=\\\"row\\\"\\r\\n\\t     fxLayout.xs=\\\"column\\\"\\r\\n\\t     fxFlexFill\\r\\n\\t     fxLayoutGap=\\\"1rem\\\"\\r\\n\\t     fxLayoutAlign=\\\"start\\\"\\r\\n\\t     class=\\\"container\\\">\\r\\n\\r\\n\\t\\t<mat-card class=\\\"dashboard-card elevated-container\\\"\\r\\n\\t\\t          fxFlex>\\r\\n\\t\\t\\t<mat-card-header>\\r\\n\\t\\t\\t\\t<mat-card-title>Trades to Fix</mat-card-title>\\r\\n\\t\\t\\t</mat-card-header>\\r\\n\\t\\t\\t<mat-card-content>\\r\\n\\t\\t\\t\\t<canvas baseChart\\r\\n\\t\\t\\t\\t        [datasets]=\\\"tradeToFixChartData\\\"\\r\\n\\t\\t\\t\\t        [labels]=\\\"tradeToFixChartLabels\\\"\\r\\n\\t\\t\\t\\t        [options]=\\\"tradeToFixChartOptions\\\"\\r\\n\\t\\t\\t\\t        [legend]=\\\"tradeToFixChartLegend\\\"\\r\\n\\t\\t\\t\\t        [chartType]=\\\"tradeToFixChartType\\\"\\r\\n\\t\\t\\t\\t        [colors]=\\\"violetColor\\\"\\r\\n\\t\\t\\t\\t        (chartHover)=\\\"chartHovered($event)\\\"\\r\\n\\t\\t\\t\\t        (chartClick)=\\\"chartClicked($event)\\\"></canvas>\\r\\n\\t\\t\\t</mat-card-content>\\r\\n\\t\\t\\t<mat-card-actions>\\r\\n\\t\\t\\t\\t<div fxLayout\\r\\n\\t\\t\\t\\t     fxLayout.xs=\\\"row\\\"\\r\\n\\t\\t\\t\\t     fxLayoutAlign=\\\"center\\\"\\r\\n\\t\\t\\t\\t     fxLayoutGap=\\\"10px\\\"\\r\\n\\t\\t\\t\\t     fxLayoutGap.xs=\\\"0\\\">\\r\\n\\t\\t\\t\\t\\t<div fxFlex=\\\"70%\\\">\\r\\n\\t\\t\\t\\t\\t\\t<mat-form-field class=\\\"dashboardInput\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<mat-select placeholder=\\\"Select View\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t            class=\\\"dashboardInput\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-option value=\\\"317\\\">Grains, A8, Sales, Carlos</mat-option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-option value=\\\"751\\\">Oilseeds, A8, Sales, Mathilde</mat-option>\\r\\n\\t\\t\\t\\t\\t\\t\\t</mat-select>\\r\\n\\t\\t\\t\\t\\t\\t</mat-form-field>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div fxFlex=\\\"25%\\\"\\r\\n\\t\\t\\t\\t\\t     class=\\\"dashboardLinkContainer\\\">\\r\\n\\t\\t\\t\\t\\t\\t<mat-button class=\\\"dashboardLink\\\"\\r\\n\\t\\t\\t\\t\\t\\t            routerLink=\\\"/{{company}}/\\\">Overview ></mat-button>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</mat-card-actions>\\r\\n\\t\\t</mat-card>\\r\\n\\r\\n\\t\\t<mat-card class=\\\"dashboard-card elevated-container\\\"\\r\\n\\t\\t          fxFlex>\\r\\n\\t\\t\\t<mat-card-header>\\r\\n\\t\\t\\t\\t<mat-card-title>Charters</mat-card-title>\\r\\n\\t\\t\\t</mat-card-header>\\r\\n\\t\\t\\t<mat-card-content>\\r\\n\\t\\t\\t\\t<canvas baseChart\\r\\n\\t\\t\\t\\t        [datasets]=\\\"chartersBarChartData\\\"\\r\\n\\t\\t\\t\\t        [labels]=\\\"chartersBarChartLabels\\\"\\r\\n\\t\\t\\t\\t        [options]=\\\"chartersBarChartOptions\\\"\\r\\n\\t\\t\\t\\t        [legend]=\\\"chartersBarChartLegend\\\"\\r\\n\\t\\t\\t\\t        [chartType]=\\\"chartersBarChartType\\\"\\r\\n\\t\\t\\t\\t        [colors]=\\\"chartFlashColors\\\"\\r\\n\\t\\t\\t\\t        (chartHover)=\\\"chartHovered($event)\\\"\\r\\n\\t\\t\\t\\t        (chartClick)=\\\"chartClicked($event)\\\"></canvas>\\r\\n\\t\\t\\t</mat-card-content>\\r\\n\\t\\t\\t<mat-card-actions>\\r\\n\\t\\t\\t\\t<div fxLayout\\r\\n\\t\\t\\t\\t     fxLayout.xs=\\\"row\\\"\\r\\n\\t\\t\\t\\t     fxLayoutAlign=\\\"center\\\"\\r\\n\\t\\t\\t\\t     fxLayoutGap=\\\"10px\\\"\\r\\n\\t\\t\\t\\t     fxLayoutGap.xs=\\\"0\\\">\\r\\n\\t\\t\\t\\t\\t<div fxFlex=\\\"70%\\\">\\r\\n\\t\\t\\t\\t\\t\\t<mat-form-field class=\\\"dashboardInput\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<mat-select placeholder=\\\"Select View\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t            class=\\\"dashboardInput\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-option value=\\\"317\\\">Grains, A8, Sales, Carlos</mat-option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-option value=\\\"751\\\">Oilseeds, A8, Sales, Mathilde</mat-option>\\r\\n\\t\\t\\t\\t\\t\\t\\t</mat-select>\\r\\n\\t\\t\\t\\t\\t\\t</mat-form-field>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div fxFlex=\\\"25%\\\"\\r\\n\\t\\t\\t\\t\\t     class=\\\"dashboardLinkContainer\\\">\\r\\n\\t\\t\\t\\t\\t\\t<mat-button class=\\\"dashboardLink\\\"\\r\\n\\t\\t\\t\\t\\t\\t            routerLink=\\\"/{{company}}/\\\">Overview ></mat-button>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</mat-card-actions>\\r\\n\\t\\t</mat-card>\\r\\n\\r\\n\\r\\n\\t\\t<mat-card class=\\\"dashboard-card elevated-container\\\"\\r\\n\\t\\t          fxFlex>\\r\\n\\t\\t\\t<mat-card-header>\\r\\n\\t\\t\\t\\t<mat-card-title>Contract management</mat-card-title>\\r\\n\\t\\t\\t</mat-card-header>\\r\\n\\t\\t\\t<mat-card-content>\\r\\n\\t\\t\\t\\t<canvas baseChart\\r\\n\\t\\t\\t\\t        [datasets]=\\\"contractManagementBarChartData\\\"\\r\\n\\t\\t\\t\\t        [labels]=\\\"contractManagementBarChartLabels\\\"\\r\\n\\t\\t\\t\\t        [options]=\\\"contractManagementBarChartOptions\\\"\\r\\n\\t\\t\\t\\t        [legend]=\\\"contractManagementBarChartLegend\\\"\\r\\n\\t\\t\\t\\t        [chartType]=\\\"contractManagementBarChartType\\\"\\r\\n\\t\\t\\t\\t        (chartHover)=\\\"chartHovered($event)\\\"\\r\\n\\t\\t\\t\\t        [colors]=\\\"whiteColors\\\"\\r\\n\\t\\t\\t\\t        (chartClick)=\\\"chartClicked($event)\\\"></canvas>\\r\\n\\t\\t\\t</mat-card-content>\\r\\n\\t\\t\\t<mat-card-actions>\\r\\n\\t\\t\\t\\t<div fxLayout\\r\\n\\t\\t\\t\\t     fxLayout.xs=\\\"row\\\"\\r\\n\\t\\t\\t\\t     fxLayoutAlign=\\\"center\\\"\\r\\n\\t\\t\\t\\t     fxLayoutGap=\\\"10px\\\"\\r\\n\\t\\t\\t\\t     fxLayoutGap.xs=\\\"0\\\">\\r\\n\\t\\t\\t\\t\\t<div fxFlex=\\\"70%\\\">\\r\\n\\t\\t\\t\\t\\t\\t<mat-form-field class=\\\"dashboardInput\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<mat-select placeholder=\\\"Select View\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t            class=\\\"dashboardInput\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-option value=\\\"317\\\">Grains, A8, Sales, Carlos</mat-option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-option value=\\\"751\\\">Oilseeds, A8, Sales, Mathilde</mat-option>\\r\\n\\t\\t\\t\\t\\t\\t\\t</mat-select>\\r\\n\\t\\t\\t\\t\\t\\t</mat-form-field>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div fxFlex=\\\"25%\\\"\\r\\n\\t\\t\\t\\t\\t     class=\\\"dashboardLinkContainer\\\">\\r\\n\\t\\t\\t\\t\\t\\t<mat-button class=\\\"dashboardLink\\\"\\r\\n\\t\\t\\t\\t\\t\\t            routerLink=\\\"/{{company}}/\\\">Overview ></mat-button>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</mat-card-actions>\\r\\n\\t\\t</mat-card>\\r\\n\\r\\n\\r\\n\\t</div>\\r\\n\\r\\n</div>\\r\\n\"","module.exports = \".dashboardInput {\\n  font-size: 12px;\\n  width: 95%; }\\n\\n.dashboardLink {\\n  font-size: 12px;\\n  font-weight: bold;\\n  color: #2196f3;\\n  cursor: pointer; }\\n\\n.dashboardLinkContainer {\\n  padding-top: 10px;\\n  text-align: inherit; }\\n\\n.mat-card-title {\\n  font-weight: 400;\\n  font-size: 18px;\\n  color: #305670;\\n  cursor: pointer; }\\n\\n.mat-card-content {\\n  align-content: center;\\n  text-align: center;\\n  margin-bottom: 0px; }\\n\\n.mat-card {\\n  padding: 12px; }\\n\\n.mat-card-actions {\\n  margin-left: 0px; }\\n\\ncanvas {\\n  width: 100% !important;\\n  height: 100% !important;\\n  align-content: center;\\n  text-align: center;\\n  cursor: pointer; }\\n\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { Chart } from \"chart.js\";\r\nimport { MatSnackBar } from \"@angular/material\";\r\n\r\n@Component({\r\n\tselector: \"atr-execution-dashboard\",\r\n\ttemplateUrl: \"./execution-dashboard.component.html\",\r\n\tstyleUrls: [\"./execution-dashboard.component.scss\"]\r\n})\r\nexport class ExecutionDashboardComponent implements OnInit {\r\n    company: string;\r\n    constructor(private router: Router,\r\n\t\tprivate route : ActivatedRoute,\r\n        private snackBar: MatSnackBar) {\r\n        this.company = this.route.snapshot.paramMap.get(\"company\");\r\n\r\n\t}\r\n\r\n\tpublic whiteColors: Array<any> = [\r\n\t\t{ // white\r\n\t\t\tbackgroundColor: \"rgba(255,255,255,1)\",\r\n\t\t\tborderColor: \"rgba(255,255,255,1)\",\r\n\t\t\tpointBackgroundColor: \"rgba(255,255,255,1)\",\r\n\t\t\tpointBorderColor: \"rgba(255,255,255,1)\",\r\n\t\t\tpointHoverBackgroundColor: \"rgba(255,255,255,1)\",\r\n\t\t\tpointHoverBorderColor: \"rgba(255,255,255,1)\",\r\n\t\t},\r\n\t\t{ // white\r\n\t\t\tbackgroundColor: \"rgba(255,255,255,1)\",\r\n\t\t\tborderColor: \"rgba(255,255,255,1)\",\r\n\t\t\tpointBackgroundColor: \"rgba(255,255,255,1)\",\r\n\t\t\tpointBorderColor: \"rgba(255,255,255,1)\",\r\n\t\t\tpointHoverBackgroundColor: \"rgba(255,255,255,1)\",\r\n\t\t\tpointHoverBorderColor: \"rgba(255,255,255,1)\",\r\n\t\t}\r\n\t];\r\n\r\n\tpublic chartFlashColors: Array<any> = [\r\n\t\t{ // green flash\r\n\t\t\tbackgroundColor: \"rgba(84,127,136,1)\",\r\n\t\t\tborderColor: \"rgba(84,127,136,1)\",\r\n\t\t\tpointBackgroundColor: \"rgba(84,127,136,1)\",\r\n\t\t\tpointBorderColor: \"rgba(84,127,136,1)\",\r\n\t\t\tpointHoverBackgroundColor: \"rgba(84,127,136,1)\",\r\n\t\t\tpointHoverBorderColor: \"rgba(84,127,136,1)\"\r\n\t\t},\r\n\t\t{ // violet flash\r\n\t\t\tbackgroundColor: \"rgba(144,64,141,1)\",\r\n\t\t\tborderColor: \"rgba(144,64,141,1)\",\r\n\t\t\tpointBackgroundColor: \"rgba(144,64,141,1)\",\r\n\t\t\tpointBorderColor: \"rgba(144,64,141,1)\",\r\n\t\t\tpointHoverBackgroundColor: \"rgba(144,64,141,1)\",\r\n\t\t\tpointHoverBorderColor: \"rgba(144,64,141,1)\",\r\n\t\t}\r\n\t];\r\n\r\n\tpublic violetColor: Array<any> = [\r\n\t\t{ // violet\r\n\t\t\tbackgroundColor: \"rgba(94,105,158,1)\",\r\n\t\t\tborderColor: \"rgba(94,105,158,1)\",\r\n\t\t\tpointBackgroundColor: \"rgba(94,105,158,1)\",\r\n\t\t\tpointBorderColor: \"rgba(94,105,158,1)\",\r\n\t\t\tpointHoverBackgroundColor: \"rgba(94,105,158,1)\",\r\n\t\t\tpointHoverBorderColor: \"rgba(94,105,158,1)\",\r\n\t\t}\r\n\t];\r\n\r\n\tpublic chartColors: Array<any> = [\r\n\t\t{ // blue\r\n\t\t\tbackgroundColor: \"rgba(167,197,226,1)\",\r\n\t\t\tborderColor: \"rgba(167,197,226,1)\",\r\n\t\t\tpointBackgroundColor: \"rgba(167,197,226,1)\",\r\n\t\t\tpointBorderColor: \"rgba(167,197,226,1)\",\r\n\t\t\tpointHoverBackgroundColor: \"rgba(167,197,226,1)\",\r\n\t\t\tpointHoverBorderColor: \"rgba(167,197,226,1)\"\r\n\t\t},\r\n\t\t{ // green\r\n\t\t\tbackgroundColor: \"rgba(151,177,80,1)\",\r\n\t\t\tborderColor: \"rgba(151,177,80,1)\",\r\n\t\t\tpointBackgroundColor: \"rgba(151,177,80,1)\",\r\n\t\t\tpointBorderColor: \"rgba(151,177,80,1)\",\r\n\t\t\tpointHoverBackgroundColor: \"rgba(151,177,80,1)\",\r\n\t\t\tpointHoverBorderColor: \"rgba(151,177,80,1)\"\r\n\t\t},\r\n\t\t{ // grey\r\n\t\t\tbackgroundColor: \"rgba(148,159,177,0.2)\",\r\n\t\t\tborderColor: \"rgba(148,159,177,1)\",\r\n\t\t\tpointBackgroundColor: \"rgba(148,159,177,1)\",\r\n\t\t\tpointBorderColor: \"#fff\",\r\n\t\t\tpointHoverBackgroundColor: \"#fff\",\r\n\t\t\tpointHoverBorderColor: \"rgba(148,159,177,0.8)\"\r\n\t\t}\r\n\t];\r\n\r\n\t//missing invoices\r\n\tpublic barChartOptions: any = {\r\n\t\tscaleShowVerticalLines: false,\r\n\t\tresponsive: false,\r\n\t\ttooltips: false,\r\n\t\tevents: [\"click\"],\r\n\t\tlegend: { display: false },\r\n\t\tlayout: {\r\n\t\t\tpadding: {\r\n\t\t\t\tleft: 0,\r\n\t\t\t\tright: 0,\r\n\t\t\t\ttop: 0,\r\n\t\t\t\tbottom: 0\r\n\t\t\t}\r\n\t\t},\r\n\t\tscales: {\r\n\t\t\tyAxes: [{\r\n\t\t\t\tticks: {\r\n\t\t\t\t\tbeginAtZero: true\r\n\t\t\t\t},\r\n\t\t\t\tdisplay: false\r\n\t\t\t}],\r\n\t\t\txAxes: [{\r\n\t\t\t\tdisplay: false,\r\n\r\n\t\t\t}]\r\n\t\t},\r\n\t\tanimation: {\r\n\t\t\tonComplete: function () {\r\n\t\t\t\tvar chartInstance = this.chart;\r\n\t\t\t\tvar ctx = chartInstance.ctx;\r\n\t\t\t\tvar height = chartInstance.controller.boxes[0].bottom;\r\n\t\t\t\tctx.font = \"48px Roboto\";\r\n\t\t\t\tctx.textAlign = \"center\";\r\n\t\t\t\tctx.fillStyle = \"#ffffff\";\r\n\t\t\t\tChart.helpers.each(this.data.datasets.forEach(function (dataset, i) {\r\n\t\t\t\t\tvar meta = chartInstance.controller.getDatasetMeta(i);\r\n\t\t\t\t\tChart.helpers.each(meta.data.forEach(function (bar, index) {\r\n\t\t\t\t\t\tctx.fillText(dataset.data[index], bar._model.x, height - ((height - bar._model.y) / 2) - 10);\r\n\t\t\t\t\t}), this);\r\n\t\t\t\t}), this);\r\n\t\t\t\tvar ctxLabel = chartInstance.ctx;\r\n\t\t\t\tctxLabel.font = \"13px Roboto\";\r\n\t\t\t\tctxLabel.textAlign = \"center\";\r\n\t\t\t\tctxLabel.fillStyle = \"#ffffff\";\r\n\r\n\t\t\t\tChart.helpers.each(this.data.datasets.forEach(function (dataset, i) {\r\n\t\t\t\t\tvar meta = chartInstance.controller.getDatasetMeta(i);\r\n\t\t\t\t\tChart.helpers.each(meta.data.forEach((bar, index) => {\r\n\t\t\t\t\t\tctxLabel.fillText(bar._model.datasetLabel, bar._model.x, height - ((height - bar._model.y) / 2) - 55);\r\n\t\t\t\t\t}), this);\r\n\t\t\t\t}), this);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tpublic barChartLabels: string[] = [\"MissingInvoices\"];\r\n\tpublic barChartType: string = \"bar\";\r\n\tpublic barChartLegend: boolean = true;\r\n\tpublic barChartData: any[] = [\r\n\t\t{ data: [125], backgroundColor: \"#36A2EB\", label: \"Purchases\", datalabels: { align: \"center\", anchor: \"center\" } },\r\n\t\t{ data: [90], backgroundColor: \"#FF3784\", label: \"Sales\", datalabels: { align: \"center\", anchor: \"center\" } }\r\n\t];\r\n\r\n\t//washouts\r\n\tpublic washoutsBarChartOptions: any = {\r\n\t\tscaleShowVerticalLines: false,\r\n\t\tresponsive: false,\r\n\t\ttooltips: false,\r\n\t\tevents: [\"click\"],\r\n\t\tlegend: { display: false },\r\n\t\tlayout: {\r\n\t\t\tpadding: {\r\n\t\t\t\tleft: 0,\r\n\t\t\t\tright: 0,\r\n\t\t\t\ttop: 0,\r\n\t\t\t\tbottom: 0\r\n\t\t\t}\r\n\t\t},\r\n\t\tscales: {\r\n\t\t\tyAxes: [{\r\n\t\t\t\tdisplay: true,\r\n\t\t\t\tticks: {\r\n\t\t\t\t\tbeginAtZero: true\r\n\t\t\t\t},\r\n\t\t\t\tstacked: true,\r\n\t\t\t\tgridLines: {\r\n\t\t\t\t\tdisplay: false\r\n\t\t\t\t},\r\n\t\t\t\t//position: \"top\",\r\n\t\t\t\t//scaleLabel: {\r\n\t\t\t\t//\tdisplay: true,\r\n\t\t\t\t//\tlabelString: \"MT\",\r\n\t\t\t\t//\tfontFamily: \"Roboto\",\r\n\t\t\t\t//\tfontColor: \"black\",\r\n\t\t\t\t//},\r\n\t\t\t}],\r\n\t\t\txAxes: [{\r\n\t\t\t\tdisplay: true,\r\n\t\t\t\tstacked: true,\r\n\t\t\t\tgridLines: {\r\n\t\t\t\t\tdisplay: false\r\n\t\t\t\t},\r\n\t\t\t\t//position: \"right\",\r\n\t\t\t\t//scaleLabel: {\r\n\t\t\t\t//\tdisplay: true,\r\n\t\t\t\t//\tlabelString: \"Month\",\r\n\t\t\t\t//\tfontFamily: \"Roboto\",\r\n\t\t\t\t//\tfontColor: \"black\",\r\n\t\t\t\t//},\r\n\r\n\t\t\t}]\r\n\t\t},\r\n\t};\r\n\r\n\tpublic washoutsBarChartLabels: string[] = [\"Nov\", \"Dec\", \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\"];\r\n\tpublic washoutsBarChartType: string = \"bar\";\r\n\tpublic washoutsBarChartLegend: boolean = true;\r\n\tpublic washoutsBarChartData: any[] = [\r\n\t\t{ data: [25, 38, 40, 47, 30, 20, 10], label: \"Purchases\", datalabels: { align: \"center\", anchor: \"center\" } },\r\n\t\t{ data: [-20, -30, -40, -30, -20, -15, -5], label: \"Sales\", datalabels: { align: \"center\", anchor: \"center\" } }\r\n\t];\r\n\r\n\t//open position\r\n\tpublic openPositionsBarChartOptions: any = {\r\n\t\tscaleShowVerticalLines: false,\r\n\t\tresponsive: false,\r\n\t\ttooltips: false,\r\n\t\tevents: [\"click\"],\r\n\t\tlegend: { display: false },\r\n\t\tlayout: {\r\n\t\t\tpadding: {\r\n\t\t\t\tleft: 0,\r\n\t\t\t\tright: 0,\r\n\t\t\t\ttop: 0,\r\n\t\t\t\tbottom: 0\r\n\t\t\t}\r\n\t\t},\r\n\t\tscales: {\r\n\t\t\tyAxes: [{\r\n\t\t\t\tticks: {\r\n\t\t\t\t\tbeginAtZero: true,\r\n\t\t\t\t\tmirror: true\r\n\t\t\t\t},\r\n\t\t\t\tdisplay: false\r\n\t\t\t}],\r\n\t\t\txAxes: [{\r\n\t\t\t\tdisplay: true,\r\n\r\n\t\t\t}]\r\n\t\t},\r\n\t\tanimation: {\r\n\t\t\tonComplete: function () {\r\n\t\t\t\tvar chartInstance = this.chart;\r\n\t\t\t\tvar ctx = this.chart.ctx;\r\n\t\t\t\tctx.font = Chart.helpers.fontString(Chart.defaults.global.defaultFontFamily, \"normal\", Chart.defaults.global.defaultFontFamily);\r\n\t\t\t\tctx.textAlign = \"left\";\r\n\t\t\t\tctx.textBaseline = \"bottom\";\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tpublic openPositionsBarChartLabels: string[] = [\"Purchase\", \"Sales\", \"Inventory\"];\r\n\tpublic openPositionsBarChartType: string = \"horizontalBar\";\r\n\tpublic openPositionsBarChartLegend: boolean = true;\r\n\tpublic openPositionsBarChartData: any[] = [\r\n\t\t{\r\n\t\t\tdata: [125, -55, 18],\r\n\t\t\tbackgroundColor: [\"#3e95cd\", \"#8e5ea2\", \"#3cba9f\", \"#e8c3b9\", \"#c45850\"],\r\n\t\t\tlabel: \"Open-Positions\",\r\n\t\t\tdatalabels: { align: \"center\", anchor: \"center\" }\r\n\t\t}\r\n\t];\r\n\r\n\t//trades to fix invoices\r\n\tpublic tradeToFixChartOptions: any = {\r\n\t\tscaleShowVerticalLines: false,\r\n\t\tresponsive: false,\r\n\t\ttooltips: false,\r\n\t\tevents: [\"click\"],\r\n\t\tlegend: { display: false },\r\n\t\tlayout: {\r\n\t\t\tpadding: {\r\n\t\t\t\tleft: 0,\r\n\t\t\t\tright: 0,\r\n\t\t\t\ttop: 0,\r\n\t\t\t\tbottom: 0\r\n\t\t\t}\r\n\t\t},\r\n\t\tscales: {\r\n\t\t\tyAxes: [{\r\n\t\t\t\tdisplay: true,\r\n\t\t\t\tticks: {\r\n\t\t\t\t\tbeginAtZero: true\r\n\t\t\t\t},\r\n\t\t\t\tgridLines: {\r\n\t\t\t\t\tdisplay: false\r\n\t\t\t\t}\r\n\t\t\t}],\r\n\t\t\txAxes: [{\r\n\t\t\t\tdisplay: true,\r\n\t\t\t\tgridLines: {\r\n\t\t\t\t\tdisplay: false\r\n\t\t\t\t}\r\n\r\n\t\t\t}]\r\n\t\t},\r\n\t\tanimation: {\r\n\t\t\tonComplete: function () {\r\n\t\t\t\tvar chartInstance = this.chart;\r\n\t\t\t\tvar ctx = chartInstance.ctx;\r\n\t\t\t\tvar height = chartInstance.controller.boxes[0].bottom;\r\n\t\t\t\tctx.font = \"Roboto 13px  bold\";\r\n\t\t\t\tctx.textAlign = \"center\";\r\n\t\t\t\tctx.fillStyle = \"#ffffff\";\r\n\t\t\t\tChart.helpers.each(this.data.datasets.forEach(function (dataset, i) {\r\n\t\t\t\t\tvar meta = chartInstance.controller.getDatasetMeta(i);\r\n\t\t\t\t\tChart.helpers.each(meta.data.forEach(function (bar, index) {\r\n\t\t\t\t\t\tctx.fillText(dataset.data[index], bar._model.x, height - ((height - bar._model.y)) + 20);\r\n\t\t\t\t\t}), this);\r\n\t\t\t\t}), this);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tpublic tradeToFixChartLabels: string[] = [\"Nov\", \"Dec\", \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\"];\r\n\tpublic tradeToFixChartType: string = \"bar\";\r\n\tpublic tradeToFixChartLegend: boolean = true;\r\n\tpublic tradeToFixChartData: any[] = [\r\n\t\t{ data: [250, 380, 400, 470, 500, 596, 602], label: \"tradesToFix\", datalabels: { align: \"center\", anchor: \"center\" } }\r\n\t];\r\n\r\n\t//charters\r\n\tpublic chartersBarChartOptions: any = {\r\n\t\tscaleShowVerticalLines: false,\r\n\t\tresponsive: false,\r\n\t\ttooltips: false,\r\n\t\tevents: [\"click\"],\r\n\t\tlegend: { display: false },\r\n\t\tlayout: {\r\n\t\t\tpadding: {\r\n\t\t\t\tleft: 0,\r\n\t\t\t\tright: 0,\r\n\t\t\t\ttop: 0,\r\n\t\t\t\tbottom: 0\r\n\t\t\t}\r\n\t\t},\r\n\t\tscales: {\r\n\t\t\tyAxes: [{\r\n\t\t\t\tticks: {\r\n\t\t\t\t\tbeginAtZero: true\r\n\t\t\t\t},\r\n\t\t\t\tdisplay: false\r\n\t\t\t}],\r\n\t\t\txAxes: [{\r\n\t\t\t\tdisplay: false,\r\n\r\n\t\t\t}]\r\n\t\t},\r\n\t\tanimation: {\r\n\t\t\tonComplete: function () {\r\n\t\t\t\tvar chartInstance = this.chart;\r\n\t\t\t\tvar ctx = chartInstance.ctx;\r\n\t\t\t\tvar height = chartInstance.controller.boxes[0].bottom;\r\n\t\t\t\tctx.font = \"28px Roboto\";\r\n\t\t\t\tctx.textAlign = \"center\";\r\n\t\t\t\tctx.fillStyle = \"#ffffff\";\r\n\t\t\t\tChart.helpers.each(this.data.datasets.forEach(function (dataset, i) {\r\n\t\t\t\t\tvar meta = chartInstance.controller.getDatasetMeta(i);\r\n\t\t\t\t\tChart.helpers.each(meta.data.forEach((bar, index) => {\r\n\t\t\t\t\t\tctx.fillText(dataset.data[index] + \"k $\", bar._model.x, height - ((height - bar._model.y) / 2) - 10);\r\n\t\t\t\t\t}), this);\r\n\t\t\t\t}), this);\r\n\t\t\t\tvar ctxLabel = chartInstance.ctx;\r\n\t\t\t\tctxLabel.font = \"10px Roboto\";\r\n\t\t\t\tctxLabel.textAlign = \"center\";\r\n\t\t\t\tctxLabel.fillStyle = \"#ffffff\";\r\n\r\n\t\t\t\tChart.helpers.each(this.data.datasets.forEach(function (dataset, i) {\r\n\t\t\t\t\tvar meta = chartInstance.controller.getDatasetMeta(i);\r\n\t\t\t\t\tChart.helpers.each(meta.data.forEach((bar, index) => {\r\n\t\t\t\t\t\tctxLabel.fillText(bar._model.datasetLabel, bar._model.x, height - ((height - bar._model.y) / 2) - 45);\r\n\t\t\t\t\t}), this);\r\n\t\t\t\t}), this);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tpublic chartersBarChartLabels: string[] = [\"MissingInvoices\"];\r\n\tpublic chartersBarChartType: string = \"bar\";\r\n\tpublic chartersBarChartLegend: boolean = true;\r\n\tpublic chartersBarChartData: any[] = [\r\n\t\t{ data: [140], label: \"Accruals Payable\", datalabels: { align: \"center\", anchor: \"center\" } },\r\n\t\t{ data: [120], label: \"Accruals Receivable\", datalabels: { align: \"center\", anchor: \"center\" } }\r\n\t];\r\n\r\n\t//Contract Management\r\n\tpublic contractManagementBarChartOptions: any = {\r\n\t\tscaleShowVerticalLines: false,\r\n\t\tresponsive: false,\r\n\t\ttooltips: false,\r\n\t\tevents: [\"click\"],\r\n\t\tlegend: { display: false },\r\n\t\tlayout: {\r\n\t\t\tpadding: {\r\n\t\t\t\tleft: 0,\r\n\t\t\t\tright: 0,\r\n\t\t\t\ttop: 0,\r\n\t\t\t\tbottom: 0\r\n\t\t\t}\r\n\t\t},\r\n\t\tscales: {\r\n\t\t\tyAxes: [{\r\n\t\t\t\tticks: {\r\n\t\t\t\t\tbeginAtZero: true\r\n\t\t\t\t},\r\n\t\t\t\tdisplay: false\r\n\t\t\t}],\r\n\t\t\txAxes: [{\r\n\t\t\t\tdisplay: false,\r\n\r\n\t\t\t}]\r\n\t\t},\r\n\t\tanimation: {\r\n\t\t\tonComplete: function () {\r\n\t\t\t\tvar chartInstance = this.chart;\r\n\t\t\t\tvar ctx = chartInstance.ctx;\r\n\t\t\t\tvar height = chartInstance.controller.boxes[0].bottom;\r\n\t\t\t\tctx.font = \"70px Roboto\";\r\n\t\t\t\tctx.textAlign = \"center\";\r\n\t\t\t\tctx.fillStyle = \"#305670\";\r\n\t\t\t\tChart.helpers.each(this.data.datasets.forEach(function (dataset, i) {\r\n\t\t\t\t\tvar meta = chartInstance.controller.getDatasetMeta(i);\r\n\t\t\t\t\tChart.helpers.each(meta.data.forEach((bar, index) => {\r\n\t\t\t\t\t\tctx.fillText(dataset.data[index], bar._model.x, height - ((height - bar._model.y) / 2) - 10);\r\n\t\t\t\t\t}), this);\r\n\t\t\t\t}), this);\r\n\t\t\t\tvar ctxLabel = chartInstance.ctx;\r\n\t\t\t\tctxLabel.font = \"10px Roboto\";\r\n\t\t\t\tctxLabel.textAlign = \"center\";\r\n\t\t\t\tctxLabel.fillStyle = \"#990304\";\r\n\r\n\t\t\t\tChart.helpers.each(this.data.datasets.forEach(function (dataset, i) {\r\n\t\t\t\t\tvar meta = chartInstance.controller.getDatasetMeta(i);\r\n\t\t\t\t\tChart.helpers.each(meta.data.forEach((bar, index) => {\r\n\t\t\t\t\t\tctxLabel.fillText(bar._model.datasetLabel, bar._model.x, height - ((height - bar._model.y) / 2) - 75);\r\n\t\t\t\t\t}), this);\r\n\t\t\t\t}), this);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tpublic contractManagementBarChartLabels: string[] = [\"MissingInvoices\"];\r\n\tpublic contractManagementBarChartType: string = \"bar\";\r\n\tpublic contractManagementBarChartLegend: boolean = true;\r\n\tpublic contractManagementBarChartData: any[] = [\r\n\t\t{ data: [56], label: \"Pending documentation\", datalabels: { align: \"center\", anchor: \"center\" } },\r\n\t\t{ data: [34], label: \"Ready to be closed\", datalabels: { align: \"center\", anchor: \"center\" } }\r\n\t];\r\n\r\n\r\n\t// events\r\n\tpublic missingInvoicesChartClicked(e: any): void {\r\n\t\tif (e.active.length > 0) {\r\n\t\t\tvar chartElement = e.active[0]._chart.getElementAtEvent(event);\r\n\t\t\tvar dataSetSelectedLabel = chartElement[0]._model.datasetLabel;\r\n\t\t\tthis.router.navigate([\"/\"+ this.company +\"/execution/invoicing/missinginvoices/dealtype/\" + dataSetSelectedLabel]);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.goToMissingInvoices();\r\n\t\t}\r\n\t}\r\n\tpublic goToMissingInvoices() {\r\n\t\tthis.router.navigate([\"/\" + this.company +\"/execution/invoicing/missinginvoices\"]);\r\n\t}\r\n\r\n\tpublic chartClicked(e: any): void {\r\n\t\tthis.snackBar.open(\"This feature is under development...coming soon\", \"\", {\r\n\t\t\tduration: 4000,\r\n\t\t\tverticalPosition: \"top\"\r\n\t\t});\r\n\t}\r\n\r\n\tpublic chartHovered(e: any): void {\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\tChart.helpers.merge(Chart.defaults.global, {\r\n\t\t\taspectRatio: 4 / 3,\r\n\t\t\ttooltips: false,\r\n\t\t\tlayout: {\r\n\t\t\t\tpadding: {\r\n\t\t\t\t\ttop: 42,\r\n\t\t\t\t\tright: 16,\r\n\t\t\t\t\tbottom: 32,\r\n\t\t\t\t\tleft: 8\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\telements: {\r\n\t\t\t\tline: {\r\n\t\t\t\t\tfill: false\r\n\t\t\t\t},\r\n\t\t\t\tpoint: {\r\n\t\t\t\t\thoverRadius: 7,\r\n\t\t\t\t\tradius: 5\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tplugins: {\r\n\t\t\t\tlegend: false,\r\n\t\t\t\ttitle: false\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n","module.exports = \"<div class=\\\"atlas-homepage\\\">\\r\\n    <div fxLayout=\\\"row\\\"\\r\\n         fxLayoutAlign=\\\"start center\\\">\\r\\n        <h1 class=\\\"display-3\\\">Welcome to Atlas V2</h1>\\r\\n    </div>\\r\\n</div>\\r\\n\"","module.exports = \".atlas-homepage {\\n  background: url('Illustration.svg') bottom right;\\n  background-size: auto calc(100vh - 81px);\\n  background-repeat: no-repeat;\\n  width: 100%;\\n  height: calc(100vh - 56px); }\\n\\n.display-3 {\\n  font-size: 48px;\\n  font-weight: 800;\\n  letter-spacing: 0;\\n  position: absolute;\\n  left: 160px;\\n  top: 196px; }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { UserIdentityService } from '../../shared/services/http-services/user-identity.service';\r\nimport { TitleService } from '../../shared/services/title.service';\r\n\r\n@Component({\r\n    selector: 'atr-home-page',\r\n    templateUrl: './home-page.component.html',\r\n    styleUrls: ['./home-page.component.scss']\r\n})\r\nexport class HomePageComponent implements OnInit {\r\n\r\n    constructor(private userIdentityService: UserIdentityService,\r\n        private titleService: TitleService) { }\r\n\r\n    isTradingUser = false;\r\n    isExecutionUser = true;\r\n\r\n    ngOnInit() {\r\n        this.titleService.setTitle('Home');\r\n    }\r\n\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from '@angular/material';\r\nimport { MomentDateAdapter } from '@angular/material-moment-adapter';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ChartsModule } from 'ng2-charts';\r\nimport { AppRoutingModule } from '../app.route';\r\nimport { MaterialModule } from '../shared/material.module';\r\nimport { ATLAS_DATE_FORMATS, SharedModule } from '../shared/shared.module';\r\nimport { CompanyRedirectionComponent } from './company-redirection/company-redirection.component';\r\nimport { ExecutionDashboardComponent } from './execution-dashboard/execution-dashboard.component';\r\nimport { HomePageComponent } from './home-page/home-page.component';\r\nimport { TradingDashboardComponent } from './trading-dashboard/trading-dashboard.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        MaterialModule,\r\n        AppRoutingModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        RouterModule,\r\n        SharedModule,\r\n        ChartsModule,\r\n    ],\r\n    declarations: [\r\n        ExecutionDashboardComponent,\r\n        TradingDashboardComponent,\r\n        HomePageComponent,\r\n        CompanyRedirectionComponent,\r\n    ],\r\n    providers: [\r\n        { provide: MAT_DATE_LOCALE, useValue: 'en' },\r\n        { provide: DateAdapter, useClass: MomentDateAdapter },\r\n        { provide: MAT_DATE_FORMATS, useValue: ATLAS_DATE_FORMATS },\r\n    ],\r\n    schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n})\r\nexport class HomeModule { }\r\n","module.exports = \"<div class=\\\"container container-custom\\\">\\r\\n\\t<div fxLayout=\\\"row\\\"\\r\\n\\t     fxLayout.xs=\\\"column\\\"\\r\\n\\t     fxFlexFill\\r\\n\\t     fxLayoutGap=\\\"1rem\\\"\\r\\n\\t     fxLayoutAlign=\\\"start\\\"\\r\\n\\t     class=\\\"container\\\">\\r\\n\\r\\n\\t\\t<mat-card class=\\\"dashboard-card elevated-container \\\"\\r\\n\\t\\t          fxFlex>\\r\\n\\t\\t\\t<mat-card-header>\\r\\n\\t\\t\\t\\t<mat-card-title>P&L</mat-card-title>\\r\\n\\t\\t\\t</mat-card-header>\\r\\n\\t\\t\\t<mat-card-content>\\r\\n\\t\\t\\t\\t<canvas baseChart\\r\\n\\t\\t\\t\\t        [datasets]=\\\"plBarChartData\\\"\\r\\n\\t\\t\\t\\t        [labels]=\\\"plBarChartLabels\\\"\\r\\n\\t\\t\\t\\t        [options]=\\\"plBarChartOptions\\\"\\r\\n\\t\\t\\t\\t        [legend]=\\\"plBarChartLegend\\\"\\r\\n\\t\\t\\t\\t        [chartType]=\\\"plBarChartType\\\"\\r\\n\\t\\t\\t\\t        [colors]=\\\"chartColors\\\"\\r\\n\\t\\t\\t\\t        (chartHover)=\\\"chartHovered($event)\\\"\\r\\n\\t\\t\\t\\t        (chartClick)=\\\"chartClicked($event)\\\"></canvas>\\r\\n\\t\\t\\t</mat-card-content>\\r\\n\\t\\t\\t<mat-card-actions>\\r\\n\\t\\t\\t\\t<div fxLayout\\r\\n\\t\\t\\t\\t     fxLayout.xs=\\\"row\\\"\\r\\n\\t\\t\\t\\t     fxLayoutAlign=\\\"center\\\"\\r\\n\\t\\t\\t\\t     fxLayoutGap=\\\"10px\\\"\\r\\n\\t\\t\\t\\t     fxLayoutGap.xs=\\\"0\\\">\\r\\n\\t\\t\\t\\t\\t<div fxFlex=\\\"35%\\\">\\r\\n\\t\\t\\t\\t\\t\\t<mat-form-field class=\\\"dashboardInput\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<mat-select placeholder=\\\"Department\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t            class=\\\"dashboardInput\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t            multiple>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-option value=\\\"317\\\">Milk</mat-option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-option value=\\\"751\\\">Crude Glycerine</mat-option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-option value=\\\"1122\\\">Py Wheat</mat-option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-option value=\\\"1260\\\">Ar Wheat</mat-option>\\r\\n\\t\\t\\t\\t\\t\\t\\t</mat-select>\\r\\n\\t\\t\\t\\t\\t\\t</mat-form-field>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div fxFlex=\\\"35%\\\">\\r\\n\\t\\t\\t\\t\\t\\t<mat-form-field class=\\\"dashboardInput\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<mat-select placeholder=\\\"Commodities\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t            class=\\\"dashboardInput\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t            multiple>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-option value=\\\"BAG_AR_\\\">BAG Empty Bags</mat-option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-option value=\\\"BAG_PP_\\\">BAG PP Bags</mat-option>\\r\\n\\t\\t\\t\\t\\t\\t\\t</mat-select>\\r\\n\\t\\t\\t\\t\\t\\t</mat-form-field>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div fxFlex=\\\"25%\\\"\\r\\n\\t\\t\\t\\t\\t     class=\\\"dashboardLinkContainer\\\">\\r\\n\\t\\t\\t\\t\\t\\t<mat-button class=\\\"dashboardLink\\\"\\r\\n\\t\\t\\t\\t\\t\\t            routerLink=\\\"/{{company}}/\\\">Overview ></mat-button>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</mat-card-actions>\\r\\n\\t\\t</mat-card>\\r\\n\\r\\n\\t\\t<mat-card class=\\\"dashboard-card elevated-container \\\"\\r\\n\\t\\t          fxFlex>\\r\\n\\t\\t\\t<mat-card-header>\\r\\n\\t\\t\\t\\t<mat-card-title>Open positions and stock</mat-card-title>\\r\\n\\t\\t\\t</mat-card-header>\\r\\n\\t\\t\\t<mat-card-content>\\r\\n\\t\\t\\t\\t<canvas baseChart\\r\\n\\t\\t\\t\\t        [datasets]=\\\"openAndStockBarChartData\\\"\\r\\n\\t\\t\\t\\t        [labels]=\\\"openAndStockBarChartLabels\\\"\\r\\n\\t\\t\\t\\t        [options]=\\\"openAndStockBarChartOptions\\\"\\r\\n\\t\\t\\t\\t        [legend]=\\\"openAndStockBarChartLegend\\\"\\r\\n\\t\\t\\t\\t        [chartType]=\\\"openAndStockBarChartType\\\"\\r\\n\\t\\t\\t\\t        [colors]=\\\"chartColors\\\"\\r\\n\\t\\t\\t\\t        (chartHover)=\\\"chartHovered($event)\\\"\\r\\n\\t\\t\\t\\t        (chartClick)=\\\"chartClicked($event)\\\"></canvas>\\r\\n\\t\\t\\t</mat-card-content>\\r\\n\\t\\t\\t<mat-card-actions>\\r\\n\\t\\t\\t\\t<div fxLayout\\r\\n\\t\\t\\t\\t     fxLayout.xs=\\\"row\\\"\\r\\n\\t\\t\\t\\t     fxLayoutAlign=\\\"center\\\"\\r\\n\\t\\t\\t\\t     fxLayoutGap=\\\"10px\\\"\\r\\n\\t\\t\\t\\t     fxLayoutGap.xs=\\\"0\\\">\\r\\n\\t\\t\\t\\t\\t<div fxFlex=\\\"35%\\\">\\r\\n\\t\\t\\t\\t\\t\\t<mat-form-field class=\\\"dashboardInput\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<mat-select placeholder=\\\"Department\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t            class=\\\"dashboardInput\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t            multiple>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-option value=\\\"317\\\">Milk</mat-option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-option value=\\\"751\\\">Crude Glycerine</mat-option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-option value=\\\"1122\\\">Py Wheat</mat-option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-option value=\\\"1260\\\">Ar Wheat</mat-option>\\r\\n\\t\\t\\t\\t\\t\\t\\t</mat-select>\\r\\n\\t\\t\\t\\t\\t\\t</mat-form-field>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div fxFlex=\\\"35%\\\">\\r\\n\\t\\t\\t\\t\\t\\t<mat-form-field class=\\\"dashboardInput\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<mat-select placeholder=\\\"Commodities\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t            class=\\\"dashboardInput\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t            multiple>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-option value=\\\"BAG_AR_\\\">BAG Empty Bags</mat-option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-option value=\\\"BAG_PP_\\\">BAG PP Bags</mat-option>\\r\\n\\t\\t\\t\\t\\t\\t\\t</mat-select>\\r\\n\\t\\t\\t\\t\\t\\t</mat-form-field>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div fxFlex=\\\"25%\\\"\\r\\n\\t\\t\\t\\t\\t     class=\\\"dashboardLinkContainer\\\">\\r\\n\\t\\t\\t\\t\\t\\t<mat-button class=\\\"dashboardLink\\\"\\r\\n\\t\\t\\t\\t\\t\\t            routerLink=\\\"/{{company}}/\\\">Overview ></mat-button>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</mat-card-actions>\\r\\n\\t\\t</mat-card>\\r\\n\\r\\n\\r\\n\\t\\t<mat-card class=\\\"dashboard-card elevated-container \\\"\\r\\n\\t\\t          fxFlex>\\r\\n\\t\\t\\t<mat-card-header>\\r\\n\\t\\t\\t\\t<mat-card-title>Program</mat-card-title>\\r\\n\\t\\t\\t</mat-card-header>\\r\\n\\t\\t\\t<mat-card-content>\\r\\n\\t\\t\\t\\t<mat-grid-list cols=\\\"6\\\">\\r\\n\\t\\t\\t\\t\\t<mat-grid-tile *ngFor=\\\"let tile of program\\\"\\r\\n\\t\\t\\t\\t\\t               [colspan]=\\\"tile.cols\\\"\\r\\n\\t\\t\\t\\t\\t               [rowspan]=\\\"tile.rows\\\"\\r\\n\\t\\t\\t\\t\\t               [style.background]=\\\"tile.color\\\"\\r\\n\\t\\t\\t\\t\\t               [style.color]=\\\"tile.fontColor\\\">\\r\\n\\t\\t\\t\\t\\t\\t{{tile.text}}\\r\\n\\t\\t\\t\\t\\t</mat-grid-tile>\\r\\n\\t\\t\\t\\t</mat-grid-list>\\r\\n\\r\\n\\t\\t\\t</mat-card-content>\\r\\n\\t\\t\\t<mat-card-actions>\\r\\n\\t\\t\\t\\t<div fxLayout\\r\\n\\t\\t\\t\\t     fxLayout.xs=\\\"row\\\"\\r\\n\\t\\t\\t\\t     fxLayoutAlign=\\\"center\\\"\\r\\n\\t\\t\\t\\t     fxLayoutGap=\\\"10px\\\"\\r\\n\\t\\t\\t\\t     fxLayoutGap.xs=\\\"0\\\">\\r\\n\\t\\t\\t\\t\\t<div fxFlex=\\\"35%\\\">\\r\\n\\t\\t\\t\\t\\t\\t<mat-form-field class=\\\"dashboardInput\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<mat-select placeholder=\\\"Department\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t            class=\\\"dashboardInput\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t            multiple>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-option value=\\\"317\\\">Milk</mat-option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-option value=\\\"751\\\">Crude Glycerine</mat-option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-option value=\\\"1122\\\">Py Wheat</mat-option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-option value=\\\"1260\\\">Ar Wheat</mat-option>\\r\\n\\t\\t\\t\\t\\t\\t\\t</mat-select>\\r\\n\\t\\t\\t\\t\\t\\t</mat-form-field>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div fxFlex=\\\"35%\\\">\\r\\n\\t\\t\\t\\t\\t\\t<mat-form-field class=\\\"dashboardInput\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<mat-select placeholder=\\\"Commodities\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t            class=\\\"dashboardInput\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t            multiple>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-option value=\\\"BAG_AR_\\\">BAG Empty Bags</mat-option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-option value=\\\"BAG_PP_\\\">BAG PP Bags</mat-option>\\r\\n\\t\\t\\t\\t\\t\\t\\t</mat-select>\\r\\n\\t\\t\\t\\t\\t\\t</mat-form-field>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div fxFlex=\\\"25%\\\"\\r\\n\\t\\t\\t\\t\\t     class=\\\"dashboardLinkContainer\\\">\\r\\n\\t\\t\\t\\t\\t\\t<mat-button class=\\\"dashboardLink\\\"\\r\\n\\t\\t\\t\\t\\t\\t            routerLink=\\\"/{{company}}/\\\">Overview ></mat-button>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</mat-card-actions>\\r\\n\\t\\t</mat-card>\\r\\n\\r\\n\\r\\n\\t</div>\\r\\n\\r\\n\\t<div fxLayout=\\\"row\\\"\\r\\n\\t     fxLayout.xs=\\\"column\\\"\\r\\n\\t     fxFlexFill\\r\\n\\t     fxLayoutGap=\\\"1rem\\\"\\r\\n\\t     fxLayoutAlign=\\\"start\\\"\\r\\n\\t     class=\\\"container\\\">\\r\\n\\r\\n\\t\\t<mat-card class=\\\"dashboard-card elevated-container \\\"\\r\\n\\t\\t          fxFlex>\\r\\n\\t\\t\\t<mat-card-header>\\r\\n\\t\\t\\t\\t<mat-card-title>Activity</mat-card-title>\\r\\n\\t\\t\\t</mat-card-header>\\r\\n\\t\\t\\t<mat-card-content>\\r\\n\\t\\t\\t\\t<canvas baseChart\\r\\n\\t\\t\\t\\t        [datasets]=\\\"activityBarChartData\\\"\\r\\n\\t\\t\\t\\t        [labels]=\\\"activityBarChartLabels\\\"\\r\\n\\t\\t\\t\\t        [options]=\\\"activityBarChartOptions\\\"\\r\\n\\t\\t\\t\\t        [legend]=\\\"activityBarChartLegend\\\"\\r\\n\\t\\t\\t\\t        [chartType]=\\\"activityBarChartType\\\"\\r\\n\\t\\t\\t\\t        [colors]=\\\"chartFlashColorsV2\\\"\\r\\n\\t\\t\\t\\t        (chartHover)=\\\"chartHovered($event)\\\"\\r\\n\\t\\t\\t\\t        (chartClick)=\\\"chartClicked($event)\\\"></canvas>\\r\\n\\t\\t\\t</mat-card-content>\\r\\n\\t\\t\\t<mat-card-actions>\\r\\n\\t\\t\\t\\t<div fxLayout\\r\\n\\t\\t\\t\\t     fxLayout.xs=\\\"row\\\"\\r\\n\\t\\t\\t\\t     fxLayoutAlign=\\\"center\\\"\\r\\n\\t\\t\\t\\t     fxLayoutGap=\\\"10px\\\"\\r\\n\\t\\t\\t\\t     fxLayoutGap.xs=\\\"0\\\">\\r\\n\\t\\t\\t\\t\\t<div fxFlex=\\\"35%\\\">\\r\\n\\t\\t\\t\\t\\t\\t<mat-form-field class=\\\"dashboardInput\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<mat-select placeholder=\\\"Department\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t            class=\\\"dashboardInput\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t            multiple>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-option value=\\\"317\\\">Milk</mat-option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-option value=\\\"751\\\">Crude Glycerine</mat-option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-option value=\\\"1122\\\">Py Wheat</mat-option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-option value=\\\"1260\\\">Ar Wheat</mat-option>\\r\\n\\t\\t\\t\\t\\t\\t\\t</mat-select>\\r\\n\\t\\t\\t\\t\\t\\t</mat-form-field>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div fxFlex=\\\"35%\\\">\\r\\n\\t\\t\\t\\t\\t\\t<mat-form-field class=\\\"dashboardInput\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<mat-select placeholder=\\\"Commodities\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t            class=\\\"dashboardInput\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t            multiple>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-option value=\\\"BAG_AR_\\\">BAG Empty Bags</mat-option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-option value=\\\"BAG_PP_\\\">BAG PP Bags</mat-option>\\r\\n\\t\\t\\t\\t\\t\\t\\t</mat-select>\\r\\n\\t\\t\\t\\t\\t\\t</mat-form-field>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div fxFlex=\\\"25%\\\"\\r\\n\\t\\t\\t\\t\\t     class=\\\"dashboardLinkContainer\\\">\\r\\n\\t\\t\\t\\t\\t\\t<mat-button class=\\\"dashboardLink\\\"\\r\\n\\t\\t\\t\\t\\t\\t            routerLink=\\\"/{{company}}/\\\">Overview ></mat-button>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</mat-card-actions>\\r\\n\\t\\t</mat-card>\\r\\n\\r\\n\\t\\t<mat-card class=\\\"dashboard-card elevated-container \\\"\\r\\n\\t\\t          fxFlex>\\r\\n\\t\\t\\t<mat-card-header>\\r\\n\\t\\t\\t\\t<mat-card-title>Action</mat-card-title>\\r\\n\\t\\t\\t</mat-card-header>\\r\\n\\t\\t\\t<mat-card-content>\\r\\n\\t\\t\\t\\t<mat-grid-list cols=\\\"2\\\">\\r\\n\\t\\t\\t\\t\\t<mat-grid-tile *ngFor=\\\"let tile of actions\\\"\\r\\n\\t\\t\\t\\t\\t               [colspan]=\\\"tile.cols\\\"\\r\\n\\t\\t\\t\\t\\t               [rowspan]=\\\"tile.rows\\\"\\r\\n\\t\\t\\t\\t\\t               [style.background]=\\\"tile.color\\\"\\r\\n\\t\\t\\t\\t\\t               [style.color]=\\\"tile.fontColor\\\">\\r\\n\\t\\t\\t\\t\\t\\t<h3>{{tile.text}}</h3>\\r\\n\\t\\t\\t\\t\\t</mat-grid-tile>\\r\\n\\t\\t\\t\\t</mat-grid-list>\\r\\n\\t\\t\\t</mat-card-content>\\r\\n\\t\\t\\t<mat-card-actions>\\r\\n\\t\\t\\t\\t<div fxLayout\\r\\n\\t\\t\\t\\t     fxLayout.xs=\\\"row\\\"\\r\\n\\t\\t\\t\\t     fxLayoutAlign=\\\"center\\\"\\r\\n\\t\\t\\t\\t     fxLayoutGap=\\\"10px\\\"\\r\\n\\t\\t\\t\\t     fxLayoutGap.xs=\\\"0\\\">\\r\\n\\t\\t\\t\\t\\t<div fxFlex=\\\"35%\\\">\\r\\n\\t\\t\\t\\t\\t\\t<mat-form-field class=\\\"dashboardInput\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<mat-select placeholder=\\\"Department\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t            class=\\\"dashboardInput\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t            multiple>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-option value=\\\"317\\\">Milk</mat-option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-option value=\\\"751\\\">Crude Glycerine</mat-option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-option value=\\\"1122\\\">Py Wheat</mat-option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-option value=\\\"1260\\\">Ar Wheat</mat-option>\\r\\n\\t\\t\\t\\t\\t\\t\\t</mat-select>\\r\\n\\t\\t\\t\\t\\t\\t</mat-form-field>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div fxFlex=\\\"35%\\\">\\r\\n\\t\\t\\t\\t\\t\\t<mat-form-field class=\\\"dashboardInput\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<mat-select placeholder=\\\"Commodities\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t            class=\\\"dashboardInput\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t            multiple>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-option value=\\\"BAG_AR_\\\">BAG Empty Bags</mat-option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-option value=\\\"BAG_PP_\\\">BAG PP Bags</mat-option>\\r\\n\\t\\t\\t\\t\\t\\t\\t</mat-select>\\r\\n\\t\\t\\t\\t\\t\\t</mat-form-field>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div fxFlex=\\\"25%\\\"\\r\\n\\t\\t\\t\\t\\t     class=\\\"dashboardLinkContainer\\\">\\r\\n\\t\\t\\t\\t\\t\\t<mat-button class=\\\"dashboardLink\\\"\\r\\n\\t\\t\\t\\t\\t\\t            routerLink=\\\"/{{company}}/\\\">Overview ></mat-button>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</mat-card-actions>\\r\\n\\t\\t</mat-card>\\r\\n\\r\\n\\r\\n\\t\\t<mat-card class=\\\"dashboard-card elevated-container \\\"\\r\\n\\t\\t          fxFlex>\\r\\n\\t\\t\\t<mat-card-header>\\r\\n\\t\\t\\t\\t<mat-card-title>Total Default Contracts</mat-card-title>\\r\\n\\t\\t\\t</mat-card-header>\\r\\n\\t\\t\\t<mat-card-content>\\r\\n\\t\\t\\t\\t<mat-grid-list cols=\\\"1\\\">\\r\\n\\t\\t\\t\\t\\t<mat-grid-tile *ngFor=\\\"let tile of contracts\\\"\\r\\n\\t\\t\\t\\t\\t               [colspan]=\\\"tile.cols\\\"\\r\\n\\t\\t\\t\\t\\t               [rowspan]=\\\"tile.rows\\\"\\r\\n\\t\\t\\t\\t\\t               [style.background]=\\\"tile.color\\\"\\r\\n\\t\\t\\t\\t\\t               [style.color]=\\\"tile.fontColor\\\"\\r\\n\\t\\t\\t\\t\\t               [style.font-size]=\\\"150\\\">\\r\\n\\t\\t\\t\\t\\t\\t{{tile.text}}\\r\\n\\t\\t\\t\\t\\t</mat-grid-tile>\\r\\n\\t\\t\\t\\t</mat-grid-list>\\r\\n\\t\\t\\t</mat-card-content>\\r\\n\\t\\t\\t<mat-card-actions>\\r\\n\\t\\t\\t\\t<div fxLayout\\r\\n\\t\\t\\t\\t     fxLayout.xs=\\\"row\\\"\\r\\n\\t\\t\\t\\t     fxLayoutAlign=\\\"center\\\"\\r\\n\\t\\t\\t\\t     fxLayoutGap=\\\"10px\\\"\\r\\n\\t\\t\\t\\t     fxLayoutGap.xs=\\\"0\\\">\\r\\n\\t\\t\\t\\t\\t<div fxFlex=\\\"35%\\\">\\r\\n\\t\\t\\t\\t\\t\\t<mat-form-field class=\\\"dashboardInput\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<mat-select placeholder=\\\"Department\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t            class=\\\"dashboardInput\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t            multiple>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-option value=\\\"317\\\">Milk</mat-option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-option value=\\\"751\\\">Crude Glycerine</mat-option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-option value=\\\"1122\\\">Py Wheat</mat-option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-option value=\\\"1260\\\">Ar Wheat</mat-option>\\r\\n\\t\\t\\t\\t\\t\\t\\t</mat-select>\\r\\n\\t\\t\\t\\t\\t\\t</mat-form-field>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div fxFlex=\\\"35%\\\">\\r\\n\\t\\t\\t\\t\\t\\t<mat-form-field class=\\\"dashboardInput\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<mat-select placeholder=\\\"Commodities\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t            class=\\\"dashboardInput\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t            multiple>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-option value=\\\"BAG_AR_\\\">BAG Empty Bags</mat-option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-option value=\\\"BAG_PP_\\\">BAG PP Bags</mat-option>\\r\\n\\t\\t\\t\\t\\t\\t\\t</mat-select>\\r\\n\\t\\t\\t\\t\\t\\t</mat-form-field>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div fxFlex=\\\"25%\\\"\\r\\n\\t\\t\\t\\t\\t     class=\\\"dashboardLinkContainer\\\">\\r\\n\\t\\t\\t\\t\\t\\t<mat-button class=\\\"dashboardLink\\\"\\r\\n\\t\\t\\t\\t\\t\\t            routerLink=\\\"/{{company}}/\\\">Overview ></mat-button>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</mat-card-actions>\\r\\n\\t\\t</mat-card>\\r\\n\\r\\n\\r\\n\\t</div>\\r\\n\\r\\n</div>\\r\\n\"","module.exports = \".dashboardInput {\\n  font-size: 12px;\\n  width: 95%; }\\n\\n.dashboardLink {\\n  font-size: 12px;\\n  font-weight: bold;\\n  color: #2196f3;\\n  cursor: pointer; }\\n\\n.dashboardLinkContainer {\\n  padding-top: 10px;\\n  text-align: inherit; }\\n\\n.mat-card-title {\\n  font-weight: 400;\\n  font-size: 18px;\\n  color: #305670;\\n  cursor: pointer; }\\n\\n.mat-card-content {\\n  align-content: center;\\n  text-align: center;\\n  margin-bottom: 0px; }\\n\\n.mat-card {\\n  padding: 12px; }\\n\\n.mat-card-actions {\\n  margin-left: 0px; }\\n\\ncanvas {\\n  width: 100% !important;\\n  height: 100% !important;\\n  align-content: center;\\n  text-align: center;\\n  cursor: pointer; }\\n\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { MatSnackBar } from \"@angular/material\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\n//import { ChartsModule } from \"ng2-charts\";\r\nimport { Chart } from \"chart.js\";\r\nimport { map } from \"rxjs/operators\";\r\n\r\n@Component({\r\n\tselector: \"atr-trading-dashboard\",\r\n\ttemplateUrl: \"./trading-dashboard.component.html\",\r\n\tstyleUrls: [\"./trading-dashboard.component.scss\"]\r\n})\r\nexport class TradingDashboardComponent implements OnInit {\r\n\r\n\tcompany: string;\r\n\r\n\tconstructor(private router: Router, private snackBar: MatSnackBar, private route: ActivatedRoute) { }\r\n\r\n\tngOnInit() {\r\n\t\tthis.route.paramMap.pipe(\r\n\t\t\tmap((params) => params['company']))\r\n\t\t\t.subscribe((company) => {\r\n\t\t\t\tthis.company = company;\r\n\t\t\t});\r\n\t}\r\n\r\n\tpublic whiteColors: Array<any> = [\r\n\t\t{ // white\r\n\t\t\tbackgroundColor: \"rgba(255,255,255,1)\",\r\n\t\t\tborderColor: \"rgba(255,255,255,1)\",\r\n\t\t\tpointBackgroundColor: \"rgba(255,255,255,1)\",\r\n\t\t\tpointBorderColor: \"rgba(255,255,255,1)\",\r\n\t\t\tpointHoverBackgroundColor: \"rgba(255,255,255,1)\",\r\n\t\t\tpointHoverBorderColor: \"rgba(255,255,255,1)\",\r\n\t\t},\r\n\t\t{ // white\r\n\t\t\tbackgroundColor: \"rgba(255,255,255,1)\",\r\n\t\t\tborderColor: \"rgba(255,255,255,1)\",\r\n\t\t\tpointBackgroundColor: \"rgba(255,255,255,1)\",\r\n\t\t\tpointBorderColor: \"rgba(255,255,255,1)\",\r\n\t\t\tpointHoverBackgroundColor: \"rgba(255,255,255,1)\",\r\n\t\t\tpointHoverBorderColor: \"rgba(255,255,255,1)\",\r\n\t\t}\r\n\t];\r\n\r\n\r\n\tpublic chartFlashColorsV2: Array<any> = [\r\n\t\t{ // red flash\r\n\t\t\tbackgroundColor: \"rgba(155,54,65,1)\",\r\n\t\t\tborderColor: \"rgba(155,54,65,1)\",\r\n\t\t\tpointBackgroundColor: \"rgba(155,54,65,1)\",\r\n\t\t\tpointBorderColor: \"rgba(155,54,65,1)\",\r\n\t\t\tpointHoverBackgroundColor: \"rgba(155,54,65,1)\",\r\n\t\t\tpointHoverBorderColor: \"rgba(155,54,65,1)\",\r\n\t\t},\r\n\t\t{ // green flash\r\n\t\t\tbackgroundColor: \"rgba(55,154,141,1)\",\r\n\t\t\tborderColor: \"rgba(55,154,141,1)\",\r\n\t\t\tpointBackgroundColor: \"rgba(55,154,141,1)\",\r\n\t\t\tpointBorderColor: \"rgba(55,154,141,1)\",\r\n\t\t\tpointHoverBackgroundColor: \"rgba(55,154,141,1)\",\r\n\t\t\tpointHoverBorderColor: \"rgba(55,154,141,1)\",\r\n\t\t}\r\n\t];\r\n\r\n\tpublic chartFlashColors: Array<any> = [\r\n\t\t{ // green flash\r\n\t\t\tbackgroundColor: \"rgba(84,127,136,1)\",\r\n\t\t\tborderColor: \"rgba(84,127,136,1)\",\r\n\t\t\tpointBackgroundColor: \"rgba(84,127,136,1)\",\r\n\t\t\tpointBorderColor: \"rgba(84,127,136,1)\",\r\n\t\t\tpointHoverBackgroundColor: \"rgba(84,127,136,1)\",\r\n\t\t\tpointHoverBorderColor: \"rgba(84,127,136,1)\"\r\n\t\t},\r\n\t\t{ // violet flash\r\n\t\t\tbackgroundColor: \"rgba(144,64,141,1)\",\r\n\t\t\tborderColor: \"rgba(144,64,141,1)\",\r\n\t\t\tpointBackgroundColor: \"rgba(144,64,141,1)\",\r\n\t\t\tpointBorderColor: \"rgba(144,64,141,1)\",\r\n\t\t\tpointHoverBackgroundColor: \"rgba(144,64,141,1)\",\r\n\t\t\tpointHoverBorderColor: \"rgba(144,64,141,1)\",\r\n\t\t}\r\n\t];\r\n\r\n\tpublic violetColor: Array<any> = [\r\n\t\t{ // violet\r\n\t\t\tbackgroundColor: \"rgba(94,105,158,1)\",\r\n\t\t\tborderColor: \"rgba(94,105,158,1)\",\r\n\t\t\tpointBackgroundColor: \"rgba(94,105,158,1)\",\r\n\t\t\tpointBorderColor: \"rgba(94,105,158,1)\",\r\n\t\t\tpointHoverBackgroundColor: \"rgba(94,105,158,1)\",\r\n\t\t\tpointHoverBorderColor: \"rgba(94,105,158,1)\",\r\n\t\t}\r\n\t];\r\n\r\n\tpublic chartColors: Array<any> = [\r\n\t\t{ // blue\r\n\t\t\tbackgroundColor: \"rgba(167,197,226,1)\",\r\n\t\t\tborderColor: \"rgba(167,197,226,1)\",\r\n\t\t\tpointBackgroundColor: \"rgba(167,197,226,1)\",\r\n\t\t\tpointBorderColor: \"rgba(167,197,226,1)\",\r\n\t\t\tpointHoverBackgroundColor: \"rgba(167,197,226,1)\",\r\n\t\t\tpointHoverBorderColor: \"rgba(167,197,226,1)\"\r\n\t\t},\r\n\t\t{ // green\r\n\t\t\tbackgroundColor: \"rgba(151,177,80,1)\",\r\n\t\t\tborderColor: \"rgba(151,177,80,1)\",\r\n\t\t\tpointBackgroundColor: \"rgba(151,177,80,1)\",\r\n\t\t\tpointBorderColor: \"rgba(151,177,80,1)\",\r\n\t\t\tpointHoverBackgroundColor: \"rgba(151,177,80,1)\",\r\n\t\t\tpointHoverBorderColor: \"rgba(151,177,80,1)\"\r\n\t\t},\r\n\t\t{ // violet\r\n\t\t\tbackgroundColor: \"rgba(94,105,158,1)\",\r\n\t\t\tborderColor: \"rgba(94,105,158,1)\",\r\n\t\t\tpointBackgroundColor: \"rgba(94,105,158,1)\",\r\n\t\t\tpointBorderColor: \"rgba(94,105,158,1)\",\r\n\t\t\tpointHoverBackgroundColor: \"rgba(94,105,158,1)\",\r\n\t\t\tpointHoverBorderColor: \"rgba(94,105,158,1)\",\r\n\t\t}\r\n\t];\r\n\r\n\t//P&L\r\n\tpublic plBarChartOptions: any = {\r\n\t\tscaleShowVerticalLines: false,\r\n\t\tresponsive: false,\r\n\t\ttooltips: true,\r\n\t\tevents: [\"click\"],\r\n\t\tlegend: { display: true },\r\n\t\tlayout: {\r\n\t\t\tpadding: {\r\n\t\t\t\tleft: 0,\r\n\t\t\t\tright: 0,\r\n\t\t\t\ttop: 0,\r\n\t\t\t\tbottom: 0\r\n\t\t\t}\r\n\t\t},\r\n\t\tscales: {\r\n\t\t\tyAxes: [{\r\n\t\t\t\tdisplay: true,\r\n\t\t\t\tticks: {\r\n\t\t\t\t\tbeginAtZero: true\r\n\t\t\t\t},\r\n\t\t\t\tstacked: true,\r\n\t\t\t\tgridLines: {\r\n\t\t\t\t\tdisplay: false\r\n\t\t\t\t}\r\n\t\t\t}],\r\n\t\t\txAxes: [{\r\n\t\t\t\tdisplay: true,\r\n\t\t\t\tstacked: true,\r\n\t\t\t\tgridLines: {\r\n\t\t\t\t\tdisplay: false\r\n\t\t\t\t}\r\n\r\n\t\t\t}]\r\n\t\t},\r\n\t\tanimation: {\r\n\t\t\tonComplete: function () {\r\n\t\t\t\tvar chartInstance = this.chart;\r\n\t\t\t\tvar ctx = chartInstance.ctx;\r\n\t\t\t\tvar height = chartInstance.controller.boxes[0].bottom;\r\n\t\t\t\tctx.font = \"Roboto 13px  bold\";\r\n\t\t\t\tctx.textAlign = \"center\";\r\n\t\t\t\tctx.fillStyle = '#ffffff';\r\n\t\t\t\tChart.helpers.each(this.data.datasets.forEach(function (dataset, i) {\r\n\t\t\t\t\tvar meta = chartInstance.controller.getDatasetMeta(i);\r\n\t\t\t\t\tChart.helpers.each(meta.data.forEach(function (bar, index) {\r\n\t\t\t\t\t\tctx.fillText(dataset.data[index], bar._model.x, height - ((height - bar._model.y)) + 20);\r\n\t\t\t\t\t}), this);\r\n\t\t\t\t}), this);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tpublic plBarChartLabels: string[] = [\"YTD\", \"MTD\", \"Δ 5 Days\", \"Δ 1 Days\"];\r\n\tpublic plBarChartType: string = \"bar\";\r\n\tpublic plBarChartLegend: boolean = true;\r\n\tpublic plBarChartData: any[] = [\r\n\t\t{ data: [310, 310, 70, 80], label: \"Open\", datalabels: { align: \"center\", anchor: \"center\" } },\r\n\t\t{ data: [403, 300, 81, 80], label: \"Realised\", datalabels: { align: \"center\", anchor: \"center\" } }\r\n\t];\r\n\r\n\t//open positions and stock\r\n\tpublic openAndStockBarChartOptions: any = {\r\n\t\tscaleShowVerticalLines: false,\r\n\t\tresponsive: false,\r\n\t\ttooltips: false,\r\n\t\tevents: [\"click\"],\r\n\t\tlegend: { display: false },\r\n\t\tlayout: {\r\n\t\t\tpadding: {\r\n\t\t\t\tleft: 0,\r\n\t\t\t\tright: 0,\r\n\t\t\t\ttop: 0,\r\n\t\t\t\tbottom: 0\r\n\t\t\t}\r\n\t\t},\r\n\t\tscales: {\r\n\t\t\tyAxes: [{\r\n\t\t\t\tdisplay: true,\r\n\t\t\t\tticks: {\r\n\t\t\t\t\tbeginAtZero: true\r\n\t\t\t\t},\r\n\t\t\t\tstacked: true,\r\n\t\t\t\tgridLines: {\r\n\t\t\t\t\tdisplay: false\r\n\t\t\t\t}\r\n\t\t\t}],\r\n\t\t\txAxes: [{\r\n\t\t\t\tdisplay: true,\r\n\t\t\t\tstacked: true,\r\n\t\t\t\tgridLines: {\r\n\t\t\t\t\tdisplay: false\r\n\t\t\t\t}\r\n\r\n\t\t\t}]\r\n\t\t},\r\n\t};\r\n\r\n\tpublic openAndStockBarChartLabels: string[] = [\"Nov\", \"Dec\", \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\"];\r\n\tpublic openAndStockBarChartType: string = \"bar\";\r\n\tpublic openAndStockBarChartLegend: boolean = true;\r\n\tpublic openAndStockBarChartData: any[] = [\r\n\t\t{ data: [25, 38, 40, 47, 30, 20, 10], label: \"Rapeseed\", datalabels: { align: \"center\", anchor: \"center\" } },\r\n\t\t{ data: [-20, -30, -40, -30, -20, -15, -5], label: \"Rapemeal\", datalabels: { align: \"center\", anchor: \"center\" } },\r\n\t\t{ data: [10, 15, 30, 20, 10, 15, 5], label: \"Rapeseed Oil\", datalabels: { align: \"center\", anchor: \"center\" } }\r\n\t];\r\n\r\n\t//activity\r\n\tpublic activityBarChartOptions: any = {\r\n\t\tscaleShowVerticalLines: false,\r\n\t\tresponsive: false,\r\n\t\ttooltips: false,\r\n\t\tevents: [\"click\"],\r\n\t\tlegend: { display: false },\r\n\t\tlayout: {\r\n\t\t\tpadding: {\r\n\t\t\t\tleft: 0,\r\n\t\t\t\tright: 0,\r\n\t\t\t\ttop: 0,\r\n\t\t\t\tbottom: 0\r\n\t\t\t}\r\n\t\t},\r\n\t\tscales: {\r\n\t\t\tyAxes: [{\r\n\t\t\t\tticks: {\r\n\t\t\t\t\tbeginAtZero: true\r\n\t\t\t\t},\r\n\t\t\t\tdisplay: false\r\n\t\t\t}],\r\n\t\t\txAxes: [{\r\n\t\t\t\tdisplay: false,\r\n\r\n\t\t\t}]\r\n\t\t},\r\n\t\tanimation: {\r\n\t\t\tonComplete: function () {\r\n\t\t\t\tvar chartInstance = this.chart;\r\n\t\t\t\tvar ctx = chartInstance.ctx;\r\n\t\t\t\tvar height = chartInstance.controller.boxes[0].bottom;\r\n\t\t\t\tctx.font = \"70px Roboto\";\r\n\t\t\t\tctx.textAlign = \"center\";\r\n\t\t\t\tctx.fillStyle = \"#ffffff\";\r\n\t\t\t\tChart.helpers.each(this.data.datasets.forEach(function (dataset, i) {\r\n\t\t\t\t\tvar meta = chartInstance.controller.getDatasetMeta(i);\r\n\t\t\t\t\tChart.helpers.each(meta.data.forEach(function (bar, index) {\r\n\t\t\t\t\t\tctx.fillText(dataset.data[index], bar._model.x, height - ((height - bar._model.y) / 2) - 10);\r\n\t\t\t\t\t}), this);\r\n\t\t\t\t}), this);\r\n\t\t\t\tvar ctxLabel = chartInstance.ctx;\r\n\t\t\t\tctxLabel.font = \"13px Roboto\";\r\n\t\t\t\tctxLabel.textAlign = \"center\";\r\n\t\t\t\tctxLabel.fillStyle = \"#ffffff\";\r\n\r\n\t\t\t\tChart.helpers.each(this.data.datasets.forEach(function (dataset, i) {\r\n\t\t\t\t\tvar meta = chartInstance.controller.getDatasetMeta(i);\r\n\t\t\t\t\tChart.helpers.each(meta.data.forEach(function (bar, index) {\r\n\r\n\t\t\t\t\t\tctxLabel.fillText(bar._model.datasetLabel, bar._model.x, height - ((height - bar._model.y) / 2) - 75);\r\n\r\n\t\t\t\t\t}), this);\r\n\t\t\t\t}), this);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tpublic activityBarChartLabels: string[] = ['MissingInvoices'];\r\n\tpublic activityBarChartType: string = 'bar';\r\n\tpublic activityBarChartLegend: boolean = true;\r\n\tpublic activityBarChartData: any[] = [\r\n\t\t{ data: [250], label: 'New Trades', datalabels: { align: 'center', anchor: 'center' } },\r\n\t\t{ data: [204], label: 'Trades amended', datalabels: { align: 'center', anchor: 'center' } }\r\n\t];\r\n\tpublic contracts = [\r\n\t\t{ text: '98', cols: 1, rows: 1, fontColor: 'rgba(151, 177, 80, 1)', color: '#ffffff' }\r\n\t];\r\n\r\n\tpublic actions = [\r\n\t\t{ text: '7', cols: 1, rows: 1, fontColor: '#ffffff', color: 'rgba(55, 154, 141, 1)' },\r\n\t\t{ text: '25', cols: 1, rows: 1, fontColor: '#ffffff', color: 'rgba(151, 177, 80, 1)' },\r\n\t\t{ text: '20', cols: 1, rows: 1, fontColor: '#ffffff', color: 'rgba(94, 105, 158, 1)' },\r\n\t\t{ text: '15', cols: 1, rows: 1, fontColor: '#ffffff', color: 'rgba(93, 74, 95, 1)' },\r\n\t];\r\n\tpublic program = [\r\n\t\t{ text: 'Port', cols: 1, rows: 1, color: '#5d4a5f', fontColor: '#ffffff' },\r\n\t\t{ text: 'Jan', cols: 1, rows: 1, color: '#003300', fontColor: '#ffffff' },\r\n\t\t{ text: 'Feb', cols: 1, rows: 1, color: '#003300', fontColor: '#ffffff' },\r\n\t\t{ text: 'Mar', cols: 1, rows: 1, color: '#003300', fontColor: '#ffffff' },\r\n\t\t{ text: 'Apr', cols: 1, rows: 1, color: '#003300', fontColor: '#ffffff' },\r\n\t\t{ text: 'May', cols: 1, rows: 1, color: '#003300', fontColor: '#ffffff' },\r\n\r\n\t\t{ text: 'Odessa', cols: 1, rows: 1, color: '#5d4a5f', fontColor: '#ffffff' },\r\n\t\t{ text: '24 MT', cols: 1, rows: 1, color: '#d7ebe8', fontColor: '#000000' },\r\n\t\t{ text: '39 MT', cols: 1, rows: 1, color: '#b1d8d3', fontColor: '#000000' },\r\n\t\t{ text: '50 MT', cols: 1, rows: 1, color: '#379a8d', fontColor: '#ffffff' },\r\n\t\t{ text: '50 MT', cols: 1, rows: 1, color: '#379a8d', fontColor: '#ffffff' },\r\n\t\t{ text: '20 MT', cols: 1, rows: 1, color: '#d7ebe8', fontColor: '#000000' },\r\n\r\n\t\t{ text: 'Yuzhny', cols: 1, rows: 1, color: '#5d4a5f', fontColor: '#ffffff' },\r\n\t\t{ text: '24 MT', cols: 1, rows: 1, color: '#d7ebe8', fontColor: '#000000' },\r\n\t\t{ text: '39 MT', cols: 1, rows: 1, color: '#b1d8d3', fontColor: '#000000' },\r\n\t\t{ text: '50 MT', cols: 1, rows: 1, color: '#379a8d', fontColor: '#ffffff' },\r\n\t\t{ text: '50 MT', cols: 1, rows: 1, color: '#379a8d', fontColor: '#ffffff' },\r\n\t\t{ text: '20 MT', cols: 1, rows: 1, color: '#d7ebe8', fontColor: '#000000' },\r\n\r\n\t\t{ text: 'Novo', cols: 1, rows: 1, color: '#5d4a5f', fontColor: '#ffffff' },\r\n\t\t{ text: '20 MT', cols: 1, rows: 1, color: '#d7ebe8', fontColor: '#000000' },\r\n\t\t{ text: '50 MT', cols: 1, rows: 1, color: '#379a8d', fontColor: '#ffffff' },\r\n\t\t{ text: '50 MT', cols: 1, rows: 1, color: '#379a8d', fontColor: '#ffffff' },\r\n\t\t{ text: '39 MT', cols: 1, rows: 1, color: '#b1d8d3', fontColor: '#000000' },\r\n\t\t{ text: '39 MT', cols: 1, rows: 1, color: '#b1d8d3', fontColor: '#000000' },\r\n\r\n\t\t{ text: 'Kavkaz', cols: 1, rows: 1, color: '#5d4a5f', fontColor: '#ffffff' },\r\n\t\t{ text: '20 MT', cols: 1, rows: 1, color: '#d7ebe8', fontColor: '#000000' },\r\n\t\t{ text: '39 MT', cols: 1, rows: 1, color: '#b1d8d3', fontColor: '#000000' },\r\n\t\t{ text: '39 MT', cols: 1, rows: 1, color: '#b1d8d3', fontColor: '#000000' },\r\n\t\t{ text: '50 MT', cols: 1, rows: 1, color: '#379a8d', fontColor: '#ffffff' },\r\n\t\t{ text: '50 MT', cols: 1, rows: 1, color: '#379a8d', fontColor: '#ffffff' },\r\n\t];\r\n\r\n\t// events\r\n\tpublic chartClicked(e: any): void {\r\n\t\tthis.snackBar.open('This feature is under development...coming soon', '', {\r\n\t\t\tduration: 4000,\r\n\t\t\tverticalPosition: 'top',\r\n\t\t});\r\n\t}\r\n\r\n\tpublic chartHovered(e: any): void {\r\n\t}\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  declarations: []\r\n})\r\nexport class MdmModule { }\r\n","module.exports = \"<button *ngIf=\\\"showIcon\\\"\\r\\n        type=\\\"button\\\"\\r\\n        mat-icon-button\\r\\n        (click)=\\\"onClickEvent($event)\\\"\\r\\n        [disabled]=\\\"isDisabled\\\"\\r\\n        [matMenuTriggerFor]=\\\"menu\\\">\\r\\n    <i class=\\\"material-icons\\\">more_vert</i>\\r\\n</button>\\r\\n<mat-menu #menu=\\\"matMenu\\\">\\r\\n    <button *ngFor=\\\"let action of menuActions\\\"\\r\\n            [disabled]=\\\"action.disabled\\\"\\r\\n            mat-menu-item\\r\\n            (click)=\\\"onActionButtonClicked(action, $event)\\\">\\r\\n        <mat-icon>{{action.icon}}</mat-icon><span>{{ action.text }}</span>\\r\\n    </button>\\r\\n</mat-menu>\"","module.exports = \".mat-icon-button {\\n  width: 24px;\\n  height: 24px;\\n  line-height: 24px; }\\n\"","import { Component } from '@angular/core';\r\nimport { ICellRendererAngularComp } from 'ag-grid-angular';\r\nimport { IAfterGuiAttachedParams } from 'ag-grid-community';\r\nimport { AgContextualMenuAction } from '../../entities/ag-contextual-menu-action.entity';\r\n\r\n@Component({\r\n    selector: 'atr-ag-contextual-menu',\r\n    templateUrl: './ag-contextual-menu.component.html',\r\n    styleUrls: ['./ag-contextual-menu.component.scss'],\r\n})\r\n/*{\r\n\t\t\theaderName: \"\",\r\n\t\t\tcellRendererFramework: AgContextualMenuComponent,\r\n\t\t\tcellRendererParams: {\r\n\t\t\t\tcontext: {\r\n\t\t\t\t\tcomponentParent: this,\r\n\t\t\t\t},\r\n\t\t\t\tmenuActions: [{\r\n\t\t\t\t\t\ticon:'',\r\n\t\t\t\t\t\ttext: 'Delete Item',\r\n\t\t\t\t\t\taction: 'Delete'\r\n\t\t\t\t}]\r\n\t\t\t},\r\n\t\t\tmaxWidth: 80,\r\n}*/\r\n\r\nexport class AgContextualMenuComponent implements ICellRendererAngularComp {\r\n    params: any;\r\n    menuActions: AgContextualMenuAction[] = [];\r\n    showIcon: boolean = true;\r\n    isDisabled: boolean = false;\r\n    dottedLineSelection: boolean = true;\r\n    constructor() { }\r\n\r\n    agInit(params: any) {\r\n        this.params = params;\r\n        if (params.showIcon === false) {\r\n            this.showIcon = params.showContextualSearchIcon;\r\n        }\r\n        if (typeof params.isDisabled === 'boolean') {\r\n            this.isDisabled = params.isDisabled;\r\n        }\r\n        if (typeof params.isDisabled === 'function') {\r\n            this.isDisabled = params.isDisabled(this.params);\r\n        }\r\n        this.menuActions = [];\r\n        if (!params.menuActions) {\r\n            return;\r\n        }\r\n        params.menuActions.forEach((element) => {\r\n            let itemDisabled = false;\r\n            if (typeof element.disabled === 'boolean') {\r\n                itemDisabled = element.disabled;\r\n            }\r\n            if (typeof element.disabled === 'function') {\r\n                itemDisabled = element.disabled(this.params);\r\n            }\r\n            this.menuActions.push(\r\n                {\r\n                    icon: element.icon,\r\n                    text: element.text,\r\n                    action: element.action,\r\n                    disabled: itemDisabled,\r\n                },\r\n            );\r\n        });\r\n    }\r\n\r\n    // !!! Parent Component should have a function called handleAction!!\r\n    // @params : string\r\n    // @params : object that is treated by the parent\r\n    onActionButtonClicked(menuAction: AgContextualMenuAction, event: Event) {\r\n        this.params.context.componentParent.handleAction(menuAction.action, this.params.data);\r\n        event.stopPropagation();\r\n    }\r\n\r\n    refresh(params: any): boolean {\r\n        return false;\r\n    }\r\n\r\n    afterGuiAttached?(params?: IAfterGuiAttachedParams): void {\r\n    }\r\n\r\n    onClickEvent(event: any) {\r\n        if (!this.dottedLineSelection)\r\n            event.stopPropagation();\r\n    }\r\n}\r\n","module.exports = \"<div class=\\\"container\\\">\\r\\n    <div fxLayout=\\\"column\\\">\\r\\n        <div fxLayout=\\\"row\\\"\\r\\n             fxLayoutGap=\\\"10px\\\"\\r\\n             fxLayoutAlign=\\\"left start\\\">\\r\\n            <div>{{headerName}}</div>\\r\\n\\r\\n            <mat-icon matSuffix\\r\\n                      class=\\\"split-icon\\\"\\r\\n                      (click)=\\\"onIconClicked($event)\\\">call_split</mat-icon>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","module.exports = \".split-icon {\\n  display: contents;\\n  cursor: pointer; }\\n\"","import { Component } from '@angular/core';\r\nimport { AgRendererComponent } from 'ag-grid-angular';\r\n\r\n@Component({\r\n    selector: 'atlas-ag-grid-accrual-number',\r\n    templateUrl: './ag-grid-accrual-number.component.html',\r\n    styleUrls: ['./ag-grid-accrual-number.component.scss'],\r\n})\r\nexport class AgGridAccrualNumberComponent implements AgRendererComponent {\r\n\r\n    headerName: string;\r\n    dataLoader: any;\r\n    params: any;\r\n\r\n    constructor() { }\r\n\r\n    agInit(params: any): void {\r\n        this.headerName = params.headerName;\r\n        this.params = params;\r\n    }\r\n\r\n    refresh(params: any): boolean {\r\n        return false;\r\n    }\r\n\r\n    onIconClicked(event) {\r\n        let subAmountTotal: number = 0;\r\n        let accrualNumber: number = 0;\r\n        this.params.api.forEachNode((rowData) => {\r\n            if (rowData.data.isDirty && rowData.data.amount) {\r\n                if (subAmountTotal !== 0) {\r\n                    rowData.setDataValue('accrualNumber', accrualNumber);\r\n                    subAmountTotal = subAmountTotal + rowData.data.amount;\r\n                } else {\r\n                    accrualNumber++;\r\n                    rowData.setDataValue('accrualNumber', accrualNumber);\r\n                    subAmountTotal = rowData.data.amount;\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n}\r\n","module.exports = \"<mat-checkbox type=\\\"checkbox\\\"\\r\\n              [(ngModel)]=\\\"isChecked\\\"\\r\\n              (ngModelChange)=\\\"onChange($event)\\\"\\r\\n              [disabled]=\\\"disabled\\\"></mat-checkbox>\\r\\n\"","module.exports = \"\"","import { Component } from '@angular/core';\r\nimport { AgRendererComponent } from 'ag-grid-angular';\r\nimport { IAfterGuiAttachedParams, ICellRendererParams } from 'ag-grid-community';\r\nimport { CheckboxCellRendererParams } from './checkbox-cell-renderer-params';\r\n\r\n@Component({\r\n    selector: 'atlas-ag-grid-checkbox',\r\n    templateUrl: './ag-grid-checkbox.component.html',\r\n    styleUrls: ['./ag-grid-checkbox.component.scss'],\r\n})\r\nexport class AgGridCheckboxComponent implements AgRendererComponent {\r\n\r\n    private _params: ICellRendererParams;\r\n    public isChecked: boolean;\r\n    private editableFunc;\r\n\r\n    disabled: boolean;\r\n\r\n    get params() {\r\n        return this._params;\r\n    }\r\n\r\n    agInit(params: ICellRendererParams | CheckboxCellRendererParams): void {\r\n        this._params = params as ICellRendererParams;\r\n\r\n        const checkboxParams = params as CheckboxCellRendererParams;\r\n        this.isChecked = this.params.data[this.params.colDef.field];\r\n        this.disabled = false;\r\n\r\n        if (typeof checkboxParams.disabled === 'boolean') {\r\n            this.disabled = checkboxParams.disabled;\r\n        }\r\n\r\n        if (typeof checkboxParams.disabled === 'function') {\r\n            this.editableFunc = checkboxParams.disabled;\r\n            this.disabled = this.editableFunc();\r\n        }\r\n    }\r\n\r\n    onChange(checked: boolean) {\r\n        this.isChecked = checked;\r\n        this.params.node.setDataValue(this.params.colDef.colId, checked);\r\n    }\r\n\r\n    refresh(params: any): boolean {\r\n        if (this.editableFunc) {\r\n            this.disabled = this.editableFunc();\r\n        }\r\n        return true;\r\n    }\r\n}\r\n","module.exports = \"<a mat-icon-button\\r\\n   (click)='onCopyIconClick()'>\\r\\n    <mat-icon>file_copy</mat-icon>\\r\\n</a>\\r\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\nimport { ICellRendererAngularComp } from 'ag-grid-angular';\r\n\r\n@Component({\r\n    selector: 'atlas-ag-grid-copy-icon',\r\n    templateUrl: './ag-grid-copy-icon.component.html',\r\n    styleUrls: ['./ag-grid-copy-icon.component.scss']\r\n})\r\nexport class AgGridCopyIconComponent implements OnInit {\r\n\r\n    copiedContent: string;\r\n\r\n    constructor() { }\r\n    agInit(params: any): void {\r\n        this.copiedContent = params.value as string;\r\n    }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n    refresh(): boolean {\r\n        return false;\r\n    }\r\n\r\n    public onCopyIconClick() {\r\n        let selBox = document.createElement('textarea');\r\n        selBox.style.position = 'fixed';\r\n        selBox.style.left = '0';\r\n        selBox.style.top = '0';\r\n        selBox.style.opacity = '0';\r\n        selBox.value = this.copiedContent;\r\n        document.body.appendChild(selBox);\r\n        selBox.focus();\r\n        selBox.select();\r\n        document.execCommand('copy');\r\n        document.body.removeChild(selBox);\r\n    }\r\n\r\n}\r\n","module.exports = \"<a (click)='invokeParentMethod()'\\r\\n   class=\\\"contract-reference-link\\\"\\r\\n   *ngIf=\\\"hyperLinkRequired; else noHyperLink\\\">{{this.params.value}} </a>\\r\\n<ng-template #noHyperLink>\\r\\n    <span>{{this.params.value}} </span></ng-template>\"","module.exports = \".contract-reference-link {\\n  color: #0000EE;\\n  text-decoration: underline;\\n  cursor: pointer; }\\n\"","import { Component } from '@angular/core';\r\nimport { ICellRendererAngularComp } from 'ag-grid-angular';\r\n@Component({\r\n    selector: 'atlas-ag-grid-hyperlink-for-accountentries',\r\n    templateUrl: './ag-grid-hyperlink-for-accountentries.component.html',\r\n    styleUrls: ['./ag-grid-hyperlink-for-accountentries.component.scss'],\r\n})\r\nexport class AgGridHyperlinkForAccountentriesComponent implements ICellRendererAngularComp {\r\n\r\n    public params: any;\r\n    public gridId: any;\r\n    public columnId: String;\r\n    public hyperLinkRequired: boolean = true;\r\n    constructor() { }\r\n    agInit(params: any): void {\r\n        this.params = params;\r\n        this.gridId = params.gridId;\r\n        this.columnId = params.columnId;\r\n        if (this.params.data.documentType === 'Accruals' || this.params.data.documentType === 'Revaluation') {\r\n            this.hyperLinkRequired = false;\r\n        }\r\n    }\r\n\r\n    public invokeParentMethod() {\r\n        if (this.gridId === 'accountingEntriesGrid') {\r\n            this.params.context.componentParent.hyperlinkClickedforAccounting(this.params.data, this.columnId);\r\n        }\r\n    }\r\n\r\n    refresh(): boolean {\r\n        return false;\r\n    }\r\n}\r\n","module.exports = \"<a (click)='invokeParentMethod()'\\r\\n   class=\\\"contract-reference-link\\\">{{this.params.value}} </a>\"","module.exports = \".contract-reference-link {\\n  color: #0000EE;\\n  text-decoration: underline;\\n  cursor: pointer; }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ICellRendererAngularComp } from 'ag-grid-angular';\r\n\r\n@Component({\r\n    selector: 'atlas-ag-grid-hyperlink-for-tradechildsections',\r\n    templateUrl: './ag-grid-hyperlink-for-tradechildsections.component.html',\r\n    styleUrls: ['./ag-grid-hyperlink-for-tradechildsections.component.scss']\r\n})\r\nexport class AgGridHyperlinkForTradechildsectionsComponent implements ICellRendererAngularComp {\r\n\r\n    public params: any;\r\n    public gridId: any;\r\n    public columnId: String;\r\n    constructor() { }\r\n    agInit(params: any): void {\r\n        this.params = params;\r\n        this.gridId = params.gridId;\r\n        this.columnId = params.columnId;\r\n    }\r\n\r\n    public invokeParentMethod() {\r\n        if (this.gridId === \"tradeChildSectionListGrid\") {\r\n            this.params.context.componentParent.hyperlinkClickedforTradeChildSections(this.params.data, this.columnId);\r\n        }\r\n    }\r\n\r\n    refresh(): boolean {\r\n        return false;\r\n    }\r\n\r\n}\r\n","module.exports = \"<mat-icon matSuffix\\r\\n          *ngIf=\\\"isImageCellRendererLoaded()\\\"\\r\\n          [ngClass]=\\\"classAppliedIcon\\\">{{this.icon}}</mat-icon>\\r\\n<a (click)='invokeParentMethod($event)'\\r\\n   [ngClass]=\\\"classApplied\\\">{{this.params.value}} </a>\"","module.exports = \".contract-reference-link {\\n  color: rgba(0, 0, 0, 0.7);\\n  text-decoration: underline;\\n  cursor: pointer; }\\n\\n.disable-url-click-green {\\n  color: green; }\\n\\n.disable-url-click-orange {\\n  color: orange; }\\n\\n.disable-url-click-red {\\n  color: red; }\\n\\n.icon-click-green {\\n  color: green !important; }\\n\\n.icon-click-orange {\\n  color: orange !important; }\\n\\n.icon-click-red {\\n  color: red !important; }\\n\"","import { Component } from '@angular/core';\r\nimport { ICellRendererAngularComp } from 'ag-grid-angular';\r\n\r\n@Component({\r\n    selector: 'atlas-ag-grid-hyperlink',\r\n    templateUrl: './ag-grid-hyperlink.component.html',\r\n    styleUrls: ['./ag-grid-hyperlink.component.scss'],\r\n})\r\n\r\nexport class AgGridHyperlinkComponent implements ICellRendererAngularComp {\r\n    public params: any;\r\n    classApplied: string = 'contract-reference-link'\r\n    icon: any;\r\n    classAppliedIcon: string\r\n    constructor() {\r\n    }\r\n\r\n    agInit(params: any): void {\r\n        this.params = params;\r\n\r\n        if (this.params.value == 'Contracts available for closure') {\r\n            this.classApplied = 'disable-url-click-green';\r\n        }\r\n        else if (this.params.value == 'Contracts risky for closure') {\r\n            this.classApplied = 'disable-url-click-orange';\r\n        }\r\n        else if (this.params.value == 'Contracts unavailable for closure') {\r\n            this.classApplied = 'disable-url-click-red';\r\n        }\r\n    }\r\n    isImageCellRendererLoaded() {\r\n\r\n        if (this.params.value == 'Contracts available for closure') {\r\n            this.classAppliedIcon = 'icon-click-green';\r\n            this.icon = 'check_circle'\r\n            return true;\r\n        }\r\n        else if (this.params.value == 'Contracts risky for closure') {\r\n            this.classAppliedIcon = 'icon-click-orange';\r\n            this.icon = 'warning'\r\n            return true;\r\n        }\r\n        else if (this.params.value == 'Contracts unavailable for closure') {\r\n            this.classAppliedIcon = 'icon-click-red';\r\n            this.icon = 'remove_circle'\r\n            return true;\r\n        }\r\n        else { return false; }\r\n    }\r\n\r\n    public invokeParentMethod(event) {\r\n        this.params.context.componentParent.hyperlinkClicked(this.params.data, event);\r\n        event.preventDefault();\r\n    }\r\n\r\n    refresh(): boolean {\r\n        return false;\r\n    }\r\n}\r\n","module.exports = \"<div class=\\\"container\\\">\\r\\n    <div fxLayout=\\\"row\\\"\\r\\n         fxLayoutAlign=\\\"left end\\\">\\r\\n        <div class=\\\"value-field\\\">\\r\\n            <div>{{params.value}}</div>\\r\\n        </div>\\r\\n        <mat-icon matSuffix\\r\\n                  class=\\\"compass-icon\\\"\\r\\n                  (click)=\\\"onExploreClicked($event)\\\">explore</mat-icon>\\r\\n    </div>\\r\\n</div>\\r\\n\"","module.exports = \".container {\\n  height: 100%; }\\n  .container > div {\\n    height: 100%; }\\n  .value-field {\\n  white-space: nowrap;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  width: 100%; }\\n  .compass-icon {\\n  color: #605c5e; }\\n\"","import { Component, OnDestroy } from '@angular/core';\r\nimport { MatDialog } from '@angular/material';\r\nimport { ICellRendererAngularComp } from 'ag-grid-angular';\r\nimport { Subject } from 'rxjs';\r\nimport { map, takeUntil } from 'rxjs/operators';\r\nimport { CompanyManagerService } from '../../../core/services/company-manager.service';\r\nimport { ListAndSearchPicklistPredicatePresetProvider } from '../../entities/list-and-search/providers/list-and-search-picklist-predicate-preset-provider.entity';\r\nimport { MasterdataService } from '../../services/http-services/masterdata.service';\r\nimport { ContextualSearchBaseLightBoxComponent } from '../contextual-search/base-light-box/contextual-search-base-light-box.component';\r\n\r\n@Component({\r\n    selector: 'atlas-ag-grid-list-and-search-picklist-field',\r\n    templateUrl: './ag-grid-list-and-search-picklist-field.component.html',\r\n    styleUrls: ['./ag-grid-list-and-search-picklist-field.component.scss'],\r\n})\r\nexport class AgGridListAndSearchPicklistFieldComponent implements ICellRendererAngularComp, OnDestroy {\r\n    private separator: string = ', ';\r\n    private symbol: string = 'in ';\r\n    /*\r\n       params: {\r\n           gridId: string,\r\n           dataEntity: string,\r\n       }\r\n       */\r\n    params: any;\r\n    value: string;\r\n    destroy$ = new Subject();\r\n    picklistSymbols: string[];\r\n\r\n    constructor(protected dialog: MatDialog,\r\n        protected masterdataService: MasterdataService,\r\n        protected companyManager: CompanyManagerService,\r\n        private picklistPredicatePresets: ListAndSearchPicklistPredicatePresetProvider) {\r\n        this.picklistSymbols = this.picklistPredicatePresets.getPresets().operators.map((preset) => {\r\n            return preset.symbole;\r\n        });\r\n    }\r\n\r\n    agInit(params: any): void {\r\n        this.params = params;\r\n    }\r\n\r\n    onExploreClicked(event) {\r\n        const searchLightBox = this.openLightbox();\r\n        searchLightBox.afterClosed().pipe(\r\n            takeUntil(this.destroy$),\r\n        ).subscribe((answer: any[]) => {\r\n            if (answer.length > 0) {\r\n                const displayProperties = answer.map((selectedValue) => {\r\n                    return selectedValue.displayName;\r\n                });\r\n                const concatString: string = displayProperties.join(this.separator);\r\n\r\n                this.params.setValue(this.symbol + concatString);\r\n            }\r\n        });\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n    }\r\n\r\n    openLightbox() {\r\n        const selectedDisplayNames = this.getSelectedDisplayNames(this.params.value);\r\n        return this.dialog.open(ContextualSearchBaseLightBoxComponent, {\r\n            data: {\r\n                lightboxTitle: this.params.title,\r\n                gridId: this.params.gridId,\r\n                rowData$: this.masterdataService.getSpecificMasterdata(\r\n                    this.params.dataEntity,\r\n                    this.companyManager.getCurrentCompanyId()).pipe(\r\n                        map((list: any[]) => {\r\n                            if (!this.params.value\r\n                                || this.isOperatorDefined(this.params.value)) {\r\n                                return this.setSelectedRows(selectedDisplayNames, list);\r\n                            }\r\n                            return this.setSelectedRows(selectedDisplayNames,\r\n                                list.filter((data) => data.displayName && (data.displayName as string).toLowerCase()\r\n                                    .startsWith((this.params.value as string).toLowerCase())));\r\n                        }),\r\n                    ),\r\n                multiselect: true,\r\n            },\r\n            width: '80%',\r\n        });\r\n    }\r\n\r\n    refresh(params: any): boolean {\r\n        this.params.value = params.value;\r\n        return true;\r\n    }\r\n\r\n    isOperatorDefined(filter: string) {\r\n        return this.picklistSymbols.some((symbol) => {\r\n            return filter.toLowerCase().startsWith(symbol.toLowerCase());\r\n        });\r\n    }\r\n\r\n    getSelectedDisplayNames(picklistInput: string): string[] {\r\n        if (picklistInput) {\r\n            const displayNames = picklistInput.replace(this.symbol, '');\r\n            return displayNames.split(this.separator);\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    setSelectedRows(picklistDisplayNames: string[], list: any[]) {\r\n        if (picklistDisplayNames) {\r\n            return list.map((item) => {\r\n                return { ...item, isSelected: (picklistDisplayNames.indexOf(item['displayName']) > -1) };\r\n            });\r\n        }\r\n\r\n        return list;\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destroy$.next();\r\n        this.destroy$.complete();\r\n    }\r\n}\r\n","module.exports = \"<div class=\\\"selectComp\\\"\\r\\n     *ngIf=\\\"formGroup\\\"\\r\\n     [formGroup]=\\\"formGroup\\\">\\r\\n    <mat-select #selectMat\\r\\n                (selectionChange)=\\\"onSelectionChange($event)\\\"\\r\\n                [formControlName]=\\\"formControlName\\\"\\r\\n                [id]=\\\"formControlName\\\"\\r\\n                multiple>\\r\\n        <mat-option *ngFor=\\\"let option of options\\\"\\r\\n                    [value]=\\\"option.value\\\">{{ option.label }}</mat-option>\\r\\n    </mat-select>\\r\\n    <div class=\\\"buttonExplore\\\">\\r\\n        <mat-icon matSuffix\\r\\n                  *ngIf=\\\"rowsModal\\\"\\r\\n                  class=\\\"compass-icon\\\"\\r\\n                  (click)=\\\"onExploreClicked($event)\\\">\\r\\n            explore\\r\\n        </mat-icon>\\r\\n    </div>\\r\\n    <mat-checkbox class=\\\"material-checkbox\\\"\\r\\n                  #check\\r\\n                  type=\\\"checkbox\\\"\\r\\n                  [checked]=\\\"checked\\\"\\r\\n                  (change)=\\\"onChangeCheckbox($event)\\\"></mat-checkbox>\\r\\n\\r\\n    <div *ngIf=\\\"formControl\\\">\\r\\n        <mat-error *ngIf=\\\"!formControl.valid && check.checked\\\">\\r\\n            Choose a value first!\\r\\n        </mat-error>\\r\\n    </div>\\r\\n</div>\\r\\n\"","module.exports = \".material-checkbox {\\n  position: relative;\\n  z-index: 99; }\\n\\n.selectComp {\\n  width: 100%; }\\n\\n.buttonExplore {\\n  display: inline-block;\\n  width: 29px;\\n  margin-top: 12px;\\n  text-align: center;\\n  vertical-align: middle; }\\n\"","import { Component, Input } from '@angular/core';\r\nimport { AbstractControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatCheckboxChange, MatDialog, MatSelectChange } from '@angular/material';\r\nimport { AgRendererComponent } from 'ag-grid-angular';\r\nimport { MasterdataService } from '../../services/http-services/masterdata.service';\r\nimport { ContextualSearchBaseLightBoxComponent } from '../contextual-search/base-light-box/contextual-search-base-light-box.component';\r\nimport { AgGridSelect } from './interfaces/ag-grid-select.entity';\r\n\r\n@Component({\r\n    selector: 'atlas-ag-grid-select',\r\n    templateUrl: 'ag-grid-select.component.html',\r\n    styleUrls: ['ag-grid-select.component.scss'],\r\n})\r\nexport class AgGridSelectComponent implements AgRendererComponent {\r\n    @Input() options: AgGridSelect[];\r\n    private params: any;\r\n\r\n    checked = false;\r\n    isRequired = false;\r\n    disabledCheckbox = false;\r\n    formControlName: string;\r\n    formGroup: FormGroup;\r\n    formControl: AbstractControl;\r\n    rowsModal: any;\r\n    gridId: string;\r\n    labelField: string;\r\n    valueField: string;\r\n\r\n    constructor(protected dialog: MatDialog, protected masterdataService: MasterdataService) { }\r\n\r\n    agInit(params: any): void {\r\n        this.params = params;\r\n\r\n        this.valueField = this.params.valueField;\r\n        this.labelField = this.params.labelField;\r\n\r\n        this.options = this.composeOptions(this.params.options, this.valueField, this.labelField);\r\n        this.formControlName = this.params.key;\r\n        this.rowsModal = this.params.modalHelperData;\r\n        this.gridId = this.params.gridId;\r\n    }\r\n\r\n    onChangeCheckbox(change: MatCheckboxChange) {\r\n        this.isRequired = change.checked;\r\n        if (!this.isRequired) {\r\n            this.formControl.setValue(null);\r\n            this.formControl.disable();\r\n        } else {\r\n            this.formControl.enable();\r\n            this.formControl.setValidators(Validators.required);\r\n        }\r\n    }\r\n\r\n    onSelectionChange(change: MatSelectChange) {\r\n        this.checked = (change.source.value);\r\n    }\r\n\r\n    refresh(params: any): boolean {\r\n        this.formGroup = params.context.formGroup;\r\n        this.formControl = this.formGroup.controls[this.formControlName];\r\n        if (!this.formControl.value) {\r\n            this.checked = false;\r\n        } else {\r\n            this.formControl.enable();\r\n            this.checked = true;\r\n\r\n        }\r\n        return true;\r\n    }\r\n\r\n    onExploreClicked(event) {\r\n        if (!this.formControl.disabled) {\r\n            const searchLightBox = this.dialog.open(ContextualSearchBaseLightBoxComponent, {\r\n                data: {\r\n                    gridId: this.gridId,\r\n                    rowData$: this.rowsModal,\r\n                },\r\n                width: '80%',\r\n                height: '80%',\r\n            });\r\n\r\n            searchLightBox.afterClosed().subscribe((value: any) => {\r\n                if (value) {\r\n                    const val = new Array();\r\n                    let objectlist: AgGridSelect[];\r\n\r\n                    val.push(value);\r\n                    objectlist = this.composeOptions(val, this.valueField, this.labelField);\r\n\r\n                    if (this.formGroup) {\r\n\r\n                        const actualValues = this.formControl.value;\r\n\r\n                        if (actualValues) {\r\n                            actualValues.push(objectlist[0].value);\r\n                            this.formControl.setValue(actualValues);\r\n                        } else {\r\n                            this.formControl.setValue([objectlist[0].value]);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n    }\r\n\r\n    composeOptions(values: any[], propertyValue?: string, propertylabel?: string) {\r\n        const objectList = new Array<AgGridSelect>();\r\n        values.forEach((z) => {\r\n            const object: AgGridSelect =\r\n                propertyValue && propertylabel ? { value: z[propertyValue], label: z[propertylabel] } : { value: z, label: z };\r\n            objectList.push(object);\r\n        });\r\n        return objectList;\r\n    }\r\n}\r\n","module.exports = \"<div *ngIf=\\\"gridOptions\\\">\\r\\n    <div fxLayout=\\\"row\\\"\\r\\n         fxLayoutAlign=\\\"space-between   center \\\"\\r\\n         fxLayoutWrap\\r\\n         class=\\\"filter-actions\\\">\\r\\n        <span *ngIf=\\\"sharingEnabled\\\">\\r\\n            <mat-form-field>\\r\\n                <input matInput\\r\\n                       [formControl]=\\\"gridViewCtrl\\\"\\r\\n                       (focus)=\\\"gridViewFocus = true\\\"\\r\\n                       (blur)=\\\"gridViewFocus = false\\\"\\r\\n                       [placeholder]=\\\"(gridViewCtrl.value || gridViewFocus) ? '' : 'View Name'\\\"\\r\\n                       [matAutocomplete]=\\\"gridViewAutocomplete\\\">\\r\\n                <mat-icon matSuffix\\r\\n                          class=\\\"filter-action-field-icon\\\">arrow_drop_down</mat-icon>\\r\\n                <mat-autocomplete #gridViewAutocomplete=\\\"matAutocomplete\\\"\\r\\n                                  [displayWith]=\\\"displayGridViewName\\\"\\r\\n                                  (optionSelected)=\\\"onGridViewSelectionChange($event.option.value)\\\">\\r\\n                    <mat-option *ngFor=\\\"let gridView of filteredUserGridViews\\\"\\r\\n                                [value]=\\\"gridView\\\">\\r\\n                        <mat-icon>{{ getIcon(gridView) }}</mat-icon>{{ gridView.name}}\\r\\n                    </mat-option>\\r\\n                </mat-autocomplete>\\r\\n            </mat-form-field>\\r\\n\\r\\n\\r\\n        </span>\\r\\n        <span *ngIf=\\\"sharingEnabled\\\">\\r\\n            <button mat-button\\r\\n                    (click)=\\\"onSaveGridViewButtonClicked()\\\">\\r\\n                Save View\\r\\n            </button>\\r\\n            <button mat-icon-button\\r\\n                    matTooltip=\\\"Delete View\\\"\\r\\n                    (click)=\\\"onDeleteGridViewButtonClicked()\\\"\\r\\n                    [disabled]=\\\"!gridViewCtrl.value || gridViewCtrl.value.gridViewId === null ||\\r\\n                    gridViewCtrl.value.gridViewId === undefined || (!isOwner && !isAdmin)\\\"\\r\\n                    *ngIf=\\\"gridViewCtrl && !gridViewCtrl.value.isDefault && hasDeleteViewPrivilege\\\">\\r\\n                <mat-icon>delete_outline</mat-icon>\\r\\n            </button>\\r\\n        </span>\\r\\n        <button mat-icon-button\\r\\n                *ngIf=\\\"savingEnabled && favouriteMenuEnabled\\\"\\r\\n                [disabled]=\\\"sharingEnabled &&\\r\\n                (!gridViewCtrl.value || gridViewCtrl.value.gridViewId === null || gridViewCtrl.value.gridViewId === undefined || gridViewCtrl.value.gridViewId === 0)\\\"\\r\\n                (click)=\\\"onSetGridViewAsFavoriteButtonClicked()\\\"\\r\\n                [matTooltip]=\\\"(gridViewCtrl  && gridViewCtrl.value.isFavorite)?  'Favorite' : 'Make favorite' \\\">\\r\\n            <mat-icon [ngClass]=\\\"(gridViewCtrl  && gridViewCtrl.value.isFavorite)? 'heart-saved' : 'heart-not-saved'\\\">\\r\\n                {{ (gridViewCtrl && gridViewCtrl.value.isFavorite)? 'favorite' : 'favorite_border' }}\\r\\n            </mat-icon>\\r\\n        </button>\\r\\n        <div *ngIf=\\\"hasColumnHandling\\\">\\r\\n            <button mat-icon-button\\r\\n                    *ngIf=\\\"columnDefs\\\"\\r\\n                    (click)=\\\"onResetButtonClicked()\\\"\\r\\n                    matTooltip=\\\"Back to favorite state\\\">\\r\\n                <mat-icon>settings_backup_restore</mat-icon>\\r\\n            </button>\\r\\n            <button mat-icon-button\\r\\n                    *ngIf=\\\"columnDefs\\\"\\r\\n                    [matMenuTriggerFor]=\\\"menu\\\"\\r\\n                    matTooltip=\\\"Order columns\\\">\\r\\n                <mat-icon>menu</mat-icon>\\r\\n            </button>\\r\\n        </div>\\r\\n        <button mat-icon-button\\r\\n                *ngIf=\\\"showExport\\\"\\r\\n                [matMenuTriggerFor]=\\\"menu1\\\"\\r\\n                matTooltip=\\\"More\\\">\\r\\n            <i class=\\\"material-icons\\\">more_vert</i>\\r\\n        </button>\\r\\n        <mat-menu #menu1=\\\"matMenu\\\">\\r\\n\\r\\n            <button mat-menu-item\\r\\n                    [matMenuTriggerFor]=\\\"exportMenu\\\">\\r\\n                <span>Export</span>\\r\\n            </button>\\r\\n        </mat-menu>\\r\\n        <mat-menu #exportMenu=\\\"matMenu\\\">\\r\\n            <button mat-menu-item\\r\\n                    (click)=\\\"onExportButtonClickedAsExcel()\\\">\\r\\n                <span>Export as Excel</span>\\r\\n            </button>\\r\\n            <button *ngIf=\\\"isCsvExportEnabled\\\"\\r\\n                    mat-menu-item\\r\\n                    (click)=\\\"onExportButtonClickedAsCSV()\\\">\\r\\n                <span>Export as CSV</span>\\r\\n            </button>\\r\\n        </mat-menu>\\r\\n        <div>\\r\\n            <mat-menu class=\\\"no-overflow\\\"\\r\\n                      #menu=\\\"matMenu\\\">\\r\\n                <div *ngFor=\\\"let col of currentColumnState\\\"\\r\\n                     class=\\\"mat-menu-item\\\">\\r\\n                    <mat-checkbox [checked]=\\\"!col.hide\\\"\\r\\n                                  (click)=\\\"onShowOrHideColumCheckboxClicked($event, col)\\\">{{col.headerName}}\\r\\n                    </mat-checkbox>\\r\\n                </div>\\r\\n            </mat-menu>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","module.exports = \".mat-button {\\n  margin: 0; }\\n\\n.filter-actions span {\\n  display: inline-flex;\\n  max-height: 50px; }\\n\\n.filter-actions .mat-icon-button {\\n  width: 32px;\\n  height: 32px;\\n  line-height: 32px; }\\n\\n.filter-actions .filter-action-field-icon {\\n  color: #332f30; }\\n\"","import { DatePipe } from '@angular/common';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { Component, EventEmitter, HostListener, Input, OnDestroy, OnInit, Output } from '@angular/core';\r\nimport { MatDialog } from '@angular/material';\r\nimport * as agGrid from 'ag-grid-community';\r\nimport { ColumnState } from 'ag-grid-community/dist/lib/columnController/columnController';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport { finalize, map, takeUntil } from 'rxjs/operators';\r\nimport { AuthorizationService } from '../../../core/services/authorization.service';\r\nimport { UserGridViewDto } from '../../dtos/user-grid-view-dto.dto';\r\nimport { AtlasFormControl } from '../../entities/atlas-form-control';\r\nimport { AgGridService } from '../../services/ag-grid.service';\r\nimport { GridConfigurationService } from '../../services/http-services/grid-configuration.service';\r\nimport { SecurityService } from '../../services/security.service';\r\nimport { SnackbarService } from '../../services/snackbar.service';\r\nimport { ConfirmationDialogComponent } from '../confirmation-dialog/confirmation-dialog.component';\r\nimport { GridViewSaveDialogComponent } from './grid-view-save-dialog/grid-view-save-dialog.component';\r\n@Component({\r\n    selector: 'atlas-ag-grid-user-preferences',\r\n    templateUrl: './ag-grid-user-preferences.component.html',\r\n    styleUrls: ['./ag-grid-user-preferences.component.scss'],\r\n    providers: [DatePipe],\r\n})\r\nexport class AgGridUserPreferencesComponent implements OnInit, OnDestroy {\r\n\r\n    // If inputs change, please also change the UserGridPreferencesParameters class\r\n    @Input() gridOptions: agGrid.GridOptions;\r\n    @Input() company: string;\r\n    @Input() gridId: string;\r\n    @Input() savingEnabled = true;\r\n    @Input() sharingEnabled = false;\r\n    @Input() favouriteMenuEnabled = true;\r\n    @Input() isAutosize = true;\r\n    @Input() hasDeleteViewPrivilege = true;\r\n    @Input() hasColumnHandling = true;\r\n    @Input() showExport = true;\r\n    @Input() isSetColumnStateEnabled: boolean = true;\r\n\r\n    @Input() isCustomExportEnabled: boolean = false;\r\n    @Input() isCsvExportEnabled: boolean = true;\r\n    @Output() readonly exportClicked = new EventEmitter<boolean>();\r\n    \r\n\r\n    @Input() loadDefaultGridView = true; // exploited by gridEnlargement\r\n    // to be called when we are sure the component is done loading (so after data load)\r\n    @Output() readonly componentLoaded = new EventEmitter();\r\n    @Output() readonly gridViewSelected = new EventEmitter();\r\n    // If you need to override some columns when the gridCode is shared by 2 pages with different behaviors, use columnStateSetToGrid\r\n    @Output() readonly columnStateSetToGrid = new EventEmitter();\r\n\r\n    destroy$ = new Subject();\r\n\r\n    columnDefs: agGrid.ColDef[];\r\n    savedColumnStates: ColumnState[];\r\n    getUserPreferenceColumnSubscription: Subscription;\r\n    currentColumnState: agGrid.ColDef[];\r\n    userActiveDirectoryName: string;\r\n    sortedUserGridViews: UserGridViewDto[];\r\n\r\n    gridViewCtrl = new AtlasFormControl('GridViewTitle');\r\n    userGridViews: UserGridViewDto[];\r\n    filteredUserGridViews: UserGridViewDto[];\r\n    gridViewFocus: boolean = false;\r\n    columnsChanged: boolean = false;\r\n\r\n    isOwner = false;\r\n    isAdmin = false;\r\n\r\n    constructor(\r\n        private gridConfigurationService: GridConfigurationService,\r\n        private securityService: SecurityService,\r\n        protected dialog: MatDialog,\r\n        protected snackbarService: SnackbarService,\r\n        private authorizationService: AuthorizationService,\r\n        private datePipe: DatePipe,\r\n        private agGridService: AgGridService) {\r\n        this.userActiveDirectoryName = this.authorizationService.getCurrentUser().samAccountName;\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n        this.securityService.isSecurityReady().subscribe(() => {\r\n            this.isAdmin = this.authorizationService.isAdministrator(this.company);\r\n            // remove headerName:'' from the column list of available column to remove (i.e. action column, thickbox column...)\r\n            const filteredColumns = this.gridOptions.columnDefs.filter((colDef) => colDef.headerName !== '');\r\n            this.columnDefs = filteredColumns;\r\n            this.initFavoriteColumns();\r\n        });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destroy$.next();\r\n        this.destroy$.complete();\r\n    }\r\n\r\n    @HostListener('window:beforeunload', ['$event']) unloadNotification($event: any) {\r\n        if (this.columnsChanged) {\r\n            $event.returnValue = true;\r\n        }\r\n    }\r\n\r\n    initFavoriteColumns(defaultId: number = null) {\r\n        this.gridConfigurationService\r\n            .getUserGridViews(this.gridId)\r\n            .pipe(\r\n                takeUntil(this.destroy$),\r\n                map((params) => {\r\n                    return params ? params.value : null;\r\n                }))\r\n            .subscribe(\r\n                (userGridViews) => {\r\n                    let nonDefaultViews: UserGridViewDto[] = [];\r\n                    this.userGridViews = userGridViews;\r\n                    this.filteredUserGridViews = this.userGridViews;\r\n                    if (this.userGridViews && this.userGridViews.length > 1) {\r\n                        this.sortedUserGridViews = this.userGridViews.filter((defaultview) => defaultview.isDefault === true)\r\n                            .sort((a, b) => a.name.localeCompare(b.name));\r\n                        nonDefaultViews = this.userGridViews.filter((defaultview) => defaultview.isDefault === false)\r\n                            .sort((a, b) => a.name.localeCompare(b.name));\r\n                        if (nonDefaultViews.length >= 1) {\r\n                            nonDefaultViews.forEach((view) => this.sortedUserGridViews.push(view));\r\n                        }\r\n                        this.filteredUserGridViews = this.sortedUserGridViews;\r\n                    }\r\n                    this.gridViewCtrl.patchValue(new UserGridViewDto());\r\n                    this.savedColumnStates = this.gridOptions.columnApi ? this.gridOptions.columnApi.getColumnState() : [];\r\n                    if (this.userGridViews && this.userGridViews.length > 0 && this.loadDefaultGridView) {\r\n                        this.initDefaultGridView(defaultId);\r\n                    }\r\n\r\n                    // PLEASE USE loadDefaultGridView INSTEAD OF CHECKING GRIDID\r\n                    if ((this.userGridViews && this.userGridViews.length > 0 && this.gridId === 'clientReportTransactionGrid')\r\n                        || (this.userGridViews && this.userGridViews.length > 0 && this.gridId === 'clientReportSummaryGrid')\r\n                        || (this.userGridViews && this.userGridViews.length > 0 && this.gridId === 'nominalReportSummaryGrid')\r\n                        || (this.userGridViews && this.userGridViews.length > 0 && this.gridId === 'nominalReportTransactionGrid')) {\r\n                        // PLEASE USE loadDefaultGridView INSTEAD OF CHECKING GRIDID\r\n                        this.initDefaultGridView(defaultId);\r\n                    }\r\n\r\n                    this.updateCurrentColumnState();\r\n                },\r\n                (err: HttpErrorResponse) => {\r\n                    if (err.status === 403) {\r\n                        this.snackbarService.throwErrorSnackBar(err.message);\r\n                        this.gridViewCtrl.patchValue(new UserGridViewDto());\r\n                        this.savedColumnStates = this.gridOptions.columnApi ? this.gridOptions.columnApi.getColumnState() : [];\r\n\r\n                        this.updateCurrentColumnState();\r\n                    } else {\r\n                        throw (err);\r\n                    }\r\n                },\r\n                () => { this.componentLoaded.emit(); },\r\n            );\r\n\r\n        this.gridViewCtrl.valueChanges.subscribe((input) => {\r\n            if (typeof input === 'string') {\r\n                this.filteredUserGridViews = this.userGridViews.filter((view) => {\r\n                    return view.name.toLocaleLowerCase().startsWith(input.toLocaleLowerCase());\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    initDefaultGridView(defaultId: number) {\r\n        if (defaultId) {\r\n            this.gridViewCtrl.patchValue(\r\n                this.userGridViews.find((gridView) => gridView.gridViewId === defaultId),\r\n            );\r\n        } else {\r\n            let userFavorite: UserGridViewDto[] = null;\r\n            // look if there is a default\r\n            userFavorite = this.userGridViews.filter((gridView) => {\r\n                return gridView.isFavorite;\r\n            });\r\n            if (userFavorite.length > 0) {\r\n                this.gridViewCtrl.patchValue(userFavorite[0]);\r\n            } else {\r\n                userFavorite = this.userGridViews.filter((gridView) => {\r\n                    return gridView.isDefault;\r\n                });\r\n                if (userFavorite.length > 0) {\r\n                    this.gridViewCtrl.patchValue(userFavorite[0]);\r\n                } else {\r\n                    this.gridViewCtrl.patchValue(this.userGridViews[0]);\r\n                }\r\n            }\r\n        }\r\n        const defaultGridView: UserGridViewDto = this.gridViewCtrl.value;\r\n        // if there is a default\r\n        if (defaultGridView && defaultGridView.gridViewColumnConfig) {\r\n            this.savedColumnStates = JSON.parse(defaultGridView.gridViewColumnConfig);\r\n            this.gridViewSelected.emit(defaultGridView.gridViewId);\r\n        } else {\r\n            this.savedColumnStates = this.gridOptions.columnApi ? this.gridOptions.columnApi.getColumnState() : [];\r\n        }\r\n        if (this.isSetColumnStateEnabled) {\r\n            this.gridOptions.columnApi.setColumnState(this.savedColumnStates);\r\n            this.columnStateSetToGrid.emit();\r\n        } else {\r\n            this.loadColumnsOnDetailMode();\r\n        }\r\n    }\r\n\r\n    loadGridView(gridViewId: number, applyGridView: boolean = true) {\r\n        const selectedGridView = this.userGridViews.find((gridView) => gridView.gridViewId === gridViewId);\r\n        if (selectedGridView) {\r\n            this.gridViewCtrl.patchValue(selectedGridView);\r\n\r\n            if (applyGridView) {\r\n                this.savedColumnStates = JSON.parse(selectedGridView.gridViewColumnConfig);\r\n                this.updateCurrentColumnState();\r\n            }\r\n        }\r\n    }\r\n\r\n    getCurrentGridView(): UserGridViewDto {\r\n        if ((this.gridViewCtrl.value as UserGridViewDto).gridViewId) {\r\n            return this.gridViewCtrl.value as UserGridViewDto;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    onShowOrHideColumCheckboxClicked(event, col: agGrid.ColDef) {\r\n        const columnStates = this.gridOptions.columnApi ? this.gridOptions.columnApi.getColumnState() : [];\r\n\r\n        if (columnStates.find((column) => column.colId === 'ag-Grid-AutoColumn-' + col.colId)) { // column is grouped\r\n            this.snackbarService.informationSnackBar('You cannot hide a column that is used for grouping');\r\n            col.hide = !col.hide;\r\n            return;\r\n        }\r\n\r\n        this.columnsChanged = true;\r\n        this.gridOptions.columnApi.setColumnVisible(col.colId, (col.hide || false));\r\n        this.gridOptions.columnApi.moveColumns([col.colId], this.columnDefs.length - 1);\r\n        this.agGridService.sizeColumns(this.gridOptions);\r\n        event.stopPropagation();\r\n        return false;\r\n    }\r\n\r\n    onSaveGridViewButtonClicked() {\r\n        if (!this.gridViewCtrl.value || !this.gridViewCtrl.value.gridViewId || this.gridViewCtrl.value.gridViewId === 0) {\r\n            // New grid view\r\n            this.gridViewCtrl.patchValue(new UserGridViewDto());\r\n        }\r\n        const saveDialog = this.dialog.open(GridViewSaveDialogComponent, {\r\n            width: '30%',\r\n            minWidth: '500px',\r\n            data: {\r\n                company: this.company,\r\n                gridCode: this.gridId,\r\n                gridView: this.gridViewCtrl.value,\r\n                gridViewList: this.userGridViews,\r\n            },\r\n        });\r\n        saveDialog.afterClosed().subscribe((answer) => {\r\n            if (answer > -1) {\r\n                (this.gridViewCtrl.value as UserGridViewDto).gridViewColumnConfig = JSON.stringify(this.gridOptions.columnApi ?\r\n                    this.gridOptions.columnApi.getColumnState() :\r\n                    []);\r\n\r\n                const action = (answer === 0) ?\r\n                    this.gridConfigurationService.createUserGridViews(this.gridId, (this.gridViewCtrl.value as UserGridViewDto)) :\r\n                    this.gridConfigurationService.updateUserGridViews(this.gridId, (this.gridViewCtrl.value as UserGridViewDto));\r\n                action\r\n                    .pipe(\r\n                        finalize(() => {\r\n                            this.columnsChanged = false;\r\n                        }),\r\n                    )\r\n                    .subscribe((gridViewId) => {\r\n                        // reload grid view list\r\n                        const selectedId = (gridViewId !== null && gridViewId !== undefined) ?\r\n                            gridViewId : (this.gridViewCtrl.value as UserGridViewDto).gridViewId;\r\n                        this.snackbarService.informationSnackBar('View Succesfully created');\r\n\r\n                        this.initFavoriteColumns(selectedId);\r\n                    });\r\n            }\r\n        });\r\n    }\r\n\r\n    onDeleteGridViewButtonClicked() {\r\n        const gridView = (this.gridViewCtrl.value as UserGridViewDto);\r\n        if (!gridView) {\r\n            this.dialog.open(ConfirmationDialogComponent, {\r\n                data: {\r\n                    text: 'Please select a grid view',\r\n                    okButton: 'Ok',\r\n                },\r\n            });\r\n        } else {\r\n            const confirmDialog = this.dialog.open(ConfirmationDialogComponent, {\r\n                data: {\r\n                    title: 'View Deletion',\r\n                    text: 'Deleting a view is Permanent. It will be unavailable for all users it was shared to.',\r\n                    okButton: 'Delete anyway',\r\n                    cancelButton: 'Cancel',\r\n                },\r\n            });\r\n            confirmDialog.afterClosed().subscribe((answer) => {\r\n                if (answer) {\r\n                    this.gridConfigurationService.deleteUserGridViews(this.gridId, gridView.gridViewId)\r\n                        .subscribe(\r\n                            (res) => {\r\n                                this.snackbarService.informationSnackBar('View Succesfully deleted');\r\n                                this.initFavoriteColumns();\r\n                            },\r\n                            (err: HttpErrorResponse) => {\r\n                                if (err.status === 403) {\r\n                                    this.snackbarService.throwErrorSnackBar(err.message);\r\n                                } else {\r\n                                    throw (err);\r\n                                }\r\n                            });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onGridViewSelectionChange(selectedGridView: UserGridViewDto) {\r\n        if (selectedGridView && selectedGridView.gridViewColumnConfig) {\r\n            this.savedColumnStates = JSON.parse(selectedGridView.gridViewColumnConfig);\r\n            if (this.isSetColumnStateEnabled) {\r\n                this.gridOptions.columnApi.setColumnState(this.savedColumnStates);\r\n                this.columnStateSetToGrid.emit();\r\n            } else {\r\n                this.loadColumnsOnDetailMode();\r\n            }\r\n            this.updateCurrentColumnState();\r\n            this.agGridService.sizeColumns(this.gridOptions);\r\n            this.gridViewSelected.emit(selectedGridView.gridViewId);\r\n        }\r\n    }\r\n\r\n    getIcon(gridView: UserGridViewDto): string {\r\n        if (gridView.isSharedWithAllCompanies && gridView.isSharedWithAllUsers) {\r\n            return 'public';\r\n        } else if (gridView.isSharedWithAllCompanies) {\r\n            return 'domain';\r\n        } else if (gridView.isSharedWithAllUsers) {\r\n            return 'people';\r\n        } else {\r\n            return 'person';\r\n        }\r\n    }\r\n\r\n    onResetButtonClicked() {\r\n        if (this.savedColumnStates && this.isSetColumnStateEnabled) {\r\n            this.gridOptions.columnApi.setColumnState(this.savedColumnStates);\r\n            this.columnStateSetToGrid.emit();\r\n        } else {\r\n            this.loadColumnsOnDetailMode();\r\n        }\r\n        this.updateCurrentColumnState();\r\n        this.agGridService.sizeColumns(this.gridOptions);\r\n    }\r\n\r\n    onChangeColumnVisibility(col: agGrid.ColDef) {\r\n        this.updateCurrentColumnState();\r\n    }\r\n\r\n    onSetGridViewAsFavoriteButtonClicked() {\r\n        (this.gridViewCtrl.value as UserGridViewDto).gridViewColumnConfig = JSON.stringify(this.gridOptions.columnApi ?\r\n            this.gridOptions.columnApi.getColumnState() :\r\n            []);\r\n        this.gridConfigurationService.setFavoriteUserGridViews(this.gridId, (this.gridViewCtrl.value as UserGridViewDto))\r\n            .subscribe(\r\n                (response) => {\r\n                    // display snakbar to say it has been updated\r\n                    this.snackbarService.informationSnackBar('View Succesfully updated');\r\n\r\n                    this.initFavoriteColumns();\r\n                },\r\n                (err: HttpErrorResponse) => {\r\n                    if (err.status === 403) {\r\n                        this.snackbarService.throwErrorSnackBar(err.message);\r\n\r\n                    } else {\r\n                        throw (err);\r\n                    }\r\n                });\r\n    }\r\n\r\n    displayGridViewName(gridView?: UserGridViewDto) {\r\n        return gridView ? gridView.name : '';\r\n    }\r\n\r\n    updateCurrentColumnState() {\r\n        if (!this.gridOptions || !this.gridOptions.columnApi) {\r\n            this.currentColumnState = [];\r\n        }\r\n        const columnStates = this.gridOptions.columnApi ? this.gridOptions.columnApi.getColumnState() : [];\r\n\r\n        this.currentColumnState = this.columnDefs ? this.columnDefs\r\n            .filter((colDef) => columnStates.find((column) => column.colId === colDef.colId)) // should exist in the grid config\r\n            .map((colDef) => {\r\n                const displayResult: any = colDef;\r\n                if (columnStates\r\n                    .find((column) => column.colId === 'ag-Grid-AutoColumn-' + colDef.colId)) {\r\n                    // column grouped\r\n                    colDef.hide = false;\r\n                } else {\r\n                    displayResult.hide = columnStates.find((column) => column.colId === colDef.colId).hide;\r\n                }\r\n                return displayResult;\r\n            }) : [];\r\n\r\n        this.isOwner = (this.gridViewCtrl.value as UserGridViewDto).createdBy ===\r\n            this.authorizationService.getCurrentUser().samAccountName;\r\n    }\r\n\r\n    generateFileName(isCsv: boolean = false): string {\r\n        const now = new Date();\r\n        const todayDate = this.datePipe.transform(now, 'yyyyMMdd_hhmm').toString().toUpperCase();\r\n        return todayDate + '_' + this.company + '_' + this.gridId + '_' + this.userActiveDirectoryName + (isCsv ? '.csv' : '.xlsx');\r\n    }\r\n\r\n    showExportStartedMessage() {\r\n        this.snackbarService.informationSnackBar('The export has started. Your document will be available soon.');\r\n    }\r\n\r\n    onExportButtonClickedAsExcel() {\r\n        this.showExportStartedMessage();\r\n        if (this.isCustomExportEnabled === true) {\r\n            this.exportClicked.emit(true);\r\n        } else {\r\n            const params = {\r\n                fileName: this.generateFileName(),\r\n            };\r\n            this.gridOptions.api.exportDataAsExcel(params);\r\n        }\r\n    }\r\n\r\n    onExportButtonClickedAsCSV() {\r\n        this.showExportStartedMessage();\r\n        if (this.isCustomExportEnabled === true) {\r\n            this.exportClicked.emit(true);\r\n        } else {\r\n            const params = {\r\n                fileName: this.generateFileName(true),\r\n            };\r\n            this.gridOptions.api.exportDataAsCsv(params);\r\n        }\r\n    }\r\n\r\n    loadColumnsOnDetailMode() {\r\n        const savedColumnStatesDetail: ColumnState[] = [];\r\n        if (this.savedColumnStates && this.savedColumnStates.length > 0) {\r\n            this.savedColumnStates.forEach((column) => {\r\n                if (!column.colId.startsWith('ag-Grid-AutoColumn')) {\r\n                    column.rowGroupIndex = null;\r\n                    if (this.gridId == 'nominalReportTransactionGrid' && (column.colId === 'nominalAccount' || column.colId === 'currency')) {\r\n                        column.hide = false;\r\n                    } else if (this.gridId == 'clientReportTransactionGrid' && (column.colId === 'clientAccount' || column.colId === 'currency' || column.colId === 'accountLineType' || column.colId === 'department')) {\r\n                        column.hide = false;\r\n                    }\r\n                    savedColumnStatesDetail.push(column);\r\n                }\r\n            });\r\n        }\r\n        this.gridOptions.columnApi.setColumnState(savedColumnStatesDetail);\r\n        this.columnStateSetToGrid.emit();\r\n    }\r\n}\r\n","module.exports = \"<div *ngIf=\\\"isLoading\\\">\\r\\n    <div fxLayout=\\\"row\\\"\\r\\n         fxLayoutAlign=\\\"center center\\\"\\r\\n         fxLayoutWrap\\r\\n         fxLayoutGap=\\\"20px\\\"\\r\\n         class=\\\"loading\\\">\\r\\n        <mat-spinner color=\\\"accent\\\"></mat-spinner>\\r\\n    </div>\\r\\n</div>\\r\\n<div fxLayout=\\\"column\\\"\\r\\n     [ngClass]=\\\"{'hidden-during-loading':isLoading}\\\"\\r\\n     fxLayoutGap=\\\"20px\\\">\\r\\n    <h2 mat-dialog-title>Share View {{ this.gridViewNameCtrl.value ? '\\\"' + this.gridViewNameCtrl.value + '\\\"' : '' }}\\r\\n    </h2>\\r\\n    <div fxLayout=\\\"row\\\"\\r\\n         fxLayoutAlign=\\\"start start\\\">\\r\\n        <mat-form-field fxFlex=\\\"60%\\\">\\r\\n            <input placeholder=\\\"Grid View Name\\\"\\r\\n                   matInput\\r\\n                   maxlength=30\\r\\n                   [formControl]=\\\"gridViewNameCtrl\\\"\\r\\n                   (change)=\\\"onNameOrSharingOptionChanged()\\\">\\r\\n            <mat-error *ngIf=\\\"gridViewNameCtrl.hasError('required')\\\">\\r\\n                Required*\\r\\n            </mat-error>\\r\\n            <mat-hint *ngIf=\\\"!isOwner\\\">\\r\\n                You cannot overwrite a view which is not yours</mat-hint>\\r\\n            <mat-error *ngIf=\\\"gridViewNameCtrl.hasError('notUnique')\\\">\\r\\n                The view's name is already used, please change it for saving to be completed\\r\\n            </mat-error>\\r\\n        </mat-form-field>\\r\\n    </div>\\r\\n    <mat-slide-toggle [formControl]=\\\"shareWithAllUsersCtrl\\\"\\r\\n                      (change)=\\\"onNameOrSharingOptionChanged()\\\">Share with all users</mat-slide-toggle>\\r\\n    <mat-hint *ngIf=\\\"shareWithAllUsersCtrl && shareWithAllUsersCtrl.value\\\">All users will have access to this View\\r\\n    </mat-hint>\\r\\n    <mat-hint *ngIf=\\\"shareWithAllUsersCtrl && !shareWithAllUsersCtrl.value\\\">Other users will not be able to see this\\r\\n        View</mat-hint>\\r\\n\\r\\n    <div fxFlex=\\\"50\\\"\\r\\n         fxLayout=\\\"row\\\"\\r\\n         fxAlignLayout=\\\"start end\\\"\\r\\n         mat-dialog-actions>\\r\\n        <button mat-button\\r\\n                (click)=\\\"onDiscardButtonClicked()\\\"> discard </button>\\r\\n        <span class=\\\"fill-space\\\"></span>\\r\\n        <button *ngIf=\\\"gridView.gridViewId != null && !gridView.isDefault &&\\r\\n                    gridView.gridViewId !== undefined && isOwner\\\"\\r\\n                [disabled]=\\\"!gridViewNameCtrl.valid\\\"\\r\\n                (click)=\\\"onSaveButtonClicked(1)\\\"\\r\\n                mat-button>Save</button>\\r\\n        <button *ngIf=\\\"gridView.name !== gridViewNameCtrl.value\\\"\\r\\n                [disabled]=\\\"!gridViewNameCtrl.valid\\\"\\r\\n                (click)=\\\"onSaveButtonClicked(0)\\\"\\r\\n                mat-button>Save as new Grid View</button>\\r\\n    </div>\\r\\n</div>\\r\\n\"","module.exports = \"button {\\n  margin: 0; }\\n\"","import { Component, HostListener, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material';\r\nimport { AuthorizationService } from '../../../../core/services/authorization.service';\r\nimport { UserGridViewDto } from '../../../dtos/user-grid-view-dto.dto';\r\nimport { GridConfigurationService } from '../../../services/http-services/grid-configuration.service';\r\nimport { SnackbarService } from '../../../services/snackbar.service';\r\nimport { GridViewNameValidator } from '../../../validators/grid-view-name.validator';\r\n\r\n@Component({\r\n    selector: 'atlas-grid-view-save-dialog',\r\n    templateUrl: './grid-view-save-dialog.component.html',\r\n    styleUrls: ['./grid-view-save-dialog.component.scss'],\r\n})\r\nexport class GridViewSaveDialogComponent implements OnInit {\r\n    // close values: -1 cancel, 0 save, 1 update\r\n\r\n    gridView: UserGridViewDto;\r\n    gridViewList: UserGridViewDto[];\r\n    gridCode: string;\r\n    company: string;\r\n\r\n    gridViewNameCtrl: FormControl;\r\n    shareWithAllUsersCtrl: FormControl;\r\n\r\n    isLoading: boolean = false;\r\n    isOwner: boolean = true;\r\n\r\n    constructor(public dialogRef: MatDialogRef<GridViewSaveDialogComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: {\r\n            company: string;\r\n            gridCode: string;\r\n            gridView: UserGridViewDto,\r\n            gridViewList: UserGridViewDto[]\r\n        },\r\n        protected gridConfigurationService: GridConfigurationService,\r\n        protected snackbarService: SnackbarService,\r\n        protected formBuilder: FormBuilder,\r\n        protected authorizationService: AuthorizationService,\r\n        protected dialog: MatDialog) {\r\n\r\n        this.gridView = this.data.gridView;\r\n        this.gridViewList = this.data.gridViewList;\r\n        this.gridCode = this.data.gridCode;\r\n        this.company = this.data.company;\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (!this.gridView.isDefault) {\r\n            this.gridViewNameCtrl = new FormControl(this.gridView.name, Validators.required);\r\n            this.shareWithAllUsersCtrl = new FormControl(this.gridView.isSharedWithAllUsers);\r\n        } else {\r\n            this.gridViewNameCtrl = new FormControl('', Validators.required);\r\n            this.shareWithAllUsersCtrl = new FormControl(false);\r\n        }\r\n        this.isOwner = this.gridView.createdBy === this.authorizationService.getCurrentUser().samAccountName;\r\n        this.onNameOrSharingOptionChanged();\r\n    }\r\n\r\n    @HostListener('window:beforeunload', ['$event']) unloadNotification($event: any) {\r\n        if (this.gridViewNameCtrl.dirty || this.shareWithAllUsersCtrl.dirty) {\r\n            $event.returnValue = true;\r\n        }\r\n    }\r\n\r\n    checkNameInLocalList() {\r\n        const gridViewWithSameName = this.gridViewList ?\r\n            this.gridViewList.find((gridView) =>\r\n                gridView.name === this.gridViewNameCtrl.value\r\n                && gridView.gridViewId !== this.gridView.gridViewId\r\n                && !gridView.isSharedWithAllUsers) :\r\n            null;\r\n\r\n        if (gridViewWithSameName) {\r\n            this.gridViewNameCtrl.setErrors({ notUnique: true });\r\n        }\r\n    }\r\n\r\n    onNameOrSharingOptionChanged() {\r\n        if (!this.shareWithAllUsersCtrl.value) {\r\n            this.checkNameInLocalList();\r\n        } else if (this.gridView.name !== this.gridViewNameCtrl.value) {\r\n            this.gridViewNameCtrl.clearAsyncValidators();\r\n            this.gridViewNameCtrl.setAsyncValidators(\r\n                GridViewNameValidator.createValidator(this.gridConfigurationService, this.gridCode),\r\n            );\r\n            this.gridViewNameCtrl.updateValueAndValidity();\r\n        }\r\n    }\r\n\r\n    onSaveButtonClicked(responseCode: number = 0) {\r\n        if (this.gridViewNameCtrl.valid) {\r\n            this.gridView.name = this.gridViewNameCtrl.value;\r\n            this.gridView.isSharedWithAllUsers = this.shareWithAllUsersCtrl.value;\r\n            this.dialogRef.close(responseCode);\r\n        }\r\n    }\r\n    onDiscardButtonClicked() {\r\n        this.dialogRef.close();\r\n    }\r\n}\r\n","module.exports = \"    <div class=\\\"agGrid\\\" *ngIf=\\\"!isLoading\\\">\\r\\n    <atlas-multiple-autocomplete-dropdown #multipleAutocompleteDropdownComponent\\r\\n                                          [options]=\\\"options\\\"\\r\\n                                          [selectedOptions]=\\\"selectedOptions\\\"\\r\\n                                          [allOptionsElement]=\\\"allOptionsElement\\\"\\r\\n                                          [allSelected]=\\\"allSelected\\\"\\r\\n                                          [displayCode]=\\\"displayCode\\\"\\r\\n                                          [codeProperty]=\\\"codeProperty\\\"\\r\\n                                          [displayProperty]=\\\"displayProperty\\\"\\r\\n                                          [placeholder]=\\\"placeholder\\\"\\r\\n                                          [placeholderFilter]=\\\"placeholderFilter\\\"\\r\\n                                          [elementName]=\\\"elementName\\\"\\r\\n                                          [fieldCtrl]=\\\"formControl\\\"\\r\\n                                          (selectionChangedEvent)=\\\"onValueChanged($event)\\\">\\r\\n    </atlas-multiple-autocomplete-dropdown>\\r\\n</div>\\r\\n\"","module.exports = \".mat-form-field-infix {\\n  text-align: center;\\n  padding-top: 0px; }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { AgGridMultipleAutocompleteComponent } from '../ag-grid-multiple-autocomplete/ag-grid-multiple-autocomplete.component';\r\nimport { MasterDataProps } from '../../../entities/masterdata-props.entity';\r\nimport { MasterData } from '../../../entities/masterdata.entity';\r\nimport { FormControl, Validators } from '@angular/forms';\r\nimport { AgRendererComponent } from 'ag-grid-angular';\r\nimport { MasterdataService } from '../../../services/http-services/masterdata.service';\r\nimport { Department } from '../../../entities/department.entity';\r\n\r\n@Component({\r\n  selector: 'atlas-ag-grid-multiple-autocomplete-department',\r\n  templateUrl: './ag-grid-multiple-autocomplete-department.component.html',\r\n  styleUrls: ['./ag-grid-multiple-autocomplete-department.component.scss']\r\n})\r\nexport class AgGridMultipleAutocompleteDepartmentComponent extends AgGridMultipleAutocompleteComponent implements OnInit, AgRendererComponent {\r\n\r\n    companyId: string;\r\n    isLoading = true;\r\n\r\n    options: Department[];\r\n    selectedOptions: Department[];\r\n    allOptionsElement: Department;\r\n\r\n    constructor(private masterDataService: MasterdataService) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    agInit(params: any):void {\r\n\r\n        this.params = params;\r\n        this.formControl = new FormControl('', [Validators.required]);\r\n        this.isRequiredField = params.isRequired;\r\n        this.selectedOptions = this.params.value.map((o) => o);\r\n        this.allOptionsElement = params.allOptionsElement;\r\n        this.displayCode = params.displayCode;\r\n        this.codeProperty = params.codeProperty;\r\n        this.displayProperty = params.displayProperty;\r\n        this.placeholder = params.placeholder;\r\n        this.placeholderFilter = params.placeholderFilter;\r\n        this.elementName = params.elementName;\r\n        this.companyId = this.params.data.companyId;\r\n        this.allSelected = this.params.data.allDepartments;\r\n\r\n        this.masterDataService.getMasterData([MasterDataProps.Departments], this.companyId).subscribe((masterData: MasterData) => {\r\n            this.options = masterData.departments;\r\n            this.selectedOptions = this.options.filter((findoption) => {\r\n                return this.selectedOptions.find((selectedoption) => selectedoption.departmentId === findoption.departmentId) ? true : false;\r\n            });\r\n            this.isLoading = false;\r\n        });\r\n        this.formControl.patchValue(this.selectedOptions);\r\n        this.onValueChanged(this.formControl.value);\r\n    }\r\n\r\n    onValueChanged(input: any) {\r\n        if (this.multipleAutocompleteDropdownComponent) {\r\n            this.allSelected = this.multipleAutocompleteDropdownComponent.allSelected;\r\n        }\r\n\r\n        if (this.formControl.valid && !this.allSelected) {\r\n            this.params.data[this.params.colDef.field] = this.formControl.value;\r\n        } else {\r\n            this.params.data[this.params.colDef.field] = [];\r\n        }\r\n        if (this.multipleAutocompleteDropdownComponent) {\r\n            this.params.data[\"allDepartments\"] = this.multipleAutocompleteDropdownComponent.allSelected;\r\n        }\r\n    }\r\n\r\n}\r\n","module.exports = \"<atlas-multiple-autocomplete-dropdown #multipleAutocompleteDropdownComponent\\r\\n                                      [options]=\\\"options\\\"\\r\\n                                      [selectedOptions]=\\\"selectedOptions\\\"\\r\\n                                      [allOptionsElement]=\\\"allOptionsElement\\\"\\r\\n                                      [allSelected]=\\\"allSelected\\\"\\r\\n                                      [displayCode]=\\\"displayCode\\\"\\r\\n                                      [codeProperty]=\\\"codeProperty\\\"\\r\\n                                      [displayProperty]=\\\"displayProperty\\\"\\r\\n                                      [placeholder]=\\\"placeholder\\\"\\r\\n                                      [placeholderFilter]=\\\"placeholderFilter\\\"\\r\\n                                      [elementName]=\\\"elementName\\\"\\r\\n                                      [fieldCtrl]=\\\"formControl\\\">\\r\\n</atlas-multiple-autocomplete-dropdown>\\r\\n\"","module.exports = \"\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MultipleAutocompleteDropdownComponent } from '../../multiple-autocomplete-dropdown/multiple-autocomplete-dropdown.component';\r\nimport { FormControl, Validators } from '@angular/forms';\r\nimport { AgRendererComponent } from 'ag-grid-angular';\r\nimport { IAfterGuiAttachedParams } from 'ag-grid-community';\r\n\r\n@Component({\r\n  selector: 'atlas-ag-grid-multiple-autocomplete',\r\n  templateUrl: './ag-grid-multiple-autocomplete.component.html',\r\n  styleUrls: ['./ag-grid-multiple-autocomplete.component.scss']\r\n})\r\nexport class AgGridMultipleAutocompleteComponent implements OnInit, AgRendererComponent {\r\n\r\n    @ViewChild('multipleAutocompleteDropdownComponent') multipleAutocompleteDropdownComponent: MultipleAutocompleteDropdownComponent;\r\n\r\n    protected params: any;\r\n\r\n    options: any[];\r\n    allSelected: boolean ;\r\n    selectedOptions: any[] ;\r\n    allOptionsElement: any;\r\n    displayCode: boolean; // if the codeProperty should be displayed with the displayProperty\r\n    filterProperty: string;\r\n    codeProperty: string;\r\n    displayProperty: string; // property on which we'll be sorting the displayed array\r\n    placeholder: string;\r\n    placeholderFilter: string;\r\n    elementName: string;\r\n\r\n    colId: string;\r\n    formControl: FormControl;\r\n\r\n    isRequiredField: boolean = false;\r\n\r\n    constructor() {   \r\n    }\r\n\r\n    refresh(params: any): boolean {\r\n        return true;\r\n    }\r\n    afterGuiAttached?(params?: IAfterGuiAttachedParams): void {\r\n    }\r\n    ngOnInit() {\r\n    }\r\n\r\n    agInit(params: any): void {\r\n        this.params = params;\r\n\r\n        this.formControl = new FormControl('', [Validators.required]);\r\n        this.isRequiredField = params.isRequired;\r\n        this.options = params.options;\r\n        this.allSelected = params.allSelected;\r\n        this.selectedOptions = params.selectedOptions;\r\n        this.allOptionsElement = params.allOptionsElement;\r\n        this.displayCode = params.displayCode;\r\n        this.codeProperty = params.codeProperty;\r\n        this.displayProperty = params.displayProperty;\r\n        this.placeholder = params.placeholder;\r\n        this.placeholderFilter = params.placeholderFilter;\r\n        this.elementName = params.elementName;\r\n        this.formControl.patchValue(this.params.data[this.params.colDef.field]);\r\n        this.onValueChanged(this.formControl.value);\r\n    }\r\n\r\n\r\n    onValueChanged(input: any) {\r\n        if (this.formControl.valid) {\r\n            this.params.data[this.params.colDef.field] = this.formControl.value;\r\n        } else {\r\n            this.params.data[this.params.colDef.field] = null;\r\n        }\r\n    }\r\n}\r\n","module.exports = \"<div [class.displayMode]=\\\"!isEditable\\\"\\r\\n     class=\\\"custom-form\\\"\\r\\n     [class.isEmpty]=\\\"!fieldControl.value\\\"\\r\\n     [class.required-field]=\\\"isRequired\\\">\\r\\n    <mat-form-field floatLabel=\\\"never\\\">\\r\\n        <input [class.displayMode]=\\\"formControl.disabled\\\"\\r\\n               type=\\\"text\\\"\\r\\n               matInput\\r\\n               [formControl]=\\\"formControl\\\"\\r\\n               (click)=\\\"onInputClicked()\\\"\\r\\n               (focusout)=\\\"onFocusOut()\\\"\\r\\n               [matAutocomplete]=\\\"autocomplete\\\">\\r\\n        <mat-placeholder class=\\\"placeholder\\\"> {{isRequiredField?'Required *':null}}</mat-placeholder>\\r\\n        <mat-icon *ngIf=\\\"!formControl.disabled\\\"\\r\\n                  class=\\\"bookmark-icon\\\"\\r\\n                  matSuffix>bookmark</mat-icon>\\r\\n        <mat-autocomplete #autocomplete=\\\"matAutocomplete\\\"\\r\\n                          (optionSelected)=\\\"selectionChanged($event);\\\"\\r\\n                          [displayWith]=\\\"displayFn.bind(this)\\\">\\r\\n            <mat-option *ngFor=\\\"let object of filteredOptions\\\"\\r\\n                        [value]=\\\"valueProperty ? object[valueProperty] : object\\\">\\r\\n                <span>{{ codeProperty ? object[codeProperty] : '' }}</span>\\r\\n                <span *ngIf=\\\"codeProperty && descriptionProperty\\\"> | </span>\\r\\n                <span>{{ descriptionProperty ? object[descriptionProperty] : descriptionProperty }}</span>\\r\\n            </mat-option>\\r\\n        </mat-autocomplete>\\r\\n    </mat-form-field>\\r\\n</div>\"","module.exports = \":host ::ng-deep .mat-form-field-infix {\\n  border-top: 0; }\\n\\n.mat-form-field {\\n  font-size: 13px; }\\n\\n.mat-form-field .mat-input-element {\\n    font-size: 12px;\\n    text-overflow: ellipsis; }\\n\\n.mat-form-field .placeholder {\\n    color: #00a9c6;\\n    font-size: 12px;\\n    font-weight: 400; }\\n\\n.mat-form-field .bookmark-icon {\\n    font-size: 16px; }\\n\\n.mat-form-field-invalid .placeholder {\\n  color: #df5a4d;\\n  font-size: 12px; }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, Validators } from '@angular/forms';\r\nimport { AgRendererComponent } from 'ag-grid-angular';\r\nimport { IAfterGuiAttachedParams } from 'ag-grid-community';\r\nimport { inDropdownListValidator } from './../../../directives/autocomplete-dropdown.directive';\r\nimport { UtilService } from './../../../services/util.service';\r\nimport { DropdownSelectComponent } from './../../form-components/dropdown-select/dropdown-select.component';\r\n\r\n@Component({\r\n    selector: 'atlas-ag-grid-autocomplete',\r\n    templateUrl: './ag-grid-autocomplete.component.html',\r\n    styleUrls: ['./ag-grid-autocomplete.component.scss'],\r\n})\r\nexport class AgGridAutocompleteComponent extends DropdownSelectComponent implements AgRendererComponent, OnInit {\r\n\r\n    constructor(protected utilService: UtilService) {\r\n        super(utilService);\r\n    }\r\n\r\n    isSelectedValue: boolean;\r\n    valueProperty: string;\r\n    codeProperty: string;\r\n    descriptionProperty: string;\r\n    displayProperty: string;\r\n    displayCode = false;\r\n    colId: string;\r\n\r\n    formControl = new FormControl();\r\n    companyId: string;\r\n    options: any[];\r\n    filteredOptions: any[];\r\n    isRequiredField: boolean = false;\r\n\r\n    onClickRefreshList = false;\r\n\r\n    protected params: any;\r\n    filterContextualSearchFunction: ((value: any, options: any[], rowData: any) => any[]);\r\n    filter: string;\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    agInit(params: any): void {\r\n        this.params = params;\r\n\r\n        if (typeof params.isRequired === 'boolean') {\r\n            this.isRequiredField = params.isRequired;\r\n        }\r\n        if (typeof params.isRequired === 'function') {\r\n            const requiredFunc = params.isRequired;\r\n            this.isRequiredField = requiredFunc(params);\r\n        }\r\n\r\n        this.options = params.options;\r\n        this.valueProperty = params.valueProperty;\r\n        this.codeProperty = params.codeProperty;\r\n        this.displayProperty = params.displayProperty;\r\n        this.descriptionProperty = params.descriptionProperty ? params.descriptionProperty : params.displayProperty;\r\n        this.displayCode = params.displayCode ? params.displayCode : false;\r\n        this.formControl.patchValue(this.params.data[this.params.colDef.field]);\r\n        this.filterContextualSearchFunction = params.filterContextualSearchFunction;\r\n        this.onValueChanged(this.formControl.value);\r\n\r\n        if (!this.params.context.gridEditable) {\r\n            this.formControl.disable();\r\n        }\r\n        if (this.params.colDef.cellRendererParams &&\r\n            this.params.colDef.cellRendererParams.editable) {\r\n            this.formControl.enable();\r\n        }\r\n\r\n        this.formControl.valueChanges.subscribe((input) => {\r\n            this.onValueChanged(input);\r\n            this.params.colDef.onCellValueChanged(this.params);\r\n        });\r\n\r\n        // Do not remove this code - even if error is not displayed, it is needed for the component behavior\r\n        const validators = [inDropdownListValidator(this.options, this.valueProperty, true)];\r\n        if (this.isRequired) {\r\n            validators.push(Validators.required);\r\n        }\r\n        this.formControl.setValidators(Validators.compose(\r\n            validators,\r\n        ));\r\n    }\r\n\r\n    onValueChanged(input: any) {\r\n        if (!input && input !== '') {\r\n            input = this.filter;\r\n        }\r\n        // adding this code so that the contextual search filter options and autocomplete filter options remain in sink\r\n        if (this.filterContextualSearchFunction) {\r\n            this.options = this.filterContextualSearchFunction(this.formControl.value, this.options, this.params.data);\r\n        }\r\n        if (this.formControl.disabled) {\r\n            return;\r\n        }\r\n\r\n        this.filteredOptions = this.getFilteredList(input);\r\n\r\n        if (this.valueProperty && this.options && input) {\r\n            let selected;\r\n            if (this.codeProperty && this.codeProperty !== this.valueProperty) {\r\n                selected = this.options.find((option) =>\r\n                    option[this.codeProperty].toString().toLowerCase() === input.toString().toLowerCase());\r\n            } else if (this.displayProperty && this.displayProperty !== this.valueProperty) {\r\n                selected = this.options.find((option) =>\r\n                    option[this.displayProperty].toString().toLowerCase() === input.toString().toLowerCase());\r\n            }\r\n            if (selected && selected[this.valueProperty] !== this.formControl.value) {\r\n                this.formControl.setValue(selected[this.valueProperty]);\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (this.formControl.valid) {\r\n            this.params.data[this.params.colDef.field] = this.formControl.value;\r\n        } else {\r\n            this.params.data[this.params.colDef.field] = null;\r\n        }\r\n    }\r\n\r\n    getFilteredList(input = null) {\r\n        if (!input) {\r\n            input = this.formControl.value;\r\n        }\r\n\r\n        const properties = [];\r\n        if (this.codeProperty) {\r\n            properties.push(this.codeProperty);\r\n        }\r\n        if (this.displayProperty) {\r\n            properties.push(this.displayProperty);\r\n        }\r\n        return this.utilService.filterListforAutocomplete(\r\n            this.displayFn(input),\r\n            this.options,\r\n            properties,\r\n            this.valueProperty,\r\n        );\r\n    }\r\n\r\n    onFocusOut() {\r\n        this.filter = this.formControl.value;\r\n        if (this.filteredOptions.length === 1 && this.options.length !== 1 && (this.isRequired || this.formControl.value)\r\n            && this.filteredOptions[0][this.valueProperty] !== this.formControl.value) {\r\n            // If there is only one option possible, select it\r\n            this.formControl.setValue(this.filteredOptions[0][this.valueProperty]);\r\n        }\r\n        if (!this.formControl.valid) {\r\n            this.params.data[this.params.colDef.field] = null;\r\n            this.params.data.isDirty = true;\r\n            this.formControl.patchValue(null);\r\n        }\r\n    }\r\n\r\n    afterGuiAttached(params?: IAfterGuiAttachedParams): void {\r\n    }\r\n\r\n    refresh(params: any): boolean {\r\n        return false;\r\n    }\r\n\r\n    selectionChanged(event: any): void {\r\n        if (!event.option) { return; }\r\n        const object = event.option.value;\r\n    }\r\n\r\n    displayFn(value: any) {\r\n        if (!value && value !== 0) {\r\n            return '';\r\n        }\r\n        const object = this.valueProperty ? this.options.find((option) => option[this.valueProperty] === value) : null;\r\n        value = typeof value !== 'string' && this.displayProperty ? value[this.displayProperty] : value;\r\n        if (object && this.displayCode && this.codeProperty) {\r\n            return object[this.codeProperty];\r\n        }\r\n        return this.displayProperty && object ? object[this.displayProperty] : value;\r\n    }\r\n\r\n    onInputClicked() {\r\n        // removed because it was causing issue. Might be added again in Wave1\r\n        /*if (this.onClickRefreshList) {\r\n            this.filteredOptions = this.options;\r\n        }*/\r\n    }\r\n}\r\n","module.exports = \"<mat-checkbox type=\\\"checkbox\\\"\\r\\n              [ngModel]=\\\"checkStatus === TriStateCheckboxStatus.All\\\"\\r\\n              [indeterminate]=\\\"checkStatus === TriStateCheckboxStatus.Partial\\\"\\r\\n              (ngModelChange)=\\\"onChange($event)\\\"\\r\\n              [disabled]=\\\"disabled\\\"></mat-checkbox>\\r\\n\"","module.exports = \"\"","import { Component } from '@angular/core';\r\nimport { AgRendererComponent } from 'ag-grid-angular';\r\nimport { ICellRendererParams } from 'ag-grid-community';\r\nimport { TriStateCheckboxStatus } from './../../../enums/tri-state-checkbox-status.enum';\r\nimport { CheckboxTriStateCellRendererParams } from './checkbox-tri-state-cell-renderer-params.interface';\r\n\r\n@Component({\r\n    selector: 'atlas-ag-grid-checkbox-tri-state',\r\n    templateUrl: './ag-grid-checkbox-tri-state.component.html',\r\n    styleUrls: ['./ag-grid-checkbox-tri-state.component.scss'],\r\n})\r\nexport class AgGridCheckboxTriStateComponent implements AgRendererComponent {\r\n    params: ICellRendererParams;\r\n    checkStatus: TriStateCheckboxStatus;\r\n    isChecked: boolean;\r\n    editableFunc;\r\n    originalCheckStatusField: string;\r\n    TriStateCheckboxStatus = TriStateCheckboxStatus;\r\n\r\n    disabled: boolean;\r\n    boolean; protected onCellValueChanged = (params) => { };\r\n\r\n    agInit(params: ICellRendererParams | CheckboxTriStateCellRendererParams): void {\r\n        this.params = params as ICellRendererParams;\r\n\r\n        const checkboxParams = params as CheckboxTriStateCellRendererParams;\r\n        this.checkStatus = this.params.data[this.params.colDef.field];\r\n        this.originalCheckStatusField = checkboxParams.originalCheckStatusField;\r\n        this.isChecked = this.checkStatus === TriStateCheckboxStatus.All;\r\n        this.disabled = false;\r\n\r\n        if (typeof checkboxParams.disabled === 'boolean') {\r\n            this.disabled = checkboxParams.disabled;\r\n        }\r\n\r\n        if (typeof checkboxParams.disabled === 'function') {\r\n            this.editableFunc = checkboxParams.disabled;\r\n            this.disabled = this.editableFunc(this.params);\r\n        }\r\n\r\n        if (checkboxParams.onCellValueChanged) {\r\n            this.onCellValueChanged = checkboxParams.onCellValueChanged;\r\n        }\r\n    }\r\n\r\n    onChange(checked: boolean) {\r\n        // If the value was an intermediate state\r\n        // When i click : Partial => All => None => Partial\r\n        if (this.params.data[this.originalCheckStatusField] === TriStateCheckboxStatus.Partial) {\r\n            switch (this.checkStatus) {\r\n                case TriStateCheckboxStatus.None:\r\n                    this.checkStatus = TriStateCheckboxStatus.Partial;\r\n                    break;\r\n                case TriStateCheckboxStatus.Partial:\r\n                    this.checkStatus = TriStateCheckboxStatus.All;\r\n                    break;\r\n                case TriStateCheckboxStatus.All:\r\n                    this.checkStatus = TriStateCheckboxStatus.None;\r\n                    break;\r\n            }\r\n        } else {\r\n            this.checkStatus = checked ? TriStateCheckboxStatus.All : TriStateCheckboxStatus.None;\r\n        }\r\n\r\n        this.params.node.setDataValue(this.params.colDef.colId, this.checkStatus);\r\n        this.onCellValueChanged(this.params);\r\n        this.refresh(this.params);\r\n    }\r\n\r\n    refresh(params: any) {\r\n        if (this.editableFunc) {\r\n            this.disabled = this.editableFunc(this.params);\r\n        }\r\n        return true;\r\n    }\r\n\r\n}\r\n","module.exports = \"<div [class.displayMode]=\\\"!isEditable\\\"\\r\\n     class=\\\"custom-form contextual\\\"\\r\\n     [class.isEmpty]=\\\"!formControl.value\\\"\\r\\n     [class.required-field]=\\\"isRequired\\\">\\r\\n    <mat-form-field floatLabel=\\\"never\\\">\\r\\n\\r\\n        <input [class.displayMode]=\\\"isDisabledField\\\"\\r\\n               type=\\\"text\\\"\\r\\n               matInput\\r\\n               [formControl]=\\\"formControl\\\"\\r\\n               (click)=\\\"onInputClicked()\\\"\\r\\n               (focusout)=\\\"onFocusOut()\\\"\\r\\n               [matAutocomplete]=\\\"autocomplete\\\"\\r\\n               [title]=\\\"getDescription()\\\">\\r\\n        <mat-placeholder class=\\\"placeholder\\\">{{isRequired ?'Required *':null}}</mat-placeholder>\\r\\n        <mat-icon matSuffix\\r\\n                  class=\\\"compass-icon\\\"\\r\\n                  *ngIf=\\\"!isDisabled() && showContextualSearchIcon\\\"\\r\\n                  (click)=\\\"onExploreClicked($event)\\\">explore</mat-icon>\\r\\n\\r\\n        <mat-autocomplete panelWidth=\\\"auto\\\"\\r\\n                          #autocomplete=\\\"matAutocomplete\\\"\\r\\n                          (optionSelected)=\\\"selectionChanged($event);\\\"\\r\\n                          [displayWith]=\\\"displayFn.bind(this)\\\">\\r\\n            <span *ngIf=\\\"!isDisabledField\\\">\\r\\n                <mat-option *ngFor=\\\"let item of getLimitedNumberOfOptions()\\\"\\r\\n                            [value]=\\\"valueProperty ? item[valueProperty] : item\\\">\\r\\n                    {{ getDisplayedValue(item) }}\\r\\n                </mat-option>\\r\\n                <mat-option disabled\\r\\n                            class=\\\"autocomplete-option-with-action\\\"\\r\\n                            *ngIf=\\\"showContextualSearchIcon\\\">\\r\\n                    <a (click)=\\\"onExploreClicked($event)\\\">{{getNumberOfOptionsNotDisplayed()}} more for\\r\\n                        \\\"{{getCurrentValue()}}\\\"</a>\\r\\n                </mat-option>\\r\\n            </span>\\r\\n        </mat-autocomplete>\\r\\n        <mat-error *ngIf=\\\"formControl.errors && isEditable\\\">{{ getErrorMessage() }}</mat-error>\\r\\n    </mat-form-field>\\r\\n</div>\\r\\n\"","module.exports = \":host ::ng-deep .mat-form-field-infix {\\n  border-top: 0; }\\n\\n.mat-form-field {\\n  font-size: 13px; }\\n\\n.mat-form-field .mat-input-element {\\n    font-size: 12px; }\\n\\n.mat-form-field .compass-icon {\\n    font-size: 16px;\\n    margin-top: 0px; }\\n\\n.mat-form-field .placeholder {\\n    color: #00a9c6;\\n    font-size: 12px; }\\n\\n.mat-form-field .mat-form-field-flex {\\n    align-items: center; }\\n\\n.mat-form-field-invalid .placeholder {\\n  color: #df5a4d;\\n  font-size: 12px; }\\n\"","import { Component, EventEmitter, Output } from '@angular/core';\r\nimport { Validators } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material';\r\nimport { ICellRendererAngularComp } from 'ag-grid-angular';\r\nimport * as moment from 'moment';\r\nimport { of } from 'rxjs';\r\nimport { SnackbarService } from '../../../services/snackbar.service';\r\nimport { UtilService } from '../../../services/util.service';\r\nimport { inDropdownListValidator } from './../../../directives/autocomplete-dropdown.directive';\r\nimport { ContextualSearchBaseLightBoxComponent } from './../../contextual-search/base-light-box/contextual-search-base-light-box.component';\r\nimport { AgGridAutocompleteComponent } from './../autocomplete/ag-grid-autocomplete.component';\r\n\r\n@Component({\r\n    selector: 'atlas-ag-grid-contextual-search',\r\n    templateUrl: './ag-grid-contextual-search.component.html',\r\n    styleUrls: ['./ag-grid-contextual-search.component.scss'],\r\n})\r\nexport class AgGridContextualSearchComponent extends AgGridAutocompleteComponent implements ICellRendererAngularComp {\r\n\r\n    lightBoxTitle: string;\r\n    dataLoader: any;\r\n    gridId: any;\r\n\r\n    maxOptionsDisplayed: number = 7;\r\n    showContextualSearchIcon: boolean = true;\r\n\r\n    filterContextualSearchFunction: ((value: any, options: any[], rowData: any) => any[]);\r\n    errorMap: Map<string, string>;\r\n    isDisabledField = false;\r\n\r\n    @Output() readonly optionSelected = new EventEmitter<any>();\r\n    @Output() readonly filteredOptionSet = new EventEmitter<any>();\r\n\r\n    constructor(\r\n        protected utils: UtilService,\r\n        protected dialog: MatDialog,\r\n        protected snackbarService: SnackbarService,\r\n    ) {\r\n        super(utils);\r\n    }\r\n\r\n    agInit(params: any): void {\r\n        this.params = params;\r\n\r\n        this.initAutocompleteVariables(params);\r\n        this.initContextualSearchVariables(params);\r\n        if (!this.params.context.gridEditable) {\r\n            this.formControl.disable();\r\n        } else {\r\n            const validators = [inDropdownListValidator(this.options, this.valueProperty, true)];\r\n            if (this.isRequired) {\r\n                validators.push(Validators.required);\r\n            }\r\n            this.formControl.setValidators(Validators.compose(\r\n                validators,\r\n            ));\r\n        }\r\n    }\r\n\r\n    initAutocompleteVariables(params): void {\r\n        this.isRequired = params.isRequired;\r\n        this.options = params.options;\r\n        this.filteredOptions = params.options;\r\n        this.valueProperty = params.valueProperty;\r\n        this.codeProperty = params.codeProperty;\r\n        this.displayProperty = params.displayProperty;\r\n        this.descriptionProperty = params.descriptionProperty ? params.descriptionProperty : params.displayProperty;\r\n        this.displayCode = params.displayCode ? params.displayCode : false;\r\n        this.errorMap = params.errorMap;\r\n        this.formControl.patchValue(this.params.data[this.params.colDef.field]);\r\n\r\n        this.formControl.valueChanges.subscribe((input) => {\r\n            this.params.oldValue = this.params.data[this.params.colDef.field]; // Needed for cellValueChanged on the grid\r\n            this.onValueChanged(input);\r\n            if (this.params.colDef.onCellValueChanged) {\r\n                this.params.newValue = input; // Needed for cellValueChanged on the grid\r\n                this.params.colDef.onCellValueChanged(this.params);\r\n            }\r\n        });\r\n    }\r\n\r\n    isDisabled(): boolean {\r\n        let isDisabledField = this.isDisabledField;\r\n        const context = this.params.context;\r\n        const cellRendererParams = this.params.colDef.cellRendererParams;\r\n        if (context.gridEditable !== undefined && context.gridEditable !== null) {\r\n            isDisabledField = !context.gridEditable;\r\n        }\r\n        if (cellRendererParams) {\r\n            if (cellRendererParams.disabled && typeof cellRendererParams.disabled === 'function') {\r\n                isDisabledField = cellRendererParams.disabled();\r\n            } else if (cellRendererParams.editable !== undefined && cellRendererParams.editable !== null) {\r\n                isDisabledField = !cellRendererParams.editable;\r\n            }\r\n        }\r\n        this.isDisabledField = isDisabledField; // we use a variable to avoid calling the function 5 times in the html\r\n\r\n        if (!this.formControl.disabled && isDisabledField) {\r\n            this.formControl.disable();\r\n        } else if (this.formControl.disabled && !isDisabledField) {\r\n            this.formControl.enable();\r\n        }\r\n        return isDisabledField;\r\n    }\r\n\r\n    initContextualSearchVariables(params): void {\r\n        this.gridId = params.gridId;\r\n        this.dataLoader = params.dataLoader;\r\n        this.showContextualSearchIcon = params.showContextualSearchIcon;\r\n        this.filterContextualSearchFunction = params.filterContextualSearchFunction;\r\n    }\r\n\r\n    onExploreClicked(event) {\r\n        if (!this.gridId) {\r\n            this.snackbarService.throwErrorSnackBar('This contextual grid is not configured');\r\n            return;\r\n        }\r\n        const searchLightBox = this.openLightbox();\r\n        searchLightBox.afterClosed().subscribe((answer) => {\r\n            if (answer) {\r\n                this.params.data[this.params.colDef.field] = this.displayProperty ?\r\n                    answer[this.displayProperty] : answer;\r\n                this.formControl.setValue(this.valueProperty ? answer[this.valueProperty] : answer);\r\n            }\r\n        });\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n    }\r\n\r\n    isPopup(): boolean {\r\n        return true;\r\n    }\r\n\r\n    openLightbox() {\r\n        return this.dialog.open(ContextualSearchBaseLightBoxComponent, {\r\n            data: {\r\n                lightboxTitle: this.lightBoxTitle,\r\n                gridId: this.gridId,\r\n                rowData$: of(this.getFilteredList(this.filter)),\r\n            },\r\n            width: '80%',\r\n            height: '80%',\r\n        });\r\n    }\r\n\r\n    getFilteredList(input = null) {\r\n        if (!input && input !== '') {\r\n            input = this.formControl.value;\r\n        }\r\n\r\n        if (this.filterContextualSearchFunction) {\r\n            return this.filterContextualSearchFunction(input, this.options, this.params.data);\r\n        } else {\r\n            const properties = [];\r\n            if (this.codeProperty) {\r\n                properties.push(this.codeProperty);\r\n            }\r\n            if (this.displayProperty) {\r\n                properties.push(this.displayProperty);\r\n            }\r\n            const options = this.utilService.filterListforAutocomplete(\r\n                this.displayFn(input),\r\n                this.options,\r\n                properties,\r\n                this.valueProperty,\r\n            );\r\n\r\n            // This code should not be in this generic component\r\n            if (options) {\r\n                options.forEach((value) => {\r\n                    if (value.contractDate) {\r\n                        value.contractDate = this.dateFormatter(value.contractDate);\r\n                    }\r\n                    if (value.authorizedOn) {\r\n                        value.authorizedOn = this.dateFormatter(value.authorizedOn);\r\n                    }\r\n                });\r\n            }\r\n            return options;\r\n        }\r\n    }\r\n\r\n    getLimitedNumberOfOptions(): any[] {\r\n        let limitedNumberOfOptions = [];\r\n        if (this.filteredOptions && this.showContextualSearchIcon) {\r\n            limitedNumberOfOptions = this.filteredOptions.slice(0, this.maxOptionsDisplayed);\r\n        }\r\n        return limitedNumberOfOptions;\r\n    }\r\n\r\n    getNumberOfOptionsNotDisplayed(): number {\r\n        if (this.filteredOptions) {\r\n            const notDisplayedOptions = this.filteredOptions.length - this.getLimitedNumberOfOptions().length;\r\n            return notDisplayedOptions > 0 ? notDisplayedOptions : 0;\r\n        }\r\n    }\r\n\r\n    getCurrentValue(): string {\r\n        const currentValue = this.formControl.value;\r\n        return this.displayFn(currentValue);\r\n    }\r\n\r\n    getDisplayedValue(item: any) {\r\n        if (!this.codeProperty && !this.valueProperty && !this.descriptionProperty) {\r\n            return item;\r\n        }\r\n        if (this.codeProperty && this.valueProperty && this.descriptionProperty) {\r\n            return item[this.codeProperty] + ' | ' + item[this.descriptionProperty];\r\n        }\r\n        return this.codeProperty ? item[this.codeProperty] : item[this.descriptionProperty];\r\n    }\r\n    dateFormatter(params) {\r\n        const momentToFormat: moment.Moment = moment(params);\r\n        const result = params ? momentToFormat.format('DD MMM YYYY').toUpperCase() : '';\r\n        return result;\r\n    }\r\n\r\n    onInputClicked() {\r\n        if (this.filterContextualSearchFunction) {\r\n            this.filteredOptions = this.filterContextualSearchFunction(this.formControl.value, this.options, this.params.data);\r\n            this.filteredOptionSet.emit(this.filteredOptions);\r\n        }\r\n    }\r\n\r\n    getDescription() {\r\n        const currentValue = this.formControl.value;\r\n        if (this.displayProperty && this.descriptionProperty && this.displayProperty !== this.descriptionProperty && currentValue) {\r\n            const object = this.valueProperty ? this.options.find((option) => option[this.valueProperty] === currentValue) : currentValue;\r\n            if (object) {\r\n                return object[this.descriptionProperty];\r\n            }\r\n        }\r\n        return '';\r\n    }\r\n}\r\n","module.exports = \"<mat-autocomplete class=\\\"autocompletedropdown\\\" (optionSelected)=\\\"onOptionSelected($event)\\\" [displayWith]=\\\"display.bind(this)\\\">\\r\\n\\t<mat-option *ngFor=\\\"let element of (apiCollection | async)?.value\\\" [value]=\\\"element\\\">\\r\\n\\r\\n\\t\\t<span *ngIf=\\\"displayValue\\\" class=\\\"elementvalue\\\">{{ element[valueProperty] }}</span>\\r\\n\\t\\t<span *ngIf=\\\"element[valueProperty] !== null && displayValue\\\">|</span>\\r\\n\\t\\t<span class=\\\"elementdescription\\\">{{ element[displayProperty] }}</span>\\r\\n\\t</mat-option>\\r\\n</mat-autocomplete>\\r\\n\"","module.exports = \"\"","import { Component, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { MatAutocomplete } from '@angular/material';\r\nimport { Observable } from 'rxjs';\r\nimport { ApiCollection } from '../../services/common/models';\r\n\r\n@Component({\r\n    selector: 'atlas-api-collection-autocomplete-dropdown',\r\n    exportAs: 'apiCollectionAutocompleteDropdown',\r\n    templateUrl: './api-collection-autocomplete-dropdown.component.html',\r\n    styleUrls: ['./api-collection-autocomplete-dropdown.component.scss'],\r\n})\r\nexport class ApiCollectionAutocompleteDropdownComponent implements OnInit {\r\n\r\n    @Input() apiCollection: Observable<ApiCollection<any>>;\r\n    @Input() displayValue: true;\r\n    @Input() valueProperty: string;\r\n    @Input() displayProperty: string;\r\n    @ViewChild(MatAutocomplete) autocomplete: MatAutocomplete;\r\n    @Output() selected = new EventEmitter<any>();\r\n\r\n    ngOnInit() {\r\n        if (!this.displayProperty) {\r\n            this.displayProperty = 'viewValue';\r\n        }\r\n\r\n        if (!this.valueProperty) {\r\n            this.valueProperty = 'value';\r\n        }\r\n    }\r\n\r\n\tonOptionSelected(e) {\r\n        this.selected.emit(e.option.value);\r\n\t}\r\n\r\n\tdisplay(e) {\r\n\t\treturn e ? e[this.displayProperty] : e;\r\n\t}\r\n}\r\n","module.exports = \"<mat-autocomplete class=\\\"autocompletedropdown\\\" (optionSelected)=\\\"onOptionSelected($event)\\\">\\r\\n\\t<mat-option *ngFor=\\\"let element of list | async\\\" [value]=\\\"element[valueProperty]\\\">\\r\\n\\r\\n\\t\\t<span *ngIf=\\\"displayValue\\\" class=\\\"elementvalue\\\">{{ element[valueProperty] }}</span>\\r\\n\\t\\t<span *ngIf=\\\"element[valueProperty] !== null && displayValue\\\">|</span>\\r\\n\\t\\t<span class=\\\"elementdescription\\\">{{ element[displayProperty] }}</span>\\r\\n\\t</mat-option>\\r\\n</mat-autocomplete>\\r\\n\\r\\n\"","module.exports = \"\"","import { Component, OnInit, Input, ViewChild, EventEmitter, Output } from \"@angular/core\";\r\nimport { MatAutocomplete } from \"@angular/material\"\r\nimport { Observable } from \"rxjs\";\r\n\r\n@Component({\r\n\tselector: \"atr-autocomplete-dropdown\",\r\n\texportAs: \"autocompleteDropdown\",\r\n\ttemplateUrl: \"./autocomplete-dropdown.component.html\",\r\n\tstyleUrls: [\"./autocomplete-dropdown.component.scss\"]\r\n})\r\nexport class AutocompleteDropdownComponent implements OnInit {\r\n\r\n\t@Input() list: Observable<any>;\r\n\t@Input() displayValue: Boolean = true;\r\n\t@Input() valueProperty: string;\r\n\t@Input() displayProperty: string;\r\n\t@ViewChild(MatAutocomplete) autocomplete: MatAutocomplete;\r\n\t@Output() selected = new EventEmitter<any>();\r\n\r\n\tngOnInit() {\r\n\t\tif (!this.displayProperty)\r\n\t\t\tthis.displayProperty = \"viewValue\";\r\n\r\n\t\tif (!this.valueProperty)\r\n\t\t\tthis.valueProperty = \"value\";\r\n\t}\r\n\r\n\tonOptionSelected(e) {\r\n\t\tthis.selected.emit(e);\r\n\t}\r\n}\r\n","module.exports = \"\"","module.exports = \"\"","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormGroup, Validators } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { AtlasFormControl } from '../../entities/atlas-form-control';\r\nimport { FormConfigurationProviderService } from '../../services/form-configuration-provider.service';\r\n\r\n@Component({\r\n    selector: 'atlas-base-form-component',\r\n    templateUrl: './base-form-component.component.html',\r\n    styleUrls: ['./base-form-component.component.scss'],\r\n})\r\nexport class BaseFormComponent implements OnInit, OnDestroy {\r\n    @Input() title: string;\r\n    formGroup: FormGroup;\r\n    subscriptions: Subscription[] = [];\r\n    panelSize: number = 344;\r\n\r\n    constructor(\r\n        protected formConfigurationProvider: FormConfigurationProviderService,\r\n    ) { }\r\n\r\n    ngOnInit() { }\r\n\r\n    ngOnDestroy() {\r\n        this.subscriptions.forEach((subscription) => {\r\n            if (subscription) {\r\n                subscription.unsubscribe();\r\n            }\r\n        });\r\n    }\r\n\r\n    private getFormControls(): AtlasFormControl[] {\r\n        const properties = Object.getOwnPropertyNames(this);\r\n        const formControls: AtlasFormControl[] = [];\r\n        properties.forEach((element) => {\r\n            if (this[element.toString()] instanceof AtlasFormControl) {\r\n                formControls.push(this[element.toString()]);\r\n            }\r\n        });\r\n\r\n        return formControls;\r\n    }\r\n\r\n    getFormGroup(): FormGroup {\r\n        return this.formGroup;\r\n    }\r\n\r\n    populateEntity(entity: any) {\r\n        return entity;\r\n    }\r\n\r\n    initForm(entity: any, isEdit: boolean = false) {\r\n       \r\n    }\r\n\r\n    bindConfiguration() {\r\n        const formControls = this.getFormControls();\r\n        this.setMandatoryFields(formControls);\r\n        this.setDefaultValues(formControls);\r\n    }\r\n\r\n    setMandatoryFields(formControls: AtlasFormControl[]) {\r\n        formControls.forEach((formControl) => {\r\n            if (\r\n                this.formConfigurationProvider.isFieldMandatory(formControl.id)\r\n            ) {\r\n                formControl.setValidators(Validators.required);\r\n            }\r\n        });\r\n    }\r\n\r\n    setDefaultValues(formControls: AtlasFormControl[]) {\r\n        formControls.forEach((control) => {\r\n            const defaultValue = this.formConfigurationProvider.getFieldDefaultValue(\r\n                control.id,\r\n            );\r\n\r\n            if (defaultValue) {\r\n                control.setValue(defaultValue);\r\n            }\r\n        });\r\n    }\r\n}\r\n","module.exports = \"<div #container\\r\\n     class=\\\"container\\\">\\r\\n    <mat-calendar #calendar\\r\\n                  [startAt]=\\\"value\\\"\\r\\n                  [(selected)]=\\\"value\\\">\\r\\n    </mat-calendar>\\r\\n</div>\"","module.exports = \".container {\\n  padding: 10px; }\\n\"","import { AfterViewInit, Component, ViewChild } from '@angular/core';\r\nimport { MatCalendar } from '@angular/material';\r\nimport { IAfterGuiAttachedParams, ICellEditorParams } from 'ag-grid-community';\r\nimport { ICellEditorAngularComp } from \"ag-grid-angular\";\r\nimport { Moment } from 'moment';\r\nimport { IDatePickerCellEditorParams } from './IDatePickerCellEditorParams';\r\n\r\n@Component({\r\n    selector: 'atr-cell-editor-date-picker',\r\n    templateUrl: './cell-editor-date-picker.component.html',\r\n    styleUrls: ['./cell-editor-date-picker.component.scss']\r\n})\r\nexport class CellEditorDatePickerComponent<D extends Date | Moment> implements ICellEditorAngularComp, AfterViewInit {\r\n\r\n    @ViewChild(\"calendar\")\r\n    public calendar: MatCalendar<D>;\r\n\r\n    public params: ICellEditorParams;\r\n    public value: D;\r\n\r\n    constructor() { }\r\n\r\n    ngAfterViewInit(): void {\r\n        this.calendar._userSelected = () => {\r\n            this.params.stopEditing();\r\n        };\r\n    }\r\n\r\n    getValue() {\r\n        return this.value;\r\n    }\r\n\r\n    isPopup?(): boolean {\r\n        return true;\r\n    }\r\n\r\n    isCancelBeforeStart?(): boolean {\r\n        return false;\r\n    }\r\n\r\n    isCancelAfterEnd?(): boolean {\r\n        return false;\r\n    }\r\n\r\n    focusIn?(): void {\r\n    }\r\n\r\n    focusOut?(): void {\r\n    }\r\n\r\n    agInit(params: ICellEditorParams | IDatePickerCellEditorParams<D>): void {\r\n        this.params = params as ICellEditorParams;\r\n        this.value = this.params.value as D;\r\n\r\n        let datepickerParam = params as IDatePickerCellEditorParams<D>;\r\n\r\n        if (datepickerParam.minDate) {\r\n            this.calendar.minDate = datepickerParam.minDate;\r\n        }\r\n        if (datepickerParam.maxDate) {\r\n            this.calendar.maxDate = datepickerParam.maxDate;\r\n        }\r\n    }\r\n\r\n    afterGuiAttached?(params?: IAfterGuiAttachedParams): void {\r\n\r\n    }\r\n}\r\n","module.exports = \"<mat-form-field>\\r\\n    <input matInput\\r\\n           [formControl]=\\\"monthPickerCtrl\\\"\\r\\n           [matDatepicker]=\\\"picker\\\">\\r\\n</mat-form-field>\\r\\n<mat-datepicker #picker\\r\\n                (monthSelected)=\\\"onMonthSelected($event)\\\"\\r\\n                (closed)=\\\"onPickerClosed()\\\"\\r\\n                [startView]=\\\"viewStart\\\"\\r\\n                [startAt]=\\\"startDate\\\"></mat-datepicker>\"","import { AfterViewInit, Component, ViewChild } from '@angular/core';\r\nimport { MatCalendar, MatDatepicker } from '@angular/material';\r\nimport { IAfterGuiAttachedParams, ICellEditorParams } from 'ag-grid-community';\r\nimport { ICellEditorAngularComp } from \"ag-grid-angular\";\r\nimport { Moment } from 'moment';\r\nimport { IDatePickerCellEditorParams } from '../cell-editor-date-picker/IDatePickerCellEditorParams';\r\nimport { FormControl } from '@angular/forms';\r\nimport { DateFormats } from '../../enums/date-format.enum';\r\nimport { DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from '@angular/material';\r\nimport { MomentDateAdapter } from '@angular/material-moment-adapter';\r\n\r\nexport const MY_FORMATS = {\r\n    parse: {\r\n        dateInput: 'MMM YYYY',\r\n    },\r\n    display: {\r\n        dateInput: 'MMM YYYY',\r\n        monthYearLabel: 'MMM YYYY',\r\n        dateA11yLabel: 'LL',\r\n        monthYearA11yLabel: 'MMMM YYYY',\r\n    },\r\n};\r\n\r\n@Component({\r\n    selector: 'atr-cell-editor-month-date-picker',\r\n    templateUrl: './cell-editor-month-date-picker.component.html',\r\n    providers: [\r\n        // `MomentDateAdapter` can be automatically provided by importing `MomentDateModule` in your\r\n        // application's root module. We provide it at the component level here, due to limitations of\r\n        // our example generation script.\r\n        { provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] },\r\n\r\n        { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS },\r\n    ],\r\n})\r\nexport class CellEditorMonthDatePickerComponent<D extends Date | Moment> implements ICellEditorAngularComp, AfterViewInit {\r\n\r\n    @ViewChild(\"picker\")\r\n    datePicker: MatDatepicker<D>\r\n    monthPickerCtrl = new FormControl();\r\n    mode: DateFormats;\r\n    viewStart: string;\r\n    endflag: boolean;\r\n\r\n    params: ICellEditorParams;\r\n    value: D;\r\n    startDate: D;\r\n\r\n    constructor() { }\r\n\r\n    ngAfterViewInit(): void {\r\n        this.datePicker.open();\r\n    }\r\n\r\n    getValue() {\r\n        return this.monthPickerCtrl.value;\r\n    }\r\n\r\n    isPopup?(): boolean {\r\n        return false;\r\n    }\r\n\r\n    isCancelBeforeStart?(): boolean {\r\n        return false;\r\n    }\r\n\r\n    isCancelAfterEnd?(): boolean {\r\n        return false;\r\n    }\r\n\r\n    focusIn?(): void {\r\n    }\r\n\r\n    focusOut?(): void {\r\n    }\r\n\r\n    agInit(params: any): void {\r\n        this.params = params as ICellEditorParams;\r\n        this.value = this.params.value as D;\r\n        this.startDate = params.startAt;\r\n\r\n        if (typeof params.mode === 'number') {\r\n            this.mode = params.mode;\r\n        }\r\n        if (typeof params.mode === 'function') {\r\n            this.mode = params.mode(params);\r\n        }\r\n\r\n        if (typeof params.endflag === 'boolean') {\r\n            this.endflag = params.endflag;\r\n        }\r\n        if (typeof params.endflag === 'function') {\r\n            this.endflag = params.endflag(params);\r\n        }\r\n\r\n        this.startDate = (typeof params.startAt == 'function') ? params.startAt(params) : params.startAt;\r\n\r\n        let datepickerParam = params as IDatePickerCellEditorParams<D>;\r\n        this.viewStart = this.mode == DateFormats.Month ? 'multi-year' : 'month';\r\n    }\r\n\r\n    afterGuiAttached?(params?: IAfterGuiAttachedParams): void {\r\n    }\r\n\r\n    onMonthSelected(event) {\r\n        if (this.mode == DateFormats.Month) {\r\n            this.monthPickerCtrl.setValue(event);\r\n            this.datePicker.close();\r\n        }\r\n    }\r\n\r\n    onPickerClosed() {\r\n        if (this.endflag && this.mode == DateFormats.Month) {\r\n            this.monthPickerCtrl.setValue(this.monthPickerCtrl.value.endOf('month').startOf('day'));\r\n        }\r\n    }\r\n\r\n}\r\n","import { AfterViewInit, Component } from '@angular/core';\r\nimport { ICellEditorAngularComp } from 'ag-grid-angular';\r\nimport { ICellEditorParams } from 'ag-grid-community';\r\nimport { AtlasNumber } from '../../../entities/atlas-number.entity';\r\nimport { CellEditorNumericComponent } from '../cell-editor-numeric.component';\r\nimport { INumericCellEditorParams } from '../INumericCellEditorParams';\r\n@Component({\r\n    selector: 'atlas-cell-editor-atlas-numeric',\r\n    templateUrl: './../cell-editor-numeric.component.html',\r\n    styleUrls: ['./../cell-editor-numeric.component.scss'],\r\n})\r\nexport class CellEditorAtlasNumericComponent extends CellEditorNumericComponent implements AfterViewInit, ICellEditorAngularComp {\r\n    originalValue: string;\r\n    value: string;\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    getValue(): string {\r\n        return this.value && this.value !== 'NaN' ? this.value : '';\r\n    }\r\n\r\n    isCancelAfterEnd?(): boolean {\r\n        const originalValue: AtlasNumber = new AtlasNumber(this.originalValue);\r\n        return originalValue.equal(this.value);\r\n    }\r\n\r\n    agInit(params: ICellEditorParams | INumericCellEditorParams): void {\r\n        this.params = params as ICellEditorParams;\r\n        const value = this.params.value;\r\n        this.value = new AtlasNumber(value).toString();\r\n        this.originalValue = this.value;\r\n\r\n        const numericParams = params as INumericCellEditorParams;\r\n        this.displayMask = numericParams.displayMask;\r\n        this.isRightAligned = numericParams.isRightAligned;\r\n    }\r\n}\r\n","module.exports = \"<div #container\\r\\n     class=\\\"atr-cell-editor\\\">\\r\\n    <mat-input-container>\\r\\n        <input matInput\\r\\n               [(ngModel)]=\\\"value\\\"\\r\\n               #numericInput\\r\\n               [ngClass]=\\\"{ 'right-aligned': isRightAligned }\\\"\\r\\n               [placeholder]=\\\"isRequiredField?'Required*':null\\\"\\r\\n               [textMask]=\\\"{ mask: displayMask }\\\"\\r\\n               type=\\\"text\\\" />\\r\\n    </mat-input-container>\\r\\n</div>\"","module.exports = \".right-aligned {\\n  text-align: right; }\\n\\n::-webkit-input-placeholder {\\n  color: #00a9c6; }\\n\\n:-ms-input-placeholder {\\n  color: #00a9c6; }\\n\\n::-ms-input-placeholder {\\n  color: #00a9c6; }\\n\\n::placeholder {\\n  color: #00a9c6; }\\n\"","import { AfterViewInit, Component, ViewChild } from '@angular/core';\r\nimport { MatInput } from '@angular/material';\r\nimport { ICellEditorAngularComp } from 'ag-grid-angular';\r\nimport { IAfterGuiAttachedParams, ICellEditorParams } from 'ag-grid-community';\r\nimport { ConvertToNumber } from '../../numberMask';\r\nimport { INumericCellEditorParams } from './INumericCellEditorParams';\r\n\r\n@Component({\r\n    selector: 'atr-cell-editor-numeric',\r\n    templateUrl: './cell-editor-numeric.component.html',\r\n    styleUrls: ['./cell-editor-numeric.component.scss'],\r\n})\r\nexport class CellEditorNumericComponent implements AfterViewInit, ICellEditorAngularComp {\r\n\r\n    @ViewChild(MatInput) matInput: MatInput;\r\n    @ViewChild('numericInput') input: any;\r\n    originalValue: number | string;\r\n    value: number | string;\r\n    displayMask: string[] | RegExp = [];\r\n    isRightAligned: boolean;\r\n    params: ICellEditorParams;\r\n    isRequiredField: boolean = false;\r\n\r\n    constructor() { }\r\n\r\n    ngAfterViewInit() {\r\n        setTimeout(() => {\r\n            this.matInput.focus();\r\n            this.input.nativeElement.select();\r\n        });\r\n    }\r\n\r\n    getValue(): number | string {\r\n        return ConvertToNumber(this.value);\r\n    }\r\n\r\n    isPopup?(): boolean {\r\n        return false;\r\n    }\r\n\r\n    isCancelBeforeStart?(): boolean {\r\n        return false;\r\n    }\r\n\r\n    isCancelAfterEnd?(): boolean {\r\n        return (this.originalValue === ConvertToNumber(this.value));\r\n    }\r\n\r\n    focusIn?(): void {\r\n    }\r\n\r\n    focusOut?(): void {\r\n    }\r\n\r\n    agInit(params: ICellEditorParams | INumericCellEditorParams | any): void {\r\n\r\n        this.isRequiredField = params.isRequiredField;\r\n        this.params = params as ICellEditorParams;\r\n        this.value = this.params.value;\r\n        this.originalValue = this.value;\r\n\r\n        const numericParams = params as INumericCellEditorParams;\r\n        this.displayMask = numericParams.displayMask;\r\n        this.isRightAligned = numericParams.isRightAligned;\r\n    }\r\n\r\n    afterGuiAttached?(params?: IAfterGuiAttachedParams): void {\r\n    }\r\n}\r\n","module.exports = \"<div #container class=\\\"container\\\">\\r\\n\\t<mat-form-field>\\r\\n\\t\\t<mat-select [(value)]=\\\"value\\\" #select>\\r\\n\\t\\t\\t<mat-option *ngFor=\\\"let val of values\\\" [value]=\\\"val[valuePropertyName]\\\" >\\r\\n\\t\\t\\t  {{ getFormatedValue(val[valuePropertyName]) }}\\r\\n\\t\\t\\t</mat-option>\\r\\n\\t\\t  </mat-select>\\r\\n\\t</mat-form-field>\\r\\n</div>\"","module.exports = \".container {\\n  padding: 0px 20px; }\\n\"","import { AfterViewInit, Component, ViewChild } from '@angular/core';\r\nimport { MatSelect } from '@angular/material';\r\nimport { ICellEditorAngularComp } from 'ag-grid-angular';\r\nimport { IAfterGuiAttachedParams, ICellEditorParams } from 'ag-grid-community';\r\nimport { ISelectCellEditorParams } from './ISelectCellEditorParams';\r\n\r\n@Component({\r\n    selector: 'atr-cell-editor-select',\r\n    templateUrl: './cell-editor-select.component.html',\r\n    styleUrls: ['./cell-editor-select.component.scss'],\r\n})\r\nexport class CellEditorSelectComponent implements AfterViewInit, ICellEditorAngularComp {\r\n    @ViewChild(MatSelect) select: MatSelect;\r\n    values: any[];\r\n    displayPropertyName: string;\r\n    valuePropertyName: string;\r\n    displayFormat: string;\r\n    value: any;\r\n    params: ICellEditorParams;\r\n\r\n    constructor() {}\r\n\r\n    ngAfterViewInit() {\r\n        setTimeout(() => {\r\n            this.select.focus();\r\n            this.select.open();\r\n        });\r\n    }\r\n\r\n    getValue() {\r\n        return this.value;\r\n    }\r\n\r\n    isPopup?(): boolean {\r\n        return true;\r\n    }\r\n\r\n    isCancelBeforeStart?(): boolean {\r\n        return false;\r\n    }\r\n\r\n    isCancelAfterEnd?(): boolean {\r\n        return false;\r\n    }\r\n\r\n    focusIn?(): void {}\r\n\r\n    focusOut?(): void {}\r\n\r\n    agInit(params: ICellEditorParams | ISelectCellEditorParams): void {\r\n        this.params = params as ICellEditorParams;\r\n        this.value = this.params.value;\r\n\r\n        const selectParams = params as ISelectCellEditorParams;\r\n        this.values = selectParams.values;\r\n        this.displayPropertyName = selectParams.displayPropertyName;\r\n        this.valuePropertyName = selectParams.valuePropertyName;\r\n        this.displayFormat = selectParams.displayFormat;\r\n    }\r\n\r\n    afterGuiAttached?(params?: IAfterGuiAttachedParams): void {}\r\n\r\n    getFormatedValue(code: string): string {\r\n        const item = this.values.filter((val) => val[this.valuePropertyName] === code)[0];\r\n\r\n        if (this.displayFormat != null && this.displayFormat !== '') {\r\n            return this.displayFormat\r\n                .replace(this.valuePropertyName, item[this.valuePropertyName])\r\n                .replace(this.displayPropertyName, item[this.displayPropertyName]);\r\n        } else {\r\n            return item[this.displayPropertyName];\r\n        }\r\n    }\r\n}\r\n","module.exports = \"<mat-form-field>\\r\\n    <input matInput\\r\\n           [formControl]=\\\"yearPickerCtrl\\\"\\r\\n           [matDatepicker]=\\\"picker\\\">\\r\\n</mat-form-field>\\r\\n<mat-datepicker #picker\\r\\n                (monthSelected)=\\\"onYearSelected($event)\\\"\\r\\n                (closed)=\\\"onPickerClosed()\\\"\\r\\n                [startView]=\\\"viewStart\\\"\\r\\n                [startAt]=\\\"startDate\\\"></mat-datepicker>\"","import { AfterViewInit, Component, ViewChild } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE, MatCalendar, MatDatepicker } from '@angular/material';\r\nimport { MomentDateAdapter } from '@angular/material-moment-adapter';\r\nimport { ICellEditorAngularComp } from 'ag-grid-angular';\r\nimport { IAfterGuiAttachedParams, ICellEditorParams } from 'ag-grid-community';\r\nimport { Moment } from 'moment';\r\nimport { DateFormats } from '../../enums/date-format.enum';\r\nimport { IDatePickerCellEditorParams } from '../cell-editor-date-picker/IDatePickerCellEditorParams';\r\n\r\nexport const MY_FORMATS = {\r\n    parse: {\r\n        dateInput: 'YYYY',\r\n    },\r\n    display: {\r\n        dateInput: 'YYYY',\r\n        monthYearLabel: 'YYYY',\r\n        dateA11yLabel: 'LL',\r\n        monthYearA11yLabel: 'YYYY',\r\n    },\r\n};\r\n\r\n@Component({\r\n    selector: 'atr-cell-editor-year-picker',\r\n    templateUrl: './cell-editor-year-picker.component.html',\r\n    providers: [\r\n        // `MomentDateAdapter` can be automatically provided by importing `MomentDateModule` in your\r\n        // application's root module. We provide it at the component level here, due to limitations of\r\n        // our example generation script.\r\n        { provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] },\r\n\r\n        { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS },\r\n    ],\r\n})\r\nexport class CellEditorYearPickerComponent<D extends Date | Moment> implements ICellEditorAngularComp, AfterViewInit {\r\n\r\n    @ViewChild('picker') datePicker: MatDatepicker<D>;\r\n    yearPickerCtrl = new FormControl();\r\n    mode: DateFormats;\r\n    viewStart: string;\r\n    endflag: boolean;\r\n\r\n    params: ICellEditorParams;\r\n    value: D;\r\n    startDate: D;\r\n\r\n    constructor() { }\r\n\r\n    ngAfterViewInit(): void {\r\n        this.datePicker.open();\r\n    }\r\n\r\n    getValue() {\r\n        return this.yearPickerCtrl.value;\r\n    }\r\n\r\n    isPopup?(): boolean {\r\n        return false;\r\n    }\r\n\r\n    isCancelBeforeStart?(): boolean {\r\n        return false;\r\n    }\r\n\r\n    isCancelAfterEnd?(): boolean {\r\n        return false;\r\n    }\r\n\r\n    focusIn?(): void {\r\n    }\r\n\r\n    focusOut?(): void {\r\n    }\r\n\r\n    agInit(params: any): void {\r\n        this.params = params as ICellEditorParams;\r\n        this.value = this.params.value as D;\r\n        this.startDate = params.startAt;\r\n\r\n        if (typeof params.mode === 'number') {\r\n            this.mode = params.mode;\r\n        }\r\n        if (typeof params.mode === 'function') {\r\n            this.mode = params.mode(params);\r\n        }\r\n\r\n        if (typeof params.endflag === 'boolean') {\r\n            this.endflag = params.endflag;\r\n        }\r\n        if (typeof params.endflag === 'function') {\r\n            this.endflag = params.endflag(params);\r\n        }\r\n\r\n        this.startDate = (typeof params.startAt === 'function') ? params.startAt(params) : params.startAt;\r\n\r\n        const datepickerParam = params as IDatePickerCellEditorParams<D>;\r\n        this.viewStart = this.mode === DateFormats.Year ? 'multi-year' : 'year';\r\n    }\r\n\r\n    afterGuiAttached?(params?: IAfterGuiAttachedParams): void {\r\n    }\r\n\r\n    onYearSelected(event) {\r\n        if (this.mode === DateFormats.Year) {\r\n            this.yearPickerCtrl.setValue(event);\r\n            this.datePicker.close();\r\n        }\r\n    }\r\n\r\n    onPickerClosed() {\r\n        if (this.endflag && this.mode === DateFormats.Year) {\r\n            this.yearPickerCtrl.setValue(this.yearPickerCtrl.value.endOf('month').startOf('day'));\r\n        }\r\n    }\r\n\r\n}\r\n","module.exports = \"<mat-chip-list>\\r\\n    <!-- Which color should the chips be? -->\\r\\n    <mat-chip *ngFor=\\\"let text of textList\\\"\\r\\n              color=\\\"primary\\\"\\r\\n              selected\\r\\n              disabled=true\\r\\n              (removed)=\\\"onRemoveClick($event)\\\">\\r\\n        {{text}}\\r\\n        <mat-icon matChipRemove\\r\\n                  [ngClass]=\\\"{'disable':!disabled}\\\"\\r\\n                  *ngIf=\\\"removable\\\">cancel</mat-icon>\\r\\n    </mat-chip>\\r\\n</mat-chip-list>\"","module.exports = \"\"","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'atlas-chip-list',\r\n    templateUrl: './chip-list.component.html',\r\n    styleUrls: ['./chip-list.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ChipListComponent {\r\n    @Input() textList: string[];\r\n    @Input() removable: boolean = false;\r\n    @Input() disabled: boolean = false;\r\n    @Output() readonly removedElement = new EventEmitter<any>();\r\n\r\n    onRemoveClick(event) {\r\n        this.removedElement.emit(\r\n            event.chip.value\r\n                .trim()\r\n                .split(' ')[0]\r\n                .trim(),\r\n        );\r\n    }\r\n}\r\n","module.exports = \"<div fxFlex=\\\"75\\\"\\r\\n     fxLayout=\\\"column\\\">\\r\\n    <div fxLayout=\\\"row\\\">\\r\\n        <div class='commodity-input-field '>\\r\\n            <atlas-dropdown-select [isEditable]=\\\"isEditable\\\"\\r\\n                                   label=\\\"Cmy 1\\\"\\r\\n                                   [fieldControl]=\\\"commodityPart1Ctrl\\\"\\r\\n                                   [options]=\\\"commodityPart1FilteredList\\\"\\r\\n                                   [isAutocompleteActivated]=\\\"isAutocompleteActivated\\\"\\r\\n                                   [errorMap]=\\\"commodityErrorMap\\\"\\r\\n                                   [ngClass]=\\\"{'required-field': isRequired()}\\\">\\r\\n            </atlas-dropdown-select>\\r\\n        </div>\\r\\n        <div class='commodity-input-field '>\\r\\n            <atlas-dropdown-select [isEditable]=\\\"isEditable\\\"\\r\\n                                   [label]=\\\"labelCmy2\\\"\\r\\n                                   [fieldControl]=\\\"commodityPart2Ctrl\\\"\\r\\n                                   [options]=\\\"commodityPart2FilteredList\\\"\\r\\n                                   [isAutocompleteActivated]=\\\"isAutocompleteActivated\\\"\\r\\n                                   [errorMap]=\\\"commodityErrorMap\\\"\\r\\n                                   [ngClass]=\\\"{'required-field': isRequired()}\\\">\\r\\n            </atlas-dropdown-select>\\r\\n        </div>\\r\\n\\r\\n        <div class='commodity-input-field '>\\r\\n            <atlas-dropdown-select [isEditable]=\\\"isEditable\\\"\\r\\n                                   [label]=\\\"labelCmy3\\\"\\r\\n                                   [fieldControl]=\\\"commodityPart3Ctrl\\\"\\r\\n                                   [options]=\\\"commodityPart3FilteredList\\\"\\r\\n                                   [isAutocompleteActivated]=\\\"isAutocompleteActivated\\\"\\r\\n                                   [errorMap]=\\\"commodityErrorMap\\\"\\r\\n                                   [ngClass]=\\\"{'required-field': isRequired()}\\\">\\r\\n            </atlas-dropdown-select>\\r\\n        </div>\\r\\n\\r\\n        <div class='commodity-input-field '>\\r\\n            <atlas-dropdown-select [isEditable]=\\\"isEditable\\\"\\r\\n                                   [label]=\\\"labelCmy4\\\"\\r\\n                                   [fieldControl]=\\\"commodityPart4Ctrl\\\"\\r\\n                                   [options]=\\\"commodityPart4FilteredList\\\"\\r\\n                                   [isAutocompleteActivated]=\\\"isAutocompleteActivated\\\"\\r\\n                                   [errorMap]=\\\"commodityErrorMap\\\"\\r\\n                                   [ngClass]=\\\"{'required-field': isRequired()}\\\">\\r\\n            </atlas-dropdown-select>\\r\\n        </div>\\r\\n        <div class='commodity-input-field '>\\r\\n            <atlas-dropdown-select [isEditable]=\\\"isEditable\\\"\\r\\n                                   [label]=\\\"labelCmy5\\\"\\r\\n                                   [fieldControl]=\\\"commodityPart5Ctrl\\\"\\r\\n                                   [options]=\\\"commodityPart5FilteredList\\\"\\r\\n                                   [isAutocompleteActivated]=\\\"isAutocompleteActivated\\\"\\r\\n                                   [errorMap]=\\\"commodityErrorMap\\\"\\r\\n                                   [ngClass]=\\\"{'required-field': isRequired()}\\\">\\r\\n            </atlas-dropdown-select>\\r\\n        </div>\\r\\n        <div fxFlex=\\\"0 3 fill\\\">\\r\\n            <mat-icon matSuffix\\r\\n                      *ngIf=\\\"selectedCommodityCtrl.enabled\\\"\\r\\n                      class=\\\"compass-icon\\\"\\r\\n                      (click)=\\\"onExploreClicked($event)\\\">\\r\\n                explore\\r\\n            </mat-icon>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"isRequired()\\\"\\r\\n             class=\\\"custom-form\\\"\\r\\n             [class.required-field]=\\\"required\\\">\\r\\n            <mat-hint>Required*</mat-hint>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div fxFlex=\\\"25\\\"\\r\\n     fxLayout=\\\"column\\\">\\r\\n    <mat-error *ngIf=\\\"!selectedCommodityCtrl.valid  && !commodityPart1Ctrl.hasError('inDropdownList')\\\">\\r\\n        {{ getErrorMessage() }}</mat-error>\\r\\n    <mat-hint *ngIf=\\\"selectedCommodityCtrl.value\\\"\\r\\n              class=\\\"hint-commodity-description\\\">{{selectedCommodityCtrl.value.commodityDescription}}</mat-hint>\\r\\n</div>\\r\\n\"","module.exports = \".commodity-input-field {\\n  width: 15%; }\\n\\n.custom-form,\\n.mat-error {\\n  bottom: 12px;\\n  position: relative;\\n  font-size: 10.5px; }\\n\\n.hint-commodity-description {\\n  color: #332f30; }\\n\"","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\r\nimport { AbstractControl, FormBuilder, FormControl, FormGroup, ValidatorFn, Validators } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { map, takeUntil } from 'rxjs/operators';\r\nimport { inDropdownListValidator } from '../../directives/autocomplete-dropdown.directive';\r\nimport { AtlasFormControl } from '../../entities/atlas-form-control';\r\nimport { Commodity } from '../../entities/commodity.entity';\r\nimport { PagingOptions } from '../../entities/http-services/paging-options';\r\nimport { MasterDataProps } from '../../entities/masterdata-props.entity';\r\nimport { MasterdataService } from '../../services/http-services/masterdata.service';\r\nimport { CommoditySearchTerm } from '../../services/masterdata/dtos/commodity-search-term';\r\nimport { SnackbarService } from '../../services/snackbar.service';\r\nimport { nameof, UtilService } from '../../services/util.service';\r\nimport { ContextualSearchBaseLightBoxComponent } from '../contextual-search/base-light-box/contextual-search-base-light-box.component';\r\n\r\n@Component({\r\n    selector: 'atlas-commodity-input',\r\n    templateUrl: './commodity-input.component.html',\r\n    styleUrls: ['./commodity-input.component.scss'],\r\n})\r\nexport class CommodityInputComponent implements OnInit, OnDestroy {\r\n\r\n    fieldGroup: FormGroup;\r\n    @Input() required: boolean = false;\r\n    @Output() readonly optionSelected = new EventEmitter();\r\n\r\n    @Input() isFromAllocationPage: boolean = false;\r\n\r\n    isAutocompleteActivated: boolean = true;\r\n\r\n    company: string;\r\n    commodities: Commodity[];\r\n\r\n    commodityPart1Ctrl = new AtlasFormControl('Cmy1');\r\n    commodityPart1CompleteList: string[] = [];\r\n    commodityPart1FilteredList: string[] = [];\r\n    commodityPart1Validators: ValidatorFn[] = [];\r\n\r\n    commodityPart2Ctrl = new FormControl('');\r\n    commodityPart2CompleteList: string[] = [];\r\n    commodityPart2FilteredList: string[] = [];\r\n    commodityPart2Validators: ValidatorFn[] = [];\r\n    labelCmy2: string = 'Cmy 2';\r\n\r\n    commodityPart3Ctrl = new FormControl('');\r\n    commodityPart3CompleteList: string[] = [];\r\n    commodityPart3FilteredList: string[] = [];\r\n    commodityPart3Validators: ValidatorFn[] = [];\r\n    labelCmy3: string = 'Cmy 3';\r\n\r\n    commodityPart4Ctrl = new FormControl('');\r\n    commodityPart4CompleteList: string[] = [];\r\n    commodityPart4FilteredList: string[] = [];\r\n    commodityPart4Validators: ValidatorFn[] = [];\r\n    labelCmy4: string = 'Cmy 4';\r\n\r\n    commodityPart5Ctrl = new FormControl('');\r\n    commodityPart5CompleteList: string[] = [];\r\n    commodityPart5FilteredList: string[] = [];\r\n    commodityPart5Validators: ValidatorFn[] = [];\r\n    labelCmy5: string = 'Cmy 5';\r\n\r\n    selectedCommodityCtrl = new FormControl();\r\n\r\n    commodityErrorMap: Map<string, string> = new Map([['inDropdownList', 'Not in list']]);\r\n\r\n    masterdataList: string[] = [MasterDataProps.Commodities];\r\n    destroy$ = new Subject();\r\n    gridId = 'commodityGrid';\r\n    lightBoxTitle = 'Results for Commodity';\r\n    isEditable = true;\r\n\r\n    constructor(protected utils: UtilService,\r\n        protected dialog: MatDialog,\r\n        protected snackbarService: SnackbarService,\r\n        protected formBuilder: FormBuilder,\r\n        protected masterdataService: MasterdataService,\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n\r\n        this.masterdataService\r\n            .getMasterData(this.masterdataList)\r\n            .pipe(\r\n                map((masterdata) => masterdata.commodities),\r\n                takeUntil(this.destroy$),\r\n            )\r\n            .subscribe((commodities) => {\r\n                this.commodities = commodities;\r\n                this.initialize();\r\n            });\r\n\r\n    }\r\n\r\n    initialize() {\r\n        this.buildCommodityArrays();\r\n        this.setValidators();\r\n        if (this.selectedCommodityCtrl.value) {\r\n            this.optionSelected.emit((this.selectedCommodityCtrl.value as Commodity).commodityId);\r\n        }\r\n    }\r\n\r\n    initControlValidators() {\r\n        this.commodityPart1Validators = [inDropdownListValidator(\r\n            this.commodityPart1CompleteList,\r\n            nameof<Commodity>('commodityType'),\r\n            false,\r\n            false,\r\n        ), this.parentFormControlValid(this.selectedCommodityCtrl)];\r\n        this.commodityPart2Validators = [inDropdownListValidator(\r\n            this.commodityPart2CompleteList,\r\n            nameof<Commodity>('commodityOrigin'),\r\n            false,\r\n            false,\r\n        ), this.parentFormControlValid(this.selectedCommodityCtrl)];\r\n        this.commodityPart3Validators = [inDropdownListValidator(\r\n            this.commodityPart3CompleteList,\r\n            nameof<Commodity>('commodityGrade'),\r\n            false,\r\n            false,\r\n        ), this.parentFormControlValid(this.selectedCommodityCtrl)];\r\n        this.commodityPart4Validators = [inDropdownListValidator(\r\n            this.commodityPart4CompleteList,\r\n            nameof<Commodity>('commodityLvl4'),\r\n            false,\r\n            false,\r\n        ), this.parentFormControlValid(this.selectedCommodityCtrl)];\r\n        this.commodityPart5Validators = [\r\n            inDropdownListValidator(\r\n                this.commodityPart5CompleteList,\r\n                nameof<Commodity>('commodityLvl5'),\r\n                false,\r\n                false,\r\n            ),\r\n            this.parentFormControlValid(this.selectedCommodityCtrl),\r\n        ];\r\n    }\r\n\r\n    getFormGroup() {\r\n        this.fieldGroup = this.formBuilder.group(\r\n            {\r\n                selectedCommodity: this.selectedCommodityCtrl,\r\n                commodityPart1: this.commodityPart1Ctrl,\r\n                commodityPart2: this.commodityPart2Ctrl,\r\n                commodityPart3: this.commodityPart3Ctrl,\r\n                commodityPart4: this.commodityPart4Ctrl,\r\n                commodityPart5: this.commodityPart5Ctrl,\r\n            },\r\n        );\r\n\r\n        return this.fieldGroup;\r\n    }\r\n\r\n    setValidators() {\r\n        this.initControlValidators();\r\n        if (this.required) {\r\n            this.selectedCommodityCtrl.setValidators(Validators.required);\r\n        }\r\n\r\n        this.commodityPart1Ctrl.setValidators(\r\n            Validators.compose(this.commodityPart1Validators),\r\n        );\r\n\r\n        this.commodityPart2Ctrl.setValidators(\r\n            Validators.compose(this.commodityPart2Validators),\r\n        );\r\n\r\n        this.commodityPart3Ctrl.setValidators(\r\n            Validators.compose(this.commodityPart3Validators),\r\n        );\r\n\r\n        this.commodityPart4Ctrl.setValidators(\r\n            Validators.compose(this.commodityPart4Validators),\r\n        );\r\n\r\n        this.commodityPart5Ctrl.setValidators(\r\n            Validators.compose(this.commodityPart5Validators),\r\n        );\r\n    }\r\n\r\n    private buildCommodityArrays() {\r\n        this.commodities.forEach((cmy: Commodity) => {\r\n            // Commodity Part 1 should always be defined and is independant\r\n            this.commodityPart1CompleteList = this.pushUniqueStringInArray(this.commodityPart1CompleteList, cmy.commodityType);\r\n        });\r\n\r\n        // Form Controls value changes\r\n        // -- Part 1\r\n        this.commodityPart1FilteredList = this.commodityPart1CompleteList;\r\n        this.commodityPart1Ctrl.valueChanges.subscribe(() => {\r\n            if (!this.isFromAllocationPage) {\r\n                this.onCommodityChange('commodityPart1');\r\n            }\r\n        });\r\n\r\n        // -- Part 2\r\n        this.commodityPart2Ctrl.valueChanges.subscribe(() => {\r\n            if (!this.isFromAllocationPage) {\r\n                this.onCommodityChange('commodityPart2');\r\n            }\r\n        });\r\n\r\n        // -- Part 3\r\n        this.commodityPart3Ctrl.valueChanges.subscribe(() => {\r\n            if (!this.isFromAllocationPage) {\r\n                this.onCommodityChange('commodityPart3');\r\n            }\r\n        });\r\n\r\n        // -- Part 4\r\n        this.commodityPart4Ctrl.valueChanges.subscribe(() => {\r\n            if (!this.isFromAllocationPage) {\r\n                this.onCommodityChange('commodityPart4');\r\n            }\r\n        });\r\n\r\n        // -- Part 5 : just filter the list\r\n        this.commodityPart5Ctrl.valueChanges.subscribe(() => {\r\n            if (!this.isFromAllocationPage) {\r\n                this.onCommodityChange('commodityPart5');\r\n            }\r\n        });\r\n    }\r\n\r\n    onCommodityChange(controlName: string) {\r\n        if (this.fieldGroup && this.fieldGroup.get(controlName) &&\r\n            this.fieldGroup.value[controlName] === this.fieldGroup.get(controlName).value) {\r\n            // Old value === new value\r\n            return;\r\n        }\r\n        const valuePart1 = this.commodityPart1Ctrl.value ? this.commodityPart1Ctrl.value : '';\r\n        const valuePart2 = this.commodityPart2Ctrl.value ? this.commodityPart2Ctrl.value : '';\r\n        const valuePart3 = this.commodityPart3Ctrl.value ? this.commodityPart3Ctrl.value : '';\r\n        const valuePart4 = this.commodityPart4Ctrl.value ? this.commodityPart4Ctrl.value : '';\r\n        const valuePart5 = this.commodityPart5Ctrl.value ? this.commodityPart5Ctrl.value : '';\r\n        switch (controlName) {\r\n            case ('commodityPart1'): {\r\n                this.commodityPart2Ctrl.reset();\r\n                this.commodityPart1FilteredList = this.commodityPart1CompleteList.filter((cmy) => {\r\n                    return cmy.toLocaleLowerCase().startsWith(valuePart1.toLocaleLowerCase());\r\n                });\r\n                this.commodityPart2CompleteList = this.getDistinctString(this.commodities\r\n                    .filter((commodity) =>\r\n                        (commodity.commodityType ? commodity.commodityType : '').toLocaleLowerCase() === valuePart1.toLocaleLowerCase(),\r\n                    )\r\n                    .map((commodity) => commodity.commodityOrigin ? commodity.commodityOrigin : ''))\r\n                    .sort();\r\n            }\r\n            // tslint:disable-next-line:no-switch-case-fall-through\r\n            case ('commodityPart2'): {\r\n                this.commodityPart3Ctrl.reset();\r\n                this.commodityPart2FilteredList = this.commodityPart2CompleteList.filter((cmy) => {\r\n                    return cmy.toLocaleLowerCase().startsWith(valuePart2.toLocaleLowerCase());\r\n                });\r\n                this.commodityPart3CompleteList = this.getDistinctString(this.commodities\r\n                    .filter((commodity) =>\r\n                        (commodity.commodityType ? commodity.commodityType : '').toLocaleLowerCase() === valuePart1.toLocaleLowerCase()\r\n                        &&\r\n                        (commodity.commodityOrigin ? commodity.commodityOrigin : '').toLocaleLowerCase() === valuePart2.toLocaleLowerCase(),\r\n                    )\r\n                    .map((commodity) => commodity.commodityGrade ? commodity.commodityGrade : ''))\r\n                    .sort();\r\n            }\r\n            // tslint:disable-next-line:no-switch-case-fall-through\r\n            case ('commodityPart3'): {\r\n                this.commodityPart4Ctrl.reset();\r\n                this.commodityPart3FilteredList = this.commodityPart3CompleteList.filter((cmy) => {\r\n                    return cmy.toLocaleLowerCase().startsWith(valuePart3.toLocaleLowerCase());\r\n                });\r\n                this.commodityPart4CompleteList = this.getDistinctString(this.commodities\r\n                    .filter((commodity) =>\r\n                        (commodity.commodityType ? commodity.commodityType : '').toLocaleLowerCase() === valuePart1.toLocaleLowerCase()\r\n                        &&\r\n                        (commodity.commodityOrigin ? commodity.commodityOrigin : '').toLocaleLowerCase() === valuePart2.toLocaleLowerCase()\r\n                        &&\r\n                        (commodity.commodityGrade ? commodity.commodityGrade : '').toLocaleLowerCase() === valuePart3.toLocaleLowerCase(),\r\n                    )\r\n                    .map((commodity) => commodity.commodityLvl4 ? commodity.commodityLvl4 : ''))\r\n                    .sort();\r\n            }\r\n            // tslint:disable-next-line:no-switch-case-fall-through\r\n            case ('commodityPart4'): {\r\n                this.commodityPart5Ctrl.reset();\r\n                this.commodityPart4FilteredList = this.commodityPart4CompleteList.filter((cmy) => {\r\n                    return cmy.toLocaleLowerCase().startsWith(valuePart4.toLocaleLowerCase());\r\n                });\r\n                this.commodityPart5CompleteList = this.getDistinctString(this.commodities\r\n                    .filter((commodity) =>\r\n                        (commodity.commodityType ? commodity.commodityType : '').toLocaleLowerCase() === valuePart1.toLocaleLowerCase()\r\n                        &&\r\n                        (commodity.commodityOrigin ? commodity.commodityOrigin : '').toLocaleLowerCase() === valuePart2.toLocaleLowerCase()\r\n                        &&\r\n                        (commodity.commodityGrade ? commodity.commodityGrade : '').toLocaleLowerCase() === valuePart3.toLocaleLowerCase()\r\n                        &&\r\n                        (commodity.commodityLvl4 ? commodity.commodityLvl4 : '').toLocaleLowerCase() === valuePart4.toLocaleLowerCase(),\r\n                    )\r\n                    .map((commodity) => commodity.commodityLvl5 ? commodity.commodityLvl5 : ''))\r\n                    .sort();\r\n            }\r\n            // tslint:disable-next-line:no-switch-case-fall-through\r\n            case ('commodityPart5'): {\r\n                this.commodityPart5FilteredList = this.commodityPart5CompleteList.filter((cmy) => {\r\n                    return cmy.toLocaleLowerCase().startsWith(valuePart5.toLocaleLowerCase());\r\n                });\r\n            }\r\n        }\r\n        this.getSelectedCommodity();\r\n    }\r\n\r\n    getDistinctString(list: string[]): string[] {\r\n        const distinctList = [];\r\n        list.forEach((item) => {\r\n            if (distinctList.indexOf(item) === -1) {\r\n                distinctList.push(item);\r\n            }\r\n        });\r\n        return distinctList;\r\n    }\r\n\r\n    // todo: move this to utilService\r\n    pushUniqueStringInArray(stringArray: string[], value: string): string[] {\r\n        const myClonedArray: string[] = JSON.parse(JSON.stringify(stringArray));\r\n        if (myClonedArray.lastIndexOf(value) === -1) {\r\n            myClonedArray.push(value);\r\n        }\r\n        return myClonedArray.sort((str1, str2) => str1.localeCompare(str2));\r\n    }\r\n\r\n    getCommodity(): Commodity {\r\n        return this.selectedCommodityCtrl.value;\r\n    }\r\n\r\n    searchForCommodities(): Observable<Commodity[]> {\r\n        const searchTerm: CommoditySearchTerm = {\r\n            principalCommodity: this.commodityPart1Ctrl.value,\r\n            commodityOrigin: this.commodityPart2Ctrl.value,\r\n            commodityGrade: this.commodityPart3Ctrl.value,\r\n            commodityLvl4: this.commodityPart4Ctrl.value,\r\n            commodityLvl5: this.commodityPart5Ctrl.value,\r\n        };\r\n        const list = this.masterdataService.getCommodities(searchTerm, new PagingOptions())\r\n            .pipe(\r\n                map((data) => {\r\n                    return data.value;\r\n                }),\r\n            );\r\n\r\n        return list;\r\n    }\r\n\r\n    onExploreClicked(event) {\r\n        const searchLightBox = this.dialog.open(ContextualSearchBaseLightBoxComponent, {\r\n            data: {\r\n                gridId: this.gridId,\r\n                rowData$: this.searchForCommodities(),\r\n            },\r\n            width: '80%',\r\n            height: '80%',\r\n        });\r\n\r\n        searchLightBox.afterClosed().subscribe((commodity: Commodity) => {\r\n            if (commodity) {\r\n                this.patchValue(commodity);\r\n            }\r\n        });\r\n\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n    }\r\n\r\n    patchValue(commodity: Commodity) {\r\n        if (commodity) {\r\n                this.commodityPart1Ctrl.patchValue(commodity.commodityType);\r\n                this.commodityPart2Ctrl.patchValue(commodity.commodityOrigin);\r\n                this.commodityPart3Ctrl.patchValue(commodity.commodityGrade);\r\n                this.commodityPart4Ctrl.patchValue(commodity.commodityLvl4);\r\n                this.commodityPart5Ctrl.patchValue(commodity.commodityLvl5);\r\n                this.selectedCommodityCtrl.patchValue(commodity);\r\n        } else {\r\n              this.commodityPart1Ctrl.patchValue(null);\r\n              this.commodityPart2Ctrl.patchValue(null);\r\n              this.commodityPart3Ctrl.patchValue(null);\r\n              this.commodityPart4Ctrl.patchValue(null);\r\n              this.commodityPart5Ctrl.patchValue(null);\r\n              this.selectedCommodityCtrl.patchValue(null);\r\n        }\r\n\r\n        if (this.isFromAllocationPage) {\r\n            this.commodityPart2Ctrl.patchValue(commodity.commodityOrigin ? commodity.commodityOrigin : ' ');\r\n            this.commodityPart3Ctrl.patchValue(commodity.commodityGrade ? commodity.commodityGrade : ' ');\r\n            this.commodityPart4Ctrl.patchValue(commodity.commodityLvl4 ? commodity.commodityLvl4 : ' ');\r\n            this.commodityPart5Ctrl.patchValue(commodity.commodityLvl5 ? commodity.commodityLvl5 : ' ');\r\n            this.labelCmy2 = this.commodityPart2Ctrl.value !== ' ' ? 'Cmy 2' : 'Cmy';\r\n            this.labelCmy3 = this.commodityPart3Ctrl.value !== ' ' ? 'Cmy 3' : 'Cmy';\r\n            this.labelCmy4 = this.commodityPart4Ctrl.value !== ' ' ? 'Cmy 4' : 'Cmy';\r\n            this.labelCmy5 = this.commodityPart5Ctrl.value !== ' ' ? 'Cmy 5' : 'Cmy';\r\n\r\n            this.selectedCommodityCtrl.patchValue(commodity);\r\n        }\r\n\r\n        this.onSelectedCommodityValueChange();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destroy$.next();\r\n        this.destroy$.complete();\r\n    }\r\n\r\n    private getSelectedCommodity() {\r\n        this.selectedCommodityCtrl.patchValue(\r\n            this.commodities.find((cmy: Commodity) => {\r\n                return this.isEqualOrNull(cmy.commodityType, this.commodityPart1Ctrl.value)\r\n                    && this.isEqualOrNull(cmy.commodityOrigin, this.commodityPart2Ctrl.value)\r\n                    && this.isEqualOrNull(cmy.commodityGrade, this.commodityPart3Ctrl.value)\r\n                    && this.isEqualOrNull(cmy.commodityLvl4, this.commodityPart4Ctrl.value)\r\n                    && this.isEqualOrNull(cmy.commodityLvl5, this.commodityPart5Ctrl.value);\r\n            }),\r\n        );\r\n        this.setValidators();\r\n        this.onSelectedCommodityValueChange();\r\n    }\r\n\r\n    isEqualOrNull(text1, text2) {\r\n        const text1Trimed = text1 ? text1.trim() : '';\r\n        const text2Trimed = text2 ? text2.trim() : '';\r\n        return text1Trimed.toLocaleLowerCase() === text2Trimed.toLocaleLowerCase();\r\n    }\r\n\r\n    private onSelectedCommodityValueChange() {\r\n        if (!this.selectedCommodityCtrl.value) {\r\n            const errors = this.selectedCommodityCtrl.errors ? this.selectedCommodityCtrl.errors : {};\r\n            if (this.required) {\r\n                if (this.commodityPart1Ctrl.value || this.commodityPart2Ctrl.value ||\r\n                    this.commodityPart3Ctrl.value || this.commodityPart4Ctrl.value || this.commodityPart5Ctrl.value) {\r\n                    errors.invalidCommodity = true;\r\n                } else {\r\n                    errors.invalidCommodity = false;\r\n                }\r\n            } else {\r\n                errors.invalidCommodity = false;\r\n            }\r\n            this.selectedCommodityCtrl.setErrors(errors);\r\n        } else {\r\n            this.selectedCommodityCtrl.setErrors(null);\r\n            this.commodityPart1Ctrl.setErrors(null);\r\n            this.commodityPart2Ctrl.setErrors(null);\r\n            this.commodityPart3Ctrl.setErrors(null);\r\n            this.commodityPart4Ctrl.setErrors(null);\r\n            this.commodityPart5Ctrl.setErrors(null);\r\n            if (this.selectedCommodityCtrl.value as Commodity) {\r\n                this.optionSelected.emit((this.selectedCommodityCtrl.value as Commodity).commodityId);\r\n            } else {\r\n                this.optionSelected.emit(null);\r\n            }\r\n        }\r\n        this.setValidators();\r\n    }\r\n\r\n    parentFormControlValid(formControl: FormControl): ValidatorFn {\r\n        return (control: AbstractControl): { [key: string]: any } => {\r\n            return (formControl.valid) ? null : { parentControlInvalid: true };\r\n        };\r\n    }\r\n\r\n    getErrorMessage(): string {\r\n        if (this.selectedCommodityCtrl.hasError('required')) {\r\n            return 'Required*';\r\n        } else if (!this.selectedCommodityCtrl.value && this.required) {\r\n            return 'Please enter a valid commodity';\r\n        }\r\n        return '';\r\n    }\r\n\r\n    isRequired() {\r\n        return !this.selectedCommodityCtrl.value && this.required && !this.selectedCommodityCtrl.hasError('required');\r\n    }\r\n\r\n    isEditableCommodityForm() {\r\n        this.isEditable = this.selectedCommodityCtrl.enabled;\r\n    }\r\n}\r\n","module.exports = \"<form [formGroup]=\\\"companySelectionForm\\\">\\r\\n    <div class=\\\"static\\\">\\r\\n        <mat-expansion-panel [ngClass]='foreGroundClass'\\r\\n                             (mouseleave)=\\\"closePanel()\\\"\\r\\n                             [expanded]=\\\"isPanelOpen\\\"\\r\\n                             (opened)=\\\"isPanelOpen = true\\\"\\r\\n                             [ngClass]=\\\"{'company-chip': isPanelOpen}\\\">\\r\\n            <mat-expansion-panel-header expandedHeight=\\\"35px\\\"\\r\\n                                        collapsedHeight=\\\"35px\\\">\\r\\n                <mat-panel-title>\\r\\n                    Company : {{ this.company }}\\r\\n                </mat-panel-title>\\r\\n            </mat-expansion-panel-header>\\r\\n            <div mat-menu-item\\r\\n                 *ngFor=\\\"let comp of companies\\\"\\r\\n                 (click)=\\\"selectedCompanyChanged(comp)\\\"\\r\\n                 class=\\\"company-list\\\">\\r\\n                {{ comp.companyId }} - {{ comp.description }}\\r\\n            </div>\\r\\n        </mat-expansion-panel>\\r\\n    </div>\\r\\n</form>\"","module.exports = \"/**\\n * Applies styles for users in high contrast mode. Note that this only applies\\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\\n * attribute, however Chrome handles high contrast differently.\\n * @param target Which kind of high contrast setting to target. Defaults to `active`, can be\\n *    `white-on-black` or `black-on-white`.\\n */\\n/* Theme for the ripple elements.*/\\n/* stylelint-disable material/no-prefixes */\\n/* stylelint-enable */\\n.mat-elevation-z0 {\\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z1 {\\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z2 {\\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z3 {\\n  box-shadow: 0px 3px 3px -2px rgba(0, 0, 0, 0.2), 0px 3px 4px 0px rgba(0, 0, 0, 0.14), 0px 1px 8px 0px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z4 {\\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z5 {\\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 5px 8px 0px rgba(0, 0, 0, 0.14), 0px 1px 14px 0px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z6 {\\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z7 {\\n  box-shadow: 0px 4px 5px -2px rgba(0, 0, 0, 0.2), 0px 7px 10px 1px rgba(0, 0, 0, 0.14), 0px 2px 16px 1px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z8 {\\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z9 {\\n  box-shadow: 0px 5px 6px -3px rgba(0, 0, 0, 0.2), 0px 9px 12px 1px rgba(0, 0, 0, 0.14), 0px 3px 16px 2px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z10 {\\n  box-shadow: 0px 6px 6px -3px rgba(0, 0, 0, 0.2), 0px 10px 14px 1px rgba(0, 0, 0, 0.14), 0px 4px 18px 3px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z11 {\\n  box-shadow: 0px 6px 7px -4px rgba(0, 0, 0, 0.2), 0px 11px 15px 1px rgba(0, 0, 0, 0.14), 0px 4px 20px 3px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z12 {\\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 12px 17px 2px rgba(0, 0, 0, 0.14), 0px 5px 22px 4px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z13 {\\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 13px 19px 2px rgba(0, 0, 0, 0.14), 0px 5px 24px 4px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z14 {\\n  box-shadow: 0px 7px 9px -4px rgba(0, 0, 0, 0.2), 0px 14px 21px 2px rgba(0, 0, 0, 0.14), 0px 5px 26px 4px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z15 {\\n  box-shadow: 0px 8px 9px -5px rgba(0, 0, 0, 0.2), 0px 15px 22px 2px rgba(0, 0, 0, 0.14), 0px 6px 28px 5px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z16 {\\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z17 {\\n  box-shadow: 0px 8px 11px -5px rgba(0, 0, 0, 0.2), 0px 17px 26px 2px rgba(0, 0, 0, 0.14), 0px 6px 32px 5px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z18 {\\n  box-shadow: 0px 9px 11px -5px rgba(0, 0, 0, 0.2), 0px 18px 28px 2px rgba(0, 0, 0, 0.14), 0px 7px 34px 6px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z19 {\\n  box-shadow: 0px 9px 12px -6px rgba(0, 0, 0, 0.2), 0px 19px 29px 2px rgba(0, 0, 0, 0.14), 0px 7px 36px 6px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z20 {\\n  box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 20px 31px 3px rgba(0, 0, 0, 0.14), 0px 8px 38px 7px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z21 {\\n  box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 21px 33px 3px rgba(0, 0, 0, 0.14), 0px 8px 40px 7px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z22 {\\n  box-shadow: 0px 10px 14px -6px rgba(0, 0, 0, 0.2), 0px 22px 35px 3px rgba(0, 0, 0, 0.14), 0px 8px 42px 7px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z23 {\\n  box-shadow: 0px 11px 14px -7px rgba(0, 0, 0, 0.2), 0px 23px 36px 3px rgba(0, 0, 0, 0.14), 0px 9px 44px 8px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z24 {\\n  box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12); }\\n.mat-badge-content {\\n  font-weight: 600;\\n  font-size: 12px;\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-badge-small .mat-badge-content {\\n  font-size: 6px; }\\n.mat-badge-large .mat-badge-content {\\n  font-size: 24px; }\\n.mat-h1, .mat-headline, .mat-typography h1 {\\n  font: 400 24px/32px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0 0 16px; }\\n.mat-h2, .mat-title, .mat-typography h2 {\\n  font: 500 20px/32px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0 0 16px; }\\n.mat-h3, .mat-subheading-2, .mat-typography h3 {\\n  font: 400 16px/28px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0 0 16px; }\\n.mat-h4, .mat-subheading-1, .mat-typography h4 {\\n  font: 400 15px/24px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0 0 16px; }\\n.mat-h5, .mat-typography h5 {\\n  font: 400 11.62px/20px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0 0 12px; }\\n.mat-h6, .mat-typography h6 {\\n  font: 400 9.38px/20px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0 0 12px; }\\n.mat-body-strong, .mat-body-2 {\\n  font: 500 14px/24px Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-body, .mat-body-1, .mat-typography {\\n  font: 400 14px/20px Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-body p, .mat-body-1 p, .mat-typography p {\\n    margin: 0 0 12px; }\\n.mat-small, .mat-caption {\\n  font: 400 12px/20px Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-display-4, .mat-typography .mat-display-4 {\\n  font: 300 112px/112px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0 0 56px;\\n  letter-spacing: -0.05em; }\\n.mat-display-3, .mat-typography .mat-display-3 {\\n  font: 400 56px/56px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0 0 64px;\\n  letter-spacing: -0.02em; }\\n.mat-display-2, .mat-typography .mat-display-2 {\\n  font: 400 45px/48px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0 0 64px;\\n  letter-spacing: -0.005em; }\\n.mat-display-1, .mat-typography .mat-display-1 {\\n  font: 400 34px/40px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0 0 64px; }\\n.mat-bottom-sheet-container {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 16px;\\n  font-weight: 400; }\\n.mat-button, .mat-raised-button, .mat-icon-button, .mat-stroked-button,\\n.mat-flat-button, .mat-fab, .mat-mini-fab {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 14px;\\n  font-weight: 500; }\\n.mat-button-toggle {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-card {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-card-title {\\n  font-size: 24px;\\n  font-weight: 400; }\\n.mat-card-subtitle,\\n.mat-card-content,\\n.mat-card-header .mat-card-title {\\n  font-size: 14px; }\\n.mat-checkbox {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-checkbox-layout .mat-checkbox-label {\\n  line-height: 24px; }\\n.mat-chip {\\n  font-size: 13px;\\n  line-height: 18px; }\\n.mat-chip .mat-chip-trailing-icon.mat-icon,\\n  .mat-chip .mat-chip-remove.mat-icon {\\n    font-size: 18px; }\\n.mat-table {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-header-cell {\\n  font-size: 12px;\\n  font-weight: 500; }\\n.mat-cell, .mat-footer-cell {\\n  font-size: 14px; }\\n.mat-calendar {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-calendar-body {\\n  font-size: 13px; }\\n.mat-calendar-body-label,\\n.mat-calendar-period-button {\\n  font-size: 14px;\\n  font-weight: 500; }\\n.mat-calendar-table-header th {\\n  font-size: 11px;\\n  font-weight: 400; }\\n.mat-dialog-title {\\n  font: 500 20px/32px Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-expansion-panel-header {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 15px;\\n  font-weight: 400; }\\n.mat-expansion-panel-content {\\n  font: 400 14px/20px Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-form-field {\\n  font-size: inherit;\\n  font-weight: 400;\\n  line-height: 1.125;\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-form-field-wrapper {\\n  padding-bottom: 1.34375em; }\\n.mat-form-field-prefix .mat-icon,\\n.mat-form-field-suffix .mat-icon {\\n  font-size: 150%;\\n  line-height: 1.125; }\\n.mat-form-field-prefix .mat-icon-button,\\n.mat-form-field-suffix .mat-icon-button {\\n  height: 1.5em;\\n  width: 1.5em; }\\n.mat-form-field-prefix .mat-icon-button .mat-icon,\\n  .mat-form-field-suffix .mat-icon-button .mat-icon {\\n    height: 1.125em;\\n    line-height: 1.125; }\\n.mat-form-field-infix {\\n  padding: 0.5em 0;\\n  border-top: 0.84375em solid transparent; }\\n.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,\\n.mat-form-field-can-float .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\\n  -webkit-transform: translateY(-1.34375em) scale(0.75);\\n          transform: translateY(-1.34375em) scale(0.75);\\n  width: 133.33333333%; }\\n.mat-form-field-can-float .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\\n.mat-form-field-label {\\n  -webkit-transform: translateY(-1.34374em) scale(0.75);\\n          transform: translateY(-1.34374em) scale(0.75);\\n  width: 133.33334333%; }\\n.mat-form-field-label-wrapper {\\n  top: -0.84375em;\\n  padding-top: 0.84375em; }\\n.mat-form-field-label {\\n  top: 1.34375em; }\\n.mat-form-field-underline {\\n  bottom: 1.34375em; }\\n.mat-form-field-subscript-wrapper {\\n  font-size: 75%;\\n  margin-top: 0.66666667em;\\n  top: calc(100% - 1.79166667em); }\\n.mat-form-field-appearance-legacy .mat-form-field-wrapper {\\n  padding-bottom: 1.25em; }\\n.mat-form-field-appearance-legacy .mat-form-field-infix {\\n  padding: 0.4375em 0; }\\n.mat-form-field-appearance-legacy.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,\\n.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\\n  -webkit-transform: translateY(-1.28125em) scale(0.75) perspective(100px) translateZ(0.001px);\\n          transform: translateY(-1.28125em) scale(0.75) perspective(100px) translateZ(0.001px);\\n  -ms-transform: translateY(-1.28125em) scale(0.75);\\n  width: 133.33333333%; }\\n.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill + .mat-form-field-label-wrapper\\n.mat-form-field-label {\\n  -webkit-transform: translateY(-1.28125em) scale(0.75) perspective(100px) translateZ(0.00101px);\\n          transform: translateY(-1.28125em) scale(0.75) perspective(100px) translateZ(0.00101px);\\n  -ms-transform: translateY(-1.28124em) scale(0.75);\\n  width: 133.33334333%; }\\n.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\\n.mat-form-field-label {\\n  -webkit-transform: translateY(-1.28125em) scale(0.75) perspective(100px) translateZ(0.00102px);\\n          transform: translateY(-1.28125em) scale(0.75) perspective(100px) translateZ(0.00102px);\\n  -ms-transform: translateY(-1.28123em) scale(0.75);\\n  width: 133.33335333%; }\\n.mat-form-field-appearance-legacy .mat-form-field-label {\\n  top: 1.28125em; }\\n.mat-form-field-appearance-legacy .mat-form-field-underline {\\n  bottom: 1.25em; }\\n.mat-form-field-appearance-legacy .mat-form-field-subscript-wrapper {\\n  margin-top: 0.54166667em;\\n  top: calc(100% - 1.66666667em); }\\n.mat-form-field-appearance-fill .mat-form-field-infix {\\n  padding: 0.25em 0 0.75em 0; }\\n.mat-form-field-appearance-fill .mat-form-field-label {\\n  top: 1.09375em;\\n  margin-top: -0.5em; }\\n.mat-form-field-appearance-fill.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,\\n.mat-form-field-appearance-fill.mat-form-field-can-float .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\\n  -webkit-transform: translateY(-0.59375em) scale(0.75);\\n          transform: translateY(-0.59375em) scale(0.75);\\n  width: 133.33333333%; }\\n.mat-form-field-appearance-fill.mat-form-field-can-float .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\\n.mat-form-field-label {\\n  -webkit-transform: translateY(-0.59374em) scale(0.75);\\n          transform: translateY(-0.59374em) scale(0.75);\\n  width: 133.33334333%; }\\n.mat-form-field-appearance-outline .mat-form-field-infix {\\n  padding: 1em 0 1em 0; }\\n.mat-form-field-appearance-outline .mat-form-field-label {\\n  top: 1.84375em;\\n  margin-top: -0.25em; }\\n.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,\\n.mat-form-field-appearance-outline.mat-form-field-can-float .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\\n  -webkit-transform: translateY(-1.59375em) scale(0.75);\\n          transform: translateY(-1.59375em) scale(0.75);\\n  width: 133.33333333%; }\\n.mat-form-field-appearance-outline.mat-form-field-can-float .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\\n.mat-form-field-label {\\n  -webkit-transform: translateY(-1.59374em) scale(0.75);\\n          transform: translateY(-1.59374em) scale(0.75);\\n  width: 133.33334333%; }\\n.mat-grid-tile-header,\\n.mat-grid-tile-footer {\\n  font-size: 14px; }\\n.mat-grid-tile-header .mat-line,\\n  .mat-grid-tile-footer .mat-line {\\n    white-space: nowrap;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    display: block;\\n    box-sizing: border-box; }\\n.mat-grid-tile-header .mat-line:nth-child(n+2),\\n    .mat-grid-tile-footer .mat-line:nth-child(n+2) {\\n      font-size: 12px; }\\ninput.mat-input-element {\\n  margin-top: -0.0625em; }\\n.mat-menu-item {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 16px;\\n  font-weight: 400; }\\n.mat-paginator,\\n.mat-paginator-page-size .mat-select-trigger {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 12px; }\\n.mat-radio-button {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-select {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-select-trigger {\\n  height: 1.125em; }\\n.mat-slide-toggle-content {\\n  font: 400 14px/20px Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-slider-thumb-label-text {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 12px;\\n  font-weight: 500; }\\n.mat-stepper-vertical, .mat-stepper-horizontal {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-step-label {\\n  font-size: 14px;\\n  font-weight: 400; }\\n.mat-step-label-selected {\\n  font-size: 14px;\\n  font-weight: 500; }\\n.mat-tab-group {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-tab-label, .mat-tab-link {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 14px;\\n  font-weight: 500; }\\n.mat-toolbar,\\n.mat-toolbar h1,\\n.mat-toolbar h2,\\n.mat-toolbar h3,\\n.mat-toolbar h4,\\n.mat-toolbar h5,\\n.mat-toolbar h6 {\\n  font: 500 20px/32px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0; }\\n.mat-tooltip {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 10px;\\n  padding-top: 6px;\\n  padding-bottom: 6px; }\\n.mat-tooltip-handset {\\n  font-size: 14px;\\n  padding-top: 9px;\\n  padding-bottom: 9px; }\\n.mat-list-item {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-list-option {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-list .mat-list-item, .mat-nav-list .mat-list-item, .mat-selection-list .mat-list-item {\\n  font-size: 16px; }\\n.mat-list .mat-list-item .mat-line, .mat-nav-list .mat-list-item .mat-line, .mat-selection-list .mat-list-item .mat-line {\\n    white-space: nowrap;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    display: block;\\n    box-sizing: border-box; }\\n.mat-list .mat-list-item .mat-line:nth-child(n+2), .mat-nav-list .mat-list-item .mat-line:nth-child(n+2), .mat-selection-list .mat-list-item .mat-line:nth-child(n+2) {\\n      font-size: 14px; }\\n.mat-list .mat-list-option, .mat-nav-list .mat-list-option, .mat-selection-list .mat-list-option {\\n  font-size: 16px; }\\n.mat-list .mat-list-option .mat-line, .mat-nav-list .mat-list-option .mat-line, .mat-selection-list .mat-list-option .mat-line {\\n    white-space: nowrap;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    display: block;\\n    box-sizing: border-box; }\\n.mat-list .mat-list-option .mat-line:nth-child(n+2), .mat-nav-list .mat-list-option .mat-line:nth-child(n+2), .mat-selection-list .mat-list-option .mat-line:nth-child(n+2) {\\n      font-size: 14px; }\\n.mat-list .mat-subheader, .mat-nav-list .mat-subheader, .mat-selection-list .mat-subheader {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 14px;\\n  font-weight: 500; }\\n.mat-list[dense] .mat-list-item, .mat-nav-list[dense] .mat-list-item, .mat-selection-list[dense] .mat-list-item {\\n  font-size: 12px; }\\n.mat-list[dense] .mat-list-item .mat-line, .mat-nav-list[dense] .mat-list-item .mat-line, .mat-selection-list[dense] .mat-list-item .mat-line {\\n    white-space: nowrap;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    display: block;\\n    box-sizing: border-box; }\\n.mat-list[dense] .mat-list-item .mat-line:nth-child(n+2), .mat-nav-list[dense] .mat-list-item .mat-line:nth-child(n+2), .mat-selection-list[dense] .mat-list-item .mat-line:nth-child(n+2) {\\n      font-size: 12px; }\\n.mat-list[dense] .mat-list-option, .mat-nav-list[dense] .mat-list-option, .mat-selection-list[dense] .mat-list-option {\\n  font-size: 12px; }\\n.mat-list[dense] .mat-list-option .mat-line, .mat-nav-list[dense] .mat-list-option .mat-line, .mat-selection-list[dense] .mat-list-option .mat-line {\\n    white-space: nowrap;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    display: block;\\n    box-sizing: border-box; }\\n.mat-list[dense] .mat-list-option .mat-line:nth-child(n+2), .mat-nav-list[dense] .mat-list-option .mat-line:nth-child(n+2), .mat-selection-list[dense] .mat-list-option .mat-line:nth-child(n+2) {\\n      font-size: 12px; }\\n.mat-list[dense] .mat-subheader, .mat-nav-list[dense] .mat-subheader, .mat-selection-list[dense] .mat-subheader {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 12px;\\n  font-weight: 500; }\\n.mat-option {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 16px; }\\n.mat-optgroup-label {\\n  font: 500 14px/24px Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-simple-snackbar {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 14px; }\\n.mat-simple-snackbar-action {\\n  line-height: 1;\\n  font-family: inherit;\\n  font-size: inherit;\\n  font-weight: 500; }\\n.mat-tree {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-tree-node {\\n  font-weight: 400;\\n  font-size: 14px; }\\n.mat-ripple {\\n  overflow: hidden; }\\n.mat-ripple.mat-ripple-unbounded {\\n  overflow: visible; }\\n.mat-ripple-element {\\n  position: absolute;\\n  border-radius: 50%;\\n  pointer-events: none;\\n  transition: opacity, -webkit-transform 0ms cubic-bezier(0, 0, 0.2, 1);\\n  transition: opacity, transform 0ms cubic-bezier(0, 0, 0.2, 1);\\n  transition: opacity, transform 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 0ms cubic-bezier(0, 0, 0.2, 1);\\n  -webkit-transform: scale(0);\\n          transform: scale(0); }\\n@media screen and (-ms-high-contrast: active) {\\n    .mat-ripple-element {\\n      display: none; } }\\n.cdk-visually-hidden {\\n  border: 0;\\n  clip: rect(0 0 0 0);\\n  height: 1px;\\n  margin: -1px;\\n  overflow: hidden;\\n  padding: 0;\\n  position: absolute;\\n  width: 1px;\\n  outline: 0;\\n  -webkit-appearance: none;\\n  -moz-appearance: none; }\\n.cdk-overlay-container, .cdk-global-overlay-wrapper {\\n  pointer-events: none;\\n  top: 0;\\n  left: 0;\\n  height: 100%;\\n  width: 100%; }\\n.cdk-overlay-container {\\n  position: fixed;\\n  z-index: 1000; }\\n.cdk-overlay-container:empty {\\n    display: none; }\\n.cdk-global-overlay-wrapper {\\n  display: flex;\\n  position: absolute;\\n  z-index: 1000; }\\n.cdk-overlay-pane {\\n  position: absolute;\\n  pointer-events: auto;\\n  box-sizing: border-box;\\n  z-index: 1000;\\n  display: flex;\\n  max-width: 100%;\\n  max-height: 100%; }\\n.cdk-overlay-backdrop {\\n  position: absolute;\\n  top: 0;\\n  bottom: 0;\\n  left: 0;\\n  right: 0;\\n  z-index: 1000;\\n  pointer-events: auto;\\n  -webkit-tap-highlight-color: transparent;\\n  transition: opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1);\\n  opacity: 0; }\\n.cdk-overlay-backdrop.cdk-overlay-backdrop-showing {\\n    opacity: 1; }\\n@media screen and (-ms-high-contrast: active) {\\n      .cdk-overlay-backdrop.cdk-overlay-backdrop-showing {\\n        opacity: 0.6; } }\\n.cdk-overlay-dark-backdrop {\\n  background: rgba(0, 0, 0, 0.288); }\\n.cdk-overlay-transparent-backdrop, .cdk-overlay-transparent-backdrop.cdk-overlay-backdrop-showing {\\n  opacity: 0; }\\n.cdk-overlay-connected-position-bounding-box {\\n  position: absolute;\\n  z-index: 1000;\\n  display: flex;\\n  flex-direction: column;\\n  min-width: 1px;\\n  min-height: 1px; }\\n.cdk-global-scrollblock {\\n  position: fixed;\\n  width: 100%;\\n  overflow-y: scroll; }\\n@-webkit-keyframes cdk-text-field-autofill-start {\\n  /*!*/ }\\n@keyframes cdk-text-field-autofill-start {\\n  /*!*/ }\\n@-webkit-keyframes cdk-text-field-autofill-end {\\n  /*!*/ }\\n@keyframes cdk-text-field-autofill-end {\\n  /*!*/ }\\n.cdk-text-field-autofill-monitored:-webkit-autofill {\\n  -webkit-animation-name: cdk-text-field-autofill-start;\\n          animation-name: cdk-text-field-autofill-start; }\\n.cdk-text-field-autofill-monitored:not(:-webkit-autofill) {\\n  -webkit-animation-name: cdk-text-field-autofill-end;\\n          animation-name: cdk-text-field-autofill-end; }\\ntextarea.cdk-textarea-autosize {\\n  resize: none; }\\ntextarea.cdk-textarea-autosize-measuring {\\n  height: auto !important;\\n  overflow: hidden !important;\\n  padding: 2px 0 !important;\\n  box-sizing: content-box !important; }\\n.mat-ripple-element {\\n  background-color: rgba(0, 0, 0, 0.1); }\\n.mat-option {\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-option:hover:not(.mat-option-disabled), .mat-option:focus:not(.mat-option-disabled) {\\n    background: rgba(0, 0, 0, 0.04); }\\n.mat-option.mat-selected:not(.mat-option-multiple):not(.mat-option-disabled) {\\n    background: rgba(0, 0, 0, 0.04); }\\n.mat-option.mat-active {\\n    background: rgba(0, 0, 0, 0.04);\\n    color: rgba(0, 0, 0, 0.87); }\\n.mat-option.mat-option-disabled {\\n    color: rgba(0, 0, 0, 0.38); }\\n.mat-primary .mat-option.mat-selected:not(.mat-option-disabled) {\\n  color: #5788ce; }\\n.mat-accent .mat-option.mat-selected:not(.mat-option-disabled) {\\n  color: #53c234; }\\n.mat-warn .mat-option.mat-selected:not(.mat-option-disabled) {\\n  color: #df5a4d; }\\n.mat-optgroup-label {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-optgroup-disabled .mat-optgroup-label {\\n  color: rgba(0, 0, 0, 0.38); }\\n.mat-pseudo-checkbox {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-pseudo-checkbox::after {\\n    color: #fafafa; }\\n.mat-pseudo-checkbox-checked,\\n.mat-pseudo-checkbox-indeterminate,\\n.mat-accent .mat-pseudo-checkbox-checked,\\n.mat-accent .mat-pseudo-checkbox-indeterminate {\\n  background: #53c234; }\\n.mat-primary .mat-pseudo-checkbox-checked,\\n.mat-primary .mat-pseudo-checkbox-indeterminate {\\n  background: #5788ce; }\\n.mat-warn .mat-pseudo-checkbox-checked,\\n.mat-warn .mat-pseudo-checkbox-indeterminate {\\n  background: #df5a4d; }\\n.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-disabled,\\n.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-disabled {\\n  background: #b0b0b0; }\\n.mat-app-background {\\n  background-color: #fafafa;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-theme-loaded-marker {\\n  display: none; }\\n.mat-autocomplete-panel {\\n  background: white;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-autocomplete-panel .mat-option.mat-selected:not(.mat-active):not(:hover) {\\n    background: white; }\\n.mat-autocomplete-panel .mat-option.mat-selected:not(.mat-active):not(:hover):not(.mat-option-disabled) {\\n      color: rgba(0, 0, 0, 0.87); }\\n.mat-badge-content {\\n  color: white;\\n  background: #5788ce; }\\n.mat-badge-accent .mat-badge-content {\\n  background: #53c234;\\n  color: white; }\\n.mat-badge-warn .mat-badge-content {\\n  color: #fefcfe;\\n  background: #df5a4d; }\\n.mat-badge {\\n  position: relative; }\\n.mat-badge-hidden .mat-badge-content {\\n  display: none; }\\n.mat-badge-content {\\n  position: absolute;\\n  text-align: center;\\n  display: inline-block;\\n  border-radius: 50%;\\n  transition: -webkit-transform 200ms ease-in-out;\\n  transition: transform 200ms ease-in-out;\\n  transition: transform 200ms ease-in-out, -webkit-transform 200ms ease-in-out;\\n  -webkit-transform: scale(0.6);\\n          transform: scale(0.6);\\n  overflow: hidden;\\n  white-space: nowrap;\\n  text-overflow: ellipsis;\\n  pointer-events: none; }\\n.mat-badge-content.mat-badge-active {\\n  -webkit-transform: none;\\n          transform: none; }\\n.mat-badge-small .mat-badge-content {\\n  width: 16px;\\n  height: 16px;\\n  line-height: 16px; }\\n@media screen and (-ms-high-contrast: active) {\\n    .mat-badge-small .mat-badge-content {\\n      outline: solid 1px;\\n      border-radius: 0; } }\\n.mat-badge-small.mat-badge-above .mat-badge-content {\\n  top: -8px; }\\n.mat-badge-small.mat-badge-below .mat-badge-content {\\n  bottom: -8px; }\\n.mat-badge-small.mat-badge-before .mat-badge-content {\\n  left: -16px; }\\n[dir='rtl'] .mat-badge-small.mat-badge-before .mat-badge-content {\\n  left: auto;\\n  right: -16px; }\\n.mat-badge-small.mat-badge-after .mat-badge-content {\\n  right: -16px; }\\n[dir='rtl'] .mat-badge-small.mat-badge-after .mat-badge-content {\\n  right: auto;\\n  left: -16px; }\\n.mat-badge-small.mat-badge-overlap.mat-badge-before .mat-badge-content {\\n  left: -8px; }\\n[dir='rtl'] .mat-badge-small.mat-badge-overlap.mat-badge-before .mat-badge-content {\\n  left: auto;\\n  right: -8px; }\\n.mat-badge-small.mat-badge-overlap.mat-badge-after .mat-badge-content {\\n  right: -8px; }\\n[dir='rtl'] .mat-badge-small.mat-badge-overlap.mat-badge-after .mat-badge-content {\\n  right: auto;\\n  left: -8px; }\\n.mat-badge-medium .mat-badge-content {\\n  width: 22px;\\n  height: 22px;\\n  line-height: 22px; }\\n@media screen and (-ms-high-contrast: active) {\\n    .mat-badge-medium .mat-badge-content {\\n      outline: solid 1px;\\n      border-radius: 0; } }\\n.mat-badge-medium.mat-badge-above .mat-badge-content {\\n  top: -11px; }\\n.mat-badge-medium.mat-badge-below .mat-badge-content {\\n  bottom: -11px; }\\n.mat-badge-medium.mat-badge-before .mat-badge-content {\\n  left: -22px; }\\n[dir='rtl'] .mat-badge-medium.mat-badge-before .mat-badge-content {\\n  left: auto;\\n  right: -22px; }\\n.mat-badge-medium.mat-badge-after .mat-badge-content {\\n  right: -22px; }\\n[dir='rtl'] .mat-badge-medium.mat-badge-after .mat-badge-content {\\n  right: auto;\\n  left: -22px; }\\n.mat-badge-medium.mat-badge-overlap.mat-badge-before .mat-badge-content {\\n  left: -11px; }\\n[dir='rtl'] .mat-badge-medium.mat-badge-overlap.mat-badge-before .mat-badge-content {\\n  left: auto;\\n  right: -11px; }\\n.mat-badge-medium.mat-badge-overlap.mat-badge-after .mat-badge-content {\\n  right: -11px; }\\n[dir='rtl'] .mat-badge-medium.mat-badge-overlap.mat-badge-after .mat-badge-content {\\n  right: auto;\\n  left: -11px; }\\n.mat-badge-large .mat-badge-content {\\n  width: 28px;\\n  height: 28px;\\n  line-height: 28px; }\\n@media screen and (-ms-high-contrast: active) {\\n    .mat-badge-large .mat-badge-content {\\n      outline: solid 1px;\\n      border-radius: 0; } }\\n.mat-badge-large.mat-badge-above .mat-badge-content {\\n  top: -14px; }\\n.mat-badge-large.mat-badge-below .mat-badge-content {\\n  bottom: -14px; }\\n.mat-badge-large.mat-badge-before .mat-badge-content {\\n  left: -28px; }\\n[dir='rtl'] .mat-badge-large.mat-badge-before .mat-badge-content {\\n  left: auto;\\n  right: -28px; }\\n.mat-badge-large.mat-badge-after .mat-badge-content {\\n  right: -28px; }\\n[dir='rtl'] .mat-badge-large.mat-badge-after .mat-badge-content {\\n  right: auto;\\n  left: -28px; }\\n.mat-badge-large.mat-badge-overlap.mat-badge-before .mat-badge-content {\\n  left: -14px; }\\n[dir='rtl'] .mat-badge-large.mat-badge-overlap.mat-badge-before .mat-badge-content {\\n  left: auto;\\n  right: -14px; }\\n.mat-badge-large.mat-badge-overlap.mat-badge-after .mat-badge-content {\\n  right: -14px; }\\n[dir='rtl'] .mat-badge-large.mat-badge-overlap.mat-badge-after .mat-badge-content {\\n  right: auto;\\n  left: -14px; }\\n.mat-bottom-sheet-container {\\n  background: white;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-button, .mat-icon-button, .mat-stroked-button {\\n  color: inherit;\\n  background: transparent; }\\n.mat-button.mat-primary, .mat-icon-button.mat-primary, .mat-stroked-button.mat-primary {\\n    color: #5788ce; }\\n.mat-button.mat-accent, .mat-icon-button.mat-accent, .mat-stroked-button.mat-accent {\\n    color: #53c234; }\\n.mat-button.mat-warn, .mat-icon-button.mat-warn, .mat-stroked-button.mat-warn {\\n    color: #df5a4d; }\\n.mat-button.mat-primary[disabled], .mat-button.mat-accent[disabled], .mat-button.mat-warn[disabled], .mat-button[disabled][disabled], .mat-icon-button.mat-primary[disabled], .mat-icon-button.mat-accent[disabled], .mat-icon-button.mat-warn[disabled], .mat-icon-button[disabled][disabled], .mat-stroked-button.mat-primary[disabled], .mat-stroked-button.mat-accent[disabled], .mat-stroked-button.mat-warn[disabled], .mat-stroked-button[disabled][disabled] {\\n    color: rgba(0, 0, 0, 0.26); }\\n.mat-button.mat-primary .mat-button-focus-overlay, .mat-icon-button.mat-primary .mat-button-focus-overlay, .mat-stroked-button.mat-primary .mat-button-focus-overlay {\\n    background-color: rgba(87, 136, 206, 0.12); }\\n.mat-button.mat-accent .mat-button-focus-overlay, .mat-icon-button.mat-accent .mat-button-focus-overlay, .mat-stroked-button.mat-accent .mat-button-focus-overlay {\\n    background-color: rgba(83, 194, 52, 0.12); }\\n.mat-button.mat-warn .mat-button-focus-overlay, .mat-icon-button.mat-warn .mat-button-focus-overlay, .mat-stroked-button.mat-warn .mat-button-focus-overlay {\\n    background-color: rgba(223, 90, 77, 0.12); }\\n.mat-button[disabled] .mat-button-focus-overlay, .mat-icon-button[disabled] .mat-button-focus-overlay, .mat-stroked-button[disabled] .mat-button-focus-overlay {\\n    background-color: transparent; }\\n.mat-button.mat-primary .mat-ripple-element, .mat-icon-button.mat-primary .mat-ripple-element, .mat-stroked-button.mat-primary .mat-ripple-element {\\n    background-color: rgba(87, 136, 206, 0.1); }\\n.mat-button.mat-accent .mat-ripple-element, .mat-icon-button.mat-accent .mat-ripple-element, .mat-stroked-button.mat-accent .mat-ripple-element {\\n    background-color: rgba(83, 194, 52, 0.1); }\\n.mat-button.mat-warn .mat-ripple-element, .mat-icon-button.mat-warn .mat-ripple-element, .mat-stroked-button.mat-warn .mat-ripple-element {\\n    background-color: rgba(223, 90, 77, 0.1); }\\n.mat-flat-button, .mat-raised-button, .mat-fab, .mat-mini-fab {\\n  color: rgba(0, 0, 0, 0.87);\\n  background-color: white; }\\n.mat-flat-button.mat-primary, .mat-raised-button.mat-primary, .mat-fab.mat-primary, .mat-mini-fab.mat-primary {\\n    color: white; }\\n.mat-flat-button.mat-accent, .mat-raised-button.mat-accent, .mat-fab.mat-accent, .mat-mini-fab.mat-accent {\\n    color: white; }\\n.mat-flat-button.mat-warn, .mat-raised-button.mat-warn, .mat-fab.mat-warn, .mat-mini-fab.mat-warn {\\n    color: #fefcfe; }\\n.mat-flat-button.mat-primary[disabled], .mat-flat-button.mat-accent[disabled], .mat-flat-button.mat-warn[disabled], .mat-flat-button[disabled][disabled], .mat-raised-button.mat-primary[disabled], .mat-raised-button.mat-accent[disabled], .mat-raised-button.mat-warn[disabled], .mat-raised-button[disabled][disabled], .mat-fab.mat-primary[disabled], .mat-fab.mat-accent[disabled], .mat-fab.mat-warn[disabled], .mat-fab[disabled][disabled], .mat-mini-fab.mat-primary[disabled], .mat-mini-fab.mat-accent[disabled], .mat-mini-fab.mat-warn[disabled], .mat-mini-fab[disabled][disabled] {\\n    color: rgba(0, 0, 0, 0.26); }\\n.mat-flat-button.mat-primary, .mat-raised-button.mat-primary, .mat-fab.mat-primary, .mat-mini-fab.mat-primary {\\n    background-color: #5788ce; }\\n.mat-flat-button.mat-accent, .mat-raised-button.mat-accent, .mat-fab.mat-accent, .mat-mini-fab.mat-accent {\\n    background-color: #53c234; }\\n.mat-flat-button.mat-warn, .mat-raised-button.mat-warn, .mat-fab.mat-warn, .mat-mini-fab.mat-warn {\\n    background-color: #df5a4d; }\\n.mat-flat-button.mat-primary[disabled], .mat-flat-button.mat-accent[disabled], .mat-flat-button.mat-warn[disabled], .mat-flat-button[disabled][disabled], .mat-raised-button.mat-primary[disabled], .mat-raised-button.mat-accent[disabled], .mat-raised-button.mat-warn[disabled], .mat-raised-button[disabled][disabled], .mat-fab.mat-primary[disabled], .mat-fab.mat-accent[disabled], .mat-fab.mat-warn[disabled], .mat-fab[disabled][disabled], .mat-mini-fab.mat-primary[disabled], .mat-mini-fab.mat-accent[disabled], .mat-mini-fab.mat-warn[disabled], .mat-mini-fab[disabled][disabled] {\\n    background-color: rgba(0, 0, 0, 0.12); }\\n.mat-flat-button.mat-primary .mat-ripple-element, .mat-raised-button.mat-primary .mat-ripple-element, .mat-fab.mat-primary .mat-ripple-element, .mat-mini-fab.mat-primary .mat-ripple-element {\\n    background-color: rgba(255, 255, 255, 0.1); }\\n.mat-flat-button.mat-accent .mat-ripple-element, .mat-raised-button.mat-accent .mat-ripple-element, .mat-fab.mat-accent .mat-ripple-element, .mat-mini-fab.mat-accent .mat-ripple-element {\\n    background-color: rgba(255, 255, 255, 0.1); }\\n.mat-flat-button.mat-warn .mat-ripple-element, .mat-raised-button.mat-warn .mat-ripple-element, .mat-fab.mat-warn .mat-ripple-element, .mat-mini-fab.mat-warn .mat-ripple-element {\\n    background-color: rgba(254, 252, 254, 0.1); }\\n.mat-icon-button.mat-primary .mat-ripple-element {\\n  background-color: rgba(87, 136, 206, 0.2); }\\n.mat-icon-button.mat-accent .mat-ripple-element {\\n  background-color: rgba(83, 194, 52, 0.2); }\\n.mat-icon-button.mat-warn .mat-ripple-element {\\n  background-color: rgba(223, 90, 77, 0.2); }\\n.mat-button-toggle {\\n  color: rgba(0, 0, 0, 0.38); }\\n.mat-button-toggle .mat-button-toggle-focus-overlay {\\n    background-color: rgba(0, 0, 0, 0.12); }\\n.mat-button-toggle-checked {\\n  background-color: #e0e0e0;\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-button-toggle-disabled {\\n  background-color: #eeeeee;\\n  color: rgba(0, 0, 0, 0.26); }\\n.mat-button-toggle-disabled.mat-button-toggle-checked {\\n    background-color: #bdbdbd; }\\n.mat-card {\\n  background: white;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-card-subtitle {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-checkbox-frame {\\n  border-color: rgba(0, 0, 0, 0.54); }\\n.mat-checkbox-checkmark {\\n  fill: #fafafa; }\\n.mat-checkbox-checkmark-path {\\n  stroke: #fafafa !important; }\\n@media screen and (-ms-high-contrast: black-on-white) {\\n    .mat-checkbox-checkmark-path {\\n      stroke: #000 !important; } }\\n.mat-checkbox-mixedmark {\\n  background-color: #fafafa; }\\n.mat-checkbox-indeterminate.mat-primary .mat-checkbox-background, .mat-checkbox-checked.mat-primary .mat-checkbox-background {\\n  background-color: #5788ce; }\\n.mat-checkbox-indeterminate.mat-accent .mat-checkbox-background, .mat-checkbox-checked.mat-accent .mat-checkbox-background {\\n  background-color: #53c234; }\\n.mat-checkbox-indeterminate.mat-warn .mat-checkbox-background, .mat-checkbox-checked.mat-warn .mat-checkbox-background {\\n  background-color: #df5a4d; }\\n.mat-checkbox-disabled.mat-checkbox-checked .mat-checkbox-background, .mat-checkbox-disabled.mat-checkbox-indeterminate .mat-checkbox-background {\\n  background-color: #b0b0b0; }\\n.mat-checkbox-disabled:not(.mat-checkbox-checked) .mat-checkbox-frame {\\n  border-color: #b0b0b0; }\\n.mat-checkbox-disabled .mat-checkbox-label {\\n  color: #b0b0b0; }\\n@media screen and (-ms-high-contrast: active) {\\n  .mat-checkbox-disabled {\\n    opacity: 0.5; } }\\n@media screen and (-ms-high-contrast: active) {\\n  .mat-checkbox-background {\\n    background: none; } }\\n.mat-checkbox:not(.mat-checkbox-disabled).mat-primary .mat-checkbox-ripple .mat-ripple-element {\\n  background-color: rgba(87, 136, 206, 0.26); }\\n.mat-checkbox:not(.mat-checkbox-disabled).mat-accent .mat-checkbox-ripple .mat-ripple-element {\\n  background-color: rgba(83, 194, 52, 0.26); }\\n.mat-checkbox:not(.mat-checkbox-disabled).mat-warn .mat-checkbox-ripple .mat-ripple-element {\\n  background-color: rgba(223, 90, 77, 0.26); }\\n.mat-chip.mat-standard-chip {\\n  background-color: #e0e0e0;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-chip.mat-standard-chip .mat-chip-remove {\\n    color: rgba(0, 0, 0, 0.87);\\n    opacity: 0.4; }\\n.mat-chip.mat-standard-chip .mat-chip-remove:hover {\\n    opacity: 0.54; }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-primary {\\n  background-color: #5788ce;\\n  color: white; }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-primary .mat-chip-remove {\\n    color: white;\\n    opacity: 0.4; }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-primary .mat-chip-remove:hover {\\n    opacity: 0.54; }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-warn {\\n  background-color: #df5a4d;\\n  color: #fefcfe; }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-warn .mat-chip-remove {\\n    color: #fefcfe;\\n    opacity: 0.4; }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-warn .mat-chip-remove:hover {\\n    opacity: 0.54; }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-accent {\\n  background-color: #53c234;\\n  color: white; }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-accent .mat-chip-remove {\\n    color: white;\\n    opacity: 0.4; }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-accent .mat-chip-remove:hover {\\n    opacity: 0.54; }\\n.mat-table {\\n  background: white; }\\n.mat-table thead, .mat-table tbody, .mat-table tfoot,\\nmat-header-row, mat-row, mat-footer-row,\\n[mat-header-row], [mat-row], [mat-footer-row],\\n.mat-table-sticky {\\n  background: inherit; }\\nmat-row, mat-header-row, mat-footer-row,\\nth.mat-header-cell, td.mat-cell, td.mat-footer-cell {\\n  border-bottom-color: rgba(0, 0, 0, 0.12); }\\n.mat-header-cell {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-cell, .mat-footer-cell {\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-calendar-arrow {\\n  border-top-color: rgba(0, 0, 0, 0.54); }\\n.mat-datepicker-toggle,\\n.mat-datepicker-content .mat-calendar-next-button,\\n.mat-datepicker-content .mat-calendar-previous-button {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-calendar-table-header {\\n  color: rgba(0, 0, 0, 0.38); }\\n.mat-calendar-table-header-divider::after {\\n  background: rgba(0, 0, 0, 0.12); }\\n.mat-calendar-body-label {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-calendar-body-cell-content {\\n  color: rgba(0, 0, 0, 0.87);\\n  border-color: transparent; }\\n.mat-calendar-body-disabled > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected) {\\n  color: rgba(0, 0, 0, 0.38); }\\n.mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected),\\n.cdk-keyboard-focused .mat-calendar-body-active > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected),\\n.cdk-program-focused .mat-calendar-body-active > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected) {\\n  background-color: rgba(0, 0, 0, 0.04); }\\n.mat-calendar-body-today:not(.mat-calendar-body-selected) {\\n  border-color: rgba(0, 0, 0, 0.38); }\\n.mat-calendar-body-disabled > .mat-calendar-body-today:not(.mat-calendar-body-selected) {\\n  border-color: rgba(0, 0, 0, 0.18); }\\n.mat-calendar-body-selected {\\n  background-color: #5788ce;\\n  color: white; }\\n.mat-calendar-body-disabled > .mat-calendar-body-selected {\\n  background-color: rgba(87, 136, 206, 0.4); }\\n.mat-calendar-body-today.mat-calendar-body-selected {\\n  box-shadow: inset 0 0 0 1px white; }\\n.mat-datepicker-content {\\n  background-color: white;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-datepicker-content.mat-accent .mat-calendar-body-selected {\\n    background-color: #53c234;\\n    color: white; }\\n.mat-datepicker-content.mat-accent .mat-calendar-body-disabled > .mat-calendar-body-selected {\\n    background-color: rgba(83, 194, 52, 0.4); }\\n.mat-datepicker-content.mat-accent .mat-calendar-body-today.mat-calendar-body-selected {\\n    box-shadow: inset 0 0 0 1px white; }\\n.mat-datepicker-content.mat-warn .mat-calendar-body-selected {\\n    background-color: #df5a4d;\\n    color: #fefcfe; }\\n.mat-datepicker-content.mat-warn .mat-calendar-body-disabled > .mat-calendar-body-selected {\\n    background-color: rgba(223, 90, 77, 0.4); }\\n.mat-datepicker-content.mat-warn .mat-calendar-body-today.mat-calendar-body-selected {\\n    box-shadow: inset 0 0 0 1px #fefcfe; }\\n.mat-datepicker-toggle-active {\\n  color: #5788ce; }\\n.mat-datepicker-toggle-active.mat-accent {\\n    color: #53c234; }\\n.mat-datepicker-toggle-active.mat-warn {\\n    color: #df5a4d; }\\n.mat-dialog-container {\\n  background: white;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-divider {\\n  border-top-color: rgba(0, 0, 0, 0.12); }\\n.mat-divider-vertical {\\n  border-right-color: rgba(0, 0, 0, 0.12); }\\n.mat-expansion-panel {\\n  background: white;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-action-row {\\n  border-top-color: rgba(0, 0, 0, 0.12); }\\n.mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:not([aria-disabled='true']).cdk-keyboard-focused, .mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:not([aria-disabled='true']).cdk-program-focused, .mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:not([aria-disabled='true']):hover {\\n  background: rgba(0, 0, 0, 0.04); }\\n@media (hover: none) {\\n  .mat-expansion-panel:not(.mat-expanded):not([aria-disabled='true'])\\n.mat-expansion-panel-header:hover {\\n    background: white; } }\\n.mat-expansion-panel-header-title {\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-expansion-panel-header-description,\\n.mat-expansion-indicator::after {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-expansion-panel-header[aria-disabled='true'] {\\n  color: rgba(0, 0, 0, 0.26); }\\n.mat-expansion-panel-header[aria-disabled='true'] .mat-expansion-panel-header-title,\\n  .mat-expansion-panel-header[aria-disabled='true'] .mat-expansion-panel-header-description {\\n    color: inherit; }\\n.mat-form-field-label {\\n  color: rgba(0, 0, 0, 0.6); }\\n.mat-hint {\\n  color: rgba(0, 0, 0, 0.6); }\\n.mat-form-field.mat-focused .mat-form-field-label {\\n  color: #5788ce; }\\n.mat-form-field.mat-focused .mat-form-field-label.mat-accent {\\n    color: #53c234; }\\n.mat-form-field.mat-focused .mat-form-field-label.mat-warn {\\n    color: #df5a4d; }\\n.mat-focused .mat-form-field-required-marker {\\n  color: #53c234; }\\n.mat-form-field-ripple {\\n  background-color: rgba(0, 0, 0, 0.87); }\\n.mat-form-field.mat-focused .mat-form-field-ripple {\\n  background-color: #5788ce; }\\n.mat-form-field.mat-focused .mat-form-field-ripple.mat-accent {\\n    background-color: #53c234; }\\n.mat-form-field.mat-focused .mat-form-field-ripple.mat-warn {\\n    background-color: #df5a4d; }\\n.mat-form-field.mat-form-field-invalid .mat-form-field-label {\\n  color: #df5a4d; }\\n.mat-form-field.mat-form-field-invalid .mat-form-field-label.mat-accent,\\n  .mat-form-field.mat-form-field-invalid .mat-form-field-label .mat-form-field-required-marker {\\n    color: #df5a4d; }\\n.mat-form-field.mat-form-field-invalid .mat-form-field-ripple,\\n.mat-form-field.mat-form-field-invalid .mat-form-field-ripple.mat-accent {\\n  background-color: #df5a4d; }\\n.mat-error {\\n  color: #df5a4d; }\\n.mat-form-field-appearance-legacy .mat-form-field-label {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-form-field-appearance-legacy .mat-hint {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-form-field-appearance-legacy .mat-form-field-underline {\\n  background-color: rgba(0, 0, 0, 0.42); }\\n.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline {\\n  background-image: linear-gradient(to right, rgba(0, 0, 0, 0.42) 0%, rgba(0, 0, 0, 0.42) 33%, transparent 0%);\\n  background-size: 4px 100%;\\n  background-repeat: repeat-x; }\\n.mat-form-field-appearance-standard .mat-form-field-underline {\\n  background-color: rgba(0, 0, 0, 0.42); }\\n.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline {\\n  background-image: linear-gradient(to right, rgba(0, 0, 0, 0.42) 0%, rgba(0, 0, 0, 0.42) 33%, transparent 0%);\\n  background-size: 4px 100%;\\n  background-repeat: repeat-x; }\\n.mat-form-field-appearance-fill .mat-form-field-flex {\\n  background-color: rgba(0, 0, 0, 0.04); }\\n.mat-form-field-appearance-fill.mat-form-field-disabled .mat-form-field-flex {\\n  background-color: rgba(0, 0, 0, 0.02); }\\n.mat-form-field-appearance-fill .mat-form-field-underline::before {\\n  background-color: rgba(0, 0, 0, 0.42); }\\n.mat-form-field-appearance-fill.mat-form-field-disabled .mat-form-field-label {\\n  color: rgba(0, 0, 0, 0.38); }\\n.mat-form-field-appearance-fill.mat-form-field-disabled .mat-form-field-underline::before {\\n  background-color: transparent; }\\n.mat-form-field-appearance-outline .mat-form-field-outline {\\n  color: rgba(0, 0, 0, 0.12); }\\n.mat-form-field-appearance-outline .mat-form-field-outline-thick {\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick {\\n  color: #5788ce; }\\n.mat-form-field-appearance-outline.mat-focused.mat-accent .mat-form-field-outline-thick {\\n  color: #53c234; }\\n.mat-form-field-appearance-outline.mat-focused.mat-warn .mat-form-field-outline-thick {\\n  color: #df5a4d; }\\n.mat-form-field-appearance-outline.mat-form-field-invalid.mat-form-field-invalid .mat-form-field-outline-thick {\\n  color: #df5a4d; }\\n.mat-form-field-appearance-outline.mat-form-field-disabled .mat-form-field-label {\\n  color: rgba(0, 0, 0, 0.38); }\\n.mat-form-field-appearance-outline.mat-form-field-disabled .mat-form-field-outline {\\n  color: rgba(0, 0, 0, 0.06); }\\n.mat-icon.mat-primary {\\n  color: #5788ce; }\\n.mat-icon.mat-accent {\\n  color: #53c234; }\\n.mat-icon.mat-warn {\\n  color: #df5a4d; }\\n.mat-input-element:disabled {\\n  color: rgba(0, 0, 0, 0.38); }\\n.mat-input-element {\\n  caret-color: #5788ce; }\\n.mat-input-element::-webkit-input-placeholder {\\n    color: rgba(0, 0, 0, 0.42); }\\n.mat-input-element:-ms-input-placeholder {\\n    color: rgba(0, 0, 0, 0.42); }\\n.mat-input-element::-ms-input-placeholder {\\n    color: rgba(0, 0, 0, 0.42); }\\n.mat-input-element::placeholder {\\n    color: rgba(0, 0, 0, 0.42); }\\n.mat-input-element::-moz-placeholder {\\n    color: rgba(0, 0, 0, 0.42); }\\n.mat-input-element::-webkit-input-placeholder {\\n    color: rgba(0, 0, 0, 0.42); }\\n.mat-input-element:-ms-input-placeholder {\\n    color: rgba(0, 0, 0, 0.42); }\\n.mat-accent .mat-input-element {\\n  caret-color: #53c234; }\\n.mat-warn .mat-input-element,\\n.mat-form-field-invalid .mat-input-element {\\n  caret-color: #df5a4d; }\\n.mat-list .mat-list-item, .mat-nav-list .mat-list-item, .mat-selection-list .mat-list-item {\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-list .mat-list-option, .mat-nav-list .mat-list-option, .mat-selection-list .mat-list-option {\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-list .mat-subheader, .mat-nav-list .mat-subheader, .mat-selection-list .mat-subheader {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-list-item-disabled {\\n  background-color: #eeeeee; }\\n.mat-list-option:hover, .mat-list-option.mat-list-item-focus,\\n.mat-nav-list .mat-list-item:hover,\\n.mat-nav-list .mat-list-item.mat-list-item-focus {\\n  background: rgba(0, 0, 0, 0.04); }\\n.mat-menu-panel {\\n  background: white; }\\n.mat-menu-item {\\n  background: transparent;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-menu-item[disabled], .mat-menu-item[disabled]::after {\\n    color: rgba(0, 0, 0, 0.38); }\\n.mat-menu-item .mat-icon:not([color]),\\n.mat-menu-item-submenu-trigger::after {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-menu-item:hover:not([disabled]),\\n.mat-menu-item.cdk-program-focused:not([disabled]),\\n.mat-menu-item.cdk-keyboard-focused:not([disabled]),\\n.mat-menu-item-highlighted:not([disabled]) {\\n  background: rgba(0, 0, 0, 0.04); }\\n.mat-paginator {\\n  background: white; }\\n.mat-paginator,\\n.mat-paginator-page-size .mat-select-trigger {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-paginator-decrement,\\n.mat-paginator-increment {\\n  border-top: 2px solid rgba(0, 0, 0, 0.54);\\n  border-right: 2px solid rgba(0, 0, 0, 0.54); }\\n.mat-paginator-first,\\n.mat-paginator-last {\\n  border-top: 2px solid rgba(0, 0, 0, 0.54); }\\n.mat-icon-button[disabled] .mat-paginator-decrement,\\n.mat-icon-button[disabled] .mat-paginator-increment,\\n.mat-icon-button[disabled] .mat-paginator-first,\\n.mat-icon-button[disabled] .mat-paginator-last {\\n  border-color: rgba(0, 0, 0, 0.38); }\\n.mat-progress-bar-background {\\n  fill: #5788ce; }\\n.mat-progress-bar-buffer {\\n  background-color: #5788ce; }\\n.mat-progress-bar-fill::after {\\n  background-color: #5788ce; }\\n.mat-progress-bar.mat-accent .mat-progress-bar-background {\\n  fill: #b3ff8c; }\\n.mat-progress-bar.mat-accent .mat-progress-bar-buffer {\\n  background-color: #b3ff8c; }\\n.mat-progress-bar.mat-accent .mat-progress-bar-fill::after {\\n  background-color: #53c234; }\\n.mat-progress-bar.mat-warn .mat-progress-bar-background {\\n  fill: #546e7a; }\\n.mat-progress-bar.mat-warn .mat-progress-bar-buffer {\\n  background-color: #546e7a; }\\n.mat-progress-bar.mat-warn .mat-progress-bar-fill::after {\\n  background-color: #df5a4d; }\\n.mat-progress-spinner circle, .mat-spinner circle {\\n  stroke: #5788ce; }\\n.mat-progress-spinner.mat-accent circle, .mat-spinner.mat-accent circle {\\n  stroke: #53c234; }\\n.mat-progress-spinner.mat-warn circle, .mat-spinner.mat-warn circle {\\n  stroke: #df5a4d; }\\n.mat-radio-outer-circle {\\n  border-color: rgba(0, 0, 0, 0.54); }\\n.mat-radio-button.mat-primary.mat-radio-checked .mat-radio-outer-circle {\\n  border-color: #5788ce; }\\n.mat-radio-button.mat-primary .mat-radio-inner-circle {\\n  background-color: #5788ce; }\\n.mat-radio-button.mat-primary .mat-radio-ripple .mat-ripple-element {\\n  background-color: rgba(87, 136, 206, 0.26); }\\n.mat-radio-button.mat-accent.mat-radio-checked .mat-radio-outer-circle {\\n  border-color: #53c234; }\\n.mat-radio-button.mat-accent .mat-radio-inner-circle {\\n  background-color: #53c234; }\\n.mat-radio-button.mat-accent .mat-radio-ripple .mat-ripple-element {\\n  background-color: rgba(83, 194, 52, 0.26); }\\n.mat-radio-button.mat-warn.mat-radio-checked .mat-radio-outer-circle {\\n  border-color: #df5a4d; }\\n.mat-radio-button.mat-warn .mat-radio-inner-circle {\\n  background-color: #df5a4d; }\\n.mat-radio-button.mat-warn .mat-radio-ripple .mat-ripple-element {\\n  background-color: rgba(223, 90, 77, 0.26); }\\n.mat-radio-button.mat-radio-disabled.mat-radio-checked .mat-radio-outer-circle,\\n.mat-radio-button.mat-radio-disabled .mat-radio-outer-circle {\\n  border-color: rgba(0, 0, 0, 0.38); }\\n.mat-radio-button.mat-radio-disabled .mat-radio-ripple .mat-ripple-element,\\n.mat-radio-button.mat-radio-disabled .mat-radio-inner-circle {\\n  background-color: rgba(0, 0, 0, 0.38); }\\n.mat-radio-button.mat-radio-disabled .mat-radio-label-content {\\n  color: rgba(0, 0, 0, 0.38); }\\n.mat-select-content, .mat-select-panel-done-animating {\\n  background: white; }\\n.mat-select-value {\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-select-placeholder {\\n  color: rgba(0, 0, 0, 0.42); }\\n.mat-select-disabled .mat-select-value {\\n  color: rgba(0, 0, 0, 0.38); }\\n.mat-select-arrow {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-select-panel .mat-option.mat-selected:not(.mat-option-multiple) {\\n  background: rgba(0, 0, 0, 0.12); }\\n.mat-form-field.mat-focused.mat-primary .mat-select-arrow {\\n  color: #5788ce; }\\n.mat-form-field.mat-focused.mat-accent .mat-select-arrow {\\n  color: #53c234; }\\n.mat-form-field.mat-focused.mat-warn .mat-select-arrow {\\n  color: #df5a4d; }\\n.mat-form-field .mat-select.mat-select-invalid .mat-select-arrow {\\n  color: #df5a4d; }\\n.mat-form-field .mat-select.mat-select-disabled .mat-select-arrow {\\n  color: rgba(0, 0, 0, 0.38); }\\n.mat-drawer-container {\\n  background-color: #fafafa;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-drawer {\\n  background-color: white;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-drawer.mat-drawer-push {\\n    background-color: white; }\\n.mat-drawer-backdrop.mat-drawer-shown {\\n  background-color: rgba(0, 0, 0, 0.6); }\\n.mat-slide-toggle.mat-checked:not(.mat-disabled) .mat-slide-toggle-thumb {\\n  background-color: #53c234; }\\n.mat-slide-toggle.mat-checked:not(.mat-disabled) .mat-slide-toggle-bar {\\n  background-color: rgba(83, 194, 52, 0.5); }\\n.mat-slide-toggle:not(.mat-checked) .mat-ripple-element {\\n  background-color: rgba(0, 0, 0, 0.06); }\\n.mat-slide-toggle .mat-ripple-element {\\n  background-color: rgba(83, 194, 52, 0.12); }\\n.mat-slide-toggle.mat-primary.mat-checked:not(.mat-disabled) .mat-slide-toggle-thumb {\\n  background-color: #5788ce; }\\n.mat-slide-toggle.mat-primary.mat-checked:not(.mat-disabled) .mat-slide-toggle-bar {\\n  background-color: rgba(87, 136, 206, 0.5); }\\n.mat-slide-toggle.mat-primary:not(.mat-checked) .mat-ripple-element {\\n  background-color: rgba(0, 0, 0, 0.06); }\\n.mat-slide-toggle.mat-primary .mat-ripple-element {\\n  background-color: rgba(87, 136, 206, 0.12); }\\n.mat-slide-toggle.mat-warn.mat-checked:not(.mat-disabled) .mat-slide-toggle-thumb {\\n  background-color: #607d8b; }\\n.mat-slide-toggle.mat-warn.mat-checked:not(.mat-disabled) .mat-slide-toggle-bar {\\n  background-color: rgba(96, 125, 139, 0.5); }\\n.mat-slide-toggle.mat-warn:not(.mat-checked) .mat-ripple-element {\\n  background-color: rgba(0, 0, 0, 0.06); }\\n.mat-slide-toggle.mat-warn .mat-ripple-element {\\n  background-color: rgba(96, 125, 139, 0.12); }\\n.mat-disabled .mat-slide-toggle-thumb {\\n  background-color: #bdbdbd; }\\n.mat-disabled .mat-slide-toggle-bar {\\n  background-color: rgba(0, 0, 0, 0.1); }\\n.mat-slide-toggle-thumb {\\n  background-color: #fafafa; }\\n.mat-slide-toggle-bar {\\n  background-color: rgba(0, 0, 0, 0.38); }\\n.mat-slider-track-background {\\n  background-color: rgba(0, 0, 0, 0.26); }\\n.mat-primary .mat-slider-track-fill,\\n.mat-primary .mat-slider-thumb,\\n.mat-primary .mat-slider-thumb-label {\\n  background-color: #5788ce; }\\n.mat-primary .mat-slider-thumb-label-text {\\n  color: white; }\\n.mat-accent .mat-slider-track-fill,\\n.mat-accent .mat-slider-thumb,\\n.mat-accent .mat-slider-thumb-label {\\n  background-color: #53c234; }\\n.mat-accent .mat-slider-thumb-label-text {\\n  color: white; }\\n.mat-warn .mat-slider-track-fill,\\n.mat-warn .mat-slider-thumb,\\n.mat-warn .mat-slider-thumb-label {\\n  background-color: #df5a4d; }\\n.mat-warn .mat-slider-thumb-label-text {\\n  color: #fefcfe; }\\n.mat-slider-focus-ring {\\n  background-color: rgba(83, 194, 52, 0.2); }\\n.mat-slider:hover .mat-slider-track-background,\\n.cdk-focused .mat-slider-track-background {\\n  background-color: rgba(0, 0, 0, 0.38); }\\n.mat-slider-disabled .mat-slider-track-background,\\n.mat-slider-disabled .mat-slider-track-fill,\\n.mat-slider-disabled .mat-slider-thumb {\\n  background-color: rgba(0, 0, 0, 0.26); }\\n.mat-slider-disabled:hover .mat-slider-track-background {\\n  background-color: rgba(0, 0, 0, 0.26); }\\n.mat-slider-min-value .mat-slider-focus-ring {\\n  background-color: rgba(0, 0, 0, 0.12); }\\n.mat-slider-min-value.mat-slider-thumb-label-showing .mat-slider-thumb,\\n.mat-slider-min-value.mat-slider-thumb-label-showing .mat-slider-thumb-label {\\n  background-color: rgba(0, 0, 0, 0.87); }\\n.mat-slider-min-value.mat-slider-thumb-label-showing.cdk-focused .mat-slider-thumb,\\n.mat-slider-min-value.mat-slider-thumb-label-showing.cdk-focused .mat-slider-thumb-label {\\n  background-color: rgba(0, 0, 0, 0.26); }\\n.mat-slider-min-value:not(.mat-slider-thumb-label-showing) .mat-slider-thumb {\\n  border-color: rgba(0, 0, 0, 0.26);\\n  background-color: transparent; }\\n.mat-slider-min-value:not(.mat-slider-thumb-label-showing):hover .mat-slider-thumb, .mat-slider-min-value:not(.mat-slider-thumb-label-showing).cdk-focused .mat-slider-thumb {\\n  border-color: rgba(0, 0, 0, 0.38); }\\n.mat-slider-min-value:not(.mat-slider-thumb-label-showing):hover.mat-slider-disabled .mat-slider-thumb, .mat-slider-min-value:not(.mat-slider-thumb-label-showing).cdk-focused.mat-slider-disabled .mat-slider-thumb {\\n  border-color: rgba(0, 0, 0, 0.26); }\\n.mat-slider-has-ticks .mat-slider-wrapper::after {\\n  border-color: rgba(0, 0, 0, 0.7); }\\n.mat-slider-horizontal .mat-slider-ticks {\\n  background-image: repeating-linear-gradient(to right, rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7) 2px, transparent 0, transparent);\\n  background-image: -moz-repeating-linear-gradient(0.0001deg, rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7) 2px, transparent 0, transparent); }\\n.mat-slider-vertical .mat-slider-ticks {\\n  background-image: repeating-linear-gradient(to bottom, rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7) 2px, transparent 0, transparent); }\\n.mat-step-header.cdk-keyboard-focused, .mat-step-header.cdk-program-focused, .mat-step-header:hover {\\n  background-color: rgba(0, 0, 0, 0.04); }\\n.mat-step-header .mat-step-label,\\n.mat-step-header .mat-step-optional {\\n  color: rgba(0, 0, 0, 0.38); }\\n.mat-step-header .mat-step-icon {\\n  background-color: #5788ce;\\n  color: white; }\\n.mat-step-header .mat-step-icon-not-touched {\\n  background-color: rgba(0, 0, 0, 0.38);\\n  color: white; }\\n.mat-step-header .mat-step-label.mat-step-label-active {\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-stepper-horizontal, .mat-stepper-vertical {\\n  background-color: white; }\\n.mat-stepper-vertical-line::before {\\n  border-left-color: rgba(0, 0, 0, 0.12); }\\n.mat-stepper-horizontal-line {\\n  border-top-color: rgba(0, 0, 0, 0.12); }\\n.mat-sort-header-arrow {\\n  color: #757575; }\\n.mat-tab-nav-bar,\\n.mat-tab-header {\\n  border-bottom: 1px solid rgba(0, 0, 0, 0.12); }\\n.mat-tab-group-inverted-header .mat-tab-nav-bar,\\n.mat-tab-group-inverted-header .mat-tab-header {\\n  border-top: 1px solid rgba(0, 0, 0, 0.12);\\n  border-bottom: none; }\\n.mat-tab-label, .mat-tab-link {\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-tab-label.mat-tab-disabled, .mat-tab-link.mat-tab-disabled {\\n    color: rgba(0, 0, 0, 0.38); }\\n.mat-tab-header-pagination-chevron {\\n  border-color: rgba(0, 0, 0, 0.87); }\\n.mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\\n  border-color: rgba(0, 0, 0, 0.38); }\\n.mat-tab-group[class*='mat-background-'] .mat-tab-header,\\n.mat-tab-nav-bar[class*='mat-background-'] {\\n  border-bottom: none;\\n  border-top: none; }\\n.mat-tab-group.mat-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-group.mat-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\\n.mat-tab-group.mat-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\\n.mat-tab-group.mat-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\\n.mat-tab-nav-bar.mat-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\\n.mat-tab-nav-bar.mat-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\\n  background-color: rgba(87, 136, 206, 0.3); }\\n.mat-tab-group.mat-primary .mat-ink-bar, .mat-tab-nav-bar.mat-primary .mat-ink-bar {\\n  background-color: #5788ce; }\\n.mat-tab-group.mat-primary.mat-background-primary .mat-ink-bar, .mat-tab-nav-bar.mat-primary.mat-background-primary .mat-ink-bar {\\n  background-color: white; }\\n.mat-tab-group.mat-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-group.mat-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\\n.mat-tab-group.mat-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\\n.mat-tab-group.mat-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\\n.mat-tab-nav-bar.mat-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\\n.mat-tab-nav-bar.mat-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\\n  background-color: rgba(179, 255, 140, 0.3); }\\n.mat-tab-group.mat-accent .mat-ink-bar, .mat-tab-nav-bar.mat-accent .mat-ink-bar {\\n  background-color: #53c234; }\\n.mat-tab-group.mat-accent.mat-background-accent .mat-ink-bar, .mat-tab-nav-bar.mat-accent.mat-background-accent .mat-ink-bar {\\n  background-color: white; }\\n.mat-tab-group.mat-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-group.mat-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\\n.mat-tab-group.mat-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\\n.mat-tab-group.mat-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\\n.mat-tab-nav-bar.mat-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\\n.mat-tab-nav-bar.mat-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\\n  background-color: rgba(84, 110, 122, 0.3); }\\n.mat-tab-group.mat-warn .mat-ink-bar, .mat-tab-nav-bar.mat-warn .mat-ink-bar {\\n  background-color: #df5a4d; }\\n.mat-tab-group.mat-warn.mat-background-warn .mat-ink-bar, .mat-tab-nav-bar.mat-warn.mat-background-warn .mat-ink-bar {\\n  background-color: #fefcfe; }\\n.mat-tab-group.mat-background-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-group.mat-background-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\\n.mat-tab-group.mat-background-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\\n.mat-tab-group.mat-background-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-background-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-background-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\\n.mat-tab-nav-bar.mat-background-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\\n.mat-tab-nav-bar.mat-background-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\\n  background-color: rgba(87, 136, 206, 0.3); }\\n.mat-tab-group.mat-background-primary .mat-tab-header, .mat-tab-group.mat-background-primary .mat-tab-links, .mat-tab-nav-bar.mat-background-primary .mat-tab-header, .mat-tab-nav-bar.mat-background-primary .mat-tab-links {\\n  background-color: #5788ce; }\\n.mat-tab-group.mat-background-primary .mat-tab-label, .mat-tab-group.mat-background-primary .mat-tab-link, .mat-tab-nav-bar.mat-background-primary .mat-tab-label, .mat-tab-nav-bar.mat-background-primary .mat-tab-link {\\n  color: white; }\\n.mat-tab-group.mat-background-primary .mat-tab-label.mat-tab-disabled, .mat-tab-group.mat-background-primary .mat-tab-link.mat-tab-disabled, .mat-tab-nav-bar.mat-background-primary .mat-tab-label.mat-tab-disabled, .mat-tab-nav-bar.mat-background-primary .mat-tab-link.mat-tab-disabled {\\n    color: rgba(255, 255, 255, 0.4); }\\n.mat-tab-group.mat-background-primary .mat-tab-header-pagination-chevron, .mat-tab-nav-bar.mat-background-primary .mat-tab-header-pagination-chevron {\\n  border-color: white; }\\n.mat-tab-group.mat-background-primary .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron, .mat-tab-nav-bar.mat-background-primary .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\\n  border-color: rgba(255, 255, 255, 0.4); }\\n.mat-tab-group.mat-background-primary .mat-ripple-element, .mat-tab-nav-bar.mat-background-primary .mat-ripple-element {\\n  background-color: rgba(255, 255, 255, 0.12); }\\n.mat-tab-group.mat-background-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-group.mat-background-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\\n.mat-tab-group.mat-background-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\\n.mat-tab-group.mat-background-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-background-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-background-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\\n.mat-tab-nav-bar.mat-background-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\\n.mat-tab-nav-bar.mat-background-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\\n  background-color: rgba(179, 255, 140, 0.3); }\\n.mat-tab-group.mat-background-accent .mat-tab-header, .mat-tab-group.mat-background-accent .mat-tab-links, .mat-tab-nav-bar.mat-background-accent .mat-tab-header, .mat-tab-nav-bar.mat-background-accent .mat-tab-links {\\n  background-color: #53c234; }\\n.mat-tab-group.mat-background-accent .mat-tab-label, .mat-tab-group.mat-background-accent .mat-tab-link, .mat-tab-nav-bar.mat-background-accent .mat-tab-label, .mat-tab-nav-bar.mat-background-accent .mat-tab-link {\\n  color: white; }\\n.mat-tab-group.mat-background-accent .mat-tab-label.mat-tab-disabled, .mat-tab-group.mat-background-accent .mat-tab-link.mat-tab-disabled, .mat-tab-nav-bar.mat-background-accent .mat-tab-label.mat-tab-disabled, .mat-tab-nav-bar.mat-background-accent .mat-tab-link.mat-tab-disabled {\\n    color: rgba(255, 255, 255, 0.4); }\\n.mat-tab-group.mat-background-accent .mat-tab-header-pagination-chevron, .mat-tab-nav-bar.mat-background-accent .mat-tab-header-pagination-chevron {\\n  border-color: white; }\\n.mat-tab-group.mat-background-accent .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron, .mat-tab-nav-bar.mat-background-accent .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\\n  border-color: rgba(255, 255, 255, 0.4); }\\n.mat-tab-group.mat-background-accent .mat-ripple-element, .mat-tab-nav-bar.mat-background-accent .mat-ripple-element {\\n  background-color: rgba(255, 255, 255, 0.12); }\\n.mat-tab-group.mat-background-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-group.mat-background-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\\n.mat-tab-group.mat-background-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\\n.mat-tab-group.mat-background-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-background-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-background-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\\n.mat-tab-nav-bar.mat-background-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\\n.mat-tab-nav-bar.mat-background-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\\n  background-color: rgba(84, 110, 122, 0.3); }\\n.mat-tab-group.mat-background-warn .mat-tab-header, .mat-tab-group.mat-background-warn .mat-tab-links, .mat-tab-nav-bar.mat-background-warn .mat-tab-header, .mat-tab-nav-bar.mat-background-warn .mat-tab-links {\\n  background-color: #df5a4d; }\\n.mat-tab-group.mat-background-warn .mat-tab-label, .mat-tab-group.mat-background-warn .mat-tab-link, .mat-tab-nav-bar.mat-background-warn .mat-tab-label, .mat-tab-nav-bar.mat-background-warn .mat-tab-link {\\n  color: #fefcfe; }\\n.mat-tab-group.mat-background-warn .mat-tab-label.mat-tab-disabled, .mat-tab-group.mat-background-warn .mat-tab-link.mat-tab-disabled, .mat-tab-nav-bar.mat-background-warn .mat-tab-label.mat-tab-disabled, .mat-tab-nav-bar.mat-background-warn .mat-tab-link.mat-tab-disabled {\\n    color: rgba(254, 252, 254, 0.4); }\\n.mat-tab-group.mat-background-warn .mat-tab-header-pagination-chevron, .mat-tab-nav-bar.mat-background-warn .mat-tab-header-pagination-chevron {\\n  border-color: #fefcfe; }\\n.mat-tab-group.mat-background-warn .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron, .mat-tab-nav-bar.mat-background-warn .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\\n  border-color: rgba(254, 252, 254, 0.4); }\\n.mat-tab-group.mat-background-warn .mat-ripple-element, .mat-tab-nav-bar.mat-background-warn .mat-ripple-element {\\n  background-color: rgba(254, 252, 254, 0.12); }\\n.mat-toolbar {\\n  background: whitesmoke;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-toolbar.mat-primary {\\n    background: #5788ce;\\n    color: white; }\\n.mat-toolbar.mat-accent {\\n    background: #53c234;\\n    color: white; }\\n.mat-toolbar.mat-warn {\\n    background: #df5a4d;\\n    color: #fefcfe; }\\n.mat-toolbar .mat-form-field-underline,\\n  .mat-toolbar .mat-form-field-ripple,\\n  .mat-toolbar .mat-focused .mat-form-field-ripple {\\n    background-color: currentColor; }\\n.mat-toolbar .mat-form-field-label,\\n  .mat-toolbar .mat-focused .mat-form-field-label,\\n  .mat-toolbar .mat-select-value,\\n  .mat-toolbar .mat-select-arrow,\\n  .mat-toolbar .mat-form-field.mat-focused .mat-select-arrow {\\n    color: inherit; }\\n.mat-toolbar .mat-input-element {\\n    caret-color: currentColor; }\\n.mat-tooltip {\\n  background: rgba(97, 97, 97, 0.9); }\\n.mat-tree {\\n  background: white; }\\n.mat-tree-node {\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-snack-bar-container {\\n  background: #323232;\\n  color: white; }\\n.mat-simple-snackbar-action {\\n  color: #53c234; }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-chip.mat-standard-chip {\\n  background-color: #009cb9;\\n  color: white; }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-chip.mat-standard-chip mat-icon {\\n    margin-left: -8px;\\n    margin-right: 5px; }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-chip.mat-standard-chip.flat {\\n    cursor: not-allowed; }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-chip.mat-standard-chip.mat-lemon {\\n    background-color: #f9f871; }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-chip.mat-standard-chip.mat-energy {\\n    background-color: #ffc65b; }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-chip.mat-standard-chip.mat-cherry {\\n    background-color: #cb4d84;\\n    color: white; }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-chip.mat-standard-chip.mat-coral {\\n    background-color: #f46b72; }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-chip.mat-standard-chip.mat-apricot {\\n    background-color: #ff9661; }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-chip.mat-standard-chip.mat-violine {\\n    background-color: #90408d;\\n    color: white; }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-chip.mat-standard-chip.mat-aqua {\\n    background-color: #00bab4;\\n    color: white; }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-chip.mat-standard-chip.mat-duck {\\n    background-color: #009cb9;\\n    color: white; }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-chip.mat-standard-chip.mat-grass {\\n    background-color: #43d49e;\\n    color: white; }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-chip.mat-standard-chip.mat-royal {\\n    background-color: #007caa;\\n    color: white; }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-chip.mat-standard-chip.mat-error {\\n    background-color: #df5a4d;\\n    color: white; }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-chip.mat-standard-chip.mat-success {\\n    background-color: #8ce683;\\n    color: white; }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-chip.mat-standard-chip.mat-approved {\\n    background-color: #229e00;\\n    color: white; }\\n.mat-expansion-panel {\\n  color: white;\\n  background-color: #53c234;\\n  border-radius: 25px; }\\n.mat-expansion-panel-header-title {\\n  font-size: 16px !important;\\n  color: white !important; }\\n.mat-expansion-panel:hover {\\n  background-color: #53c234 !important; }\\n.mat-expansion-panel-header.mat-expanded,\\n.mat-expansion-panel.mat-expanded {\\n  border-radius: 3px 3px 0 0; }\\n.mat-expansion-panel-body {\\n  box-shadow: 0 5px 5px -3px rgba(0, 0, 0, 0.2), 0 8px 10px 1px rgba(0, 0, 0, 0.14), 0 3px 14px 2px rgba(0, 0, 0, 0.12); }\\n.mat-menu-item {\\n  color: #332f30; }\\n.atlas-company-picker-select {\\n  width: 250px;\\n  height: inherit;\\n  font-size: 14px !important;\\n  text-align: right; }\\n.company-list {\\n  margin: 0;\\n  padding: 5px;\\n  height: 24px;\\n  line-height: 1.5; }\\n.atlas-company-picker-option {\\n  height: 30px !important;\\n  text-align: left; }\\n.static {\\n  position: relative;\\n  height: 35px; }\\n.foreground-element {\\n  z-index: 2;\\n  position: relative; }\\n.foreground-element.mat-expansion-panel {\\n    background-color: #605C5E !important; }\\n.foreground-element-primary {\\n  z-index: 2;\\n  position: relative; }\\n.foreground-element-primary.mat-expansion-panel {\\n    background-color: #53c234 !important; }\\n.company-chip.mat-expansion-panel {\\n  box-shadow: 0 5px 5px -3px rgba(0, 0, 0, 0.2), 0 8px 10px 1px rgba(0, 0, 0, 0.14), 0 3px 14px 2px rgba(0, 0, 0, 0.12) !important; }\\n\"","\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { filter } from 'rxjs/operators';\r\nimport { CompanyManagerService } from '../../../core/services/company-manager.service';\r\nimport { Company } from '../../entities/company.entity';\r\nimport { CookiesProps, CookiesService } from '../../services/cookies.service';\r\nimport { UiService } from '../../services/ui.service';\r\n\r\n@Component({\r\n    selector: 'atlas-company-picker',\r\n    templateUrl: './company-picker.component.html',\r\n    styleUrls: ['./company-picker.component.scss'],\r\n})\r\nexport class CompanyPickerComponent implements OnInit {\r\n\r\n    company: string;\r\n    envName: string;\r\n    foreGroundStyles: string = 'foreground-element';\r\n    primaryEnv: string = '-primary';\r\n    companySelectionForm = new FormGroup({\r\n        selectedCompanyCtrl: new FormControl(),\r\n    });\r\n\r\n    companies: Company[] = [];\r\n    currentCompany: string;\r\n    isPanelOpen = false;\r\n    foreGroundClass: string;\r\n    constructor(\r\n        private router: Router,\r\n        private uiService: UiService,\r\n        private cookiesService: CookiesService,\r\n        private companyManager: CompanyManagerService) { }\r\n\r\n    ngOnInit() {\r\n        this.companies = this.companyManager.getLoadedCompanies();\r\n        this.envName = this.uiService.getStylesForEnvironments();\r\n\r\n        if (this.envName !== this.primaryEnv) {\r\n            this.foreGroundClass = this.foreGroundStyles;\r\n        } else {\r\n            this.foreGroundClass = this.foreGroundStyles + this.envName;\r\n        }\r\n\r\n        this.router.events.pipe(\r\n            filter((event) => event instanceof NavigationEnd))\r\n            .subscribe((event: NavigationEnd) => {\r\n                this.company = this.companyManager.getCurrentCompanyId();\r\n                if (this.company) {\r\n                    this.cookiesService.setCookie(CookiesProps.currentCompany, this.company);\r\n                }\r\n            });\r\n    }\r\n\r\n    selectedCompanyChanged(company: Company) {\r\n        this.companyManager.changeCurrentCompany(company.companyId);\r\n    }\r\n\r\n    closePanel() {\r\n        this.isPanelOpen = false;\r\n    }\r\n\r\n}\r\n","module.exports = \"<h1 mat-dialog-title\\r\\n    style=\\\"text-transform: uppercase;\\\">{{dialogData.title}}</h1>\\r\\n<mat-dialog-content>\\r\\n    <div fxLayout=\\\"row\\\"\\r\\n         fxLayoutAlign=\\\"none center\\\"\\r\\n         fxLayoutWrap\\r\\n         fxLayoutGap=\\\"10px\\\">\\r\\n        <p [innerHtml]=\\\"dialogData.text\\\"></p>\\r\\n    </div>\\r\\n</mat-dialog-content>\\r\\n<mat-dialog-actions>\\r\\n    <button *ngIf=\\\"dialogData.cancelButton\\\"\\r\\n            mat-button\\r\\n            (click)=\\\"onCloseCancel()\\\">{{dialogData.cancelButton}}</button>\\r\\n    <span class=\\\"fill-space\\\"></span>\\r\\n    <button *ngIf=\\\"dialogData.okButton\\\"\\r\\n            mat-button\\r\\n            (click)=\\\"onCloseConfirm()\\\">{{dialogData.okButton}}</button>\\r\\n</mat-dialog-actions>\"","module.exports = \"\"","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\r\n\r\n@Component({\r\n    selector: 'atr-confirmation-dialog',\r\n    templateUrl: './confirmation-dialog.component.html',\r\n    styleUrls: ['./confirmation-dialog.component.scss'],\r\n})\r\nexport class ConfirmationDialogComponent implements OnInit {\r\n    dialogData: {\r\n        title: string,\r\n        text: string,\r\n        okButton: string,\r\n        cancelButton: string;\r\n    };\r\n\r\n    constructor(\r\n        public thisDialogRef: MatDialogRef<ConfirmationDialogComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: { title: string, text: string, okButton: string, cancelButton: string; },\r\n    ) {\r\n        this.dialogData = data;\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    onCloseConfirm() {\r\n        this.thisDialogRef.close(true);\r\n    }\r\n\r\n    onCloseCancel() {\r\n        this.thisDialogRef.close(false);\r\n    }\r\n}\r\n","module.exports = \"<h2 mat-dialog-title>{{ lightboxTitle}}\\r\\n    <button mat-icon-button\\r\\n            mat-dialog-close\\r\\n            class=\\\"close-dialog-btn\\\">\\r\\n        <mat-icon aria-label=\\\"Closing button\\\">clear</mat-icon>\\r\\n    </button></h2>\\r\\n\\r\\n<mat-dialog-content>\\r\\n    <div ag-grid=\\\"gridOptions\\\"\\r\\n         class=\\\"ag-theme-material pointer-cursor\\\"\\r\\n         style=\\\"width: 100%; height: 100%\\\"\\r\\n         *ngIf=\\\"!isLoading\\\">\\r\\n        <ag-grid-angular class=\\\"ag-theme-material\\\"\\r\\n                         [columnDefs]=\\\"columnDefs\\\"\\r\\n                         (gridReady)=\\\"onGridReady($event)\\\"\\r\\n                         [enableColResize]=\\\"true\\\"\\r\\n                         [enableSorting]=\\\"true\\\"\\r\\n                         [rowSelection]=\\\"rowSelection\\\"\\r\\n                         [rowMultiSelectWithClick]=\\\"data.multiselect\\\"\\r\\n                         [getMainMenuItems]=\\\"getMainMenuItems.bind(this)\\\"\\r\\n                         domLayout=autoHeight\\r\\n                         (rowClicked)=\\\"onRowClicked($event)\\\"\\r\\n                         enableFilter\\r\\n                         [rowHeight]=\\\"atlasAgGridParam.rowHeight\\\">\\r\\n        </ag-grid-angular>\\r\\n    </div>\\r\\n</mat-dialog-content>\\r\\n\\r\\n\\r\\n<mat-divider></mat-divider>\\r\\n\\r\\n<mat-dialog-actions>\\r\\n    <button mat-button\\r\\n            mat-dialog-close>discard</button>\\r\\n    <span class=\\\"fill-space\\\"></span>\\r\\n    <button *ngIf='data.multiselect'\\r\\n            mat-button\\r\\n            (click)='onMultipleSelectConfirmButtonClicked()'>confirm</button>\\r\\n</mat-dialog-actions>\\r\\n\"","module.exports = \"button {\\n  margin: 0 !important; }\\n\\n.mat-dialog-content {\\n  max-height: 64vh; }\\n\\nag-grid-angular {\\n  margin: auto -16px 0px -16px; }\\n\"","import { Component, Inject, OnDestroy, OnInit } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\r\nimport * as agGrid from 'ag-grid-community';\r\nimport { forkJoin, Observable, Subject } from 'rxjs';\r\nimport { finalize, takeUntil } from 'rxjs/operators';\r\nimport { CompanyManagerService } from '../../../../core/services/company-manager.service';\r\nimport { AgGridService } from '../../../services/ag-grid.service';\r\nimport { MasterdataService } from '../../../services/http-services/masterdata.service';\r\nimport { AtlasAgGridParam } from './../../../entities/atlas-ag-grid-param.entity';\r\nimport { ColumnConfigurationProperties } from './../../../entities/grid-column-configuration.entity';\r\nimport { GridConfigurationProviderService } from './../../../services/grid-configuration-provider.service';\r\nimport { UiService } from './../../../services/ui.service';\r\nimport { UtilService } from './../../../services/util.service';\r\n\r\n@Component({\r\n    selector: 'atlas-contextual-search-base-light-box',\r\n    templateUrl: './contextual-search-base-light-box.component.html',\r\n    styleUrls: ['./contextual-search-base-light-box.component.scss'],\r\n})\r\nexport class ContextualSearchBaseLightBoxComponent implements OnInit, OnDestroy {\r\n    gridOptions: agGrid.GridOptions;\r\n    gridApi: agGrid.GridApi;\r\n    gridColumnApi: agGrid.ColumnApi;\r\n    gridId: string;\r\n    company: string;\r\n    lightboxTitle: string;\r\n    rowData: any[];\r\n    atlasAgGridParam: AtlasAgGridParam;\r\n    isLoading = true;\r\n    destroy$ = new Subject();\r\n\r\n    columnDefs: agGrid.ColDef[];\r\n    rowSelection = 'single';\r\n    headerCheckBoxSelection = true;\r\n\r\n    constructor(\r\n        public thisDialogRef: MatDialogRef<ContextualSearchBaseLightBoxComponent>,\r\n\r\n        @Inject(MAT_DIALOG_DATA) public data: {\r\n            gridId: string,\r\n            rowData$: Observable<any[]>,\r\n            multiselect?: boolean, // this parameter is used mainly for list and search picklist\r\n\r\n        },\r\n        protected companyManager: CompanyManagerService,\r\n        protected gridConfigurationProvider: GridConfigurationProviderService,\r\n        protected masterdataService: MasterdataService,\r\n        protected uiService: UiService,\r\n        protected utilService: UtilService,\r\n        public gridService: AgGridService,\r\n    ) {\r\n        this.atlasAgGridParam = this.gridService.getAgGridParam();\r\n        this.gridId = data.gridId;\r\n        this.company = this.companyManager.getCurrentCompanyId();\r\n    }\r\n\r\n    initColumns(configuration: ColumnConfigurationProperties[]) {\r\n        this.columnDefs = [];\r\n        if (this.data.multiselect) {\r\n            this.rowSelection = 'multiple';\r\n            this.columnDefs.push(\r\n                {\r\n                    headerName: '',\r\n                    colId: 'selection',\r\n                    headerCheckboxSelection: this.headerCheckBoxSelection,\r\n                    checkboxSelection: true,\r\n                    maxWidth: 50,\r\n                    pinned: 'left',\r\n                });\r\n        }\r\n        this.columnDefs = this.columnDefs.concat(configuration.map((config: ColumnConfigurationProperties) => {\r\n            return {\r\n                headerName: config.friendlyName,\r\n                field: this.utilService.convertToCamelCase(config.fieldName),\r\n                hide: !config.isVisible,\r\n                filter: this.uiService.getFilterTypeForGridType(config.gridType),\r\n            };\r\n        }));\r\n\r\n        if (this.gridApi) {\r\n            if (this.gridApi) { this.gridApi.sizeColumnsToFit(); }\r\n        }\r\n        if (this.gridOptions) {\r\n            this.gridOptions.columnDefs = this.columnDefs;\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        forkJoin([this.data.rowData$,\r\n        this.gridConfigurationProvider.getConfiguration(this.company, this.gridId)])\r\n            .pipe(\r\n                finalize(() => {\r\n                    this.isLoading = false;\r\n                }),\r\n                takeUntil(this.destroy$),\r\n            )\r\n            .subscribe(([data, configuration]) => {\r\n                this.rowData = data;\r\n                this.lightboxTitle = configuration.name;\r\n                const columnConfiguration: ColumnConfigurationProperties[] = configuration.columns;\r\n                this.initColumns(columnConfiguration);\r\n            });\r\n    }\r\n\r\n    onGridReady(params) {\r\n        this.gridOptions = params;\r\n        this.gridOptions.columnDefs = this.columnDefs;\r\n        this.gridApi = this.gridOptions.api;\r\n        this.gridColumnApi = this.gridOptions.columnApi;\r\n\r\n        if (this.gridApi) {\r\n            this.gridApi.setRowData(this.rowData);\r\n            this.refreshSelectedColumns();\r\n            this.gridApi.sizeColumnsToFit();\r\n        }\r\n\r\n        window.onresize = () => {\r\n            if (this.gridApi) { this.gridApi.sizeColumnsToFit(); }\r\n        };\r\n    }\r\n\r\n    onGridSizeChanged(params) {\r\n        this.gridColumnApi = params.columnApi;\r\n        if (this.gridOptions && this.gridOptions.api) { this.gridOptions.api.sizeColumnsToFit(); }\r\n    }\r\n\r\n    onRowClicked(event) {\r\n        if (!this.data.multiselect) {\r\n            this.thisDialogRef.close(event.data);\r\n        }\r\n    }\r\n\r\n    getMainMenuItems(params) {\r\n        return this.uiService.getMainMenuItems(params);\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destroy$.next();\r\n        this.destroy$.complete();\r\n    }\r\n\r\n    onMultipleSelectConfirmButtonClicked() {\r\n        const selectedItems = this.gridApi.getSelectedRows();\r\n        this.thisDialogRef.close(selectedItems);\r\n    }\r\n\r\n    refreshSelectedColumns() {\r\n        if (this.data.multiselect && this.gridApi) {\r\n            this.gridApi.forEachNode((node) => {\r\n                node.setSelected(node.data['isSelected'] ? true : false);\r\n            });\r\n        }\r\n    }\r\n}\r\n","module.exports = \"<h1 mat-dialog-title>{{ lightboxTitle}}\\r\\n    <button mat-icon-button\\r\\n            mat-dialog-close\\r\\n            class=\\\"close-dialog-btn\\\">\\r\\n        <mat-icon aria-label=\\\"Closing button\\\">clear</mat-icon>\\r\\n    </button></h1>\\r\\n\\r\\n<mat-dialog-content *ngIf=\\\"!isLoading\\\">\\r\\n    <div fxLayout=\\\"row\\\"\\r\\n         fxLayoutAlign=\\\"end\\\"\\r\\n         fxLayoutWrap\\r\\n         class=\\\"atlas-grid-card-header\\\">\\r\\n        <div>\\r\\n            <atlas-ag-grid-user-preferences *ngIf=\\\"gridOptions && gridOptions.columnDefs\\\"\\r\\n                                            [gridOptions]=\\\"gridOptions\\\"\\r\\n                                            [company]=\\\"company\\\"\\r\\n                                            [gridId]=\\\"gridId\\\"\\r\\n                                            #userPreferences>\\r\\n            </atlas-ag-grid-user-preferences>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div ag-grid=\\\"gridOptions\\\"\\r\\n         class=\\\"ag-theme-material pointer-cursor\\\"\\r\\n         style=\\\"height:auto\\\">\\r\\n        <ag-grid-angular class=\\\"ag-theme-material\\\"\\r\\n                         [columnDefs]=\\\"columnDefs\\\"\\r\\n                         (gridReady)=\\\"onGridReady($event)\\\"\\r\\n                         [enableColResize]=\\\"true\\\"\\r\\n                         [enableSorting]=\\\"true\\\"\\r\\n                         domLayout=autoHeight\\r\\n                         (rowClicked)=\\\"onRowClicked($event)\\\"\\r\\n                         [getMainMenuItems]=\\\"getMainMenuItems.bind(this)\\\"\\r\\n                         (columnVisible)=\\\"onColumnVisibilityChanged($event)\\\"\\r\\n                         enableFilter\\r\\n                         [rowHeight]=\\\"atlasAgGridParam.rowHeight\\\">\\r\\n        </ag-grid-angular>\\r\\n    </div>\\r\\n</mat-dialog-content>\\r\\n\\r\\n<mat-divider></mat-divider>\\r\\n\\r\\n<mat-dialog-actions>\\r\\n    <button mat-button\\r\\n            mat-dialog-close>discard</button>\\r\\n</mat-dialog-actions>\\r\\n\"","module.exports = \".mat-dialog-content {\\n  height: calc(100% - 115px);\\n  max-height: 64vh; }\\n\\nbutton {\\n  margin: 0 !important; }\\n\\nag-grid-angular {\\n  margin: auto -16px 0px -16px; }\\n\"","import { Component, Inject, ViewChild } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\r\nimport { Observable } from 'rxjs';\r\nimport { CompanyManagerService } from '../../../../../core/services/company-manager.service';\r\nimport { ColumnConfigurationProperties } from '../../../../entities/grid-column-configuration.entity';\r\nimport { AgGridService } from '../../../../services/ag-grid.service';\r\nimport { GridConfigurationProviderService } from '../../../../services/grid-configuration-provider.service';\r\nimport { MasterdataService } from '../../../../services/http-services/masterdata.service';\r\nimport { ContextualSearchBaseLightBoxComponent } from '../contextual-search-base-light-box.component';\r\nimport { UiService } from './../../../../services/ui.service';\r\nimport { UtilService } from './../../../../services/util.service';\r\nimport { AgGridUserPreferencesComponent } from './../../../ag-grid-user-preferences/ag-grid-user-preferences.component';\r\n\r\n@Component({\r\n    selector: 'atlas-contextual-search-user-preferences-light-box',\r\n    templateUrl: './contextual-search-user-preferences-light-box.component.html',\r\n    styleUrls: ['./contextual-search-user-preferences-light-box.component.scss'],\r\n})\r\nexport class ContextualSearchUserPreferencesLightBoxComponent extends ContextualSearchBaseLightBoxComponent {\r\n    company: string;\r\n    @ViewChild('userPreferences') userPreferencesComponent: AgGridUserPreferencesComponent;\r\n\r\n    constructor(\r\n        public thisDialogRef: MatDialogRef<ContextualSearchBaseLightBoxComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: {\r\n            lightboxTitle: string,\r\n            gridId: string,\r\n            rowData$: Observable<any[]>,\r\n            multiselect?: boolean, // not exploited in this one yet\r\n        },\r\n        protected companyManager: CompanyManagerService,\r\n        protected gridConfigurationProvider: GridConfigurationProviderService,\r\n        protected masterdataService: MasterdataService,\r\n        protected uiService: UiService,\r\n        protected utilService: UtilService,\r\n        public gridService: AgGridService,\r\n\r\n    ) {\r\n        super(thisDialogRef, data, companyManager, gridConfigurationProvider, masterdataService, uiService, utilService, gridService);\r\n        this.company = this.companyManager.getCurrentCompanyId();\r\n    }\r\n\r\n    initColumns(configuration: ColumnConfigurationProperties[]) {\r\n        this.columnDefs = configuration.map((config) => {\r\n            return {\r\n                colId: this.utilService.convertToCamelCase(config.fieldName),\r\n                headerName: config.friendlyName,\r\n                field: this.utilService.convertToCamelCase(config.fieldName),\r\n                hide: !config.isVisible,\r\n                filter: this.uiService.getFilterTypeForGridType(config.gridType),\r\n                menuTabs: ['filterMenuTab', 'generalMenuTab'],\r\n            };\r\n        });\r\n        if (this.gridOptions) {\r\n            this.gridOptions.columnDefs = this.columnDefs;\r\n            if (this.gridOptions.api) {\r\n                this.gridOptions.api.setColumnDefs(this.columnDefs);\r\n                if (this.gridOptions && this.gridOptions.api) { this.gridOptions.api.sizeColumnsToFit(); }\r\n            }\r\n        }\r\n    }\r\n\r\n    onColumnVisibilityChanged(col) {\r\n        this.userPreferencesComponent.onChangeColumnVisibility(col);\r\n    }\r\n}\r\n","module.exports = \"<h2 mat-dialog-title>{{ lightboxTitle}}\\r\\n    <button mat-icon-button\\r\\n            mat-dialog-close\\r\\n            class=\\\"close-dialog-btn\\\">\\r\\n        <mat-icon aria-label=\\\"Closing button\\\">clear</mat-icon>\\r\\n    </button></h2>\\r\\n\\r\\n<mat-dialog-content>\\r\\n    <input matInput\\r\\n           [formControl]=\\\"filterControl\\\"\\r\\n           matTooltip=\\\"Filter\\\"\\r\\n           placeholder=\\\"Filter\\\">\\r\\n\\r\\n    <div ag-grid=\\\"gridOptions\\\"\\r\\n         class=\\\"ag-theme-material pointer-cursor\\\"\\r\\n         style=\\\"width: 100%; height: 100%\\\">\\r\\n        <ag-grid-angular class=\\\"ag-theme-material\\\"\\r\\n                         [rowData]=\\\"filteredRow\\\"\\r\\n                         [columnDefs]=\\\"columnDefs\\\"\\r\\n                         (gridReady)=\\\"onGridReady($event)\\\"\\r\\n                         (rowDataChanged)=\\\"onRowDataChanged()\\\"\\r\\n                         [enableColResize]=\\\"true\\\"\\r\\n                         [pagination]=\\\"true\\\"\\r\\n                         [paginationPageSize]=\\\"100\\\"\\r\\n                         [enableSorting]=\\\"true\\\"\\r\\n                         [rowSelection]=\\\"rowSelection\\\"\\r\\n                         [rowMultiSelectWithClick]=\\\"data.multiselect\\\"\\r\\n                         [getMainMenuItems]=\\\"getMainMenuItems.bind(this)\\\"\\r\\n                         domLayout=autoHeight\\r\\n                         (rowSelected)=\\\"onRowSelected($event)\\\"\\r\\n                         enableFilter\\r\\n                         [rowHeight]=\\\"atlasAgGridParam.rowHeight\\\">\\r\\n        </ag-grid-angular>\\r\\n    </div>\\r\\n</mat-dialog-content>\\r\\n\\r\\n\\r\\n<mat-divider></mat-divider>\\r\\n\\r\\n<mat-dialog-actions>\\r\\n    <button mat-button\\r\\n            mat-dialog-close>discard</button>\\r\\n    <button mat-button\\r\\n            (click)='onMultipleSelectConfirmButtonClicked()'>confirm</button>\\r\\n</mat-dialog-actions>\\r\\n\"","module.exports = \".hidden {\\n  display: 'none'; }\\n\"","import { Component, Inject, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\r\nimport { Observable } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { ContextualSearchBaseLightBoxComponent } from '../base-light-box/contextual-search-base-light-box.component';\r\nimport { CompanyManagerService } from './../../../../core/services/company-manager.service';\r\nimport { ColumnConfigurationProperties } from './../../../entities/grid-column-configuration.entity';\r\nimport { AgGridService } from './../../../services/ag-grid.service';\r\nimport { GridConfigurationProviderService } from './../../../services/grid-configuration-provider.service';\r\nimport { MasterdataService } from './../../../services/http-services/masterdata.service';\r\nimport { UiService } from './../../../services/ui.service';\r\nimport { UtilService } from './../../../services/util.service';\r\n\r\n@Component({\r\n    selector: 'atlas-contextual-search-multiple-select-light-box',\r\n    templateUrl: './contextual-search-multiple-select-light-box.component.html',\r\n    styleUrls: ['./contextual-search-multiple-select-light-box.component.scss'],\r\n})\r\nexport class ContextualSearchMultipleSelectLightBoxComponent\r\n    extends ContextualSearchBaseLightBoxComponent implements OnInit, OnDestroy {\r\n\r\n    filterControl: FormControl = new FormControl();\r\n    filteredRow: any[] = [];\r\n    dataHasChanged: boolean = false;\r\n    headerCheckBoxSelection = false;\r\n\r\n    constructor(\r\n        public thisDialogRef: MatDialogRef<ContextualSearchBaseLightBoxComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: {\r\n            gridId: string,\r\n            rowData$: Observable<any[]>,\r\n            lightboxTitle: string,\r\n            currentFilter: string,\r\n            valueProperty: string,\r\n            codeProperty: string,\r\n            displayProperty: string,\r\n            gridConfig: ColumnConfigurationProperties[],\r\n            multiselect: boolean,\r\n        },\r\n        protected companyManager: CompanyManagerService,\r\n        protected gridConfigurationProvider: GridConfigurationProviderService,\r\n        protected masterdataService: MasterdataService,\r\n        protected uiService: UiService,\r\n        protected utilService: UtilService,\r\n        public gridService: AgGridService,\r\n    ) {\r\n        super(\r\n            thisDialogRef,\r\n            {\r\n                gridId: '',\r\n                rowData$: data.rowData$,\r\n                multiselect: true,\r\n            },\r\n            companyManager, gridConfigurationProvider,\r\n            masterdataService, uiService, utilService, gridService);\r\n\r\n        this.lightboxTitle = data.lightboxTitle;\r\n        this.data.multiselect = true;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.rowData = [];\r\n        this.data.rowData$\r\n            .pipe(\r\n                takeUntil(this.destroy$),\r\n            ).subscribe((data) => {\r\n                this.rowData = data;\r\n                this.filterData();\r\n            });\r\n        this.initColumns(this.data.gridConfig);\r\n        this.filterControl.valueChanges.pipe(\r\n            takeUntil(this.destroy$),\r\n        ).subscribe(() => {\r\n            this.filterData();\r\n        });\r\n        this.filterControl.setValue(this.data.currentFilter);\r\n    }\r\n\r\n    filterData() {\r\n        const value = this.filterControl.value;\r\n        this.filteredRow = value ? this.rowData.filter((row) =>\r\n            row[this.data.codeProperty].startsWith(value)\r\n            || (this.data.displayProperty && row[this.data.displayProperty].startsWith(value))) : this.rowData;\r\n        if (this.gridOptions && this.gridOptions.api) {\r\n            this.gridOptions.api.setRowData(this.filteredRow);\r\n            // this.gridOptions.api.redrawRows();\r\n            this.gridOptions.api.forEachNode((node) => {\r\n                const data = this.rowData.find((row) => row[this.data.valueProperty] === node.data[this.data.valueProperty]);\r\n                if (data && data.isSelected) {\r\n                    node.setSelected(true);\r\n                }\r\n            });\r\n            this.dataHasChanged = true;\r\n        }\r\n    }\r\n\r\n    onRowSelected(event) {\r\n        this.rowData.filter((row) => row[this.data.valueProperty] === event.node.data[this.data.valueProperty])\r\n            .forEach((row) => row.isSelected = event.node.selected);\r\n    }\r\n\r\n    onRowDataChanged() {\r\n        if (this.gridOptions && this.gridOptions.api && this.dataHasChanged) {\r\n            this.gridOptions.api.forEachNode((node) => {\r\n                const data = this.rowData.find((row) => row[this.data.valueProperty] === node.data[this.data.valueProperty]);\r\n                if (data && data.isSelected) {\r\n                    node.setSelected(true);\r\n                }\r\n            });\r\n            this.dataHasChanged = false;\r\n        }\r\n    }\r\n\r\n    onGridReady(params) {\r\n        this.gridOptions = params;\r\n        this.gridOptions.columnDefs = this.columnDefs;\r\n        this.gridOptions.api.forEachNode((node) => {\r\n            if (node.data.isSelected) {\r\n                node.setSelected(true);\r\n            }\r\n        });\r\n        this.gridApi = this.gridOptions.api;\r\n        this.gridColumnApi = this.gridOptions.columnApi;\r\n\r\n        if (this.gridApi) { this.gridApi.sizeColumnsToFit(); }\r\n\r\n        window.onresize = () => {\r\n            if (this.gridApi) { this.gridApi.sizeColumnsToFit(); }\r\n        };\r\n    }\r\n\r\n    onRowClicked(event) {\r\n        // Do nothing\r\n    }\r\n\r\n    onMultipleSelectConfirmButtonClicked() {\r\n        this.thisDialogRef.close(this.rowData.filter((option) => option.isSelected));\r\n    }\r\n}\r\n","module.exports = \"<div fxLayout=\\\"row\\\" *ngIf=\\\"statusLabel != null\\\">\\r\\n\\t<span class=\\\"contract-status-pipe\\\">|</span>\\r\\n\\t<span class=\\\"contract-status\\\"\\r\\n\\t\\t  [ngClass]=\\\"{'unapproved' : statusLabel == 'Unapproved', 'approved' : statusLabel == 'Approved'}\\\">\\r\\n\\t\\t{{statusLabel}}\\r\\n\\t</span>\\r\\n</div>\\r\\n\"","module.exports = \".contract-status {\\n  margin-left: 10px;\\n  margin-top: 2px;\\n  font-size: large; }\\n\\n.contract-status-pipe {\\n  font-size: xx-large;\\n  color: #32556e; }\\n\\n.approved {\\n  color: #97B150; }\\n\\n.unapproved {\\n  color: #9B3641; }\\n\"","import { Component, Input, OnInit } from '@angular/core';\r\nimport { ContractStatus } from '../../enums/contract-status.enum';\r\n\r\n@Component({\r\n\tselector: 'atr-contract-status-label',\r\n\ttemplateUrl: './contract-status-label.component.html',\r\n\tstyleUrls: ['./contract-status-label.component.scss'],\r\n})\r\n\r\nexport class ContractStatusLabelComponent implements OnInit {\r\n\r\n\tstatusCode: ContractStatus = null;\r\n\tstatusLabel: string = null;\r\n\r\n\t@Input() set status(status: ContractStatus) {\r\n\t\tthis.statusLabel = ContractStatus[status];\r\n\t\tthis.statusCode = status;\r\n\t}\r\n\r\n\t@Input() set statusString(status: string) {\r\n\t\tthis.statusLabel = status;\r\n\t\tthis.statusCode = ContractStatus[status];\r\n\t}\r\n\r\n\tconstructor() {\t}\r\n\r\n\tngOnInit() {\r\n\t\t// this.statusLabel = ContractStatus[status];\r\n\t}\r\n}\r\n","module.exports = \"{{date | date:dateFormat }}\\r\\n\"","module.exports = \"\"","import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'atr-date-label',\r\n    templateUrl: './date-label.component.html',\r\n    styleUrls: ['./date-label.component.scss'],\r\n})\r\nexport class DateLabelComponent implements OnInit {\r\n\r\n    @Input() date: Date;\r\n    @Input() dateFormat = 'dd MMM yyyy';\r\n\r\n    constructor() { }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n}\r\n","module.exports = \"<h1 mat-dialog-title>{{ dialogData.title }}</h1>\\r\\n<mat-dialog-content class=\\\"mat-dialog-content\\\">\\r\\n    <div fxLayout=\\\"row\\\"\\r\\n         fxLayoutAlign=\\\"center center\\\"\\r\\n         fxLayoutWrap\\r\\n         fxLayoutGap=\\\"6px\\\"\\r\\n         *ngIf=\\\"!isWorkInProgress\\\">\\r\\n        <div fxLayout=\\\"column\\\">\\r\\n            <div>\\r\\n                <atlas-warning-banner *ngIf=\\\"bannerTitle || bannerDescription\\\"\\r\\n                                      [title]=\\\"bannerTitle\\\"\\r\\n                                      [description]=\\\"bannerDescription\\\">\\r\\n                </atlas-warning-banner>\\r\\n            </div>\\r\\n            <p>{{dialogText}}</p>\\r\\n            <p class=\\\"error-message\\\">{{errorMessage}}</p>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div fxLayout=\\\"column\\\"\\r\\n         fxLayoutAlign=\\\"center center\\\"\\r\\n         fxLayoutWrap\\r\\n         fxLayoutGap=\\\"6px\\\"\\r\\n         *ngIf=\\\"isWorkInProgress\\\">\\r\\n        <div fxLayout=\\\"column\\\">\\r\\n            <mat-spinner color=\\\"accent\\\"></mat-spinner>\\r\\n            <p>{{processMessage}}</p>\\r\\n        </div>\\r\\n    </div>\\r\\n</mat-dialog-content>\\r\\n<div fxLayout=\\\"column\\\">\\r\\n    <div>\\r\\n        <input class=\\\"hidden-during-loading\\\"\\r\\n               type=\\\"file\\\"\\r\\n               accept=\\\".docx\\\"\\r\\n               (change)=\\\"onFileSelected($event)\\\"\\r\\n               #fileUpload>\\r\\n    </div>\\r\\n\\r\\n    <div fxLayout=\\\"row\\\"\\r\\n         fxLayoutAlign=\\\"space-between end\\\">\\r\\n        <button mat-button\\r\\n                (click)=\\\"onNoClicked()\\\"\\r\\n                [matTooltipDisabled]=\\\"!discardTooltip\\\"\\r\\n                [matTooltip]=\\\"discardTooltip\\\">\\r\\n            Discard\\r\\n        </button>\\r\\n\\r\\n        <div fxLayout=\\\"row\\\"\\r\\n             fxLayoutAlign=\\\"start end\\\">\\r\\n            <button mat-button\\r\\n                    (click)=\\\"onConfirmClicked()\\\"\\r\\n                    [disabled]=\\\"isWorkInProgress\\\"\\r\\n                    [matTooltipDisabled]=\\\"!(dialogData.buttonSettings && dialogData.buttonSettings.createButtonTooltip)\\\"\\r\\n                    [matTooltip]=\\\"dialogData.buttonSettings.createButtonTooltip\\\">\\r\\n                {{dialogData.buttonSettings.createButtonText}}\\r\\n            </button>\\r\\n            <button mat-button\\r\\n                    *ngIf=\\\"dialogData.hasBrowseButton\\\"\\r\\n                    (click)=\\\"fileUpload.click()\\\"\\r\\n                    [disabled]=\\\"isWorkInProgress\\\"\\r\\n                    [matTooltipDisabled]=\\\"!(dialogData.buttonSettings && dialogData.buttonSettings.uploadButtonTooltip)\\\"\\r\\n                    [matTooltip]=\\\"dialogData.buttonSettings.uploadButtonTooltip\\\">\\r\\n                {{dialogData.buttonSettings.uploadButtonText}}\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","module.exports = \".mat-dialog-content {\\n  width: 500px; }\\n\\n.printing-input-container {\\n  margin-top: 2%; }\\n\\n.error-message {\\n  color: #df5a4d;\\n  font-size: 0.8em; }\\n\\n.mat-button {\\n  margin: 0; }\\n\"","import { Component, EventEmitter, Inject, OnInit, Output } from '@angular/core';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\r\nimport { DocumentPopupButtonSettings } from '../../entities/document-popup-button-settings.entity';\r\nimport { FormConfigurationProviderService } from '../../services/form-configuration-provider.service';\r\nimport { GenerateDocumentActions } from './../../enums/generate-document-action.enum';\r\nimport { SnackbarService } from './../../services/snackbar.service';\r\nimport { UiService } from './../../services/ui.service';\r\n\r\n@Component({\r\n    selector: 'atlas-document-generation-confirmation-dialog-box',\r\n    templateUrl: './document-generation-confirmation-dialog-box.component.html',\r\n    styleUrls: ['./document-generation-confirmation-dialog-box.component.scss'],\r\n})\r\nexport class DocumentGenerationConfirmationDialogBoxComponent implements OnInit {\r\n    @Output() readonly documentSelected = new EventEmitter<File>();\r\n    dialogData: {\r\n        title: string,\r\n        hasBrowseButton: boolean,\r\n        entityName: string,\r\n        useEntityNameInButtons: boolean,\r\n        buttonSettings: DocumentPopupButtonSettings,\r\n    };\r\n    bannerTitle = '';\r\n    bannerDescription = '';\r\n    dialogText = '';\r\n    errorMessage = '';\r\n    processMessage = '';\r\n    isWorkInProgress: boolean = false;\r\n    discardTooltip: string = 'Go back and don\\'t generate the document';\r\n\r\n    constructor(protected formBuilder: FormBuilder,\r\n        public thisDialogRef: MatDialogRef<DocumentGenerationConfirmationDialogBoxComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: {\r\n            title: string, hasBrowseButton: boolean, entityName: string, useEntityNameInButtons: boolean,\r\n            buttonSettings: DocumentPopupButtonSettings,\r\n        },\r\n        protected snackbarService: SnackbarService,\r\n        protected formConfigurationProvider: FormConfigurationProviderService,\r\n        protected uiService: UiService,\r\n    ) {\r\n        this.dialogData = data;\r\n        this.dialogText = 'To create a' + (this.uiService.startsWithVowel(this.dialogData.entityName) ? 'n' : '') + ' '\r\n            + this.dialogData.entityName + ', you can choose to edit the ' + this.dialogData.entityName\r\n            + ' document or to use the one generated by Atlas.';\r\n        thisDialogRef.disableClose = true;\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    onConfirmClicked() {\r\n        this.thisDialogRef.close({ buttonClicked: GenerateDocumentActions.ConfirmDocumentGeneration });\r\n    }\r\n\r\n    onFileSelected(event) {\r\n        if (event.target.files.length === 0) {\r\n            return;\r\n        }\r\n        const file: File = event.target.files[0];\r\n        this.documentSelected.emit(file);\r\n        event.stopPropagation();\r\n    }\r\n\r\n    onNoClicked() {\r\n        this.thisDialogRef.close(false);\r\n    }\r\n}\r\n","module.exports = \"<mat-card class=\\\"empty-state\\\">\\r\\n    <div class=\\\"empty-state-content\\\">\\r\\n\\r\\n        <h3>{{title}}</h3>\\r\\n        <p>{{message}}</p>\\r\\n\\r\\n        <div *ngIf=\\\"hasButton\\\">\\r\\n            <button mat-raised-button\\r\\n                    (click)=\\\"onButtonClicked()\\\">{{buttonText}}</button>\\r\\n        </div>\\r\\n    </div>\\r\\n</mat-card>\\r\\n\"","module.exports = \".empty-state {\\n  background: url(\\\"/assets/img/empty-status.svg\\\") bottom center;\\n  background-size: 100% 40%;\\n  background-repeat: no-repeat;\\n  background-color: white;\\n  min-height: 160px;\\n  line-height: 19px;\\n  font-size: 16px;\\n  text-align: center;\\n  position: relative; }\\n  .empty-state p {\\n    font-size: 16px;\\n    letter-spacing: 0.5px; }\\n  .empty-state h3 {\\n    font-weight: 600; }\\n  .empty-state .empty-state-content {\\n    position: absolute;\\n    top: 50%;\\n    left: 50%;\\n    -webkit-transform: translate(-50%, -50%);\\n            transform: translate(-50%, -50%); }\\n\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'atlas-empty-state',\r\n    templateUrl: './empty-state.component.html',\r\n    styleUrls: ['./empty-state.component.scss'],\r\n})\r\nexport class EmptyStateComponent implements OnInit {\r\n\r\n    @Input() title: string;\r\n    @Input() message: string;\r\n    @Input() hasButton: boolean = false;\r\n    @Input() buttonText: string;\r\n    @Output() readonly buttonClicked = new EventEmitter<void>();\r\n\r\n    constructor() { }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    onButtonClicked(): void {\r\n        this.buttonClicked.emit();\r\n    }\r\n}\r\n","module.exports = \"<mat-toolbar matToolbarHighlight\\r\\n             class=\\\"fixedNavMenuOpen fixedNavSubMenu\\\">\\r\\n    <div fxLayout=\\\"row\\\"\\r\\n         fxLayoutAlign=\\\"none center\\\"\\r\\n         fxLayoutGap=\\\"10px\\\"\\r\\n         class=\\\"toolbar-div\\\">\\r\\n        <mat-icon class=\\\"title-icon\\\">swap_horiz</mat-icon>\\r\\n        <h1>{{ error.status===403 ?  '' : 'Error '+ (error.status + ' : ')  }}{{error.title}}</h1>\\r\\n    </div>\\r\\n</mat-toolbar>\\r\\n\\r\\n<div fxLayout=\\\"column\\\"\\r\\n     fxLayoutAlign=\\\"none center\\\"\\r\\n     fxLayoutWrap\\r\\n     fxLayoutGap=\\\"20px\\\"\\r\\n     style=\\\"height: 100px;\\\">\\r\\n    <div fxFlex=\\\"100%\\\"\\r\\n         fxFlex.xs=\\\"100%\\\"\\r\\n         fxFlex.sm=\\\"100%\\\">\\r\\n        <h2>{{error.catchPhrase}}</h2>\\r\\n    </div>\\r\\n</div>\\r\\n<div fxLayout=\\\"row\\\"\\r\\n     fxLayoutAlign=\\\"center end\\\"\\r\\n     fxLayoutWrap\\r\\n     fxLayoutGap=\\\"20px\\\"\\r\\n     class=\\\"error-image-container\\\">\\r\\n    <div fxFlex=\\\"50%\\\"\\r\\n         fxFlex.xs=\\\"50%\\\"\\r\\n         fxFlex.sm=\\\"50%\\\">\\r\\n        <img src={{error.image}} />\\r\\n    </div>\\r\\n</div>\\r\\n<div fxLayout=\\\"column\\\"\\r\\n     fxLayoutAlign=\\\"none center\\\"\\r\\n     fxLayoutWrap\\r\\n     fxLayoutGap=\\\"20px\\\">\\r\\n    <div fxFlex=\\\"100%\\\"\\r\\n         fxFlex.xs=\\\"100%\\\"\\r\\n         fxFlex.sm=\\\"100%\\\">\\r\\n        <h2>{{error.title}}</h2>\\r\\n    </div>\\r\\n    <div fxFlex=\\\"100%\\\"\\r\\n         fxFlex.xs=\\\"100%\\\"\\r\\n         fxFlex.sm=\\\"100%\\\">\\r\\n        <p>{{error.message}}</p>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"company != undefined\\\"\\r\\n         fxFlex=\\\"100%\\\"\\r\\n         fxFlex.xs=\\\"100%\\\"\\r\\n         fxFlex.sm=\\\"100%\\\">\\r\\n        <button mat-raised-button\\r\\n                (click)=\\\"goToHomePage()\\\">BACK TO HOME</button>\\r\\n    </div>\\r\\n</div>\"","module.exports = \".error-image-container {\\n  max-height: 300px !important; }\\n  .error-image-container img {\\n    max-height: 400px; }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ErrorDisplayView } from '../../models/error-display-view';\r\n\r\n@Component({\r\n    selector: 'atlas-error-page',\r\n    templateUrl: './error-page.component.html',\r\n    styleUrls: ['./error-page.component.scss'],\r\n})\r\nexport class ErrorPageComponent implements OnInit {\r\n    company: string;\r\n    error: ErrorDisplayView;\r\n\r\n    constructor(\r\n        private route: ActivatedRoute,\r\n        private router: Router) {\r\n        this.company = this.route.snapshot.paramMap.get('company');\r\n        this.company = this.company != null && this.company.length > 2 ? null : this.company;\r\n        const status = this.route.snapshot.paramMap.get('status');\r\n        this.error = new ErrorDisplayView(status);\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    goToHomePage() {\r\n        this.router.navigate([this.company + '/home']);\r\n    }\r\n}\r\n","module.exports = \"<div fxLayout=\\\"row\\\"\\r\\n     fxLayoutAlign=\\\"start start\\\">\\r\\n    <h1>Favourites</h1>\\r\\n</div>\\r\\n<div fxLayout=\\\"row\\\"\\r\\n     fxLayoutAlign=\\\"start start\\\"\\r\\n     ag-grid=\\\"favouritesListOptions\\\"\\r\\n     class=\\\"ag-theme-material pointer-cursor\\\"\\r\\n     style=\\\"width: 100%; height: 100%\\\">\\r\\n    <ag-grid-angular style=\\\" height: 100%; width: 100%;\\\"\\r\\n                     class=\\\"ag-theme-material favourites-list-grid\\\"\\r\\n                     [rowData]=\\\"favouriteListGridRows\\\"\\r\\n                     [columnDefs]=\\\"favouriteListGridCols\\\"\\r\\n                     [gridOptions]=\\\"favouriteListOptions\\\"\\r\\n                     [enableColResize]=\\\"true\\\"\\r\\n                     [pagination]=\\\"true\\\"\\r\\n                     [paginationPageSize]=\\\"10\\\"\\r\\n                     domLayout=autoHeight\\r\\n                     (gridReady)=\\\"onGridReady($event)\\\"\\r\\n                     [singleClickEdit]=true>\\r\\n    </ag-grid-angular>\\r\\n</div>\"","module.exports = \".ag-theme-material {\\n  margin: 4px; }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport * as agGrid from 'ag-grid-community';\r\nimport { AuthorizationService } from '../../../core/services/authorization.service';\r\nimport { AgContextualMenuAction } from '../../entities/ag-contextual-menu-action.entity';\r\nimport { Section } from '../../entities/section.entity';\r\nimport { FormConfigurationProviderService } from '../../services/form-configuration-provider.service';\r\nimport { LockService } from '../../services/http-services/lock.service';\r\nimport { TradingService } from '../../services/http-services/trading.service';\r\nimport { SecurityService } from '../../services/security.service';\r\nimport { SnackbarService } from '../../services/snackbar.service';\r\nimport { TradeFavourite } from '../../services/trading/dtos/tradeFavourite';\r\nimport { AgContextualMenuComponent } from '../ag-contextual-menu/ag-contextual-menu.component';\r\nimport { BaseFormComponent } from '../base-form-component/base-form-component.component';\r\nimport { ConfirmationDialogComponent } from '../confirmation-dialog/confirmation-dialog.component';\r\n\r\n@Component({\r\n    selector: 'atlas-favourites-list-display',\r\n    templateUrl: './favourites-list-display.component.html',\r\n    styleUrls: ['./favourites-list-display.component.scss'],\r\n})\r\nexport class FavouritesListDisplayComponent extends BaseFormComponent implements OnInit {\r\n    favouriteListOptions: agGrid.GridOptions = {};\r\n    favouriteListGridRows: TradeFavourite[];\r\n    favouriteListGridCols: agGrid.ColDef[];\r\n    gridApi: agGrid.GridApi;\r\n    gridColumnApi: agGrid.ColumnApi;\r\n    menuActions: { [key: string]: string } = {\r\n        deleteFavorite: 'deleteFavorite',\r\n        createTradeFromFavorite: 'createTradeFromFavorite',\r\n    };\r\n    gridContextualMenuActions: AgContextualMenuAction[];\r\n    favoriteList: TradeFavourite[];\r\n    company: string;\r\n    createFavouriteTradePrivilege: boolean;\r\n\r\n    constructor(protected formConfigurationProvider: FormConfigurationProviderService,\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        protected lockService: LockService,\r\n        protected dialog: MatDialog,\r\n        private tradingService: TradingService,\r\n        private authorizationService: AuthorizationService,\r\n        private securityService: SecurityService,\r\n        private snackbarService: SnackbarService) {\r\n        super(formConfigurationProvider);\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.company = this.route.snapshot.paramMap.get('company');\r\n        this.securityService.isSecurityReady().subscribe(() => {\r\n            if (this.authorizationService.isPrivilegeAllowed(this.company, 'Trades')\r\n                && this.authorizationService.isPrivilegeAllowed(this.company, 'Physicals')) {\r\n                this.createFavouriteTradePrivilege = this.authorizationService.isPrivilegeAllowed(this.company, 'ImageCreation');\r\n            }\r\n        });\r\n        this.initializeGridColumns();\r\n        this.initFavouriteListGridRows();\r\n        this.initMenuAction();\r\n        this.getFavoriteTradeList();\r\n    }\r\n\r\n    onGridReady(params) {\r\n        this.gridApi = params.api;\r\n        this.gridColumnApi = params.columnApi;\r\n    }\r\n\r\n    initializeGridColumns() {\r\n        this.favouriteListGridCols = [\r\n            {\r\n                headerName: 'Name',\r\n                colId: 'name',\r\n                field: 'name',\r\n            },\r\n            {\r\n                headerName: 'Description',\r\n                colId: 'description',\r\n                field: 'description',\r\n            },\r\n            {\r\n                headerName: '',\r\n                cellRendererFramework: AgContextualMenuComponent,\r\n                cellRendererParams: {\r\n                    context: {\r\n                        componentParent: this,\r\n                    },\r\n                    menuActions: this.gridContextualMenuActions,\r\n                },\r\n                cellClass: 'ag-contextual-menu',\r\n            },\r\n        ];\r\n    }\r\n\r\n    initFavouriteListGridRows() {\r\n        this.favouriteListGridRows = [];\r\n    }\r\n\r\n    initMenuAction() {\r\n        this.gridContextualMenuActions = [\r\n            {\r\n                icon: 'delete',\r\n                text: 'Delete',\r\n                action: this.menuActions.deleteFavorite,\r\n            },\r\n            {\r\n                icon: 'add',\r\n                text: 'Create Trade from Favorite',\r\n                action: this.menuActions.createTradeFromFavorite,\r\n                disabled: !this.createFavouriteTradePrivilege,\r\n            },\r\n        ];\r\n    }\r\n\r\n    handleAction(action: string, favorite: TradeFavourite) {\r\n        const favoriteId = favorite.favoriteTradeId;\r\n        switch (action) {\r\n            case this.menuActions.deleteFavorite:\r\n                const favoriteName = favorite.name;\r\n\r\n                const confirmDialog = this.dialog.open(ConfirmationDialogComponent, {\r\n                    data: {\r\n                        title: 'Delete ' + favoriteName + ' ?',\r\n                        text: 'Deleting a Favorite is permanent. Do you wish to proceed?',\r\n                        okButton: 'DELETE ANYWAY',\r\n                        cancelButton: 'DISCARD',\r\n                    },\r\n                });\r\n                const confirmationSubscription = confirmDialog.afterClosed().subscribe((answer) => {\r\n                    if (answer) {\r\n                        if (favorite.favoriteTradeId) {\r\n                            const deleteConfirmationSubscription =\r\n                                this.tradingService.deleteFavorite(favorite.favoriteTradeId).subscribe(() => {\r\n                                    this.snackbarService.informationSnackBar('Favorite ' + favorite.name + ' Deleted');\r\n                                    this.getFavoriteTradeList();\r\n                                });\r\n                            this.subscriptions.push(deleteConfirmationSubscription);\r\n                        } else {\r\n                            this.gridApi.updateRowData({ remove: [favorite] });\r\n                        }\r\n                    }\r\n                });\r\n                this.subscriptions.push(confirmationSubscription);\r\n                break;\r\n            case this.menuActions.createTradeFromFavorite:\r\n                this.router.navigate([this.company + '/trades/capture'], {\r\n                    queryParams: { favoriteId },\r\n                    skipLocationChange: true,\r\n                });\r\n                break;\r\n        }\r\n    }\r\n\r\n    getFavoriteTradeList() {\r\n        this.tradingService.getFavoritesByUserId()\r\n            .subscribe((data) => {\r\n                this.favouriteListGridRows = data.value;\r\n                this.initializeGridColumns();\r\n            });\r\n    }\r\n}\r\n","module.exports = \"<div class=\\\"fileUpload\\\">\\r\\n    <input class=\\\"hidden-during-loading\\\" type=\\\"file\\\" accept=\\\"docType\\\"\\r\\n                                                     (change)=\\\"onFileSelected($event)\\\"\\r\\n                                                     #fileUpload>\\r\\n\\r\\n    <button mat-raised-button class=\\\"fab-text-button\\\" (click)=\\\"fileUpload.click()\\\"\\r\\n                                                      color=\\\"accent\\\">\\r\\n        <mat-icon class=\\\"mdc-fab__icon material-icons\\\">add</mat-icon>\\r\\n        Import Exchange Rates\\r\\n    </button>\\r\\n</div>\"","module.exports = \".mat-dialog-content {\\n  width: 500px; }\\n\\n.printing-input-container {\\n  margin-top: 2%; }\\n\\n.error-message {\\n  color: #df5a4d;\\n  font-size: 0.8em; }\\n\"","import { Component, EventEmitter, Inject, Input, OnInit, Output } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\r\nimport { FormConfigurationProviderService } from '../../services/form-configuration-provider.service';\r\nimport { SnackbarService } from '../../services/snackbar.service';\r\nimport { UiService } from '../../services/ui.service';\r\n\r\n@Component({\r\n    selector: 'atlas-file-upload-dialog-box',\r\n    templateUrl: './file-upload-dialog-box.component.html',\r\n    styleUrls: ['./file-upload-dialog-box.component.scss'],\r\n})\r\nexport class FileUploadDialogBoxComponent implements OnInit {\r\n    @Input() docType: string;\r\n    @Output() readonly documentSelected = new EventEmitter<File>();\r\n\r\n    constructor(\r\n        protected snackbarService: SnackbarService,\r\n        protected formConfigurationProvider: FormConfigurationProviderService,\r\n        protected uiService: UiService,\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    onFileSelected(event) {\r\n        if (event.target.files.length === 0) {\r\n            return;\r\n        }\r\n        const file: File = event.target.files[0];\r\n        this.documentSelected.emit(file);\r\n        event.stopPropagation();\r\n    }\r\n\r\n}\r\n","module.exports = \"<div fxLayout=\\\"column\\\"\\r\\n     fxFlex=\\\"100%\\\">\\r\\n    <mat-sidenav-container fxFlex=\\\"100%\\\">\\r\\n        <mat-sidenav #filterSetEditorSideNav\\r\\n                     disableClose\\r\\n                     [mode]=\\\"'over'\\\"\\r\\n                     position=\\\"end\\\"\\r\\n                     [fixedTopGap]=\\\"56\\\"\\r\\n                     [fixedInViewport]=\\\"true\\\">\\r\\n            <atlas-filter-set-editor #filterSetEditor\\r\\n                                     (applyFiltering)=\\\"onApplyFilters($event)\\\"\\r\\n                                     (cancelFiltering)=\\\"filterSetEditorSideNav.close()\\\"></atlas-filter-set-editor>\\r\\n        </mat-sidenav>\\r\\n        <mat-sidenav-content>\\r\\n            <mat-card fxFlex=\\\"100%\\\"\\r\\n                      class=\\\"filter-card\\\">\\r\\n                <div fxLayout=\\\"row\\\"\\r\\n                     fxLayoutAlign=\\\"space-between start\\\"\\r\\n                     class=\\\"filter-card-flex-column-direction\\\">\\r\\n                    <div class=\\\"filter-name\\\">\\r\\n                        <mat-form-field>\\r\\n                            <input matInput\\r\\n                                   [formControl]=\\\"filterSetCtrl\\\"\\r\\n                                   (change)=\\\"onFilterSetSelectionChange()\\\"\\r\\n                                   (focus)=\\\"filterSetFocus = true\\\"\\r\\n                                   (blur)=\\\"filterSetFocus = false\\\"\\r\\n                                   autocomplete=\\\"off\\\"\\r\\n                                   [placeholder]=\\\"(filterSetCtrl.value || filterSetFocus) ? '' : 'No Default Set'\\\"\\r\\n                                   [matAutocomplete]=\\\"filterSetAutocomplete\\\">\\r\\n                            <mat-icon matSuffix>arrow_drop_down</mat-icon>\\r\\n                            <mat-autocomplete #filterSetAutocomplete=\\\"matAutocomplete\\\"\\r\\n                                              (optionSelected)=\\\"onFilterSetSelectionChange()\\\"\\r\\n                                              [displayWith]=\\\"displayFilterSetSelection\\\">\\r\\n                                <mat-option *ngFor=\\\"let filterSet of filterSets\\\"\\r\\n                                            [value]=\\\"filterSet\\\">\\r\\n                                    <mat-icon>{{ getIcon(filterSet) }}</mat-icon>{{ filterSet.name}}\\r\\n                                </mat-option>\\r\\n                            </mat-autocomplete>\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                    <div fxLayout=\\\"row\\\"\\r\\n                         fxLayoutAlign=\\\"end none\\\">\\r\\n                        <div class=\\\"filter-actions\\\"\\r\\n                             *ngIf=\\\"localFilters\\\">\\r\\n                            <button mat-icon-button\\r\\n                                    (click)=\\\"onDeleteFiltersButtonClicked()\\\"\\r\\n                                    *ngIf=\\\"!selectedFilterSet.isDefault && deleteEnabled && selectedFilterSet.filterSetId\\\"\\r\\n                                    matTooltip=\\\"Delete\\\">\\r\\n                                <mat-icon>delete_outline</mat-icon>\\r\\n                            </button>\\r\\n                            <button mat-icon-button\\r\\n                                    (click)=\\\"onShareFiltersButtonClicked()\\\"\\r\\n                                    *ngIf=\\\"!selectedFilterSet.isDefault && shareEnabled && selectedFilterSet.filterSetId\\\"\\r\\n                                    matTooltip=\\\"Share\\\">\\r\\n                                <mat-icon>share</mat-icon>\\r\\n                            </button>\\r\\n                            <button mat-icon-button\\r\\n                                    *ngIf=\\\"savingEnabled\\\"\\r\\n                                    (click)=\\\"onSaveFiltersButtonClicked()\\\"\\r\\n                                    matTooltip=\\\"Save\\\">\\r\\n                                <mat-icon>save</mat-icon>\\r\\n                            </button>\\r\\n                            <button mat-icon-button\\r\\n                                    *ngIf=\\\"favouriteMenuEnabled && selectedFilterSet.filterSetId\\\"\\r\\n                                    (click)=\\\"onSetAsFavoriteButtonClicked()\\\"\\r\\n                                    [matTooltip]=\\\"checkIfFavorite() ? 'Favorite' : 'Make favorite' \\\">\\r\\n                                <mat-icon [ngClass]=\\\"checkIfFavorite() ? 'heart-saved' : 'heart-not-saved'\\\">\\r\\n                                    {{ checkIfFavorite() ? 'favorite' : 'favorite_border' }}\\r\\n                                </mat-icon>\\r\\n                            </button>\\r\\n                        </div>\\r\\n                        <button class=\\\"more-filter\\\"\\r\\n                                mat-button\\r\\n                                (click)=\\\"onEditFilterSetButtonClicked()\\\">EDIT CRITERIAS</button>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div fxLayout=\\\"row\\\"\\r\\n                     fxLayoutAlign=\\\"space-between start\\\">\\r\\n                    <div class=\\\"chip-list\\\">\\r\\n                        <atlas-chip-list *ngIf=\\\"chipStringList\\\"\\r\\n                                         [textList]='chipStringList'></atlas-chip-list>\\r\\n                        <div *ngIf=\\\"!chipStringList\\\">\\r\\n                            <div fxLayout=\\\"row\\\"\\r\\n                                 fxLayoutAlign=\\\"center center\\\"\\r\\n                                 fxLayoutWrap\\r\\n                                 fxLayoutGap=\\\"20px\\\">\\r\\n                                <mat-spinner color=\\\"accent\\\"></mat-spinner>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </mat-card>\\r\\n        </mat-sidenav-content>\\r\\n    </mat-sidenav-container>\\r\\n</div>\\r\\n\"","module.exports = \".filter-card {\\n  padding: 16px 0 16px 16px !important; }\\n\\n.chip-list {\\n  margin-bottom: 10px;\\n  margin-right: 16px; }\\n\\n.filter-actions {\\n  border-right: solid #928d8f 1px; }\\n\\n.filter-actions .mat-icon-button {\\n    width: 32px;\\n    height: 32px;\\n    line-height: 32px; }\\n\\n.filter-actions button:last-child {\\n    margin-right: 8px; }\\n\\nmat-sidenav {\\n  width: 75%; }\\n\\nbutton:disabled,\\nbutton[disabled] {\\n  opacity: 0.6; }\\n\\n.mat-sidenav-container,\\n.mat-sidenav-content {\\n  overflow: visible; }\\n\\n.more-filter {\\n  margin-top: 0px; }\\n\"","import { Component, EventEmitter, HostListener, Input, OnDestroy, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { MatDialog, MatSidenav } from '@angular/material';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthorizationService } from '../../../core/services/authorization.service';\r\nimport { ListAndSearchFilterDto } from '../../dtos/list-and-search/list-and-search-filter-dto.dto';\r\nimport { ListAndSearchUserFilterSetDto } from '../../dtos/list-and-search/user-filter-set-dto.dto';\r\nimport { AtlasFormControl } from '../../entities/atlas-form-control';\r\nimport { ColumnConfigurationProperties } from '../../entities/grid-column-configuration.entity';\r\nimport { ListAndSearchFilter } from '../../entities/list-and-search/list-and-search-filter.entity';\r\nimport { FilterProviderService } from '../../services/filter-provider.service';\r\nimport { FilterService } from '../../services/filter-service.service';\r\nimport { GridConfigurationService } from '../../services/http-services/grid-configuration.service';\r\nimport { SnackbarService } from '../../services/snackbar.service';\r\nimport { ConfirmationDialogComponent } from '../confirmation-dialog/confirmation-dialog.component';\r\nimport { FilterSetEditorComponent } from '../filter-set-editor/filter-set-editor.component';\r\nimport { FilterSetEditDialogComponent } from './filter-set-edit-dialog/filter-set-edit-dialog.component';\r\n\r\n@Component({\r\n    selector: 'atlas-filter-set-display',\r\n    templateUrl: './filter-set-display.component.html',\r\n    styleUrls: ['./filter-set-display.component.scss'],\r\n})\r\nexport class FilterSetDisplayComponent implements OnInit, OnDestroy {\r\n\r\n    @Input() gridCode: string;\r\n    @Input() columnConfiguration: ColumnConfigurationProperties[];\r\n    @Input() company: string;\r\n\r\n    @Input() savingEnabled = true;\r\n    @Input() favouriteMenuEnabled = true;\r\n    @Input() deleteEnabled = true;\r\n    @Input() shareEnabled = true;\r\n    @Input() searchCode: string = null;\r\n\r\n    @Output() readonly filtersChanged = new EventEmitter<ListAndSearchFilter[]>();\r\n\r\n    @ViewChild('filterSetEditorSideNav') filterSetEditorSideNav: MatSidenav;\r\n    @ViewChild('filterSetEditor') filterSetEditorComponent: FilterSetEditorComponent;\r\n\r\n    filterSets: ListAndSearchUserFilterSetDto[];\r\n    chipStringList: string[];\r\n    filterSetCtrl = new AtlasFormControl('FilterSet');\r\n    selectedFilterSet: ListAndSearchUserFilterSetDto;\r\n    localFilters: ListAndSearchFilter[];\r\n    ifAdministrator = false;\r\n    filterSetFocus = false;\r\n    tradeReportListGridCode: string = 'tradeReportList';\r\n\r\n    getUserFilterSetsSubscription: Subscription;\r\n\r\n    constructor(protected filterService: FilterService,\r\n        protected snackBarService: SnackbarService,\r\n        protected gridConfiguration: GridConfigurationService,\r\n        protected filterProvider: FilterProviderService,\r\n        protected dialog: MatDialog,\r\n        protected authorizationService: AuthorizationService,\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.initFilterSets();\r\n        this.checkIfAdministrator();\r\n    }\r\n\r\n    @HostListener('window:beforeunload', ['$event']) unloadNotification($event: any) {\r\n        if (this.filterSetCtrl.dirty) {\r\n            $event.returnValue = true;\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.getUserFilterSetsSubscription.unsubscribe();\r\n    }\r\n\r\n    initFilterSets() {\r\n        this.getUserFilterSetsSubscription = this.gridConfiguration\r\n            .getUserFilterSets(this.gridCode)\r\n            .subscribe((filterSets) => {\r\n                this.filterSets = filterSets.value;\r\n\r\n                // normally we're suppose to have at least a company default. If not the case, it's a system issue\r\n                this.selectedFilterSet = this.filterSets.find((filterSet: ListAndSearchUserFilterSetDto) => filterSet.isUserDefault);\r\n                if (!this.selectedFilterSet) {\r\n                    this.selectedFilterSet = this.filterSets.find((filterSet: ListAndSearchUserFilterSetDto) => filterSet.isDefault);\r\n                }\r\n                this.filterSetCtrl.patchValue(this.selectedFilterSet);\r\n                if (this.selectedFilterSet) {\r\n                    this.loadFilterDetails(this.selectedFilterSet.filterSetId);\r\n                } else {\r\n                    this.selectedFilterSet = new ListAndSearchUserFilterSetDto();\r\n                    this.loadFilters([]);\r\n                }\r\n            });\r\n    }\r\n\r\n    loadFilterDetails(filterSetId: number, forceRefresh = false) {\r\n        this.filterProvider.getFilters(this.company, this.gridCode, filterSetId, forceRefresh)\r\n            .subscribe((filters: ListAndSearchFilterDto[]) => {\r\n                this.selectedFilterSet.isModified = false;\r\n                if (this.searchCode && this.gridCode === this.tradeReportListGridCode) {\r\n                    filters[0].operator = 'in';\r\n                    filters[0].value1 = this.searchCode;\r\n                }\r\n                this.loadFilters(filters);\r\n            });\r\n    }\r\n\r\n    loadFilters(filters: ListAndSearchFilterDto[]) {\r\n        const localFilters: ListAndSearchFilter[] = filters.map((filter: ListAndSearchFilterDto) => {\r\n            return new ListAndSearchFilter(filter);\r\n        });\r\n\r\n        const appliedFilters = localFilters ? localFilters.filter((filter: ListAndSearchFilter) => {\r\n            return filter.isActive === true;\r\n        }) : [];\r\n\r\n        this.chipStringList = [];\r\n\r\n        appliedFilters.forEach((filter: ListAndSearchFilter) => {\r\n            this.chipStringList.push(this.filterService.getFilterCompleteStringValue(filter));\r\n        });\r\n        this.localFilters = localFilters;\r\n\r\n        this.filtersChanged.emit(appliedFilters);\r\n    }\r\n\r\n    onSaveFiltersButtonClicked() {\r\n        const saveDialog = this.dialog.open(FilterSetEditDialogComponent, {\r\n            width: '30%',\r\n            minWidth: '500px',\r\n            data: {\r\n                company: this.company,\r\n                gridCode: this.gridCode,\r\n                filterSet: this.selectedFilterSet,\r\n                filterSetList: this.filterSets,\r\n                chipStringList: this.chipStringList,\r\n                localFilters: this.localFilters ? this.localFilters.filter((filter) => filter.isActive) : [],\r\n                onlyShareOptions: false,\r\n            },\r\n        });\r\n        saveDialog.afterClosed().subscribe((answer) => {\r\n            if (answer) {\r\n                this.getUserFilterSetsSubscription = this.gridConfiguration\r\n                    .getUserFilterSets(this.gridCode)\r\n                    .subscribe((filterSets) => {\r\n                        this.filterSets = filterSets.value;\r\n                        this.selectedFilterSet = this.filterSets.find((filter) => filter.filterSetId === answer);\r\n                        this.filterSetCtrl.patchValue(this.selectedFilterSet);\r\n                        this.loadFilterDetails(this.selectedFilterSet.filterSetId, true);\r\n                    });\r\n            }\r\n        });\r\n    }\r\n\r\n    onShareFiltersButtonClicked() {\r\n        if (this.selectedFilterSet.isModified) {\r\n            this.dialog.open(ConfirmationDialogComponent, {\r\n                data: {\r\n                    text: 'Please save before share',\r\n                    okButton: 'Ok',\r\n                },\r\n            });\r\n        } else {\r\n            const saveDialog = this.dialog.open(FilterSetEditDialogComponent, {\r\n                width: '30%',\r\n                minWidth: '500px',\r\n                data: {\r\n                    company: this.company,\r\n                    gridCode: this.gridCode,\r\n                    filterSet: this.selectedFilterSet,\r\n                    filterSetList: this.filterSets,\r\n                    chipStringList: this.chipStringList,\r\n                    localFilters: this.localFilters ? this.localFilters.filter((filter) => filter.isActive) : [],\r\n                    onlyShareOptions: true,\r\n                },\r\n            });\r\n            saveDialog.afterClosed().subscribe((answer) => {\r\n                if (answer) {\r\n                    this.getUserFilterSetsSubscription = this.gridConfiguration\r\n                        .getUserFilterSets(this.gridCode)\r\n                        .subscribe((filterSets) => {\r\n                            this.filterSets = filterSets.value;\r\n                            this.selectedFilterSet = this.filterSets.find((filter) => filter.filterSetId === answer);\r\n                            this.filterSetCtrl.patchValue(this.selectedFilterSet);\r\n                            this.loadFilterDetails(this.selectedFilterSet.filterSetId, true);\r\n                        });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onDeleteFiltersButtonClicked() {\r\n        if (!this.selectedFilterSet) {\r\n            this.dialog.open(ConfirmationDialogComponent, {\r\n                data: {\r\n                    text: 'Please select a filter set',\r\n                    okButton: 'Ok',\r\n                },\r\n            });\r\n        } else {\r\n            const confirmDialog = this.dialog.open(ConfirmationDialogComponent, {\r\n                data: {\r\n                    title: 'Filter Set Deletion',\r\n                    text: (this.selectedFilterSet.isDefault ?\r\n                        'This filter set is the one by default, deleting it will affect all users. ' : '')\r\n                        + 'Deleting a set is permanent. All your criteria for this set will be forgotten. '\r\n                        + 'It will be unavailable for all the users it was shared to',\r\n                    okButton: 'Delete anyway',\r\n                    cancelButton: 'Cancel',\r\n                },\r\n            });\r\n            confirmDialog.afterClosed().subscribe((answer) => {\r\n                if (answer) {\r\n                    this.gridConfiguration.deleteUserFilterSet(this.gridCode, this.selectedFilterSet.filterSetId).subscribe(() => {\r\n                        this.snackBarService.informationSnackBar('The filter set was deleted');\r\n                        this.initFilterSets();\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onSetAsFavoriteButtonClicked() {\r\n        if (this.selectedFilterSet.isModified) {\r\n            this.dialog.open(ConfirmationDialogComponent, {\r\n                data: {\r\n                    text: 'Please save before changing this filter as your favorite',\r\n                    okButton: 'Ok',\r\n                },\r\n            });\r\n        } else {\r\n            this.gridConfiguration.setFavoriteUserFilterSet(this.gridCode, this.selectedFilterSet.filterSetId).subscribe(() => {\r\n                this.snackBarService.informationSnackBar('The filter set has been saved as favorite');\r\n                this.initFilterSets();\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    onApplyFilters(filters: ListAndSearchFilter[]) {\r\n        this.filterSetEditorSideNav.close();\r\n        const appliedFilters = this.loadFilterSet(filters, this.filterSetEditorComponent.filtersHaveBeenChanged);\r\n        this.filtersChanged.emit(appliedFilters);\r\n    }\r\n\r\n    onFilterSetSelectionChange() {\r\n        let selectedFilterSet = this.filterSetCtrl.value as ListAndSearchUserFilterSetDto;\r\n        if (typeof this.filterSetCtrl.value === 'string') {\r\n            selectedFilterSet = this.filterSets.find((filter) => filter.name === this.filterSetCtrl.value);\r\n        }\r\n        if (selectedFilterSet) {\r\n            this.chipStringList = null;\r\n            this.selectedFilterSet = selectedFilterSet;\r\n            this.loadFilterDetails(this.selectedFilterSet.filterSetId);\r\n        } else {\r\n            this.filterSetCtrl.setValue(this.selectedFilterSet);\r\n        }\r\n    }\r\n\r\n    onEditFilterSetButtonClicked() {\r\n        this.filterSetEditorComponent.readyFilterSetEditor(this.columnConfiguration, this.localFilters);\r\n        this.filterSetEditorComponent.filtersHaveBeenChanged = this.selectedFilterSet.isModified;\r\n        this.filterSetEditorSideNav.open();\r\n    }\r\n\r\n    checkIfFavorite(): boolean {\r\n        if ((this.selectedFilterSet) && this.selectedFilterSet.isUserDefault) {\r\n            return true;\r\n        }\r\n\r\n        if (this.selectedFilterSet && this.selectedFilterSet.isDefault\r\n            && this.filterSets && this.filterSets.filter((filter) => filter.isUserDefault).length === 0) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    getIcon(filterSet: ListAndSearchUserFilterSetDto): string {\r\n        if (filterSet.isSharedWithAllCompanies && filterSet.isSharedWithAllUsers) {\r\n            return 'public';\r\n        } else if (filterSet.isSharedWithAllCompanies) {\r\n            return 'domain';\r\n        } else if (filterSet.isSharedWithAllUsers) {\r\n            return 'people';\r\n        } else {\r\n            return 'person';\r\n        }\r\n    }\r\n\r\n    displayFilterSetSelection(filterSet: ListAndSearchUserFilterSetDto) {\r\n        return filterSet ? filterSet.name : '';\r\n    }\r\n\r\n    checkIfAdministrator() {\r\n        const companyPermission = this.authorizationService.user.permissions.find((permission) => permission.companyId === this.company);\r\n        if (companyPermission) {\r\n            if (companyPermission.profileName === 'Administrator') {\r\n                this.ifAdministrator = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    loadFilterSet(filters: ListAndSearchFilter[], filterSetChanged?: boolean): ListAndSearchFilter[] {\r\n        this.selectedFilterSet.isModified = (filterSetChanged !== undefined) ? filterSetChanged : true;\r\n\r\n        this.localFilters = filters ? filters : [];\r\n        const appliedFilters = this.localFilters.filter((filter: ListAndSearchFilter) => {\r\n            return filter.isActive === true;\r\n        });\r\n\r\n        this.chipStringList = [];\r\n\r\n        appliedFilters.forEach((filter: ListAndSearchFilter) => {\r\n            this.chipStringList.push(this.filterService.getFilterCompleteStringValue(filter));\r\n        });\r\n\r\n        return appliedFilters;\r\n    }\r\n}\r\n","module.exports = \"<div *ngIf=\\\"isLoading\\\">\\r\\n    <div fxLayout=\\\"row\\\"\\r\\n         fxLayoutAlign=\\\"center center\\\"\\r\\n         fxLayoutWrap\\r\\n         fxLayoutGap=\\\"20px\\\"\\r\\n         class=\\\"loading\\\">\\r\\n        <mat-spinner color=\\\"accent\\\"></mat-spinner>\\r\\n    </div>\\r\\n</div>\\r\\n<div fxLayout=\\\"column\\\"\\r\\n     [ngClass]=\\\"{'hidden-during-loading':isLoading}\\\"\\r\\n     *ngIf=\\\"!onlyShareOptions\\\"\\r\\n     fxLayoutGap=\\\"20px\\\">\\r\\n    <div>\\r\\n        <div fxLayout=\\\"row\\\"\\r\\n             fxLayoutAlign=\\\"start start\\\">\\r\\n            <mat-form-field fxFlex=\\\"50%\\\">\\r\\n                <input type=\\\"text\\\"\\r\\n                       placeholder=\\\"Filter Set Name\\\"\\r\\n                       matInput\\r\\n                       maxlength=30\\r\\n                       [formControl]=\\\"filterSetNameCtrl\\\"\\r\\n                       (change)=\\\"onNameOrSharingOptionChanged()\\\">\\r\\n                <mat-error *ngIf=\\\"filterSetNameCtrl.hasError('required')\\\">\\r\\n                    Required*\\r\\n                </mat-error>\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n        <mat-hint class=\\\"reduced-space-before\\\"\\r\\n                  *ngIf=\\\"filterSet.isDefault\\\">\\r\\n            This filter set is the one by default, editing it will affect all users.\\r\\n        </mat-hint>\\r\\n    </div>\\r\\n\\r\\n    <div fxLayout=\\\"row\\\"\\r\\n         fxLayoutAlign=\\\"space-between start\\\">\\r\\n        <div class=\\\"chip-list\\\">\\r\\n            <atlas-chip-list [textList]='chipStringList'></atlas-chip-list>\\r\\n        </div>\\r\\n    </div>\\r\\n    <mat-divider></mat-divider>\\r\\n</div>\\r\\n<div fxLayout=\\\"column\\\"\\r\\n     [ngClass]=\\\"{'hidden-during-loading':isLoading, 'padding-top':!onlyShareOptions}\\\"\\r\\n     fxLayoutGap=\\\"10px\\\">\\r\\n    <h2 *ngIf=\\\"onlyShareOptions\\\">Share \\\"{{ this.filterSetNameCtrl.value }}\\\"</h2>\\r\\n    <mat-hint *ngIf=\\\"filterSet.isDefault && onlyShareOptions\\\">\\r\\n        This filter set is the one by default, editing it will affect all users.\\r\\n    </mat-hint>\\r\\n\\r\\n    <mat-slide-toggle [formControl]=\\\"shareWithCompanyCtrl\\\"\\r\\n                      (change)=\\\"onShareAllUsersChanged()\\\">Share with all users</mat-slide-toggle>\\r\\n    <mat-hint *ngIf=\\\"warningMessageAllUsers\\\">{{ warningMessageAllUsers }}</mat-hint>\\r\\n    <mat-hint *ngIf=\\\"unsharedForUsers && !shareWithCompanyCtrl.value\\\">Other users won't see the set anymore</mat-hint>\\r\\n\\r\\n    <mat-slide-toggle [formControl]=\\\"shareWithAllCompaniesCtrl\\\"\\r\\n                      (change)=\\\"onShareAllCompaniesChanged()\\\">Share with all companies</mat-slide-toggle>\\r\\n    <mat-hint *ngIf=\\\"warningMessageAllCompanies\\\">{{ warningMessageAllCompanies }}</mat-hint>\\r\\n    <mat-hint *ngIf=\\\"warningMessageGeneric\\\">{{ warningMessageGeneric }}</mat-hint>\\r\\n    <mat-hint *ngIf=\\\"unsharedForCompanies && !shareWithAllCompaniesCtrl.value\\\">This set of filters won't be available\\r\\n        on other companies</mat-hint>\\r\\n\\r\\n    <div fxFlex=\\\"50\\\"\\r\\n         fxLayout=\\\"row\\\"\\r\\n         fxAlignLayout=\\\"start end\\\">\\r\\n        <span class=\\\"fill-space\\\"></span>\\r\\n        <button (click)=\\\"onSaveButtonClicked()\\\"\\r\\n                *ngIf=\\\"filterSet.filterSetId && !filterSet.isDefault\\\"\\r\\n                mat-button>Save</button>\\r\\n        <button (click)=\\\"onSaveAsNewButtonClicked()\\\"\\r\\n                *ngIf=\\\"filterSet.name !== filterSetNameCtrl.value\\\"\\r\\n                mat-button>Save as new Filter Set</button>\\r\\n    </div>\\r\\n</div>\\r\\n\"","module.exports = \"mat-hint {\\n  font-size: 0.8em; }\\n\\n.padding-top {\\n  padding-top: 20px; }\\n\\n.loading {\\n  min-height: 150px; }\\n\"","import { Component, Inject, OnInit, HostListener } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { ListAndSearchFilterDto } from './../../../dtos/list-and-search/list-and-search-filter-dto.dto';\r\nimport { ListAndSearchUserFilterSetDto } from './../../../dtos/list-and-search/user-filter-set-dto.dto';\r\nimport { ListAndSearchFilter } from './../../../entities/list-and-search/list-and-search-filter.entity';\r\nimport { GridConfigurationService } from './../../../services/http-services/grid-configuration.service';\r\nimport { SnackbarService } from './../../../services/snackbar.service';\r\nimport { ConfirmationDialogComponent } from './../../confirmation-dialog/confirmation-dialog.component';\r\n\r\n@Component({\r\n    selector: 'atlas-filter-set-edit-dialog',\r\n    templateUrl: './filter-set-edit-dialog.component.html',\r\n    styleUrls: ['./filter-set-edit-dialog.component.scss'],\r\n})\r\nexport class FilterSetEditDialogComponent implements OnInit {\r\n\r\n    filterSet: ListAndSearchUserFilterSetDto = new ListAndSearchUserFilterSetDto();\r\n    filterSetList: ListAndSearchUserFilterSetDto[];\r\n    chipStringList: string[];\r\n    localFilters: ListAndSearchFilter[];\r\n    gridCode: string;\r\n    company: string;\r\n    filterSetNameCtrl: FormControl;\r\n    shareWithCompanyCtrl: FormControl;\r\n    shareWithAllCompaniesCtrl: FormControl;\r\n    formGroup: FormGroup;\r\n    isLoading = false;\r\n    onlyShareOptions = false;\r\n    warningMessageAllUsers: string;\r\n    warningMessageAllCompanies: string;\r\n    warningMessageGeneric: string;\r\n    unsharedForUsers = false;\r\n    unsharedForCompanies = false;\r\n\r\n    constructor(\r\n        public dialogRef: MatDialogRef<FilterSetEditDialogComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: {\r\n            company: string;\r\n            gridCode: string;\r\n            filterSet: ListAndSearchUserFilterSetDto,\r\n            filterSetList: ListAndSearchUserFilterSetDto[],\r\n            chipStringList: string[],\r\n            localFilters: ListAndSearchFilter[],\r\n            onlyShareOptions: boolean,\r\n        },\r\n        protected gridConfigurationService: GridConfigurationService,\r\n        protected snackbarService: SnackbarService,\r\n        protected formBuilder: FormBuilder,\r\n        protected dialog: MatDialog,\r\n    ) {\r\n        this.filterSet = data.filterSet;\r\n        this.filterSetList = data.filterSetList;\r\n        this.chipStringList = data.chipStringList;\r\n        this.gridCode = data.gridCode;\r\n        this.company = data.company;\r\n        this.localFilters = data.localFilters;\r\n        this.onlyShareOptions = data.onlyShareOptions ? data.onlyShareOptions : false;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.initForm();\r\n    }\r\n\r\n    initForm() {\r\n        if (!this.filterSet.isDefault) {\r\n            this.filterSetNameCtrl = new FormControl(this.filterSet.name, Validators.required);\r\n            this.shareWithCompanyCtrl = new FormControl(this.filterSet.isSharedWithAllUsers);\r\n            this.shareWithAllCompaniesCtrl = new FormControl(this.filterSet.isSharedWithAllCompanies);\r\n        } else {\r\n            this.filterSetNameCtrl = new FormControl('', Validators.required);\r\n            this.shareWithCompanyCtrl = new FormControl(false);\r\n            this.shareWithAllCompaniesCtrl = new FormControl(false);\r\n        }\r\n        this.formGroup = this.formBuilder.group({\r\n            filterSetNameCtrl: this.filterSetNameCtrl,\r\n            shareWithCompanyCtrl: this.shareWithCompanyCtrl,\r\n            shareWithAllCompaniesCtrl: this.shareWithAllCompaniesCtrl,\r\n        });\r\n        this.onNameOrSharingOptionChanged();\r\n    }\r\n\r\n    @HostListener('window:beforeunload', ['$event'])\r\n    unloadNotification($event: any) {\r\n        if (this.formGroup.dirty) {\r\n            $event.returnValue = true;\r\n        }\r\n    }\r\n\r\n\r\n    getFilterSetFromForm(): ListAndSearchUserFilterSetDto {\r\n        const filterSet = new ListAndSearchUserFilterSetDto();\r\n        filterSet.companyId = this.company;\r\n        filterSet.filters = this.localFilters.map((filter: ListAndSearchFilter) => new ListAndSearchFilterDto(filter));\r\n        filterSet.isSharedWithAllCompanies = this.shareWithAllCompaniesCtrl.value ? this.shareWithAllCompaniesCtrl.value : false;\r\n        filterSet.isSharedWithAllUsers = this.shareWithCompanyCtrl.value ? this.shareWithCompanyCtrl.value : false;\r\n        filterSet.name = this.filterSetNameCtrl.value;\r\n        filterSet.gridCode = this.gridCode;\r\n        return filterSet;\r\n    }\r\n\r\n    onSaveButtonClicked() {\r\n        if (this.formGroup.valid) {\r\n            this.isLoading = true;\r\n            const filterSet: ListAndSearchUserFilterSetDto = this.getFilterSetFromForm();\r\n            filterSet.filterSetId = this.filterSet.filterSetId;\r\n\r\n            this.gridConfigurationService.updateUserFilterSet(this.gridCode, filterSet).subscribe(\r\n                () => {\r\n                    this.snackbarService.informationSnackBar('Filter Set Updated');\r\n                    this.dialogRef.close(filterSet.filterSetId);\r\n                },\r\n                (err) => {\r\n                    this.isLoading = false;\r\n                    this.dialogRef.close();\r\n                    throw err;\r\n                });\r\n        } else {\r\n            this.snackbarService.throwErrorSnackBar('Please resolve errors');\r\n        }\r\n    }\r\n\r\n    onSaveAsNewButtonClicked() {\r\n        if (this.formGroup.valid) {\r\n            this.isLoading = true;\r\n            const filterSet: ListAndSearchUserFilterSetDto = this.getFilterSetFromForm();\r\n\r\n            if (this.filterSetList.find((filter) => filter.name === filterSet.name\r\n                && filter.isSharedWithAllCompanies === filterSet.isSharedWithAllCompanies\r\n                && filter.isSharedWithAllUsers === filterSet.isSharedWithAllUsers)) {\r\n                const confirmDialog = this.dialog.open(ConfirmationDialogComponent, {\r\n                    data: {\r\n                        title: 'Filter Set Creation',\r\n                        text: 'A set of filters with the same name already exists for this user(s)/company(ies). '\r\n                            + 'If you continue, there will be a duplicate.',\r\n                        okButton: 'Continue',\r\n                        cancelButton: 'Cancel',\r\n                    },\r\n                });\r\n                confirmDialog.afterClosed().subscribe((answer) => {\r\n                    if (answer) {\r\n                        this.createFilterSet(filterSet);\r\n                    } else {\r\n                        this.isLoading = false;\r\n                    }\r\n                });\r\n            } else {\r\n                this.createFilterSet(filterSet);\r\n            }\r\n        } else {\r\n            this.snackbarService.throwErrorSnackBar('Please resolve errors');\r\n        }\r\n    }\r\n\r\n    createFilterSet(filterSet: ListAndSearchUserFilterSetDto) {\r\n        this.gridConfigurationService.createUserFilterSet(this.gridCode, filterSet).subscribe(\r\n            (filterSetId) => {\r\n                this.snackbarService.informationSnackBar('Filter Set Created');\r\n                this.dialogRef.close(filterSetId);\r\n            },\r\n            (err) => {\r\n                this.isLoading = false;\r\n                this.dialogRef.close();\r\n                throw err;\r\n            });\r\n    }\r\n\r\n    onNameOrSharingOptionChanged() {\r\n        const filtersWithSameName = this.filterSetList ? this.filterSetList.filter((filter) => filter.name === this.filterSetNameCtrl.value\r\n            && filter.filterSetId !== this.filterSet.filterSetId) : [];\r\n        this.warningMessageGeneric = null;\r\n        this.warningMessageAllCompanies = null;\r\n        this.warningMessageAllUsers = null;\r\n\r\n        if (filtersWithSameName.length > 0) {\r\n            const filterDuplicate = filtersWithSameName.filter((filter) => filter.isSharedWithAllUsers === this.shareWithCompanyCtrl.value\r\n                && filter.isSharedWithAllCompanies === this.shareWithAllCompaniesCtrl.value);\r\n            if (filterDuplicate.filter((filter) => filter.isSharedWithAllUsers && filter.isSharedWithAllCompanies).length > 0) {\r\n                this.warningMessageGeneric = '\"' + this.filterSetNameCtrl.value + '\" already exists for all users and all companies';\r\n            } else if (filterDuplicate.filter((filter) => !filter.isSharedWithAllUsers && filter.isSharedWithAllCompanies).length > 0) {\r\n                this.warningMessageGeneric = '\"' + this.filterSetNameCtrl.value + '\" already exists for all companies';\r\n            } else if (filterDuplicate.filter((filter) => filter.isSharedWithAllUsers && !filter.isSharedWithAllCompanies).length > 0) {\r\n                this.warningMessageGeneric = '\"' + this.filterSetNameCtrl.value + '\" already exists for all users';\r\n            }\r\n        }\r\n    }\r\n\r\n    onShareAllCompaniesChanged() {\r\n        if (!this.shareWithAllCompaniesCtrl.value) {\r\n            this.unsharedForCompanies = true;\r\n        }\r\n        this.onNameOrSharingOptionChanged();\r\n    }\r\n\r\n    onShareAllUsersChanged() {\r\n        if (!this.shareWithCompanyCtrl.value) {\r\n            this.unsharedForUsers = true;\r\n        }\r\n        this.onNameOrSharingOptionChanged();\r\n    }\r\n}\r\n","module.exports = \"<div class=\\\"editor-container\\\">\\r\\n    <div fxLayout=\\\"column\\\"\\r\\n         fxFlexLayoutAlign=\\\"space-between stretch\\\"\\r\\n         fxFlex>\\r\\n        <div fxLayout=\\\"row\\\"\\r\\n             fxLayoutAlign=\\\"space-between center\\\">\\r\\n            <h3 class=\\\"atlas-grid-card-title\\\">Edit Filters</h3>\\r\\n        </div>\\r\\n        <div fxLayout=\\\"row\\\"\\r\\n             fxLayoutAlign=\\\"start\\\">\\r\\n            <div fxFlexOffset=\\\"24px\\\">\\r\\n                <mat-slide-toggle mat-raised-button\\r\\n                                  (change)=\\\"onHideEmptyFilters()\\\">Hide empty filters</mat-slide-toggle>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div ag-grid=\\\"gridOptions\\\"\\r\\n             class=\\\"ag-theme-material\\\"\\r\\n             fxFlex=\\\"fill\\\">\\r\\n            <ag-grid-angular class=\\\"ag-theme-material\\\"\\r\\n                             [rowData]=\\\"rowData\\\"\\r\\n                             [columnDefs]=\\\"columnDefs\\\"\\r\\n                             (gridReady)=\\\"onGridReady($event)\\\"\\r\\n                             (cellValueChanged)=\\\"onCellValueChanged($event)\\\"\\r\\n                             [frameworkComponents]=\\\"frameworkComponents\\\"\\r\\n                             [enableColResize]=\\\"true\\\"\\r\\n                             [paginationPageSize]=\\\"100\\\"\\r\\n                             [enableSorting]=\\\"true\\\"\\r\\n                             enableFilter\\r\\n                             [rowHeight]=\\\"atlasAgGridParam.rowHeight\\\"\\r\\n                             [autoGroupColumnDef]=\\\"autoGroupColumnDef\\\"\\r\\n                             [groupDefaultExpanded]=\\\"groupDefaultExpanded\\\">\\r\\n            </ag-grid-angular>\\r\\n        </div>\\r\\n\\r\\n        <mat-divider></mat-divider>\\r\\n        <div fxLayout=\\\"row\\\"\\r\\n             fxLayoutAlign=\\\"space-between center\\\">\\r\\n            <button mat-button\\r\\n                    (click)=onDiscardButtonClicked()>\\r\\n                DISCARD\\r\\n            </button>\\r\\n            <button mat-button\\r\\n                    [disabled]=!areFiltersValid()\\r\\n                    (click)=onApplyFiltersButtonClicked()>\\r\\n                APPLY FILTERS\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","module.exports = \".editor-container {\\n  padding-right: 20px; }\\n\\nag-grid-angular.ag-theme-material {\\n  height: calc(100vh - 170px);\\n  margin: auto auto -16px auto; }\\n\\n.atlas-grid-card-title {\\n  margin-left: 16px; }\\n\\n.mat-divider {\\n  margin-top: 16px; }\\n\\nbutton.mat-button {\\n  margin: 8px 8px auto 8px; }\\n\"","import { Component, EventEmitter, Inject, OnDestroy, OnInit, Output } from '@angular/core';\r\nimport * as agGrid from 'ag-grid-community';\r\nimport { CellValueChangedEvent } from 'ag-grid-community';\r\nimport 'ag-grid-enterprise';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { AtlasAgGridParam } from '../../entities/atlas-ag-grid-param.entity';\r\nimport { EnumEntity } from '../../entities/enum-entity.entity';\r\nimport { ColumnConfigurationProperties } from '../../entities/grid-column-configuration.entity';\r\nimport { FilterSetEditorRowData } from '../../entities/list-and-search/filter-set-editor-row-data.entity';\r\nimport { ListAndSearchFilter } from '../../entities/list-and-search/list-and-search-filter.entity';\r\nimport { WINDOW } from '../../entities/window-injection-token';\r\nimport { ListAndSearchFilterType } from '../../enums/list-and-search-filter-type.enum';\r\nimport { AgGridService } from '../../services/ag-grid.service';\r\nimport { GridConfigurationProviderService } from '../../services/grid-configuration-provider.service';\r\nimport { MasterdataService } from '../../services/http-services/masterdata.service';\r\nimport { UiService } from '../../services/ui.service';\r\nimport { AgGridListAndSearchPicklistFieldComponent } from '../ag-grid-list-and-search-picklist-field/ag-grid-list-and-search-picklist-field.component';\r\nimport { FilterService } from './../../services/filter-service.service';\r\nimport { AgGridCheckboxComponent } from './../ag-grid-checkbox/ag-grid-checkbox.component';\r\n\r\n@Component({\r\n    selector: 'atlas-filter-set-editor',\r\n    templateUrl: './filter-set-editor.component.html',\r\n    styleUrls: ['./filter-set-editor.component.scss'],\r\n})\r\nexport class FilterSetEditorComponent implements OnInit, OnDestroy {\r\n\r\n    @Output() readonly cancelFiltering = new EventEmitter();\r\n    @Output() readonly applyFiltering = new EventEmitter<ListAndSearchFilter[]>();\r\n\r\n    destroy$ = new Subject();\r\n\r\n    gridEditableFilters: ListAndSearchFilter[];\r\n    optionSetData: Map<number, string[]>; // do the same for picklist\r\n    picklistData: Map<number, { dataEntity: string, gridId: string }>;\r\n\r\n    frameworkComponents: any = {\r\n        picklistFieldComponent: AgGridListAndSearchPicklistFieldComponent,\r\n    };\r\n\r\n    gridOptions: agGrid.GridOptions;\r\n    gridApi: agGrid.GridApi;\r\n    gridColumnApi: agGrid.ColumnApi;\r\n    columnDefs: agGrid.ColDef[] = [\r\n        {\r\n            colId: 'filterName',\r\n            field: 'fieldName',\r\n            hide: true,\r\n        },\r\n        {\r\n            colId: 'fieldFriendlyName',\r\n            headerName: 'Filter Name',\r\n            field: 'fieldFriendlyName',\r\n        },\r\n        {\r\n            colId: 'filterValue',\r\n            headerName: 'Value',\r\n            field: 'value',\r\n            editable: true,\r\n            cellClassRules: {\r\n                'ag-grid-valid-mandatory-field':\r\n                    ((params) => {\r\n                        if (params.data) {\r\n                            return params.data.isValid;\r\n                        }\r\n                    }),\r\n                'ag-grid-invalid-mandatory-field': ((params) => {\r\n                    if (params.data) {\r\n                        return !params.data.isValid;\r\n                    }\r\n                }),\r\n            },\r\n            cellEditorSelector: (params) => {\r\n                switch ((params.data as FilterSetEditorRowData).filterType) {\r\n                    case (ListAndSearchFilterType.OptionSet):\r\n                        return {\r\n                            component: 'agRichSelect',\r\n                            params: {\r\n                                values: this.optionSetData.get((params.data as FilterSetEditorRowData).fieldId),\r\n                            },\r\n                        };\r\n                        break;\r\n\r\n                    default: return null;\r\n                }\r\n            },\r\n            cellRendererSelector: (params) => {\r\n                if (!params.node.group) {\r\n                    switch ((params.data as FilterSetEditorRowData).filterType) {\r\n                        case (ListAndSearchFilterType.Picklist):\r\n                            return {\r\n                                component: 'picklistFieldComponent',\r\n\r\n                                params: {\r\n                                    dataEntity: this.picklistData.get((params.data as FilterSetEditorRowData).fieldId).dataEntity,\r\n                                    gridId: this.picklistData.get((params.data as FilterSetEditorRowData).fieldId).gridId,\r\n                                },\r\n                            };\r\n                            break;\r\n                        default: return null;\r\n                    }\r\n                } else {\r\n                    return null;\r\n                }\r\n            },\r\n        },\r\n        {\r\n            colId: 'filterActive',\r\n            headerName: 'Filtered',\r\n            field: 'isActive',\r\n            cellRenderer: 'agGroupCellRenderer',\r\n            cellRendererParams: {\r\n                innerRendererFramework: AgGridCheckboxComponent,\r\n            },\r\n        },\r\n        {\r\n            headerName: 'GroupName',\r\n            field: 'groupName',\r\n            rowGroup: true,\r\n            hide: true,\r\n        },\r\n    ];\r\n    autoGroupColumnDef = {\r\n        headerName: '',\r\n        maxWidth: 100,\r\n        cellRendererParams: {\r\n            suppressCount: true,\r\n        },\r\n    };\r\n    gridId: string;\r\n    company: string;\r\n    rowData: FilterSetEditorRowData[];\r\n    atlasAgGridParam: AtlasAgGridParam;\r\n    groupDefaultExpanded = 1;\r\n    hideEmptyFilters = false;\r\n    originalRowData: FilterSetEditorRowData[];\r\n    filtersHaveBeenChanged = false;\r\n\r\n    constructor(protected uiService: UiService,\r\n        protected filterService: FilterService,\r\n        protected masterDataService: MasterdataService,\r\n        protected gridConfigurationProvider: GridConfigurationProviderService,\r\n        @Inject(WINDOW) private window: Window,\r\n        public gridService: AgGridService,\r\n\r\n    ) {\r\n        this.atlasAgGridParam = this.gridService.getAgGridParam();\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    onCellValueChanged(cell: CellValueChangedEvent) {\r\n        if (cell.oldValue !== cell.newValue) {\r\n            this.filtersHaveBeenChanged = true;\r\n            const colId = cell.column.getId();\r\n            const filter: ListAndSearchFilter = this.gridEditableFilters.find(\r\n                (filtr: ListAndSearchFilter) => filtr.fieldId === cell.data.fieldId);\r\n            if (colId === 'filterActive') {\r\n                filter.isActive = cell.newValue;\r\n            }\r\n            if (colId === 'filterValue') {\r\n                const rowCell: FilterSetEditorRowData = cell.data as FilterSetEditorRowData;\r\n                if (cell.newValue) {\r\n                    // if there is a string input\r\n                    filter.predicate = this.filterService.validateInput(cell.newValue, rowCell.filterType);\r\n                    if (filter.predicate) {\r\n                        rowCell.value = this.filterService.getFilterStringValue(filter);\r\n                        rowCell.isActive = true;\r\n                        rowCell.isValid = true;\r\n                    } else {\r\n                        rowCell.isValid = false;\r\n                    }\r\n                } else {\r\n                    // if the user has erased the input\r\n                    rowCell.isActive = false;\r\n                    rowCell.isValid = true;\r\n                    if (this.hideEmptyFilters) {\r\n                        this.removeEmptyFilters();\r\n                    }\r\n                }\r\n\r\n                const params = { force: true };\r\n                this.gridApi.refreshCells(params);\r\n            }\r\n        }\r\n    }\r\n\r\n    readyFilterSetEditor(gridColumnsConfig: ColumnConfigurationProperties[], filters: ListAndSearchFilter[]) {\r\n        this.gridEditableFilters = [];\r\n        const filterableColumns = this.getFilterableColumns(gridColumnsConfig);\r\n        this.gridEditableFilters = this.getFiltersListFromColumnsDefinition(filterableColumns, filters);\r\n        // fetch data for the option sets\r\n        this.loadOptionSetsData(gridColumnsConfig);\r\n        this.loadPicklistsData(gridColumnsConfig);\r\n\r\n        this.rowData = this.originalRowData = this.gridEditableFilters.map((filter: ListAndSearchFilter) => {\r\n            return {\r\n                fieldId: filter.fieldId,\r\n                fieldFriendlyName: filter.fieldFriendlyName,\r\n                gridColumnId: filter.gridColumnId,\r\n                fieldName: filter.fieldName,\r\n                value: this.filterService.getFilterStringValue(filter),\r\n                isActive: filter.isActive,\r\n                filterType: filter.predicate.filterType,\r\n                isValid: true,\r\n                groupName: filter.groupName,\r\n            };\r\n        });\r\n\r\n        if (this.gridApi) {\r\n            if (this.gridApi) { this.gridApi.sizeColumnsToFit(); }\r\n        }\r\n        if (this.hideEmptyFilters) {\r\n            this.removeEmptyFilters();\r\n        }\r\n    }\r\n\r\n    private loadOptionSetsData(gridColumnsConfig: ColumnConfigurationProperties[]) {\r\n        this.optionSetData = new Map<number, string[]>();\r\n        const optionSets = gridColumnsConfig ? gridColumnsConfig.filter((config: ColumnConfigurationProperties) => {\r\n            return config.filterType === ListAndSearchFilterType.OptionSet;\r\n        }) : [];\r\n\r\n        const optionSetArray: string[] = optionSets.map((set: ColumnConfigurationProperties) => {\r\n            return set.optionSet;\r\n        });\r\n        this.masterDataService.getMasterData(optionSetArray)\r\n            .pipe(\r\n                takeUntil(this.destroy$),\r\n            )\r\n            .subscribe((masterdata) => {\r\n                optionSets.forEach((set) => {\r\n                    const masterDataForOptionSet = masterdata[set.optionSet] as EnumEntity[];\r\n                    const values = (masterDataForOptionSet ? masterDataForOptionSet : []).map((entity) => entity.enumEntityValue);\r\n                    this.optionSetData.set(set.fieldId, values);\r\n                });\r\n            });\r\n\r\n    }\r\n    private loadPicklistsData(gridColumnsConfig: ColumnConfigurationProperties[]) {\r\n        this.picklistData = new Map<number, { dataEntity: string, gridId: string }>();\r\n        const picklists = gridColumnsConfig ? gridColumnsConfig.filter((config: ColumnConfigurationProperties) => {\r\n            return config.filterType === ListAndSearchFilterType.Picklist;\r\n        }) : [];\r\n\r\n        // for now we are considering simple picklists\r\n        picklists.forEach((picker) => {\r\n            this.picklistData.set(\r\n                picker.fieldId,\r\n                {\r\n                    dataEntity: picker.optionSet,\r\n                    gridId: this.gridConfigurationProvider.getGridIdForDataEntity(picker.optionSet),\r\n                });\r\n        });\r\n    }\r\n\r\n    getFilterableColumns(gridColumnsConfig: ColumnConfigurationProperties[]): ColumnConfigurationProperties[] {\r\n        const res = gridColumnsConfig ? gridColumnsConfig.filter((column: ColumnConfigurationProperties) => {\r\n            return column.isFilterable;\r\n        }) : [];\r\n\r\n        return res;\r\n    }\r\n\r\n    getFiltersListFromColumnsDefinition(gridColumnsConfig: ColumnConfigurationProperties[],\r\n        filters: ListAndSearchFilter[]): ListAndSearchFilter[] {\r\n        const editableFilters = gridColumnsConfig.map((column: ColumnConfigurationProperties) => {\r\n            let gridFilter: ListAndSearchFilter = filters.find((filter: ListAndSearchFilter) => {\r\n                return filter.fieldId === column.fieldId;\r\n            });\r\n\r\n            // if a filter does not exist on a filterable column\r\n            if (!gridFilter) {\r\n                gridFilter = new ListAndSearchFilter();\r\n                gridFilter.gridColumnId = column.gridColumnId;\r\n                gridFilter.fieldId = column.fieldId;\r\n                gridFilter.isActive = false;\r\n            }\r\n            gridFilter.fieldName = column.fieldName;\r\n            gridFilter.fieldFriendlyName = column.friendlyName;\r\n            gridFilter.groupName = column.groupName;\r\n\r\n            const filterTypeKey: string = Object.keys(ListAndSearchFilterType)\r\n                .find((key) => ListAndSearchFilterType[key] === column.filterType.toLocaleLowerCase());\r\n            const filterType: ListAndSearchFilterType = ListAndSearchFilterType[filterTypeKey];\r\n            gridFilter.predicate.filterType = filterType;\r\n            return gridFilter;\r\n        });\r\n\r\n        return editableFilters;\r\n    }\r\n\r\n    onDiscardButtonClicked() {\r\n        this.cancelFiltering.emit();\r\n    }\r\n\r\n    onApplyFiltersButtonClicked() {\r\n        const applicableFilters: ListAndSearchFilter[] = [];\r\n        this.rowData.forEach((row) => {\r\n            const filter = this.gridEditableFilters.find((filtr: ListAndSearchFilter) => {\r\n                return (filtr.fieldId === row.fieldId);\r\n            });\r\n\r\n            if (filter.predicate && filter.predicate.operator) {\r\n                filter.isActive = row.isActive;\r\n                applicableFilters.push(filter);\r\n            }\r\n        });\r\n        this.applyFiltering.emit(applicableFilters);\r\n    }\r\n\r\n    onGridReady(params) {\r\n        this.gridOptions = params;\r\n        this.gridOptions.columnDefs = this.columnDefs;\r\n        this.gridApi = this.gridOptions.api;\r\n        this.gridColumnApi = this.gridOptions.columnApi;\r\n\r\n        this.gridColumnApi.autoSizeAllColumns();\r\n    }\r\n\r\n    areFiltersValid(): boolean {\r\n        let isValid = true;\r\n        if (this.rowData) {\r\n            this.rowData.filter((filter) => filter.isActive).forEach((filter: FilterSetEditorRowData) => {\r\n                isValid = isValid && filter.isValid;\r\n            });\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    onGridSizeChanged(params) {\r\n        this.gridColumnApi = params.columnApi;\r\n        this.gridColumnApi.autoSizeAllColumns();\r\n    }\r\n\r\n    onHideEmptyFilters() {\r\n        this.hideEmptyFilters = !this.hideEmptyFilters;\r\n        if (this.hideEmptyFilters) {\r\n            this.removeEmptyFilters();\r\n        } else {\r\n            this.rowData = this.originalRowData;\r\n        }\r\n    }\r\n\r\n    removeEmptyFilters() {\r\n        this.rowData = this.rowData ? this.rowData.filter((row) => {\r\n            return row.value;\r\n        }) : [];\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destroy$.next();\r\n        this.destroy$.complete();\r\n    }\r\n}\r\n","export enum FABType {\r\n    MiniFAB = 0,\r\n    ExtendedMenu = 1,\r\n    ExtendedSingleButton = 2,\r\n}\r\n","module.exports = \"<div class=\\\"fab-bottom-right\\\"\\r\\n     [style.top]=\\\"fabCssHeight\\\"\\r\\n     *ngIf=\\\"isDisplayed\\\">\\r\\n\\r\\n    <!-- Extended Menu -->\\r\\n    <div *ngIf=\\\"fabType === FABType.ExtendedMenu\\\">\\r\\n        <button mat-raised-button\\r\\n                class=\\\"fab-text-button\\\"\\r\\n                color=\\\"accent\\\"\\r\\n                [matMenuTriggerFor]=\\\"FABMenu\\\">\\r\\n            <mat-icon class=\\\"material-icons\\\">arrow_drop_up</mat-icon>\\r\\n            {{fabTitle}}\\r\\n        </button>\\r\\n        <mat-menu #FABMenu\\r\\n                  yPosition=\\\"above\\\"\\r\\n                  xPosition=\\\"before\\\"\\r\\n                  class=\\\"floating-menu has-header fab-menu\\\">\\r\\n            <button mat-menu-item\\r\\n                    *ngFor=\\\"let action of fabActions\\\"\\r\\n                    (click)=\\\"onActionButtonClicked(action.action)\\\"\\r\\n                    [disabled]=\\\"action.disabled || fabActionsDisabled\\\">\\r\\n                <mat-icon class=\\\"material-icons\\\">{{action.icon}}</mat-icon>\\r\\n                {{action.text}}\\r\\n            </button>\\r\\n            <button mat-menu-item\\r\\n                    class=\\\"menu-header uppercase\\\">\\r\\n                <mat-icon class=\\\"material-icons\\\">arrow_drop_down</mat-icon>\\r\\n                {{fabTitle}}\\r\\n            </button>\\r\\n        </mat-menu>\\r\\n    </div>\\r\\n    <!-- SINGLE EXTENDED BUTTON -->\\r\\n    <div *ngIf=\\\"fabType === FABType.ExtendedSingleButton\\\">\\r\\n        <button mat-raised-button\\r\\n                class=\\\"fab-text-button\\\"\\r\\n                color=\\\"accent\\\"\\r\\n                [disabled]=\\\"fabActionsDisabled\\\"\\r\\n                (click)=\\\"onActionButtonClicked(fabActions[0].action)\\\">\\r\\n            <mat-icon class=\\\"material-icons\\\">add</mat-icon>\\r\\n            {{fabActions[0].text}}\\r\\n        </button>\\r\\n    </div>\\r\\n\\r\\n    <!-- MINI FABS -->\\r\\n    <div *ngIf=\\\"fabType === FABType.MiniFAB\\\">\\r\\n        <button *ngFor=\\\"let action of fabActions\\\"\\r\\n                (click)=\\\"onActionButtonClicked(action.action)\\\"\\r\\n                matTooltip=\\\"{{action.text}}\\\"\\r\\n                matTooltipPosition=\\\"before\\\"\\r\\n                class=\\\"mat-mini-fab mat-accent\\\"\\r\\n                color=\\\"accent\\\"\\r\\n                [disabled]=\\\"action.disabled || fabActionsDisabled\\\">\\r\\n            <mat-icon class=\\\"mat-button-wrapper\\\">{{action.icon}}</mat-icon>\\r\\n        </button>\\r\\n    </div>\\r\\n</div>\\r\\n\"","module.exports = \".fab-bottom-right {\\n  position: fixed;\\n  right: 24px;\\n  z-index: 6; }\\n\\n.fab-action-item .mat-icon {\\n  vertical-align: bottom; }\\n\\n.mat-fab .mat-button-wrapper {\\n  padding: 0px !important; }\\n\\n.fab-bottom-right button {\\n  position: static; }\\n\\nbutton.mat-mini-fab {\\n  display: block;\\n  margin-bottom: 16px; }\\n\\n.menu-header {\\n  background-color: #52C234 !important;\\n  color: #fff !important; }\\n\\n.has-header .mat-menu-content {\\n  padding: 0 !important; }\\n\"","import { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChange } from '@angular/core';\r\nimport { FloatingActionButtonActions } from '../../entities/floating-action-buttons-actions.entity';\r\nimport { FABType } from './floating-action-button-type.enum';\r\n\r\n@Component({\r\n    selector: 'atlas-floating-action-button',\r\n    templateUrl: './floating-action-button.component.html',\r\n    styleUrls: ['./floating-action-button.component.scss'],\r\n})\r\n\r\nexport class FloatingActionButtonComponent implements OnInit, OnChanges {\r\n\r\n    @Input() fabActions: FloatingActionButtonActions[] = [];\r\n    @Input() fabTitle: string;\r\n    @Input() fabType: FABType;\r\n    @Input() fabActionsDisabled: boolean = false;\r\n    @Input() set isParentLoaded(isParentLoaded: boolean) {\r\n        this.loadFab = isParentLoaded;\r\n    }\r\n    @Output() readonly fabActionClicked: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n    FABType = FABType;\r\n\r\n    fabBottomMargin: number = 8;\r\n    fabIconHeight: number = 56;\r\n    fabCssHeight: string = 'calc(100vh - 74px)';\r\n    loadFab: boolean;\r\n    isDisplayed: boolean;\r\n\r\n    onActionButtonClicked(action: string) {\r\n        this.fabActionClicked.emit(action);\r\n    }\r\n\r\n    constructor() { }\r\n    ngOnChanges(changes: { [propKey: string]: SimpleChange }) {\r\n        if (this.loadFab && this.fabActions) {\r\n            this.initFAB(this.fabActions);\r\n        }\r\n    }\r\n    ngOnInit() {\r\n    }\r\n\r\n    getFabHeight() {\r\n        const height: number = this.fabActions.length * this.fabIconHeight + this.fabBottomMargin;\r\n        return 'calc(100vh - ' + height.toString() + 'px)';\r\n    }\r\n\r\n    initFAB(fabActions: FloatingActionButtonActions[]) {\r\n        this.fabActions.sort((action1, action2) => (action1.index > action2.index) ? -1 : 1);\r\n        if (this.fabType === FABType.MiniFAB) {\r\n            this.fabCssHeight = this.getFabHeight();\r\n        }\r\n        this.isDisplayed = (this.loadFab && fabActions.length > 0);\r\n    }\r\n}\r\n","module.exports = \"<div [class.displayMode]=\\\"!isEditable\\\"\\r\\n     class=\\\"custom-form\\\"\\r\\n     [class.required-field]=\\\"isRequired()\\\"\\r\\n     [class.isEmpty]=\\\"!fieldControl.value\\\">\\r\\n    <mat-form-field>\\r\\n        <input matInput\\r\\n               [matDatepicker]=\\\"picker\\\"\\r\\n               [formControl]=\\\"fieldControl\\\"\\r\\n               autocomplete=\\\"off\\\"\\r\\n               [disabled]=\\\"disabled\\\"\\r\\n               (dateChange)=\\\"onChosenDateSelected()\\\">\\r\\n        <mat-placeholder>\\r\\n            <div fxLayout=\\\"row\\\">\\r\\n                {{label}}\\r\\n                <div *ngIf=\\\"(!fieldControl.value) && !isEditable\\\">: {{emptyValue}}</div>\\r\\n            </div>\\r\\n        </mat-placeholder>\\r\\n        <mat-datepicker-toggle matSuffix\\r\\n                               [for]=\\\"picker\\\"\\r\\n                               *ngIf=\\\"isEditable\\\"\\r\\n                               [disabled]=\\\"disabled\\\"\\r\\n                               [class.validIcon]=\\\"fieldControl.valid\\\"\\r\\n                               [class.notValidIcon]=\\\"!fieldControl.valid && (fieldControl.touched || fieldControl.dirty)\\\">\\r\\n        </mat-datepicker-toggle>\\r\\n        <mat-datepicker #picker></mat-datepicker>\\r\\n        <mat-error *ngIf=\\\"fieldControl.hasError('invalidDateForSql')\\\">Date should be after 01/01/1753</mat-error>\\r\\n        <mat-error *ngIf=\\\"fieldControl.errors && isEditable\\\">{{ getErrorMessage() }}</mat-error>\\r\\n        <mat-hint *ngIf=\\\"isRequired() && isEditable\\\">Required *</mat-hint>\\r\\n    </mat-form-field>\\r\\n</div>\"","module.exports = \"\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { UtilService } from '../../../services/util.service';\r\nimport { FormComponentBaseComponent } from '../form-component-base/form-component-base.component';\r\nimport { Validators } from '@angular/forms';\r\nimport { isValidDateForSql } from '../../../validators/date-validators.validator';\r\n\r\n@Component({\r\n    selector: 'atlas-date-picker',\r\n    templateUrl: './date-picker.component.html',\r\n    styleUrls: ['./date-picker.component.scss'],\r\n})\r\n\r\nexport class DatePickerComponent extends FormComponentBaseComponent implements OnInit {\r\n\r\n    @Input() emptyValue: string;\r\n    @Input() disabled = false;\r\n    @Output() readonly dateChanged = new EventEmitter<any>();\r\n\r\n    constructor(protected utils: UtilService) {\r\n        super(utils);\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.fieldControl.setValidators(Validators.compose([isValidDateForSql(), this.fieldControl.validator]));\r\n\r\n    }\r\n    onChosenDateSelected() {\r\n        this.dateChanged.emit();\r\n    }\r\n}\r\n","module.exports = \"<div [class.displayMode]=\\\"!isEditable\\\"\\r\\n     class=\\\"custom-form\\\"\\r\\n     [class.required-field]=\\\"isRequired()\\\"\\r\\n     [class.isEmpty]=\\\"!fieldControl.value\\\">\\r\\n    <mat-form-field>\\r\\n        <input matInput\\r\\n               [matDatepicker]=\\\"picker\\\"\\r\\n               [placeholder]=\\\"label\\\"\\r\\n               autocomplete=\\\"off\\\"\\r\\n               [formControl]=\\\"fieldControl\\\"\\r\\n               [disabled]=\\\"disabled\\\"\\r\\n               (blur)=\\\"onValueEntered()\\\">\\r\\n        <mat-datepicker-toggle matSuffix\\r\\n                               [for]=\\\"picker\\\"\\r\\n                               *ngIf=\\\"isEditable\\\"\\r\\n                               [disabled]=\\\"disabled\\\"\\r\\n                               [class.validIcon]=\\\"fieldControl.valid\\\"\\r\\n                               [class.notValidIcon]=\\\"!fieldControl.valid && (fieldControl.touched || fieldControl.dirty)\\\">\\r\\n        </mat-datepicker-toggle>\\r\\n        <mat-datepicker #picker\\r\\n                        startView=\\\"multi-year\\\"\\r\\n                        (yearSelected)=\\\"onChosenYearSelected($event)\\\"\\r\\n                        (monthSelected)=\\\"onChosenMonthSelected($event, picker)\\\"></mat-datepicker>\\r\\n        <mat-error *ngIf=\\\"fieldControl.hasError('invalidDateForSql')\\\">Date should be after 01/01/1753</mat-error>\\r\\n        <mat-error *ngIf=\\\"isRequired() && fieldControl.hasError('required') && isEditable\\\">{{label}} is Required *\\r\\n        </mat-error>\\r\\n        <mat-error *ngIf=\\\"fieldControl.errors && isEditable\\\">{{ getErrorMessage() }}</mat-error>\\r\\n        <mat-hint *ngIf=\\\"isRequired() && fieldControl.pristine && !fieldControl.value && isEditable\\\">Required *\\r\\n        </mat-hint>\\r\\n    </mat-form-field>\\r\\n</div>\"","module.exports = \"\"","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { DateAdapter, MatDatepicker, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from '@angular/material';\r\nimport { MomentDateAdapter } from '@angular/material-moment-adapter';\r\nimport * as _moment from 'moment';\r\nimport { UtilService } from './../../../../services/util.service';\r\nimport { DatePickerComponent } from './../date-picker.component';\r\n\r\nexport const MY_FORMATS = {\r\n    parse: {\r\n        dateInput: 'MMM YYYY',\r\n    },\r\n    display: {\r\n        dateInput: 'MMM YYYY',\r\n        monthYearLabel: 'MMM YYYY',\r\n        dateA11yLabel: 'LL',\r\n        monthYearA11yLabel: 'MMMM YYYY',\r\n    },\r\n};\r\n\r\n@Component({\r\n    selector: 'atlas-month-date-picker',\r\n    templateUrl: './month-date-picker.component.html',\r\n    styleUrls: ['./month-date-picker.component.scss'],\r\n    providers: [\r\n        { provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] },\r\n\r\n        { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS },\r\n    ],\r\n})\r\nexport class MonthDatePickerComponent extends DatePickerComponent implements OnInit {\r\n    @Output() readonly monthChanged = new EventEmitter<any>();\r\n    constructor(protected utilService: UtilService) {\r\n        super(utilService);\r\n    }\r\n\r\n    onChosenYearSelected(normalizedYear: _moment.Moment) {\r\n        const ctrlValue = this.fieldControl.value ? this.fieldControl.value : normalizedYear;\r\n        ctrlValue.year(normalizedYear.year());\r\n        this.fieldControl.setValue(ctrlValue);\r\n        this.fieldControl.updateValueAndValidity();\r\n    }\r\n\r\n    onChosenMonthSelected(normlizedMonth: _moment.Moment, datepicker: MatDatepicker<_moment.Moment>) {\r\n        const ctrlValue = this.fieldControl.value ? this.fieldControl.value : normlizedMonth;\r\n        ctrlValue.month(normlizedMonth.month());\r\n        ctrlValue.date(1);\r\n        this.fieldControl.setValue(ctrlValue);\r\n        this.fieldControl.updateValueAndValidity();\r\n        datepicker.close();\r\n        this.monthChanged.emit(this.fieldControl.value);\r\n    }\r\n    onValueEntered() {\r\n        if (this.fieldControl.value) {\r\n            const ctrlValue = _moment.parseZone(this.fieldControl.value);\r\n            ctrlValue.date(1);\r\n            this.fieldControl.setValue(ctrlValue);\r\n            this.fieldControl.updateValueAndValidity();\r\n            this.monthChanged.emit(this.fieldControl.value);\r\n        }\r\n    }\r\n}\r\n","module.exports = \"<div [class.displayMode]=\\\"!isEditable\\\"\\r\\n     class=\\\"custom-form\\\"\\r\\n     [class.required-field]=\\\"isRequired()\\\"\\r\\n     [class.isEmpty]=\\\"!fieldControl.value\\\">\\r\\n    <mat-form-field>\\r\\n        <input matInput\\r\\n               [matDatepicker]=\\\"picker\\\"\\r\\n               [placeholder]=\\\"label\\\"\\r\\n               autocomplete=\\\"off\\\"\\r\\n               [formControl]=\\\"fieldControl\\\"\\r\\n               [disabled]=\\\"disabled\\\"\\r\\n               (blur)=\\\"onValueEntered()\\\">\\r\\n        <mat-datepicker-toggle matSuffix\\r\\n                               [for]=\\\"picker\\\"\\r\\n                               *ngIf=\\\"isEditable\\\"\\r\\n                               [disabled]=\\\"disabled\\\"\\r\\n                               [class.validIcon]=\\\"fieldControl.valid\\\"\\r\\n                               [class.notValidIcon]=\\\"!fieldControl.valid && (fieldControl.touched || fieldControl.dirty)\\\">\\r\\n        </mat-datepicker-toggle>\\r\\n        <mat-datepicker #picker\\r\\n                        startView=\\\"multi-year\\\"\\r\\n                        (yearSelected)=\\\"onChosenYearSelected($event,picker)\\\"></mat-datepicker>\\r\\n    </mat-form-field>\\r\\n</div>\\r\\n\"","module.exports = \"\"","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE, MatDatepicker } from '@angular/material';\r\nimport { MomentDateAdapter } from '@angular/material-moment-adapter';\r\nimport * as _moment from 'moment';\r\nimport { UtilService } from './../../../../services/util.service';\r\nimport { DatePickerComponent } from './../date-picker.component';\r\n\r\nexport const MY_FORMATS = {\r\n    parse: {\r\n        dateInput: 'YYYY',\r\n    },\r\n    display: {\r\n        dateInput: 'YYYY',\r\n        monthYearLabel: 'YYYY',\r\n        dateA11yLabel: 'LL',\r\n        monthYearA11yLabel: 'YYYY',\r\n    },\r\n};\r\n\r\n@Component({\r\n    selector: 'atlas-year-picker',\r\n    templateUrl: './year-picker.component.html',\r\n    styleUrls: ['./year-picker.component.scss'],\r\n    providers: [\r\n        { provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] },\r\n\r\n        { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS },\r\n    ],\r\n})\r\nexport class YearPickerComponent extends DatePickerComponent implements OnInit {\r\n\r\n    @Output() readonly yearChanged = new EventEmitter<any>();\r\n    constructor(protected utilService: UtilService) {\r\n        super(utilService);\r\n    }\r\n    onChosenYearSelected(normalizedYear: _moment.Moment, datepicker: MatDatepicker<_moment.Moment>) {\r\n        const ctrlValue = this.fieldControl.value ? this.fieldControl.value : normalizedYear;\r\n        ctrlValue.year(normalizedYear.year());\r\n        this.fieldControl.setValue(ctrlValue);\r\n        this.fieldControl.updateValueAndValidity();\r\n        datepicker.close();\r\n        this.yearChanged.emit(this.fieldControl.value);\r\n    }\r\n\r\n    onValueEntered() {\r\n        if (this.fieldControl.value) {\r\n            const ctrlValue = _moment.parseZone(this.fieldControl.value);\r\n            ctrlValue.date(1);\r\n            this.fieldControl.setValue(ctrlValue);\r\n            this.fieldControl.updateValueAndValidity();\r\n            this.yearChanged.emit(this.fieldControl.value);\r\n        }\r\n    }\r\n\r\n}\r\n","module.exports = \"<div [class.displayMode]=\\\"!isEditable\\\"\\r\\n     class=\\\"custom-form\\\"\\r\\n     [class.isEmpty]=\\\"!fieldControl.value\\\"\\r\\n     [class.required-field]=\\\"isRequired()\\\">\\r\\n    <mat-form-field *ngIf=\\\"isAutocompleteActivated\\\">\\r\\n        <input matInput\\r\\n               #field\\r\\n               [formControl]=\\\"fieldControl\\\"\\r\\n               [matAutocomplete]=\\\"auto\\\"\\r\\n               (blur)=\\\"onBlur()\\\">\\r\\n        <mat-placeholder>\\r\\n            {{label}}\\r\\n        </mat-placeholder>\\r\\n        <mat-autocomplete #auto=\\\"matAutocomplete\\\"\\r\\n                          [displayWith]=\\\"generateDisplay.bind(this)\\\"\\r\\n                          (optionSelected)=\\\"onOptionSelected($event)\\\">\\r\\n            <mat-option *ngFor=\\\"let item of options\\\"\\r\\n                        [value]=\\\"item\\\">\\r\\n                {{ generateSelect(item) }}\\r\\n            </mat-option>\\r\\n        </mat-autocomplete>\\r\\n        <mat-error *ngIf=\\\"fieldControl.errors && isEditable\\\">{{ getErrorMessage() }}</mat-error>\\r\\n        <mat-hint *ngIf=\\\"!fieldControl.value && isEditable && !isRequired()\\\">\\r\\n            {{hint}}\\r\\n        </mat-hint>\\r\\n        <mat-hint *ngIf=\\\"isRequired() && isEditable && !hasWarning\\\">Required *</mat-hint>\\r\\n    </mat-form-field>\\r\\n\\r\\n    <mat-form-field *ngIf=\\\"!isAutocompleteActivated\\\">\\r\\n        <mat-select [formControl]=\\\"fieldControl\\\"\\r\\n                    (selectionChange)=\\\"onSelectionChanged($event)\\\"\\r\\n                    [(ngModel)]=\\\"defaultSelected\\\"\\r\\n                    [multiple]=\\\"multiselect\\\">\\r\\n            <mat-option *ngFor=\\\"let item of options\\\"\\r\\n                        [value]=\\\"item\\\">\\r\\n                {{ generateSelect(item) }}\\r\\n            </mat-option>\\r\\n        </mat-select>\\r\\n        <mat-error *ngIf=\\\"fieldControl.errors && isEditable\\\">{{ getErrorMessage() }}</mat-error>\\r\\n        <mat-placeholder>{{label}}</mat-placeholder>\\r\\n        <mat-hint *ngIf=\\\"!fieldControl.value && isEditable && !isRequired()\\\">\\r\\n            {{hint}}\\r\\n        </mat-hint>\\r\\n        <mat-hint *ngIf=\\\"isRequired() && isEditable && !hasWarning\\\">Required *</mat-hint>\\r\\n    </mat-form-field>\\r\\n</div>\"","module.exports = \"\"","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { MatAutocompleteSelectedEvent, MatSelectChange } from '@angular/material';\r\nimport { UtilService } from '../../../services/util.service';\r\nimport { FormComponentBaseComponent } from '../form-component-base/form-component-base.component';\r\n\r\n@Component({\r\n    selector: 'atlas-dropdown-select-list',\r\n    templateUrl: './dropdown-select-list.component.html',\r\n    styleUrls: ['./dropdown-select-list.component.scss'],\r\n})\r\n\r\nexport class DropdownSelectListComponent extends FormComponentBaseComponent {\r\n\r\n    @Input() options: any[] = [];\r\n    @Input() selectProperties: string[] = null;\r\n    @Input() displayProperty: string = null;\r\n    @Input() isAutocompleteActivated: boolean;\r\n    @Input() hint: string;\r\n    @Input() multiselect: boolean;\r\n    @Output() readonly optionSelected = new EventEmitter<any>();\r\n    @Input() defaultSelected: any[] = [];\r\n\r\n    constructor(protected utils: UtilService) {\r\n        super(utils);\r\n    }\r\n\r\n    onOptionSelected(selected: MatAutocompleteSelectedEvent) {\r\n        this.optionSelected.emit(selected.option.value);\r\n    }\r\n\r\n    onSelectionChanged(selected: MatSelectChange) {\r\n        this.optionSelected.emit(selected.value);\r\n    }\r\n\r\n    onBlur() {\r\n        if (typeof this.fieldControl.value === 'string' && this.displayProperty) {\r\n            const selectedValue = this.options\r\n                .find((item) => item[this.displayProperty] === this.fieldControl.value);\r\n            if (selectedValue && selectedValue !== this.fieldControl.value) {\r\n                this.fieldControl.setValue(selectedValue);\r\n                this.optionSelected.emit(selectedValue);\r\n            }\r\n        }\r\n    }\r\n\r\n    generateDisplay(item: any): string {\r\n        if (!item) {\r\n            return '';\r\n        }\r\n\r\n        return this.displayProperty ? item[this.displayProperty] : item;\r\n    }\r\n\r\n    generateSelect(item: any): string {\r\n\r\n        let display = '';\r\n        if (this.selectProperties) {\r\n            if (item) {\r\n                const selectPropLength = this.selectProperties.length;\r\n                for (let index = 0; index < selectPropLength; index++) {\r\n                    display += item[this.selectProperties[index]];\r\n                    if (index < selectPropLength - 1) {\r\n                        display += ' | ';\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            display = item;\r\n        }\r\n\r\n        return display;\r\n    }\r\n}\r\n","module.exports = \"<div [class.displayMode]=\\\"!isEditable\\\"\\r\\n     class=\\\"custom-form\\\"\\r\\n     [class.isEmpty]=\\\"!fieldControl.value\\\"\\r\\n     [class.required-field]=\\\"isRequired()\\\">\\r\\n    <mat-form-field *ngIf=\\\"isAutocompleteActivated\\\">\\r\\n        <input matInput\\r\\n               #field\\r\\n               [formControl]=\\\"fieldControl\\\"\\r\\n               [matAutocomplete]=\\\"auto\\\"\\r\\n               (blur)=\\\"onBlur()\\\"\\r\\n               autocomplete=\\\"off\\\">\\r\\n        <mat-placeholder>\\r\\n            {{label}}\\r\\n        </mat-placeholder>\\r\\n        <mat-icon *ngIf=\\\"fieldControl.enabled && hasIcon\\\"\\r\\n                  class=\\\"bookmark-icon\\\"\\r\\n                  matSuffix>bookmark</mat-icon>\\r\\n        <mat-autocomplete #auto=\\\"matAutocomplete\\\"\\r\\n                          [displayWith]=\\\"generateDisplay.bind(this)\\\"\\r\\n                          (optionSelected)=\\\"onOptionSelected($event)\\\"\\r\\n                          [panelWidth]=\\\"panelSize\\\">\\r\\n            <mat-option *ngFor=\\\"let item of options\\\"\\r\\n                        [value]=\\\"item\\\">\\r\\n                {{ generateSelect(item) }}\\r\\n            </mat-option>\\r\\n        </mat-autocomplete>\\r\\n        <mat-error *ngIf=\\\"fieldControl.errors && isEditable\\\">{{ getErrorMessage() }}</mat-error>\\r\\n        <mat-hint *ngIf=\\\"!fieldControl.value && isEditable && !isRequired()\\\">\\r\\n            {{hint}}\\r\\n        </mat-hint>\\r\\n        <mat-hint *ngIf=\\\"isRequired() && isEditable && !hasWarning\\\">Required *</mat-hint>\\r\\n    </mat-form-field>\\r\\n\\r\\n    <mat-form-field *ngIf=\\\"!isAutocompleteActivated\\\">\\r\\n        <mat-select [formControl]=\\\"fieldControl\\\"\\r\\n                    (selectionChange)=\\\"onSelectionChanged($event)\\\"\\r\\n                    (openedChange)=\\\"onOpenedChanged($event)\\\"\\r\\n                    [multiple]=\\\"multiselect\\\">\\r\\n            <mat-option *ngFor=\\\"let item of options\\\"\\r\\n                        [value]=\\\"item\\\">\\r\\n                {{ generateSelect(item) }}\\r\\n            </mat-option>\\r\\n        </mat-select>\\r\\n        <mat-error *ngIf=\\\"fieldControl.errors && isEditable\\\">{{ getErrorMessage() }}</mat-error>\\r\\n        <mat-placeholder>{{label}}</mat-placeholder>\\r\\n        <mat-hint *ngIf=\\\"!fieldControl.value && isEditable && !isRequired()\\\">\\r\\n            {{hint}}\\r\\n        </mat-hint>\\r\\n        <mat-hint *ngIf=\\\"isRequired() && isEditable && !hasWarning\\\">Required *</mat-hint>\\r\\n    </mat-form-field>\\r\\n</div>\\r\\n\"","module.exports = \"\"","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { MatAutocompleteSelectedEvent, MatSelectChange } from '@angular/material';\r\nimport { UtilService } from '../../../services/util.service';\r\nimport { FormComponentBaseComponent } from '../form-component-base/form-component-base.component';\r\n\r\n@Component({\r\n    selector: 'atlas-dropdown-select',\r\n    templateUrl: './dropdown-select.component.html',\r\n    styleUrls: ['./dropdown-select.component.scss'],\r\n})\r\n\r\nexport class DropdownSelectComponent extends FormComponentBaseComponent {\r\n\r\n    @Input() options: any[] = [];\r\n    @Input() selectProperties: string[] = null;\r\n    @Input() displayProperty: string = null;\r\n    @Input() isAutocompleteActivated: boolean;\r\n    @Input() hint: string;\r\n    @Input() multiselect: boolean;\r\n    @Input() hasIcon: boolean = false;\r\n    @Output() readonly optionSelected = new EventEmitter<any>();\r\n    @Output() readonly panelOpened = new EventEmitter<boolean>();\r\n    @Output() readonly onBlankSelected = new EventEmitter();\r\n    panelSize: number = 344;\r\n\r\n    constructor(protected utils: UtilService) {\r\n        super(utils);\r\n    }\r\n\r\n    onOptionSelected(selected: MatAutocompleteSelectedEvent) {\r\n        this.optionSelected.emit(selected.option.value);\r\n    }\r\n\r\n    onSelectionChanged(selected: MatSelectChange) {\r\n        this.optionSelected.emit(selected.value);\r\n    }\r\n\r\n    onBlur() {\r\n        if (typeof this.fieldControl.value === 'string' && this.displayProperty) {\r\n            const selectedValue = this.options\r\n                .find((item) => item[this.displayProperty] === this.fieldControl.value);\r\n            if (selectedValue && selectedValue !== this.fieldControl.value) {\r\n                this.fieldControl.setValue(selectedValue);\r\n                this.optionSelected.emit(selectedValue);\r\n            }\r\n            if (this.fieldControl.value.toString().trim() == \"\") {\r\n                this.onBlankSelected.emit();\r\n            }\r\n        }\r\n    }\r\n\r\n    generateDisplay(item: any): string {\r\n        if (!item) {\r\n            return '';\r\n        }\r\n\r\n        if (typeof item === 'string') {\r\n            return item;\r\n        }\r\n\r\n        return this.displayProperty ? item[this.displayProperty] : item;\r\n    }\r\n\r\n    generateSelect(item: any): string {\r\n\r\n        let display = '';\r\n        if (this.selectProperties) {\r\n            if (item) {\r\n                const selectPropLength = this.selectProperties.length;\r\n                for (let index = 0; index < selectPropLength; index++) {\r\n                    display += item[this.selectProperties[index]];\r\n                    if (index < selectPropLength - 1) {\r\n                        display += ' | ';\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            display = item;\r\n        }\r\n\r\n        return display;\r\n    }\r\n\r\n    onOpenedChanged(isPanelOpened: boolean) {\r\n        this.panelOpened.emit(isPanelOpened);\r\n    }\r\n}\r\n","module.exports = \"<p>\\r\\n  form-component-base works!\\r\\n</p>\\r\\n\"","module.exports = \"\"","import { Component, Input, OnInit } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { UtilService } from '../../../services/util.service';\r\n\r\n@Component({\r\n    selector: 'atlas-form-component-base',\r\n    templateUrl: './form-component-base.component.html',\r\n    styleUrls: ['./form-component-base.component.scss'],\r\n})\r\nexport class FormComponentBaseComponent implements OnInit {\r\n    private _isEditable: boolean;\r\n\r\n    @Input() set isEditable(value: boolean) {\r\n        this._isEditable = value;\r\n        this.setViewMode();\r\n    }\r\n\r\n    get isEditable(): boolean {\r\n        return this._isEditable;\r\n    }\r\n\r\n    @Input() fieldControl = new FormControl();\r\n    @Input() errorMap: Map<string, string>;\r\n    @Input() label: string;\r\n    @Input() id: string | number;\r\n\r\n    constructor(protected utils: UtilService) { }\r\n\r\n    ngOnInit() { }\r\n\r\n    getErrorMessage(): string {\r\n        if (this.errorMap) {\r\n            for (const [error, errorMessage] of Array.from(this.errorMap.entries())) {\r\n                if (this.fieldControl.hasError(error)) {\r\n                    return errorMessage;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    setViewMode() {\r\n        this.isEditable ? this.fieldControl.enable() : this.fieldControl.disable();\r\n    }\r\n\r\n    isRequired() {\r\n        return this.utils.isRequired(this.fieldControl);\r\n    }\r\n}\r\n","module.exports = \"<div [class.displayMode]=\\\"!isEditable\\\"\\r\\n     class=\\\"custom-form\\\"\\r\\n     [class.required-field]=\\\"isRequired()\\\"\\r\\n     [class.isEmpty]=\\\"!fieldControl.value\\\"\\r\\n     [class.warning-field]=\\\"hasWarning\\\">\\r\\n    <mat-form-field>\\r\\n        <input matInput\\r\\n               [formControl]=\\\"fieldControl\\\"\\r\\n               [value]=\\\"fieldControl.value\\\"\\r\\n               (blur)=\\\"onBlur($event)\\\"\\r\\n               autocomplete=\\\"off\\\">\\r\\n        <mat-placeholder>{{label}}</mat-placeholder>\\r\\n        <!-- <span *ngIf=\\\"fieldControl.touched && fieldControl.invalid && isEditable\\\"\\r\\n              matSuffix>\\r\\n            <mat-icon>error</mat-icon>\\r\\n        </span>\\r\\n        <span *ngIf=\\\"fieldControl.touched && fieldControl.valid && isEditable && fieldControl.value && !hasWarning\\\"\\r\\n              matSuffix>\\r\\n            <mat-icon class=\\\"validIcon\\\">check_circle</mat-icon>\\r\\n        </span> -->\\r\\n        <mat-error *ngIf=\\\"fieldControl.errors && isEditable\\\">{{getErrorMessage()}}</mat-error>\\r\\n        <mat-hint *ngIf=\\\"!isRequired() && (!fieldControl.value) && !hasWarning\\\">{{hint}}</mat-hint>\\r\\n        <mat-hint *ngIf=\\\"isRequired() && isEditable && !hasWarning\\\">Required *</mat-hint>\\r\\n        <mat-hint *ngIf=\\\"hasWarning && fieldControl.valid\\\">{{warningMessage}}</mat-hint>\\r\\n    </mat-form-field>\\r\\n</div>\\r\\n\"","module.exports = \"\"","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { UtilService } from '../../../services/util.service';\r\nimport { FormComponentBaseComponent } from '../form-component-base/form-component-base.component';\r\n\r\n@Component({\r\n    selector: 'atlas-form-input',\r\n    templateUrl: './form-input.component.html',\r\n    styleUrls: ['./form-input.component.scss'],\r\n})\r\n\r\nexport class FormInputComponent extends FormComponentBaseComponent {\r\n\r\n    @Input() defaultValue: string;\r\n    @Input() hint: string;\r\n    @Input() hasWarning: boolean;\r\n    @Input() warningMessage: string;\r\n    @Input() textMask: any;\r\n\r\n    // tslint:disable-next-line:no-output-named-after-standard-event\r\n    @Output() readonly blur = new EventEmitter();\r\n\r\n    constructor(protected utils: UtilService) {\r\n        super(utils);\r\n    }\r\n\r\n    onBlur(event) {\r\n        this.blur.emit(event);\r\n    }\r\n\r\n    setViewMode(): void {\r\n        if (this.isEditable) {\r\n            if (this.fieldControl.value === '') {\r\n                this.fieldControl.setValue('');\r\n            }\r\n            this.fieldControl.enable();\r\n        } else {\r\n            if (!this.fieldControl.value) {\r\n                this.fieldControl.setValue('');\r\n            }\r\n            this.fieldControl.disable();\r\n        }\r\n    }\r\n}\r\n","module.exports = \"<div [class.displayMode]=\\\"!isEditable\\\">\\r\\n    <mat-hint class=\\\"toggleLabel\\\">{{label}}</mat-hint><br>\\r\\n    <div *ngIf=\\\"isEditable\\\">\\r\\n        <mat-button-toggle-group    color=\\\"primary\\\"\\r\\n                                    [formControl]=\\\"fieldControl\\\">\\r\\n            <mat-button-toggle *ngFor=\\\"let key of getKeys(valueLabelMap)\\\" [value]='key'>\\r\\n                {{valueLabelMap.get(key)}}\\r\\n            </mat-button-toggle>\\r\\n        </mat-button-toggle-group>\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\\"!isEditable\\\">\\r\\n        <span>{{valueLabelMap.get(fieldControl.value)}}</span>\\r\\n\\t</div>\\r\\n</div>\\r\\n\"","module.exports = \"span {\\n  padding: 16px;\\n  line-height: 32px;\\n  font-family: \\\"Roboto\\\", \\\"Helvetica Neue\\\", sans-serif;\\n  font-weight: bold; }\\n\\n.toggleLabel {\\n  margin: 2px;\\n  font-size: 75%;\\n  font-weight: 400;\\n  line-height: 1.125; }\\n\"","import { Component, Input } from '@angular/core';\r\nimport { FormComponentBaseComponent } from '../form-component-base/form-component-base.component';\r\n\r\n@Component({\r\n  selector: 'atlas-form-toggle',\r\n  templateUrl: './form-toggle.component.html',\r\n  styleUrls: ['./form-toggle.component.scss'],\r\n})\r\n\r\nexport class FormToggleComponent extends FormComponentBaseComponent {\r\n\r\n  @Input() valueLabelMap: Map<any, string>;\r\n\r\n  getKeys(map) {\r\n    return Array.from(map.keys());\r\n  }\r\n\r\n}\r\n","module.exports = \"<div [class.displayMode]=\\\"!isEditable\\\"\\r\\n     class=\\\"custom-form\\\"\\r\\n     [class.isEmpty]=\\\"!fieldControl.value\\\"\\r\\n     [class.required-field]=\\\"isRequired()\\\">\\r\\n    <mat-form-field>\\r\\n        <input matInput\\r\\n               #field\\r\\n               [formControl]=\\\"fieldControl\\\"\\r\\n               [matTooltip]=\\\"tooltipDisplayed\\\"\\r\\n               [matAutocomplete]=\\\"auto\\\"\\r\\n               (blur)=\\\"onBlur()\\\">\\r\\n        <mat-placeholder>\\r\\n            {{label}}\\r\\n        </mat-placeholder>\\r\\n        <mat-icon matSuffix\\r\\n                  class=\\\"compass-icon\\\"\\r\\n                  *ngIf=\\\"!fieldControl.disabled && !isSearchBar\\\"\\r\\n                  (click)=\\\"onExploreClicked($event)\\\">explore</mat-icon>\\r\\n\\r\\n        <mat-autocomplete #auto=\\\"matAutocomplete\\\"\\r\\n                          class=\\\"contextual-search-autocomplete\\\"\\r\\n                          [displayWith]=\\\"generateDisplay.bind(this)\\\"\\r\\n                          (optionSelected)=\\\"onOptionSelected($event)\\\">\\r\\n            <mat-option *ngFor=\\\"let item of getLimitedNumberOfOptions()\\\"\\r\\n                        [value]=\\\"item\\\">\\r\\n                {{ generateSelect(item) }}\\r\\n            </mat-option>\\r\\n            <mat-option disabled\\r\\n                        class=\\\"autocomplete-option-with-action\\\">\\r\\n                <a (click)=\\\"onExploreClicked($event)\\\">{{getNumberOfOptionsNotDisplayed()}} more for\\r\\n                    \\\"{{getCurrentValue()}}\\\"</a>\\r\\n            </mat-option>\\r\\n        </mat-autocomplete>\\r\\n        <mat-error *ngIf=\\\"fieldControl.hasError('required')\\\">\\r\\n            Required *\\r\\n        </mat-error>\\r\\n        <mat-error *ngIf=\\\"fieldControl.hasError('inDropdownList')\\\">\\r\\n            {{errorMessage}}\\r\\n        </mat-error>\\r\\n        <mat-hint *ngIf=\\\"isRequired() && isEditable\\\">Required *</mat-hint>\\r\\n    </mat-form-field>\\r\\n    <button *ngIf=\\\"isSearchBar\\\"\\r\\n            mat-raised-button\\r\\n            (click)=\\\"onExploreClicked($event)\\\"\\r\\n            class=\\\"heroGradient\\\">\\r\\n        <mat-icon aria-label=\\\"Search\\\"\\r\\n                  class=\\\"compass-icon\\\">explore</mat-icon>\\r\\n    </button>\\r\\n</div>\\r\\n\"","module.exports = \"::ng-deep.contextual-search-autocomplete {\\n  max-height: none !important;\\n  min-width: 450px !important; }\\n\\n.autocomplete-option-with-action {\\n  text-align: right; }\\n\\n.autocomplete-option-with-action a {\\n    font-size: 12px;\\n    cursor: pointer;\\n    color: #5788ce;\\n    text-decoration: underline; }\\n\\n.mat-form-field .compass-icon {\\n  font-size: 16px;\\n  margin-top: 0px;\\n  line-height: 1.3; }\\n\"","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { MatDialog } from '@angular/material';\r\nimport { of } from 'rxjs';\r\nimport { UtilService } from '../../../../services/util.service';\r\nimport { ContextualSearchBaseLightBoxComponent } from '../../../contextual-search/base-light-box/contextual-search-base-light-box.component';\r\nimport { PagingOptions } from './../../../../../shared/entities/http-services/paging-options';\r\nimport { SnackbarService } from './../../../../services/snackbar.service';\r\nimport { DropdownSelectComponent } from './../../dropdown-select/dropdown-select.component';\r\n\r\n@Component({\r\n    selector: 'atlas-masterdata-input',\r\n    templateUrl: './masterdata-input.component.html',\r\n    styleUrls: ['./masterdata-input.component.scss'],\r\n})\r\nexport class MasterdataInputComponent extends DropdownSelectComponent {\r\n    @Input() lightBoxTitle: string = 'Results';\r\n    @Input() gridId: string;\r\n    @Input() dataLoader: any;\r\n    @Input() tooltip: string;\r\n    @Input() isSearchBar: boolean = false;\r\n    @Output() readonly valueChange = new EventEmitter();\r\n    errorMessage: string = 'Invalid Entry. Value not in list';\r\n    maxOptionsDisplayed: number = 7;\r\n    tooltipDisplayed: string;\r\n\r\n    constructor(protected utils: UtilService,\r\n        protected dialog: MatDialog,\r\n        protected snackbarService: SnackbarService,\r\n    ) {\r\n        super(utils);\r\n    }\r\n\r\n    onExploreClicked(event) {\r\n        if (!this.gridId) {\r\n            this.snackbarService.throwErrorSnackBar('Something went wrong');\r\n            return;\r\n        }\r\n        const searchLightBox = this.openLightbox();\r\n        searchLightBox.afterClosed().subscribe((answer) => {\r\n            if (answer) {\r\n                this.fieldControl.patchValue(answer);\r\n                this.tooltipDisplayed = answer[this.tooltip];\r\n                this.valueChange.emit(answer);\r\n            }\r\n        });\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n    }\r\n\r\n    openLightbox() {\r\n        return this.dialog.open(ContextualSearchBaseLightBoxComponent, {\r\n            data: {\r\n                lightboxTitle: this.lightBoxTitle,\r\n                gridId: this.gridId,\r\n                rowData$: this.getFilteredList(),\r\n            },\r\n            width: '80%',\r\n            height: '80%',\r\n        });\r\n    }\r\n\r\n    getLimitedNumberOfOptions(): any[] {\r\n        let limitedNumberOfOptions = [];\r\n        let errorDisplayed: string;\r\n        if (this.options) {\r\n            limitedNumberOfOptions = this.options.slice(0, this.maxOptionsDisplayed);\r\n        }\r\n        errorDisplayed = this.getErrorMessage();\r\n        if (errorDisplayed) {\r\n            this.errorMessage = errorDisplayed;\r\n        }\r\n        return limitedNumberOfOptions;\r\n    }\r\n\r\n    getCurrentValue(): string {\r\n        const currentValue = this.fieldControl.value;\r\n        if (typeof currentValue === 'string') {\r\n            return currentValue;\r\n        }\r\n        return this.generateDisplay(currentValue);\r\n    }\r\n\r\n    getNumberOfOptionsNotDisplayed(): number {\r\n        if (this.options) {\r\n            const notDisplayedOptions = this.options.length - this.getLimitedNumberOfOptions().length;\r\n            return notDisplayedOptions > 0 ? notDisplayedOptions : 0;\r\n        }\r\n    }\r\n\r\n    getFilteredList() {\r\n        if (this.dataLoader) {\r\n            if (this.gridId === 'documentReferenceGrid' || this.gridId === 'traderGrid') {\r\n                return this.dataLoader.getData();\r\n            }\r\n\r\n            return this.dataLoader.getData(\r\n                ((typeof this.fieldControl.value === 'string') ? this.fieldControl.value : this.fieldControl.value[this.displayProperty]),\r\n                new PagingOptions());\r\n        } else {\r\n            return of(this.options);\r\n        }\r\n    }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { MatDialog } from '@angular/material';\r\nimport { SnackbarService } from '../../../../../services/snackbar.service';\r\nimport { UtilService } from '../../../../../services/util.service';\r\nimport { ContextualSearchUserPreferencesLightBoxComponent } from '../../../../contextual-search/base-light-box/contextual-search-user-preferences-light-box/contextual-search-user-preferences-light-box.component';\r\nimport { MasterdataInputComponent } from '../masterdata-input.component';\r\n\r\n@Component({\r\n    selector: 'atlas-masterdata-user-preferences-input',\r\n    templateUrl: './../masterdata-input.component.html',\r\n    styleUrls: ['./../masterdata-input.component.scss'],\r\n})\r\nexport class MasterdataUserPreferencesInputComponent extends MasterdataInputComponent {\r\n\r\n    constructor(protected utils: UtilService,\r\n        protected dialog: MatDialog,\r\n        protected snackbarService: SnackbarService,\r\n    ) {\r\n        super(utils, dialog, snackbarService);\r\n    }\r\n\r\n    openLightbox() {\r\n        return this.dialog.open(ContextualSearchUserPreferencesLightBoxComponent, {\r\n            data: {\r\n                gridId: this.gridId,\r\n                rowData$: this.getFilteredList(),\r\n            },\r\n            width: '80%',\r\n            maxHeight: '80%',\r\n        });\r\n    }\r\n}\r\n","module.exports = \"<div class=\\\"custom-form\\\"\\r\\n     [class.isEmpty]=\\\"!fieldControl.value\\\"\\r\\n     [class.required-field]=\\\"true\\\">\\r\\n    <mat-form-field color=\\\"accent\\\">\\r\\n        <mat-select [multiple]=\\\"true\\\"\\r\\n                    [formControl]=\\\"fieldControl\\\"\\r\\n                    [placeholder]=\\\"placeholder\\\">\\r\\n            <mat-select-trigger>\\r\\n                {{ displayFn() }}\\r\\n            </mat-select-trigger>\\r\\n            <div id=\\\"myHeader\\\"\\r\\n                 class=\\\"fixedHeader\\\">\\r\\n                <mat-select-header #stickyHeader>\\r\\n                    <input matInput\\r\\n                           type=\\\"search\\\"\\r\\n                           [placeholder]=\\\"placeholderFilter\\\"\\r\\n                           [formControl]=\\\"filterControl\\\"\\r\\n                           autocomplete=\\\"off\\\"\\r\\n                           (keydown)=\\\"$event.stopPropagation()\\\"\\r\\n                           (input)=\\\"onSearchChange($event.target.value)\\\">\\r\\n                </mat-select-header>\\r\\n            </div>\\r\\n            <div id=\\\"options\\\">\\r\\n                <mat-option (click)=\\\"toggleAll()\\\"\\r\\n                            *ngIf=\\\"displayAll\\\"\\r\\n                            style=\\\"color:black\\\"\\r\\n                            [value]=\\\"allOptionsElement[valueProperty]\\\">\\r\\n                    All\\r\\n                </mat-option>\\r\\n                <mat-option *ngFor=\\\"let option of filteredOptions\\\"\\r\\n                            [value]=\\\"option[valueProperty]\\\"\\r\\n                            (click)=\\\"selectionChanged(option[valueProperty], $event)\\\">\\r\\n                    <span *ngIf=\\\"displayCode\\\"\\r\\n                          style=\\\"color:black\\\">{{ option[codeProperty] }}</span>\\r\\n                    <span *ngIf=\\\"option[codeProperty] !== null && displayCode && displayProperty\\\"\\r\\n                          style=\\\"color:black\\\">|</span>\\r\\n                    <span *ngIf=\\\"displayProperty\\\"\\r\\n                          style=\\\"color:black\\\">{{ option[displayProperty] }}</span>\\r\\n                </mat-option>\\r\\n                <mat-option [value]=\\\"fakeOption\\\"\\r\\n                            style=\\\"height: 0\\\">\\r\\n                </mat-option>\\r\\n                <mat-option disabled\\r\\n                            class=\\\"autocomplete-option-with-action\\\">\\r\\n                    <a (click)=\\\"onExploreClicked($event)\\\">\\r\\n                        {{filteredOptionsSize - filteredOptions.length}} more for\\r\\n                        \\\"{{this.filterControl.value ? this.filterControl.value : ''}}\\\"\\r\\n                    </a>\\r\\n                </mat-option>\\r\\n            </div>\\r\\n        </mat-select>\\r\\n        <mat-error *ngIf=\\\"fieldControl.hasError('required')\\\">\\r\\n            {{elementName}} is required\\r\\n        </mat-error>\\r\\n        <mat-hint>\\r\\n            Required *\\r\\n        </mat-hint>\\r\\n    </mat-form-field>\\r\\n</div>\\r\\n\"","module.exports = \".optionAll {\\n  border-bottom-color: black; }\\n\\n.fixedHeader {\\n  position: -webkit-sticky;\\n  position: sticky;\\n  top: -2px;\\n  margin-top: -2px;\\n  padding-top: 12px;\\n  padding-left: 10px;\\n  z-index: 500;\\n  padding-bottom: 20px;\\n  background-color: white; }\\n\\n.autocomplete-option-with-action {\\n  text-align: right; }\\n\\n.autocomplete-option-with-action a {\\n    font-size: 12px;\\n    cursor: pointer;\\n    color: #5788ce;\\n    text-decoration: underline; }\\n\\n.autocomplete-option-with-action ::ng-deep .mat-pseudo-checkbox-disabled {\\n    display: none; }\\n\\nmat-form-field {\\n  margin-top: 12px; }\\n\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { AbstractControl, FormControl, ValidatorFn, Validators } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material';\r\nimport { of } from 'rxjs';\r\nimport { ContextualSearchMultipleSelectLightBoxComponent } from '../../../contextual-search/multiple-select-light-box/contextual-search-multiple-select-light-box.component';\r\nimport { ColumnConfigurationProperties } from './../../../../entities/grid-column-configuration.entity';\r\nimport { UtilService } from './../../../../services/util.service';\r\nimport { FormComponentBaseComponent } from './../../form-component-base/form-component-base.component';\r\n\r\n@Component({\r\n    selector: 'atlas-contextual-search-multiple-autocomplete-select',\r\n    templateUrl: './contextual-search-multiple-autocomplete-select.component.html',\r\n    styleUrls: ['./contextual-search-multiple-autocomplete-select.component.scss'],\r\n})\r\nexport class ContextualSearchMultipleAutocompleteSelectComponent extends FormComponentBaseComponent implements OnInit {\r\n\r\n    @Input() options: any[] = [];\r\n    @Input() allSelected: boolean = true;\r\n    @Input() selectedOptions: any[] = [];\r\n    @Input() allOptionsElement: any;\r\n    @Input() displayCode = true; // if the codeProperty should be displayed with the displayProperty, and after selection\r\n    @Input() filterProperty: string;\r\n    @Input() codeProperty: string;\r\n    @Input() valueProperty: string;\r\n    @Input() displayProperty: string; // property on which we'll be sorting the displayed array\r\n    @Input() placeholder: string;\r\n    @Input() placeholderFilter: string;\r\n    @Input() elementName: string;\r\n    @Input() isFieldRequired = true;\r\n\r\n    @Output() readonly selectionChangedEvent = new EventEmitter<any>();\r\n\r\n    filteredOptions: any[];  // options filtered that is displayed to the user\r\n\r\n    fieldControl: FormControl = new FormControl('', [Validators.required]);\r\n    filterControl: FormControl = new FormControl();\r\n\r\n    displayAll: boolean = true; // if false, hide button \"All\" (used while filtering)\r\n\r\n    size: number = 0;\r\n    filteredOptionsSize: number = 0;\r\n    isLoading = true;\r\n    fakeOption = {};\r\n\r\n    constructor(\r\n        protected utils: UtilService,\r\n        protected dialog: MatDialog,\r\n    ) {\r\n        super(utils);\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.size = this.options ? this.options.length : 0;\r\n        if (this.isFieldRequired) {\r\n            this.fieldControl.setValidators([this.validatorRequiredCustom()]);\r\n        }\r\n        this.initForm();\r\n        this.isLoading = false;\r\n    }\r\n\r\n    initForm() {\r\n        if (this.allSelected) {\r\n            this.selectedOptions = this.options;\r\n        }\r\n        if (this.elementName !== 'Document Type') {\r\n            this.setFilteredOptions();\r\n        }\r\n    }\r\n\r\n    validatorRequiredCustom(): ValidatorFn {\r\n        return ((control: AbstractControl): { [key: string]: any } => {\r\n            let error = null;\r\n            if (!this.selectedOptions || this.selectedOptions.length === 0) {\r\n                error = { required: true };\r\n            }\r\n            return error;\r\n        }).bind(this);\r\n    }\r\n\r\n    setFilteredOptions() {\r\n        // filter the options\r\n        const filterValue = this.filterControl.value ? this.filterControl.value.toUpperCase() : null;\r\n        this.filteredOptions = filterValue ? this.options\r\n            .filter((option) => (this.displayProperty\r\n                && option[this.displayProperty].toUpperCase().startsWith(filterValue))\r\n                || option[this.codeProperty].toUpperCase().startsWith(filterValue)) : this.options;\r\n        this.sortFilteredOptions();\r\n        this.filteredOptionsSize = this.filteredOptions.length;\r\n\r\n        // Get only the first 7 options\r\n        this.filteredOptions = this.filteredOptions.slice(0, 7);\r\n\r\n        // Set selected\r\n        const filteredOptionsSelected = this.filteredOptions.filter((option) => this.selectedOptions\r\n            .find((selected) => selected[this.valueProperty] === option[this.valueProperty]));\r\n        // check option 'all'\r\n        if (this.displayAll && this.allSelected) {\r\n            filteredOptionsSelected.unshift(this.allOptionsElement);\r\n        }\r\n        const valuesToPatch = this.valueProperty ?\r\n            filteredOptionsSelected.map((option) => option[this.valueProperty]) : filteredOptionsSelected;\r\n\r\n        // When the filtered options are not selected BUT there are otpions selected,\r\n        // we need to add a fake value so that the field is not empty\r\n        if (this.selectedOptions && this.selectedOptions.length > 0) {\r\n            valuesToPatch.push(this.fakeOption);\r\n        }\r\n        this.fieldControl.patchValue(valuesToPatch);\r\n    }\r\n\r\n    sortFilteredOptions() {\r\n        this.filteredOptions = this.filteredOptions.sort((obj1, obj2) => {\r\n            if (obj1[this.codeProperty] < obj2[this.codeProperty]) {\r\n                return -1;\r\n            }\r\n            if (obj1[this.codeProperty] > obj2[this.codeProperty]) {\r\n                return 1;\r\n            }\r\n            return 0;\r\n        });\r\n    }\r\n\r\n    // Called from parent component if the options are changed by the parent\r\n    public optionsChanged() {\r\n        this.size = this.options ? this.options.length : 0;\r\n        this.displayAll = this.filterControl.value ? false : true;\r\n        if (this.allSelected) {\r\n            this.selectedOptions = this.options;\r\n        } else if (this.selectedOptions) {\r\n            this.selectedOptions = this.selectedOptions.filter((selectedoption) => {\r\n                return this.options.find((option) => option[this.valueProperty] === selectedoption[this.valueProperty]) ? true : false;\r\n            });\r\n        } else {\r\n            this.selectedOptions = [];\r\n        }\r\n\r\n        this.setFilteredOptions();\r\n        if (this.fieldControl) {\r\n            this.fieldControl.updateValueAndValidity();\r\n        }\r\n        this.selectionChangedEvent.emit(this.selectedOptions);\r\n    }\r\n\r\n    resetSelected() {\r\n        this.selectedOptions = [];\r\n        this.setFilteredOptions();\r\n    }\r\n\r\n    resetComponent() {\r\n        this.allSelected = true;\r\n        this.displayAll = true;\r\n        this.selectedOptions = this.options; // by default, all are selected\r\n        this.setFilteredOptions();\r\n    }\r\n\r\n    // click on button 'all'\r\n    toggleAll() {\r\n        this.allSelected = !this.allSelected;\r\n        this.selectedOptions = this.allSelected ? this.options : [];\r\n        this.setFilteredOptions();\r\n        this.selectionChangedEvent.emit(this.selectedOptions);\r\n    }\r\n\r\n    // click of any option other than 'all'\r\n    selectionChanged(value: string, event: Event): void { // react to select even in the dropdown\r\n        if (this.selectedOptions.find((option) => option[this.valueProperty] === value)) {\r\n            // remove the option\r\n            this.selectedOptions = this.selectedOptions.filter((option) => option[this.valueProperty] !== value);\r\n        } else {\r\n            // add the option\r\n            const newOption = this.options.find((option) => option[this.valueProperty] === value);\r\n            this.selectedOptions.push(newOption);\r\n        }\r\n        this.allSelected = this.selectedOptions.length === this.options.length;\r\n        this.setFilteredOptions();\r\n        this.selectionChangedEvent.emit(this.selectedOptions);\r\n        event.preventDefault();\r\n    }\r\n\r\n    // autocomplete function\r\n    onSearchChange(event): void {\r\n        this.displayAll = this.filterControl.value ? false : true;\r\n        if (this.allSelected && this.filterControl.value && this.filterControl.value.length > 0) {\r\n            this.allSelected = false;\r\n            this.selectedOptions = [];\r\n        }\r\n        this.setFilteredOptions();\r\n    }\r\n\r\n    displayFn(): string {\r\n        let res: string;\r\n        const propertyToOrder = this.displayProperty && !this.displayCode ? this.displayProperty : this.codeProperty;\r\n        if (this.allSelected) {\r\n            res = this.allOptionsElement[propertyToOrder];\r\n        } else if (this.selectedOptions) {\r\n            this.selectedOptions = this.selectedOptions.sort((obj1, obj2) => {\r\n                if (obj1[this.codeProperty] < obj2[this.codeProperty]) {\r\n                    return -1;\r\n                }\r\n                if (obj1[this.codeProperty] > obj2[this.codeProperty]) {\r\n                    return 1;\r\n                }\r\n                return 0;\r\n            });\r\n            if (this.selectedOptions.length > 0) {\r\n                const el = this.selectedOptions[0];\r\n                if (el) {\r\n                    res = el[propertyToOrder];\r\n                }\r\n                if (this.selectedOptions.length > 1) {\r\n                    const num = this.selectedOptions.length - 1;\r\n                    if (this.selectedOptions.length === 2) {\r\n                        res = res.concat(' and ', num.toString(), ' other');\r\n                    } else if (this.selectedOptions.length > 2) {\r\n                        res = res.concat(' and ', num.toString(), ' others');\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            res = this.placeholderFilter;\r\n        }\r\n        return res;\r\n    }\r\n\r\n    onExploreClicked(event) {\r\n        const searchLightBox = this.openLightbox();\r\n        searchLightBox.afterClosed().subscribe((answer) => {\r\n            if (answer) {\r\n                this.selectedOptions = answer;\r\n                this.setFilteredOptions();\r\n                this.selectionChangedEvent.emit(this.selectedOptions);\r\n            }\r\n        });\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n    }\r\n\r\n    openLightbox() {\r\n        const gridConfig: ColumnConfigurationProperties[] = [\r\n            {\r\n                fieldId: 0,\r\n                gridColumnId: 0,\r\n                fieldName: this.codeProperty,\r\n                friendlyName: this.elementName,\r\n                filterType: null,\r\n                gridType: null,\r\n                optionSet: null,\r\n                isVisible: true,\r\n                isFilterable: false,\r\n                isEditable: false,\r\n                isSortable: false,\r\n                sortOrder: null,\r\n                sortOrderIndex: 0,\r\n                groupName: null,\r\n                isGroup: false,\r\n            },\r\n        ];\r\n        if (this.displayProperty) {\r\n            gridConfig.push({\r\n                fieldId: 0,\r\n                gridColumnId: 0,\r\n                fieldName: this.displayProperty,\r\n                friendlyName: '',\r\n                filterType: null,\r\n                gridType: null,\r\n                optionSet: null,\r\n                isVisible: true,\r\n                isFilterable: false,\r\n                isEditable: false,\r\n                isSortable: false,\r\n                sortOrder: null,\r\n                sortOrderIndex: 0,\r\n                groupName: null,\r\n                isGroup: false,\r\n            });\r\n        }\r\n        return this.dialog.open(ContextualSearchMultipleSelectLightBoxComponent, {\r\n            data: {\r\n                rowData$: of(this.options.map((option) => {\r\n                    option.isSelected = this.selectedOptions\r\n                        .find((selectedOption) => option[this.valueProperty] === selectedOption[this.valueProperty]) ? true : false;\r\n                    return option;\r\n                })),\r\n                lightboxTitle: '',\r\n                currentFilter: this.filterControl.value,\r\n                gridConfig,\r\n                valueProperty: this.valueProperty,\r\n                codeProperty: this.codeProperty,\r\n                displayProperty: this.displayProperty,\r\n            },\r\n            width: '80%',\r\n            height: '80%',\r\n        });\r\n    }\r\n}\r\n","module.exports = \"<div fxLayoutAlign=\\\"space-between center\\\">\\r\\n    <h2>{{this.dialogData.reportName}}</h2>\\r\\n    <button mat-button>\\r\\n        <mat-icon (click)=\\\"onCloseButtonClicked()\\\">close</mat-icon>\\r\\n    </button>\\r\\n</div>\\r\\n<div class=\\\"report-container-full-content\\\">\\r\\n    <atlas-ssrsreport-viewer [reportServer]=\\\"reportServerUrl\\\" [reportUrl]=\\\"reportPath\\\"\\r\\n                                                              [showParameters]=\\\"showParameters\\\"\\r\\n                                                              [parameters]=\\\"parameters\\\"\\r\\n                                                              #ssrsReportViewer></atlas-ssrsreport-viewer>\\r\\n</div>\"","module.exports = \"\"","import { Component, Inject, OnInit, ViewChild } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { CompanyManagerService } from '../../../core/services/company-manager.service';\r\nimport { FreezeDisplayView } from '../../models/freeze-display-view';\r\nimport { SSRSReportViewerComponent } from '../ssrs-report-viewer/ssrsreport-viewer.component';\r\n@Component({\r\n    selector: 'atlas-trade-report-viewer',\r\n    templateUrl: './generic-report-viewer.component.html',\r\n    styleUrls: ['./generic-report-viewer.component.scss'],\r\n})\r\nexport class GenericReportViewerComponent implements OnInit {\r\n    company: string;\r\n    parameters: any[] = [];\r\n    reportPath: string;\r\n    dialogData: {\r\n        reportName: string;\r\n        reportPath: string;\r\n        dataVersionId: number;\r\n    };\r\n    showParameters: boolean = true;\r\n    reportServerUrl = environment.reportServerLink;\r\n    @ViewChild('ssrsReportViewer') ssrsReportViewer: SSRSReportViewerComponent;\r\n\r\n    constructor(public thisDialogRef: MatDialogRef<GenericReportViewerComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: { reportName: string, reportPath: string, dataVersionId: number },\r\n        protected companyManager: CompanyManagerService,\r\n    ) {\r\n        this.dialogData = data;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.company = this.companyManager.getCurrentCompanyId();\r\n\r\n        this.parameters = [];\r\n\r\n        if (this.dialogData.dataVersionId) {\r\n            this.parameters.push({ name: 'Database', value: this.dialogData.dataVersionId });\r\n        }\r\n        this.reportPath = this.dialogData.reportPath.substring(1);\r\n        this.ssrsReportViewer.generateReport(this.reportServerUrl, this.reportPath, this.parameters);\r\n    }\r\n\r\n    onCloseButtonClicked() {\r\n        this.thisDialogRef.close(true);\r\n    }\r\n}\r\n","module.exports = \"<div *ngIf=\\\"gridPreferencesParameters\\\"\\r\\n     fxLayout=\\\"row\\\"\\r\\n     fxLayoutAlign=\\\"end end\\\">\\r\\n\\r\\n    <button *ngFor=\\\"let action of additionalActions\\\"\\r\\n            mat-button\\r\\n            (click)=\\\"onActionButtonClicked(action.action)\\\"\\r\\n            matTooltip=\\\"{{action.text}}\\\"\\r\\n            [disabled]=\\\"action.disabled\\\">\\r\\n        {{action.text}}\\r\\n    </button>\\r\\n\\r\\n    <atlas-ag-grid-user-preferences [gridOptions]=\\\"enlargedGridOptions\\\"\\r\\n                                    [company]=\\\"gridPreferencesParameters.company\\\"\\r\\n                                    [gridId]=\\\"gridPreferencesParameters.gridId\\\"\\r\\n                                    [savingEnabled]=\\\"gridPreferencesParameters.savingEnabled\\\"\\r\\n                                    [favouriteMenuEnabled]=\\\"gridPreferencesParameters.isFavouriteMenuEnabled\\\"\\r\\n                                    [isAutosize]=\\\"gridPreferencesParameters.isAutosize\\\"\\r\\n                                    [showExport]=\\\"gridPreferencesParameters.showExport\\\"\\r\\n                                    [sharingEnabled]=\\\"gridPreferencesParameters.sharingEnabled\\\"\\r\\n                                    [hasDeleteViewPrivilege]=\\\"gridPreferencesParameters.canDeleteView\\\"\\r\\n                                    [loadDefaultGridView]=\\\"loadUserPreferences\\\"\\r\\n                                    [isCustomExportEnabled]=\\\"gridPreferencesParameters.hasCustomExport\\\"\\r\\n                                    [hasColumnHandling]=\\\"gridPreferencesParameters.hasColumnHandling\\\"\\r\\n                                    (componentLoaded)=\\\"onGridViewsLoaded()\\\"\\r\\n                                    (exportClicked)=\\\"onCustomExportButtonClicked($event, '.xlsx')\\\"\\r\\n                                    #userPreferences>\\r\\n\\r\\n    </atlas-ag-grid-user-preferences>\\r\\n</div>\\r\\n<div *ngIf='hasRangeSelectionOption'\\r\\n     class='quick-sum-div'\\r\\n     fxLayout=\\\"row\\\"\\r\\n     fxLayoutAlign=\\\"space-between center\\\">\\r\\n    <mat-slide-toggle (change)=\\\"onQuickSumToggleChange($event)\\\">Quick Sum Mode</mat-slide-toggle>\\r\\n    <div fxLayout=\\\"row\\\"\\r\\n         fxLayoutAlign=\\\"space-between center\\\"\\r\\n         *ngIf=\\\"isQuickSumActivated\\\">\\r\\n        <div *ngFor=\\\"let column of selectedColumnsArray\\\">\\r\\n            <span *ngIf=\\\"column.sum !== 0 \\\">{{column.name}} : {{column.sum}} &nbsp; &nbsp; </span>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"isQuickSumActivated\\\">\\r\\n        <button mat-button\\r\\n                (click)=\\\"onClearSelectionButtonClicked()\\\">\\r\\n            Clear Selection\\r\\n        </button>\\r\\n    </div>\\r\\n</div>\\r\\n<div ag-grid=\\\"enlargedGridOptions\\\"\\r\\n     class=\\\"enlarged-grid\\\"\\r\\n     [ngClass]='appliedSelectionClass'>\\r\\n    <ag-grid-angular class=\\\"ag-theme-material enlarged-grid\\\"\\r\\n                     [gridOptions]=\\\"enlargedGridOptions\\\"\\r\\n                     (cellClicked)=\\\"onCellClicked($event)\\\"\\r\\n                     (cellValueChanged)=\\\"onCellValueChanged($event)\\\"\\r\\n                     (columnRowGroupChanged)=\\\"onColumnRowGroupChanged($event)\\\"\\r\\n                     (columnVisible)=\\\"onColumnVisibilityChanged($event)\\\"\\r\\n                     (rowClicked)=\\\"onRowClicked($event)\\\"\\r\\n                     (rowSelected)=\\\"onRowSelected($event)\\\"\\r\\n                     (rowDataChanged)=\\\"onRowDataChanged($event)\\\"\\r\\n                     (rangeSelectionChanged)=\\\"onRangeSelectionChanged($event)\\\"\\r\\n                     (gridReady)=\\\"onGridReady($event)\\\">\\r\\n    </ag-grid-angular>\\r\\n</div>\\r\\n\"","module.exports = \".enlarged-grid {\\n  height: calc(100% - 32px - 32px); }\\n\\n.quick-sum-div {\\n  height: 32px;\\n  font: 400 12px/20px Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n\\n.quick-sum-div button.mat-button {\\n    margin-top: 0px !important; }\\n\"","import { AfterViewInit, Component, Inject, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialogRef, MatSlideToggleChange, MAT_DIALOG_DATA } from '@angular/material';\r\nimport * as agGrid from 'ag-grid-community';\r\nimport { Subject } from 'rxjs';\r\nimport { UserGridViewDto } from '../../../dtos/user-grid-view-dto.dto';\r\nimport { UserGridPreferencesParameters } from '../../../entities/user-grid-preferences-parameters.entity';\r\nimport { AgGridService } from '../../../services/ag-grid.service';\r\nimport { AgGridUserPreferencesComponent } from '../../ag-grid-user-preferences/ag-grid-user-preferences.component';\r\n\r\n@Component({\r\n    selector: 'atlas-enlarged-grid-dialog',\r\n    templateUrl: './enlarged-grid-dialog.component.html',\r\n    styleUrls: ['./enlarged-grid-dialog.component.scss'],\r\n})\r\nexport class EnlargedGridDialogComponent implements OnInit, AfterViewInit {\r\n\r\n    @ViewChild('userPreferences') userPreferencesComponent: AgGridUserPreferencesComponent;\r\n    gridPreferencesParameters: UserGridPreferencesParameters;\r\n\r\n    loadUserPreferences: boolean = false;\r\n    enlargedGridOptions: agGrid.GridOptions = { alignedGrids: [] };\r\n\r\n    // row Selection handling\r\n    hasRangeSelectionOption: boolean = false;\r\n    singleRowSelectionClass: string = 'ag-theme-material pointer-cursor';\r\n    multipleCellSelectionClass: string = 'ag-theme-material pointer-cursor cell-selection';\r\n    appliedSelectionClass: string;\r\n    selectedColumnsArray: Array<{ 'name': string, 'sum': number }> = new Array();\r\n    summableColumns: string[] = [];\r\n    isQuickSumActivated: boolean = false;\r\n    // --\r\n\r\n    /* format :[{\r\n        Text : string,\r\n        Action: string,\r\n        Disabled: boolean\r\n    }]\r\n    */\r\n    additionalActions: any = [];\r\n\r\n    private cellClickedSubject = new Subject();\r\n    private cellValueChangedSubject = new Subject();\r\n    private rowClickedSubject = new Subject();\r\n    private rowSelectedSubject = new Subject();\r\n    private rowDataChangedSubject = new Subject();\r\n    private columnVisibleSubject = new Subject();\r\n    private columnRowGroupChangedSubject = new Subject();\r\n\r\n    private additionalActionClickedSubject = new Subject();\r\n    private customExportButtonClickedSubject = new Subject();\r\n\r\n    constructor(public dialog: MatDialogRef<EnlargedGridDialogComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private gridService: AgGridService) { }\r\n    /*\r\n    https://www.ag-grid.com/javascript-grid-aligned-grids/\r\n    Data Structure Injected should be the following:\r\n    - Ag Grid Options\r\n    - user preferences parameters\r\n\r\n    data: {\r\n            gridOptions: agGrid.GridOptions,\r\n            gridPreferencesParameters: UserGridPreferencesParameters,\r\n            hasRangeSelectionOption: boolean,\r\n            summableColumns: string[],\r\n            additionalActions: { action: string, text: string, disabled: boolean},\r\n        },\r\n    //*/\r\n\r\n    ngOnInit() {\r\n        this.gridPreferencesParameters = this.data.gridPreferencesParameters;\r\n\r\n        this.hasRangeSelectionOption = this.data.hasRangeSelectionOption;\r\n        this.summableColumns = this.data.summableColumns;\r\n\r\n        this.enlargedGridOptions = { ...this.data.gridOptions };\r\n        this.enlargedGridOptions.alignedGrids = [this.data.gridOptions];\r\n        this.enlargedGridOptions.domLayout = 'normal';\r\n        this.enlargedGridOptions.paginationAutoPageSize = true;\r\n\r\n        this.additionalActions = this.data.additionalActions ? this.data.additionalActions : [];\r\n        // --\r\n        this.appliedSelectionClass = this.singleRowSelectionClass;\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        const savedColumnStates = this.data.gridOptions.columnApi ? this.data.gridOptions.columnApi.getColumnState() : [];\r\n\r\n        this.enlargedGridOptions.columnApi.setColumnState(savedColumnStates);\r\n        // this.gridService.sizeColumns(this.enlargedGridOptions);\r\n    }\r\n\r\n    onGridViewsLoaded(): void {\r\n        if (this.gridPreferencesParameters && this.gridPreferencesParameters.selectedGridViewId) {\r\n            this.userPreferencesComponent.loadGridView(this.gridPreferencesParameters.selectedGridViewId, false);\r\n        }\r\n    }\r\n\r\n    getGridOptions(): agGrid.GridOptions {\r\n        return this.enlargedGridOptions;\r\n    }\r\n\r\n    public actionTriggered() {\r\n        return this.additionalActionClickedSubject;\r\n    }\r\n    // -- AG grid events\r\n    public rowClicked(): Subject<any> {\r\n        return this.rowClickedSubject;\r\n    }\r\n\r\n    public rowDataChanged(): Subject<any> {\r\n        return this.rowDataChangedSubject;\r\n    }\r\n\r\n    public rowSelected(): Subject<any> {\r\n        return this.rowSelectedSubject;\r\n    }\r\n\r\n    public cellClicked(): Subject<any> {\r\n        return this.cellClickedSubject;\r\n    }\r\n\r\n    public cellValueChanged(): Subject<any> {\r\n        return this.cellValueChangedSubject;\r\n    }\r\n\r\n    public columnRowGroupChanged(): Subject<any> {\r\n        return this.columnRowGroupChangedSubject;\r\n    }\r\n\r\n    public columnVisibiltyChanged(): Subject<any> {\r\n        return this.columnVisibleSubject;\r\n    }\r\n\r\n    public customExport(): Subject<any> {\r\n        return this.customExportButtonClickedSubject;\r\n    }\r\n\r\n    onRowDataChanged(rowData: any) {\r\n        this.rowDataChangedSubject.next(rowData);\r\n    }\r\n\r\n    onRowSelected(rowData: any) {\r\n        this.rowSelectedSubject.next(rowData);\r\n    }\r\n\r\n    onRowClicked(rowData: any) {\r\n        this.rowClickedSubject.next(rowData);\r\n    }\r\n\r\n    onCellClicked(selectedCell: any) {\r\n        this.cellClickedSubject.next(selectedCell);\r\n    }\r\n\r\n    onCellValueChanged(selectedCell: any) {\r\n        this.cellValueChangedSubject.next(selectedCell);\r\n    }\r\n\r\n    onColumnVisibilityChanged(column: any) {\r\n        this.columnRowGroupChangedSubject.next(column);\r\n    }\r\n\r\n    onColumnRowGroupChanged(columnRow: any) {\r\n        this.columnRowGroupChangedSubject.next(columnRow);\r\n    }\r\n\r\n    // --\r\n\r\n    getCurrentGridView(): UserGridViewDto {\r\n        if (this.userPreferencesComponent) {\r\n            return this.userPreferencesComponent.getCurrentGridView();\r\n        }\r\n        return null;\r\n    }\r\n\r\n    onActionButtonClicked(action: string) {\r\n        this.additionalActionClickedSubject.next(action);\r\n    }\r\n\r\n    onCustomExportButtonClicked(value: any, type: string) {\r\n        this.customExportButtonClickedSubject.next([value, type]);\r\n    }\r\n\r\n    refreshGrid() {\r\n        this.enlargedGridOptions.api.setRowData((this.data.gridOptions as agGrid.GridOptions).rowData);\r\n    }\r\n\r\n    onGridReady(params) {\r\n        this.enlargedGridOptions.api.setRowData((this.data.gridOptions as agGrid.GridOptions).rowData);\r\n        (this.data.gridOptions as agGrid.GridOptions).api.getSelectedNodes().forEach((selectedNode) => {\r\n            const node = this.enlargedGridOptions.api.getRowNode(selectedNode.id);\r\n            node.setSelected(true);\r\n        });\r\n    }\r\n\r\n    // row selection handling\r\n    onQuickSumToggleChange(toggleEvent: MatSlideToggleChange) {\r\n        this.onClearSelectionButtonClicked();\r\n\r\n        this.isQuickSumActivated = toggleEvent.checked;\r\n        this.appliedSelectionClass = toggleEvent.checked ? this.multipleCellSelectionClass : this.singleRowSelectionClass;\r\n    }\r\n\r\n    onClearSelectionButtonClicked() {\r\n        this.enlargedGridOptions.api.clearRangeSelection();\r\n        this.selectedColumnsArray = [];\r\n    }\r\n\r\n    onRangeSelectionChanged(event) {\r\n\r\n        this.selectedColumnsArray = [];\r\n        const rangeSelections = this.enlargedGridOptions.api.getRangeSelections();\r\n\r\n        if (rangeSelections && rangeSelections.length !== 0) {\r\n            const firstRange = rangeSelections[0];\r\n            const startRow = Math.min(firstRange.start.rowIndex, firstRange.end.rowIndex);\r\n            const endRow = Math.max(firstRange.start.rowIndex, firstRange.end.rowIndex);\r\n\r\n            firstRange.columns.forEach((column) => {\r\n                if (this.summableColumns.includes(column.getColDef().colId)) {\r\n                    let selectedSum = 0;\r\n                    for (let rowIndex = startRow; rowIndex <= endRow; rowIndex++) {\r\n                        const rowModel = this.enlargedGridOptions.api.getModel();\r\n                        const rowNode = rowModel.getRow(rowIndex);\r\n                        const value = this.enlargedGridOptions.api.getValue(column, rowNode);\r\n                        selectedSum += Number(value);\r\n                    }\r\n                    this.selectedColumnsArray.push({ name: column.getColDef().headerName, sum: selectedSum });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n}\r\n","module.exports = \"<div fxLayout=\\\"row\\\"\\r\\n     fxLayoutAlign=\\\"space-between\\\"\\r\\n     class=\\\"zoom-action\\\">\\r\\n    <button mat-icon-button\\r\\n            matTooltip=\\\"Zoom in\\\"\\r\\n            (click)=\\\"onOpenDialogButtonClicked()\\\">\\r\\n        <mat-icon>zoom_in</mat-icon>\\r\\n    </button>\\r\\n</div>\\r\\n\"","module.exports = \".zoom-action .mat-icon-button {\\n  width: 32px;\\n  height: 32px;\\n  line-height: 32px; }\\n\"","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material';\r\nimport { Router } from '@angular/router';\r\nimport * as agGrid from 'ag-grid-community';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { UserGridViewDto } from '../../dtos/user-grid-view-dto.dto';\r\nimport { UserGridPreferencesParameters } from '../../entities/user-grid-preferences-parameters.entity';\r\nimport { EnlargedGridDialogComponent } from './enlarged-grid-dialog/enlarged-grid-dialog.component';\r\n\r\n@Component({\r\n    selector: 'atlas-grid-enlargement',\r\n    templateUrl: './grid-enlargement.component.html',\r\n    styleUrls: ['./grid-enlargement.component.scss'],\r\n})\r\nexport class GridEnlargementComponent implements OnInit, OnDestroy {\r\n    @Input() gridOptions: agGrid.GridOptions;\r\n\r\n    /* format :[{\r\n        Text : string,\r\n        Action: string,\r\n        Disabled: boolean\r\n    }]*/\r\n    @Input() additionnalActions = null;\r\n    @Input() hasRangeSelectionOption = false;\r\n    @Input() summableColumns: string[] = [];\r\n    userPreferences: UserGridPreferencesParameters;\r\n    @Input() set userPreferencesParameters(parameters: UserGridPreferencesParameters) {\r\n        this.userPreferences = new UserGridPreferencesParameters(parameters);\r\n    }\r\n\r\n    @Output() readonly dialogClose = new EventEmitter<UserGridViewDto>();\r\n\r\n    @Output() readonly rowSelected = new EventEmitter<any>();\r\n    @Output() readonly rowClicked = new EventEmitter<any>();\r\n    @Output() readonly rowDataChanged = new EventEmitter<any>();\r\n    @Output() readonly cellSelected = new EventEmitter<any>();\r\n    @Output() readonly cellValueChanged = new EventEmitter<any>();\r\n    @Output() readonly additionalActionTriggered = new EventEmitter<any>();\r\n    @Output() readonly columnVisibilityChanged = new EventEmitter<any>();\r\n    @Output() readonly columnRowGroupChanged = new EventEmitter<any>();\r\n\r\n    // -- enrich if needed for future customExports\r\n    @Output() readonly customExcelExport = new EventEmitter<any>();\r\n\r\n    isNavigation = false;\r\n\r\n    private destroy$ = new Subject();\r\n\r\n    dialogRef: MatDialogRef<EnlargedGridDialogComponent, any>;\r\n\r\n    constructor(public dialog: MatDialog,\r\n        protected router: Router) { }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    onOpenDialogButtonClicked() {\r\n        this.dialogRef = this.dialog.open(EnlargedGridDialogComponent, {\r\n            width: '90%',\r\n            height: '90%',\r\n            maxWidth: '99vw',\r\n            maxHeight: '99vh',\r\n            data: {\r\n                gridOptions: this.gridOptions,\r\n                gridPreferencesParameters: this.userPreferences,\r\n                additionalActions: this.additionnalActions,\r\n                hasRangeSelectionOption: this.hasRangeSelectionOption,\r\n                summableColumns: this.summableColumns,\r\n            },\r\n            autoFocus: false,\r\n        });\r\n\r\n        this.router.events.pipe(\r\n            takeUntil(this.destroy$),\r\n        ).subscribe(() => {\r\n            this.isNavigation = true;\r\n            this.dialogRef.close();\r\n        });\r\n\r\n        // -- Ag grid Events\r\n        this.dialogRef.componentInstance.rowClicked().pipe(\r\n            takeUntil(this.destroy$),\r\n        ).subscribe((selectedRow: any) => {\r\n            this.rowClicked.emit(selectedRow);\r\n        });\r\n\r\n        this.dialogRef.componentInstance.rowSelected().pipe(\r\n            takeUntil(this.destroy$),\r\n        ).subscribe((selectedRow: any) => {\r\n            this.rowSelected.emit(selectedRow);\r\n        });\r\n\r\n        this.dialogRef.componentInstance.rowDataChanged().pipe(\r\n            takeUntil(this.destroy$),\r\n        ).subscribe((selectedRow: any) => {\r\n            this.rowDataChanged.emit(selectedRow);\r\n        });\r\n\r\n        this.dialogRef.componentInstance.cellClicked().pipe(\r\n            takeUntil(this.destroy$),\r\n        ).subscribe((selectedCell: any) => {\r\n            this.cellSelected.emit(selectedCell);\r\n        });\r\n\r\n        this.dialogRef.componentInstance.cellValueChanged().pipe(\r\n            takeUntil(this.destroy$),\r\n        ).subscribe((selectedCell: any) => {\r\n            this.cellValueChanged.emit(selectedCell);\r\n        });\r\n\r\n        this.dialogRef.componentInstance.columnRowGroupChanged().pipe(\r\n            takeUntil(this.destroy$),\r\n        ).subscribe((columnRow: any) => {\r\n            this.columnRowGroupChanged.emit(columnRow);\r\n        });\r\n\r\n        this.dialogRef.componentInstance.columnVisibiltyChanged().pipe(\r\n            takeUntil(this.destroy$),\r\n        ).subscribe((column: any) => {\r\n            this.columnVisibilityChanged.emit(column);\r\n        });\r\n        // --\r\n\r\n        this.dialogRef.componentInstance.actionTriggered().pipe(\r\n            takeUntil(this.destroy$),\r\n        ).subscribe((actionTriggered: any) => {\r\n            this.additionalActionTriggered.emit(actionTriggered);\r\n        });\r\n\r\n        this.dialogRef.componentInstance.customExport().pipe(\r\n            takeUntil(this.destroy$),\r\n        ).subscribe((value: [boolean, string]) => {\r\n            switch (value[1]) {\r\n                case '.xlsx':\r\n                    this.customExcelExport.emit(value[0]);\r\n                    break;\r\n                default: console.error('export format not recognized: ' + value[1]);\r\n            }\r\n        });\r\n\r\n        this.dialogRef.beforeClose().pipe(\r\n            takeUntil(this.destroy$),\r\n        ).subscribe(() => {\r\n            if (!this.isNavigation) {\r\n                // get the grid view to send to parent component\r\n                this.dialogClose.emit(this.dialogRef.componentInstance.getCurrentGridView());\r\n\r\n                // make sure the lines are the same - to treat cases\r\n                this.gridOptions.api.setRowData(this.dialogRef.componentInstance.getGridOptions().rowData);\r\n\r\n                // make sure the lines are ticked if checkbox selection is set\r\n                this.dialogRef.componentInstance.getGridOptions().api.getSelectedNodes().forEach((selectedNode) => {\r\n                    const node = this.gridOptions.api.getRowNode(selectedNode.id);\r\n                    node.setSelected(true);\r\n                });\r\n            }\r\n        });\r\n\r\n        this.dialogRef.afterClosed().pipe(\r\n            takeUntil(this.destroy$),\r\n        ).subscribe(() => {\r\n            this.dialogRef = null;\r\n            this.destroy$.next();\r\n        });\r\n    }\r\n\r\n    mapSelectedRowInGridOptions(gridOptions: agGrid.GridOptions) {\r\n        if (this.dialogRef && gridOptions.api) {\r\n            this.dialogRef.componentInstance.getGridOptions().api.getSelectedNodes().forEach((selectedNode) => {\r\n                const node = gridOptions.api.getRowNode(selectedNode.id);\r\n                node.setSelected(true);\r\n            });\r\n        }\r\n    }\r\n\r\n    refreshGrid() {\r\n        if (this.dialogRef) {\r\n            this.dialogRef.componentInstance.refreshGrid();\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.destroy$.next();\r\n    }\r\n}\r\n","module.exports = \"<div>\\r\\n    <mat-card class=\\\"information-card information-banner-card\\\">\\r\\n        <div class=\\\"info-circle-icon\\\">\\r\\n            <mat-icon>info</mat-icon>\\r\\n        </div>\\r\\n        <mat-card-header>\\r\\n            <mat-card-title>\\r\\n                <h4 class=\\\"no-margin\\\">{{title}}</h4>\\r\\n            </mat-card-title>\\r\\n            <mat-card-subtitle>\\r\\n                {{description}}\\r\\n            </mat-card-subtitle>\\r\\n        </mat-card-header>\\r\\n    </mat-card>\\r\\n</div>\\r\\n\"","module.exports = \"mat-card.information-card.mat-card {\\n  padding: 0 !important;\\n  height: 75px;\\n  display: flex;\\n  align-items: center; }\\n  mat-card.information-card.mat-card mat-card-header.mat-card-header mat-card-title.mat-card-title {\\n    margin: 0;\\n    padding: 8px 0; }\\n  mat-card.information-card.mat-card mat-card-header.mat-card-header mat-card-subtitle.mat-card-subtitle {\\n    margin: 0; }\\n\"","import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'atlas-information-banner',\r\n    templateUrl: './information-banner.component.html',\r\n    styleUrls: ['./information-banner.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class InformationBannerComponent implements OnInit {\r\n\r\n    @Input() title: string;\r\n    @Input() description: string;\r\n\r\n    constructor() { }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { AgContextualMenuComponent } from '../../../shared/components/ag-contextual-menu/ag-contextual-menu.component';\r\nimport { ListAndSearchComponent } from '../list-and-search/list-and-search.component';\r\n\r\n@Component({\r\n    selector: 'atlas-profiles-list-contextual-menu',\r\n    templateUrl: '../../../shared/components/ag-contextual-menu/ag-contextual-menu.component.html',\r\n    styleUrls: ['../../../shared/components/ag-contextual-menu/ag-contextual-menu.component.scss'],\r\n})\r\nexport class ListAndSearchContextualMenuComponent extends AgContextualMenuComponent {\r\n\r\n    componentParent: ListAndSearchComponent;\r\n    sectionId: number;\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    agInit(params: any) {\r\n        this.params = params;\r\n        this.menuActions = params.menuActions;\r\n        this.sectionId = params.data.sectionId;\r\n        this.componentParent = this.params.context.componentParent;\r\n    }\r\n}\r\n","module.exports = \"<atlas-filter-set-display (filtersChanged)=onFilterSetDetailsChange($event)\\r\\n                          [searchCode]=\\\"searchCode\\\"\\r\\n                          [columnConfiguration]=\\\"columnConfiguration\\\"\\r\\n                          [ngClass]=\\\"{'hidden-during-loading':!isFilterSetDisplay}\\\"\\r\\n                          [gridCode]=\\\"gridCode\\\"\\r\\n                          [company]=\\\"company\\\">\\r\\n</atlas-filter-set-display>\\r\\n\\r\\n<atlas-empty-state *ngIf=\\\"!loadOnInit\\\"\\r\\n                   [title]=\\\"'No results to display'\\\"\\r\\n                   [message]=\\\"'Please use the search function to display the grid'\\\">\\r\\n</atlas-empty-state>\\r\\n<mat-card class=\\\"charter-total mat-elevation-z1\\\"\\r\\n          *ngIf=\\\"isLimitReached\\\">\\r\\n    <mat-card-content>\\r\\n        <div fxLayout=\\\"row\\\"\\r\\n             fxLayoutGap=\\\"2%\\\"\\r\\n             fxLayoutAlign=\\\"start stretch\\\">\\r\\n            <div fxLayout=\\\"column\\\"\\r\\n                 fxLayoutAlign=\\\"center center\\\"\\r\\n                 fxFlex=\\\"4\\\">\\r\\n                <mat-icon class=\\\"icon-padding title-icon\\\">warning</mat-icon>\\r\\n            </div>\\r\\n            <div fxLayout=\\\"column\\\"\\r\\n                 fxLayoutAlign=\\\"center start\\\"\\r\\n                 fxFlex=\\\"60\\\">\\r\\n                <h2 class=\\\"no-margin warning-title\\\">Maximum criteria limit reached</h2>\\r\\n                <p class=\\\"no-margin\\\">{{limitErrorMessage}}</p>\\r\\n            </div>\\r\\n            <div fxLayout=\\\"row\\\"\\r\\n                 fxLayoutGap=\\\"2%\\\"\\r\\n                 fxLayoutAlign=\\\"end end\\\"\\r\\n                 fxFlex>\\r\\n                <span class=\\\"fill-space\\\"></span>\\r\\n                <button mat-button\\r\\n                        (click)=\\\"onDismissClicked()\\\">Dismiss</button>\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n    </mat-card-content>\\r\\n</mat-card>\\r\\n<mat-card [hidden]=\\\"!loadOnInit\\\"\\r\\n          class=\\\"list-and-search-grid-card\\\">\\r\\n    <div fxLayout=\\\"row\\\"\\r\\n         class=\\\"quick-sum-div-height\\\"\\r\\n         fxLayoutAlign=\\\"space-between center\\\">\\r\\n        <mat-card-title>{{gridTitle}}</mat-card-title>\\r\\n        <div fxLayout=\\\"row\\\"\\r\\n             fxLayoutAlign=\\\"space-around start\\\">\\r\\n            <div *ngIf=\\\"totalSumShow\\\"\\r\\n                 class=\\\"quick-sum\\\">\\r\\n                <mat-chip>\\r\\n                    Amount : {{formatValue(amountSum)}} ||\\r\\n                    {{funcCurrencyTitle}} : {{formatValue(functionalCcySum)}} ||\\r\\n                    {{statCurrencyTitle}} : {{formatValue(statutoryCcySum)}}\\r\\n                </mat-chip>\\r\\n            </div>\\r\\n            <atlas-ag-grid-user-preferences *ngIf=\\\"agGridOptions && agGridOptions.columnDefs && agGridOptions.columnApi\\\"\\r\\n                                            [gridOptions]=\\\"agGridOptions\\\"\\r\\n                                            [company]=\\\"company\\\"\\r\\n                                            [gridId]=\\\"gridCode\\\"\\r\\n                                            [sharingEnabled]=\\\"hasGridSharing\\\"\\r\\n                                            [hasDeleteViewPrivilege]=\\\"hasDeleteViewPrivilege\\\"\\r\\n                                            [isCustomExportEnabled]=\\\"exportAdapter !== undefined && exportAdapter !== null\\\"\\r\\n                                            [isCsvExportEnabled]=\\\"!exportAdapter\\\"\\r\\n                                            (gridViewSelected)=\\\"onGridViewSelected($event)\\\"\\r\\n                                            (exportClicked)=\\\"onExportButtonClicked()\\\"\\r\\n                                            #userPreferences>\\r\\n            </atlas-ag-grid-user-preferences>\\r\\n            <atlas-grid-enlargement *ngIf=\\\"agGridOptions && agGridOptions.columnDefs && agGridOptions.columnApi\\\"\\r\\n                                    [gridOptions]=\\\"agGridOptions\\\"\\r\\n                                    [hasRangeSelectionOption]=\\\"true\\\"\\r\\n                                    [summableColumns]=\\\"allowedColumnsforQuickSum\\\"\\r\\n                                    [userPreferencesParameters]=\\\"gridPreferences\\\"\\r\\n                                    (rowClicked)=\\\"onRowClicked($event)\\\"\\r\\n                                    (dialogClose)=\\\"onGridEnlargementClose($event)\\\">\\r\\n            </atlas-grid-enlargement>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\\"hasQuickSum\\\"\\r\\n         class=\\\"quick-sum-div-height\\\"\\r\\n         fxLayout=\\\"row\\\"\\r\\n         fxLayoutAlign=\\\"space-between center\\\">\\r\\n        <mat-slide-toggle mat-raised-button\\r\\n                          (change)=\\\"toggleQuickSum()\\\">Quick Sum Mode</mat-slide-toggle>\\r\\n        <div fxLayout=\\\"row\\\"\\r\\n             fxLayoutAlign=\\\"space-around center\\\">\\r\\n\\r\\n            <div *ngFor=\\\"let column of selectedColumnsArray\\\">\\r\\n                <span class=\\\"quick-sum-span\\\"\\r\\n                      *ngIf=\\\"quickSumModeActivated\\\">{{column.name}} : {{column.sum | number }} </span>\\r\\n            </div>\\r\\n            <button mat-button\\r\\n                    (click)=\\\"onClearSelectionClicked()\\\"\\r\\n                    class=\\\"mat-button-user-margin\\\"\\r\\n                    *ngIf=\\\"quickSumModeActivated\\\">Clear Selection</button>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div fxLayout=\\\"row\\\"\\r\\n         *ngIf=\\\"toogleText\\\"\\r\\n         fxLayoutAlign=\\\"space-between center\\\"\\r\\n         class=\\\"toggle-field\\\">\\r\\n        <mat-slide-toggle mat-raised-button\\r\\n                          (change)=\\\"toggleChanged()\\\">{{toogleText}}\\r\\n        </mat-slide-toggle>\\r\\n    </div>\\r\\n    <div class=\\\"ag-grid-div-container\\\"\\r\\n         ag-grid=\\\"agGridOptions\\\"\\r\\n         [ngClass]='classApplied'\\r\\n         [hidden]=\\\"isLoading || !loadOnInit\\\">\\r\\n        <ag-grid-angular style=\\\" height: 100%;\\\"\\r\\n                         class=\\\"ag-theme-material\\\"\\r\\n                         [rowData]=\\\"agGridRows\\\"\\r\\n                         [columnDefs]=\\\"agGridCols\\\"\\r\\n                         [enableColResize]=\\\"true\\\"\\r\\n                         [pagination]=\\\"true\\\"\\r\\n                         [paginationPageSize]=\\\"pageSize\\\"\\r\\n                         [enableSorting]=\\\"true\\\"\\r\\n                         [gridOptions]=\\\"agGridOptions\\\"\\r\\n                         (gridReady)=\\\"onGridReady($event)\\\"\\r\\n                         (rowClicked)=\\\"onRowClicked($event)\\\"\\r\\n                         (rowSelected)=\\\"onRowSelected($event)\\\"\\r\\n                         rowSelection=\\\"multiple\\\"\\r\\n                         [enableRangeSelection]=\\\"true\\\"\\r\\n                         [groupMultiAutoColumn]=\\\"groupMultiAutoColumn\\\"\\r\\n                         [rowGroupPanelShow]=\\\"rowGroupPanelShow\\\"\\r\\n                         (rangeSelectionChanged)=\\\"onRangeSelectionChanged($event)\\\"\\r\\n                         (columnVisible)=\\\"onColumnVisibilityChanged($event)\\\"\\r\\n                         enableFilter\\r\\n                         [context]=\\\"gridContext\\\"\\r\\n                         (filterChanged)=\\\"onFilterChanged($event)\\\"\\r\\n                         [rowHeight]=\\\"atlasAgGridParam.rowHeight\\\"\\r\\n                         [headerHeight]=\\\"atlasAgGridParam.headerHeight\\\"\\r\\n                         [excelStyles]=\\\"excelStyles\\\">\\r\\n        </ag-grid-angular>\\r\\n    </div>\\r\\n    <div fxLayout=\\\"row\\\"\\r\\n         fxLayoutAlign=\\\"center center\\\"\\r\\n         fxLayoutWrap\\r\\n         *ngIf=\\\"isLoading && loadOnInit\\\"\\r\\n         class=\\\"loading\\\">\\r\\n        <mat-spinner color=\\\"accent\\\"></mat-spinner>\\r\\n    </div>    \\r\\n</mat-card>\\r\\n<mat-card *ngIf=\\\"gridCode === tradeChildSectionListGridCode\\\">\\r\\n    <div class=\\\"total-box\\\">\\r\\n        <h2 class=\\\"no-margin total-figure\\\">\\r\\n            Total Quantity : <span class=\\\"total-figure-value\\\">{{totalQuantityInSplits |number:'1.3-3'}}\\r\\n            </span>\\r\\n        </h2>\\r\\n        <h2 class=\\\"no-margin total-figure\\\">Total Invoiced Quantity : <span\\r\\n                    class=\\\"total-figure-value\\\">{{totalInvoiceValuesInSplits |number:'1.3-3'}}\\r\\n            </span>\\r\\n        </h2>\\r\\n    </div>\\r\\n</mat-card>\\r\\n\"","module.exports = \".ag-theme-material .ag-header-cell-resize {\\n  z-index: 0 !important; }\\n\\n.quick-sum {\\n  padding: 4px 16px 0 0; }\\n\\n.quick-sum mat-chip {\\n  line-height: 12px !important; }\\n\\n.quick-sum-span {\\n  font: 400 14px/20px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin-right: 4px; }\\n\\nbutton.mat-button-user-margin.mat-button.ng-star-inserted {\\n  margin: 0px !important;\\n  line-height: 0px !important; }\\n\\n.accounting-sum {\\n  margin-top: 7px; }\\n\\n.mat-card {\\n  padding: 16px; }\\n\\n.warning-title {\\n  font-size: 14px; }\\n\\n.icon-padding {\\n  background-color: #ec8d2d;\\n  border-radius: 50%;\\n  padding: 8px;\\n  height: 24px;\\n  width: 24px; }\\n\\n.mat-icon {\\n  color: white; }\\n\\ndiv.toggle-field {\\n  padding-bottom: 10px; }\\n\"","import { Component, EventEmitter, Inject, Input, NgZone, OnInit, Output, ViewChild } from '@angular/core';\r\nimport * as agGrid from 'ag-grid-community';\r\nimport { of } from 'rxjs';\r\nimport { finalize, first } from 'rxjs/operators';\r\nimport { CompanyManagerService } from '../../../../app/core/services/company-manager.service';\r\nimport { SectionReference } from '../../../../app/trading/entities/section-reference';\r\nimport { TradeActionsService } from '../../../../app/trading/services/trade-actions.service';\r\nimport { AgContextualMenuAction } from '../../../shared/entities/ag-contextual-menu-action.entity';\r\nimport { AccountingEntriesSearchResult } from '../../dtos/accountingEntries-search-result';\r\nimport { UserGridViewDto } from '../../dtos/user-grid-view-dto.dto';\r\nimport { AssignedSection } from '../../entities/assigned-section.entity';\r\nimport { AtlasAgGridParam } from '../../entities/atlas-ag-grid-param.entity';\r\nimport { AtlasNumber } from '../../entities/atlas-number.entity';\r\nimport { Company } from '../../entities/company.entity';\r\nimport { ColumnConfigurationProperties } from '../../entities/grid-column-configuration.entity';\r\nimport { DataLoader } from '../../entities/list-and-search/list-and-search-data-loader.entity';\r\nimport { ListAndSearchFilter } from '../../entities/list-and-search/list-and-search-filter.entity';\r\nimport { UserGridPreferencesParameters } from '../../entities/user-grid-preferences-parameters.entity';\r\nimport { WINDOW } from '../../entities/window-injection-token';\r\nimport { InvoiceTypes } from '../../enums/invoice-type.enum';\r\nimport { ListAndSearchFilterType } from '../../enums/list-and-search-filter-type.enum';\r\nimport { AgGridService } from '../../services/ag-grid.service';\r\nimport { ListAndSearchExportBase } from '../../services/list-and-search/export/list-and-search-export-base';\r\nimport { UiService } from '../../services/ui.service';\r\nimport { AgGridHyperlinkForAccountentriesComponent } from '../ag-grid-hyperlink-for-accountentries/ag-grid-hyperlink-for-accountentries.component';\r\nimport { AgGridHyperlinkForTradechildsectionsComponent } from '../ag-grid-hyperlink-for-tradechildsections/ag-grid-hyperlink-for-tradechildsections.component';\r\nimport { AgGridUserPreferencesComponent } from '../ag-grid-user-preferences/ag-grid-user-preferences.component';\r\nimport { FilterSetDisplayComponent } from '../filter-set-display/filter-set-display.component';\r\nimport { GridConfigurationProviderService } from './../../services/grid-configuration-provider.service';\r\nimport { UtilService } from './../../services/util.service';\r\nimport { ListAndSearchContextualMenuComponent } from './list-and-search-contextual-menu.component';\r\n\r\n@Component({\r\n    selector: 'atlas-list-and-search',\r\n    templateUrl: './list-and-search.component.html',\r\n    styleUrls: ['./list-and-search.component.scss'],\r\n})\r\nexport class ListAndSearchComponent implements OnInit {\r\n    @ViewChild('userPreferences') userPreferencesComponent: AgGridUserPreferencesComponent;\r\n    @ViewChild('filterSetDisplayComponent') filterSetDisplayComponent: FilterSetDisplayComponent;\r\n    gridContext: ListAndSearchComponent;\r\n    agGridOptions: agGrid.GridOptions = {};\r\n    agGridCols: agGrid.ColDef[];\r\n    agGridRows: any[] = [];\r\n    agGridApi: agGrid.GridApi;\r\n    agGridColumnApi: agGrid.ColumnApi;\r\n    atlasAgGridParam: AtlasAgGridParam;\r\n    isLoading = false;\r\n    loadDataNeverCalled = true;\r\n    columnConfiguration: ColumnConfigurationProperties[] = [];\r\n    quickSumModeActivated = false;\r\n    additionalBooleanParam: boolean;\r\n    allowedColumnsforQuickSum: string[];\r\n    checkFunctionalCurrency: string;\r\n    checkStatutoryCurrency: string;\r\n    selectedColumnsArray: Array<{ 'name': string, 'sum': number }> = new Array();\r\n    filters: ListAndSearchFilter[];\r\n    excelStyles: any;\r\n    hyperLinkClicked = false;\r\n    rowGroupPanelShow: string = 'never';\r\n    groupMultiAutoColumn: boolean = false;\r\n    totalQuantityInSplits: number = 0;\r\n    totalInvoiceValuesInSplits: number = 0;\r\n\r\n    @Input() pageSize: number = 100;\r\n    @Input() isFilterSetDisplay: boolean = true;\r\n    @Input() dataLoader: DataLoader;\r\n    @Input() gridCode: string;\r\n    @Input() gridTitle: string;\r\n    @Input() company: string;\r\n    @Input() dataVersionId: number = null;\r\n    @Input() gridContextualMenuActions: AgContextualMenuAction[];\r\n    @Input() additionalFilters: ListAndSearchFilter[];\r\n    @Input() waitBeforeLoadingData = false;\r\n    @Input() loadOnInit = true;\r\n    @Input() hasDeleteViewPrivilege = true;\r\n    @Input() searchCode: string;\r\n    @Input() hasQuickSum: boolean = true;\r\n    @Input() exportAdapter: ListAndSearchExportBase;\r\n    @Input() limitErrorMessage: string = ''; // Not applied yet\r\n    @Input() changesOnColumn: ((column: agGrid.ColDef) => agGrid.ColDef);\r\n    @Input() dateGetterOverride: ((columnDef: agGrid.ColDef, gridType: string) => any);\r\n    @Input() hasGrouping = false;\r\n    @Input() toogleText: string;\r\n    hasGridSharing = false;\r\n\r\n    @Output() readonly menuActionClicked = new EventEmitter();\r\n    @Output() readonly rowClicked = new EventEmitter();\r\n    @Output() readonly quickNavigate = new EventEmitter();\r\n    @Output() readonly configurationLoaded = new EventEmitter();\r\n    @Output() readonly linkClicked = new EventEmitter();\r\n    @Output() readonly rowSelected = new EventEmitter();\r\n    @Output() readonly loadDataStarted = new EventEmitter();\r\n    @Output() readonly dataLoaded = new EventEmitter();\r\n\r\n    accountingEntriesGridCode: string = 'accountingEntriesGrid';\r\n    tradeChildSectionListGridCode: string = 'tradeChildSectionListGrid';\r\n    counterPartiesListGridCode: string = 'referentialCounterPartiesGrid';\r\n    counterPartiesBulkEditGridCode: string = 'bulkEditGrid';\r\n    invoiceGridCode: string = 'invoiceList';\r\n    tradeListGridCode: string = 'tradeList';\r\n    tradeReportListGridCode: string = 'tradeReportList';\r\n    charterSectionToAssignGridCode: string = 'charterSectionToAssign';\r\n    tradeForTradeAllocationGridCode: string = 'tradeForTradeAllocationList';\r\n    companyConfiguration: Company;\r\n    defaultClass: string = 'ag-theme-material pointer-cursor';\r\n    cellSelectionClass: string = 'ag-theme-material pointer-cursor cell-selection';\r\n    classApplied: string;\r\n    statCurrencyTitle: string;\r\n    funcCurrencyTitle: string;\r\n    amountSum = 0;\r\n    statutoryCcySum = 0;\r\n    functionalCcySum = 0;\r\n    totalSumShow: boolean = false;\r\n    gridPreferences: UserGridPreferencesParameters;\r\n    isLimitReached: boolean = false;\r\n    maxNumberOfRecords: number;\r\n\r\n    constructor(private uiService: UiService,\r\n        private gridConfigurationProvider: GridConfigurationProviderService,\r\n        private utilService: UtilService,\r\n        protected companyManager: CompanyManagerService,\r\n        private agGridService: AgGridService,\r\n        protected tradeActionsService: TradeActionsService,\r\n        protected ngZone: NgZone,\r\n        @Inject(WINDOW) private window: Window,\r\n    ) {\r\n        this.isLoading = true;\r\n\r\n        this.excelStyles = [\r\n            {\r\n                id: 'dateFormat',\r\n                dataType: 'dateTime',\r\n                numberFormat: {\r\n                    format: 'dd/mm/yyyy',\r\n                },\r\n            },\r\n            {\r\n                id: 'monthFormat',\r\n                dataType: 'text',\r\n                numberFormat: {\r\n                    format: 'MMM yyyy',\r\n                },\r\n            },\r\n            {\r\n                id: 'timeFormat',\r\n                dataType: 'text',\r\n                numberFormat: {\r\n                    format: 'HH:MM:SS',\r\n                },\r\n            },\r\n        ];\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.atlasAgGridParam = this.agGridService.getAgGridParam();\r\n\r\n        this.companyConfiguration = this.companyManager.getCompany(this.company);\r\n        this.checkFunctionalCurrency = this.companyConfiguration.functionalCurrencyCode;\r\n        this.checkStatutoryCurrency = this.companyConfiguration.statutoryCurrencyCode;\r\n        this.classApplied = this.defaultClass;\r\n        this.gridContext = this;\r\n\r\n        this.loadGridConfiguration();\r\n        if (this.gridCode === this.counterPartiesBulkEditGridCode) {\r\n            // USE this.hasGrouping TO DO THIS\r\n            this.rowGroupPanelShow = 'always';\r\n            this.groupMultiAutoColumn = true;\r\n        }\r\n    }\r\n\r\n    loadData(emitResult = false) {\r\n        if (this.waitBeforeLoadingData || !this.filters || (!this.loadOnInit && this.loadDataNeverCalled)) {\r\n            this.loadDataNeverCalled = false;\r\n            return;\r\n        }\r\n        this.loadOnInit = true;\r\n        this.loadDataStarted.emit();\r\n\r\n        let filters = this.filters ? this.filters.map((x) => ({ ...x })) : [];\r\n        this.isLoading = true;\r\n        if (this.additionalFilters) {\r\n            filters = filters.concat(this.additionalFilters);\r\n        }\r\n\r\n        // SHOULD BE REMOVED ! SPECIFIC TO ONE GRID => please use additionalFilters intead\r\n        if (this.gridCode === this.tradeReportListGridCode && this.searchCode) {\r\n            let counterpartyCode: string;\r\n            counterpartyCode = filters[0].predicate.value1;\r\n\r\n            if (counterpartyCode && counterpartyCode === this.searchCode) {\r\n                filters[0].predicate = {\r\n                    filterType: ListAndSearchFilterType.Text,\r\n                    operator: 'eq',\r\n                    value1: this.searchCode + '%',\r\n                };\r\n            }\r\n        }\r\n\r\n        this.isLimitReached = false;\r\n        this.limitErrorMessage = '';\r\n        let getDataObservable = this.dataLoader.getData(filters, this.dataVersionId);\r\n        if (this.additionalBooleanParam) {\r\n            getDataObservable = this.dataLoader.getData(filters, this.dataVersionId, null, null, this.additionalBooleanParam);\r\n        }\r\n        getDataObservable\r\n            .pipe(\r\n                first(),\r\n                finalize(() => {\r\n                    this.isLoading = false;\r\n                }),\r\n            )\r\n            .subscribe((result) => {\r\n                const data = result.value ? result.value : result;\r\n                if (emitResult && data.length === 1) {\r\n                    this.quickNavigate.emit(data[0]);\r\n                }\r\n                if (emitResult && data.length > 1){\r\n                    this.dataLoaded.emit(data);\r\n                }\r\n                if (this.maxNumberOfRecords && this.maxNumberOfRecords !== 0) {\r\n                    if (result.count && result.count > this.maxNumberOfRecords) {\r\n                        this.isLimitReached = true;\r\n                        // DON'T ADD MESSAGES SPECIFIC TO ONE PAGE\r\n                        this.limitErrorMessage = 'Showing only the ' + this.maxNumberOfRecords\r\n                            + ' latest created contracts. Refine your filtering to get more accurate result.';\r\n                    }\r\n                }\r\n                this.agGridRows = data;\r\n\r\n                // SHOULD BE REMOVED ! SPECIFIC TO ONE GRID\r\n                if (this.agGridRows && this.gridCode === this.tradeChildSectionListGridCode) {\r\n                    this.agGridRows.forEach((row) => {\r\n                        this.totalQuantityInSplits += Number(row.quantity);\r\n                        this.totalInvoiceValuesInSplits += (row.quantityInvoiced) ? Number(row.quantityInvoiced) : 0;\r\n                    });\r\n                }\r\n\r\n                // SHOULD BE REMOVED ! SPECIFIC TO ONE GRID\r\n                if (this.gridCode === this.accountingEntriesGridCode) {\r\n                    this.sumOfAccountingEntriesGridLine(false);\r\n                }\r\n\r\n                setTimeout(\r\n                    () => {\r\n                        if (this.agGridColumnApi && this.userPreferencesComponent) {\r\n                            if (this.userPreferencesComponent.gridViewCtrl\r\n                                && !this.userPreferencesComponent.gridViewCtrl.value.isFavorite) {\r\n                                this.agGridService.sizeColumns(this.agGridOptions);\r\n                            }\r\n                        }\r\n                    },\r\n                    1000);\r\n            });\r\n    }\r\n\r\n    loadGridConfiguration() {\r\n        this.gridConfigurationProvider.getConfiguration(this.company, this.gridCode)\r\n            .subscribe((configuration) => {\r\n                this.columnConfiguration = configuration.columns;\r\n                this.pageSize = (configuration.numberOfItemsPerPage) ? configuration.numberOfItemsPerPage : 10;\r\n                this.maxNumberOfRecords = configuration.maxNumberOfRecords;\r\n                this.configurationLoaded.emit();\r\n                this.initColumns(this.columnConfiguration);\r\n                this.hasGridSharing = configuration.hasMultipleViewsPerUser;\r\n\r\n                if (this.hasGrouping) {\r\n                    this.rowGroupPanelShow = 'always';\r\n                    this.groupMultiAutoColumn = true;\r\n                }\r\n\r\n                // issue with this implementation is that it doesn't take into consideration the updates of the inputs.\r\n                this.gridPreferences = {\r\n                    canDeleteView: this.hasDeleteViewPrivilege,\r\n                    company: this.company,\r\n                    gridId: this.gridCode,\r\n                    gridOptions: this.agGridOptions,\r\n                    sharingEnabled: this.hasGridSharing,\r\n                };\r\n            });\r\n    }\r\n\r\n    initColumns(configuration: ColumnConfigurationProperties[]) {\r\n        const numericColumns: string[] = [];\r\n\r\n        configuration.forEach((column) => {\r\n            if (column.gridType === 'numeric') {\r\n                numericColumns.push(this.utilService.convertToCamelCase(column.fieldName));\r\n            }\r\n        });\r\n        this.allowedColumnsforQuickSum = numericColumns;\r\n        this.agGridCols = configuration.map((config) => {\r\n            let columnDef: agGrid.ColDef = {\r\n                colId: this.utilService.convertToCamelCase(config.fieldName),\r\n                headerName: config.friendlyName,\r\n                field: this.utilService.convertToCamelCase(config.fieldName),\r\n                hide: !config.isVisible,\r\n                rowGroup: config.isGroup,\r\n                enableRowGroup: config.isGroup,\r\n                pinned: '',\r\n            };\r\n\r\n            if (this.changesOnColumn) {\r\n                columnDef = this.changesOnColumn(columnDef);\r\n            }\r\n            // SHOULD BE REMOVED ! SPECIFIC TO ONE GRID\r\n            if (this.gridCode === this.counterPartiesListGridCode) {\r\n                columnDef.rowGroup = null;\r\n            }\r\n            if (this.gridCode === this.tradeChildSectionListGridCode && config.fieldName.toLowerCase() === 'contractlabel') {\r\n                columnDef.pinned = 'left';\r\n            }\r\n\r\n            const formatter = this.uiService.getFormatterForType(config.gridType);\r\n            if (formatter) {\r\n                columnDef.valueFormatter = formatter;\r\n            }\r\n            let dateGetter;\r\n            // SHOULD BE REMOVED ! SPECIFIC TO ONE GRID\r\n            if (this.gridCode === this.tradeListGridCode && columnDef.headerName === 'Created Date Time') {\r\n                dateGetter = this.uiService.getterForCreatedDateType(config.gridType);\r\n            } else {\r\n                dateGetter = this.uiService.getterForDateType(config.gridType);\r\n            }\r\n            if (this.dateGetterOverride) {\r\n                dateGetter = this.dateGetterOverride(columnDef, config.gridType);\r\n            }\r\n            if (dateGetter) {\r\n                switch (config.gridType) {\r\n                    case 'month':\r\n                        columnDef.cellClass = 'monthFormat';\r\n                        break;\r\n                    case 'time':\r\n                        columnDef.cellClass = 'timeFormat';\r\n                        break;\r\n                    default:\r\n                        columnDef.cellClass = 'dateFormat';\r\n                        break;\r\n                }\r\n                columnDef.valueGetter = dateGetter;\r\n            }\r\n\r\n            // SHOULD BE REMOVED ! SPECIFIC TO ONE GRID\r\n            if (this.gridCode === this.tradeChildSectionListGridCode) {\r\n                if (columnDef.headerName === 'Reference' || columnDef.headerName === 'Allocation') {\r\n                    columnDef.cellRendererFramework = AgGridHyperlinkForTradechildsectionsComponent;\r\n                    columnDef.cellRendererParams = {\r\n                        gridId: this.tradeChildSectionListGridCode,\r\n                        columnId: columnDef.colId,\r\n                        context: {\r\n                            componentParent: this,\r\n                        },\r\n                    };\r\n                }\r\n            }\r\n\r\n            // SHOULD BE REMOVED ! SPECIFIC TO ONE GRID\r\n            if (this.gridCode === this.accountingEntriesGridCode) {\r\n                if (columnDef.headerName === 'Functional Ccy Eq.') {\r\n                    columnDef.headerName = this.checkFunctionalCurrency + ' eq';\r\n                    this.funcCurrencyTitle = this.checkFunctionalCurrency + ' eq';\r\n                }\r\n                if (columnDef.headerName === 'Statutory Ccy Eq.') {\r\n                    columnDef.headerName = this.checkStatutoryCurrency + ' eq';\r\n                    this.statCurrencyTitle = this.checkStatutoryCurrency + ' eq';\r\n                }\r\n\r\n                if (columnDef.headerName === 'Contract No') {\r\n                    columnDef.cellRendererFramework = AgGridHyperlinkForAccountentriesComponent;\r\n                    columnDef.cellRendererParams = {\r\n                        gridId: this.accountingEntriesGridCode,\r\n                        columnId: columnDef.colId,\r\n                        context: {\r\n                            componentParent: this,\r\n                        },\r\n                    };\r\n                }\r\n                if (columnDef.headerName === 'Doc. Ref.') {\r\n                    columnDef.cellRendererFramework = AgGridHyperlinkForAccountentriesComponent;\r\n                    columnDef.cellRendererParams = {\r\n                        gridId: this.accountingEntriesGridCode,\r\n                        columnId: columnDef.colId,\r\n                        context: {\r\n                            componentParent: this,\r\n                        },\r\n                    };\r\n                }\r\n                const numericColumn = numericColumns.find((column) => column === columnDef.field.toLowerCase());\r\n                if (numericColumn) {\r\n                    columnDef.type = 'numericColumn';\r\n                    columnDef.valueFormatter = this.numberFormatter;\r\n                }\r\n\r\n            }\r\n\r\n            if (this.gridCode === this.invoiceGridCode || this.gridCode === this.tradeReportListGridCode || this.tradeListGridCode) {\r\n                const numericColumn = numericColumns.find((column) => column === columnDef.field.toLowerCase());\r\n                if (numericColumn) {\r\n                    columnDef.type = 'numericColumn';\r\n                    columnDef.valueFormatter = this.numberFormatter;\r\n                }\r\n            }\r\n\r\n            return columnDef;\r\n        });\r\n\r\n        if (this.agGridOptions) {\r\n            this.addMenuAction();\r\n            this.agGridOptions.columnDefs = this.agGridCols;\r\n            if (this.agGridOptions.api) {\r\n                this.agGridOptions.api.setColumnDefs(this.agGridCols);\r\n            }\r\n        }\r\n    }\r\n\r\n    addMenuAction() {\r\n        if (this.agGridCols) {\r\n            if (this.agGridCols.length > 0 && this.gridContextualMenuActions) {\r\n                this.agGridCols.push(\r\n                    {\r\n                        headerName: '',\r\n                        colId: 'additionalActions',\r\n                        cellRendererFramework: ListAndSearchContextualMenuComponent,\r\n                        cellRendererParams: {\r\n                            context: {\r\n                                componentParent: this,\r\n                            },\r\n                            menuActions: this.gridContextualMenuActions,\r\n                        },\r\n                        maxWidth: 80,\r\n                    },\r\n                );\r\n            }\r\n\r\n            // SHOULD BE REMOVED ! SPECIFIC TO ONE GRID\r\n            if (this.agGridCols.length > 0 && (this.gridCode === this.charterSectionToAssignGridCode ||\r\n                this.gridCode === this.tradeForTradeAllocationGridCode)) {\r\n                this.agGridCols.push(\r\n                    {\r\n                        headerName: '',\r\n                        colId: 'selection',\r\n                        headerCheckboxSelection: true,\r\n                        checkboxSelection: true,\r\n                        minWidth: 40,\r\n                        maxWidth: 40,\r\n                        pinned: 'left',\r\n                    },\r\n                );\r\n            }\r\n            if (this.agGridOptions) {\r\n                this.agGridOptions.columnDefs = this.agGridCols;\r\n                if (this.agGridOptions.api) {\r\n                    this.agGridOptions.api.setColumnDefs(this.agGridCols);\r\n                    this.agGridService.sizeColumns(this.agGridOptions);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    checkAndUnCheckSelectContracts(contractLabel: string, isChecked: boolean) {\r\n        this.agGridApi.forEachNode((node) => {\r\n            if (node.data.contractLabel === contractLabel) {\r\n                if (node.isSelected() && !isChecked) {\r\n                    node.setSelected(isChecked);\r\n                } else if (!node.isSelected() && isChecked) {\r\n                    node.setSelected(isChecked);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    unCheckSelectContracts(contractLabel: string, isChecked: boolean) {\r\n        this.agGridApi.forEachNode((node) => {\r\n            if (node.data.physicalContractCode !== contractLabel) {\r\n                if (node.isSelected() && !isChecked) {\r\n                    node.setSelected(isChecked);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    handleAction(action: string, rowData) {\r\n        this.menuActionClicked.emit({ action, rowData });\r\n        event.preventDefault();\r\n    }\r\n\r\n    onGridReady(params) {\r\n        this.agGridOptions.columnDefs = this.agGridCols;\r\n        this.agGridApi = this.agGridOptions.api;\r\n        this.agGridColumnApi = this.agGridOptions.columnApi;\r\n    }\r\n\r\n    onFilterSetDetailsChange(filters: ListAndSearchFilter[]) {\r\n        this.filters = filters;\r\n        this.loadData();\r\n    }\r\n\r\n    onRowClicked(row) {\r\n        if (!this.quickSumModeActivated && !this.hyperLinkClicked) {\r\n            this.rowClicked.emit(row);\r\n        }\r\n        this.hyperLinkClicked = false;\r\n    }\r\n\r\n    onRowSelected(row) {\r\n        this.rowSelected.emit(row);\r\n    }\r\n\r\n    onColumnVisibilityChanged(col) {\r\n        this.userPreferencesComponent.onChangeColumnVisibility(col);\r\n    }\r\n\r\n    toggleQuickSum() {\r\n        this.onClearSelectionClicked();\r\n        this.quickSumModeActivated = !this.quickSumModeActivated;\r\n        this.classApplied = this.quickSumModeActivated ? this.cellSelectionClass : this.defaultClass;\r\n        this.selectedColumnsArray = [];\r\n    }\r\n\r\n    onClearSelectionClicked() {\r\n        this.agGridApi.clearRangeSelection();\r\n        this.selectedColumnsArray = [];\r\n    }\r\n\r\n    // SHOULD BE REMOVED ! SPECIFIC TO ONE GRID\r\n    onFilterChanged(event) {\r\n        if (this.gridCode === this.accountingEntriesGridCode) {\r\n            this.sumOfAccountingEntriesGridLine(true);\r\n        }\r\n    }\r\n\r\n    // SHOULD BE REMOVED ! SPECIFIC TO ONE GRID\r\n    sumOfAccountingEntriesGridLine(filterApplied: boolean) {\r\n        this.totalSumShow = true;\r\n        this.amountSum = 0;\r\n        this.statutoryCcySum = 0;\r\n        this.functionalCcySum = 0;\r\n        if (filterApplied) {\r\n            this.agGridApi.forEachNodeAfterFilter((node) => {\r\n                // select the node\r\n                this.amountSum += node.data.amount;\r\n                this.statutoryCcySum += Number(node.data.statutoryCurrency);\r\n                this.functionalCcySum += Number(node.data.functionalCurrency);\r\n            });\r\n\r\n        } else {\r\n            this.agGridRows.forEach((rowdata) => {\r\n                if (rowdata) {\r\n                    this.amountSum += rowdata.amount;\r\n                    this.statutoryCcySum += Number(rowdata.statutoryCurrency);\r\n                    this.functionalCcySum += Number(rowdata.functionalCurrency);\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    rangeSelectionCalculation(event) {\r\n        this.selectedColumnsArray = [];\r\n        const rangeSelections = this.agGridApi.getRangeSelections();\r\n        if (!rangeSelections || rangeSelections.length === 0) {\r\n            return;\r\n        }\r\n        const firstRange = rangeSelections[0];\r\n        const startRow = Math.min(firstRange.start.rowIndex, firstRange.end.rowIndex);\r\n        const endRow = Math.max(firstRange.start.rowIndex, firstRange.end.rowIndex);\r\n        const api = this.agGridApi;\r\n        let sum = 0;\r\n        let columnName: string;\r\n        let columnHeader: string;\r\n        const selectedColumnsArray = this.selectedColumnsArray;\r\n        const allowedColumnsforQuickSum = this.allowedColumnsforQuickSum;\r\n        firstRange.columns.forEach((column) => {\r\n            sum = 0;\r\n            columnName = column.getColDef().colId;\r\n            columnHeader = column.getColDef().headerName;\r\n            if (allowedColumnsforQuickSum.includes(columnName)) {\r\n                for (let rowIndex = startRow; rowIndex <= endRow; rowIndex++) {\r\n                    const rowModel = api.getModel();\r\n                    const rowNode = rowModel.getRow(rowIndex);\r\n                    const value = api.getValue(column, rowNode);\r\n                    sum += Number(value);\r\n                }\r\n\r\n                selectedColumnsArray.push({ name: columnHeader, sum });\r\n            }\r\n        });\r\n        this.selectedColumnsArray = selectedColumnsArray;\r\n    }\r\n\r\n    // SHOULD BE REMOVED ! SPECIFIC TO ONE GRID\r\n    hyperlinkClickedforAccounting(accountingEntriesResult: AccountingEntriesSearchResult, columnId: string) {\r\n        let link: string;\r\n        if (columnId === 'documentReference') {\r\n            if (accountingEntriesResult.invoiceId) {\r\n                let invoiceOption = accountingEntriesResult.invoiceId.toString();\r\n                const invoiceType = accountingEntriesResult.invoiceTypeId;\r\n                const originalInvoiceType = accountingEntriesResult.originalInvoiceTypeId;\r\n                const originalInvoiceId = accountingEntriesResult.originalInvoiceId;\r\n                if (originalInvoiceType && originalInvoiceId) {\r\n                    if (invoiceType === InvoiceTypes.Reversal) {\r\n                        invoiceOption = originalInvoiceId.toString();\r\n                    }\r\n                }\r\n                link = '/' + this.companyManager.getCurrentCompanyId() +\r\n                    '/execution/invoicing/summary/' + encodeURIComponent(invoiceOption) + '?invoiceType='\r\n                    + invoiceType + '&' + 'originalInvoiceType=' + originalInvoiceType;\r\n                window.open(link, '_blank');\r\n\r\n            }\r\n            if (accountingEntriesResult.cashId) {\r\n                const costDirectionId = accountingEntriesResult.costDirectionId;\r\n                const cashId = accountingEntriesResult.cashId;\r\n                link = '/' + this.companyManager.getCurrentCompanyId() + '/execution/cash/display/'\r\n                    + costDirectionId + '/' + cashId;\r\n                window.open(link, '_blank');\r\n            }\r\n\r\n            if (accountingEntriesResult.documentType === 'JournalEntry' || accountingEntriesResult.documentType === 'ManualAccrual') {\r\n                const accountingId = accountingEntriesResult.accountingDocumentId;\r\n                link = '/' + this.companyManager.getCurrentCompanyId() + '/financial/accounting/entry/view/' + accountingId;\r\n                window.open(link, '_blank');\r\n            }\r\n            if (accountingEntriesResult.documentType === 'Reversal') {\r\n                const transactionDocumentId = accountingEntriesResult.transactionDocumentId;\r\n                const documentReference = accountingEntriesResult.documentReference;\r\n                const originalReference = accountingEntriesResult.originalReferenceId;\r\n                link = '/' + this.companyManager.getCurrentCompanyId() +\r\n                    '/financial/reverse/document/summary/' + encodeURIComponent(transactionDocumentId.toString())\r\n                    + '?documentReference=' + documentReference + '&' + 'originalReference=' + originalReference;\r\n                window.open(link, '_blank');\r\n            }\r\n        }\r\n        if (columnId === 'contractSectionCode') {\r\n            link = '/' + this.companyManager.getCurrentCompanyId() + '/trades/display/' + accountingEntriesResult.sectionId;\r\n            window.open(link, '_blank');\r\n        }\r\n    }\r\n\r\n    // SHOULD BE REMOVED ! SPECIFIC TO ONE GRID\r\n    hyperlinkClickedforTradeChildSections(rowSelected: AssignedSection, columnId: string) {\r\n        const sectionId = columnId === 'contractLabel' ?\r\n            rowSelected.sectionId : rowSelected.allocatedSectionId;\r\n        this.ngZone.run(() => {\r\n            if (this.dataVersionId) {\r\n                this.tradeActionsService.displaySectionInSnapshotSubject.next(\r\n                    new SectionReference(sectionId, this.dataVersionId));\r\n            } else {\r\n                this.tradeActionsService.displaySectionSubject.next(sectionId);\r\n            }\r\n            return of(true).toPromise();\r\n        }).then();\r\n    }\r\n\r\n    hyperlinkClicked(rowSelected: any, event) {\r\n        this.hyperLinkClicked = true;\r\n        this.linkClicked.emit(rowSelected);\r\n        event.preventDefault();\r\n    }\r\n\r\n    formatValue(amount: number): string {\r\n        if (isNaN(amount) || amount === null) { return ''; }\r\n        return new Intl.NumberFormat('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 }).format(amount);\r\n    }\r\n\r\n    numberFormatter(params) {\r\n        if (params && params.value && !isNaN(params.value)) {\r\n            // SHOULD BE REMOVED ! SPECIFIC TO ONE GRID\r\n            if (params.colDef.colId.toLowerCase() === 'weight' || params.colDef.colId.toLowerCase() === 'amount' ||\r\n                params.colDef.colId.toLowerCase() === 'functionalcurrency' || params.colDef.colId.toLowerCase() === 'statutorycurrency' ||\r\n                params.colDef.colId.toLowerCase() === 'totalinvoicevalue' || params.colDef.colId.toLowerCase() === 'quantity' ||\r\n                params.colDef.colId.toLowerCase() === 'price' || params.colDef.colId.toLowerCase() === 'contractvalue' ||\r\n                params.colDef.colId.toLowerCase() === 'contractquantity' || params.colDef.colId.toLowerCase() === 'invoicevalue' ||\r\n                params.colDef.colId.toLowerCase() === 'originalquantity' || params.colDef.colId.toLowerCase() === 'quantityinvoiced' ||\r\n                params.colDef.colId.toLowerCase() === 'invoicedvalue' || params.colDef.colId.toLowerCase() === 'invoicepercent' ||\r\n                params.colDef.colId.toLowerCase() === 'invoicedquantity' || params.colDef.colId.toLowerCase() === 'premiumdiscountvalue'\r\n                || params.colDef.colId.toLowerCase() === 'percentageinvoiced') {\r\n                if (params.colDef.colId.toLowerCase() === 'weight' || params.colDef.colId.toLowerCase() === 'quantity' ||\r\n                    params.colDef.colId.toLowerCase() === 'quantityinvoiced' || params.colDef.colId.toLowerCase() === 'originalquantity' ||\r\n                    params.colDef.colId.toLowerCase() === 'contractquantity' || params.colDef.colId.toLowerCase() === 'invoicedquantity') {\r\n                    return new Intl.NumberFormat('en-US', { minimumFractionDigits: 3, maximumFractionDigits: 3 }).format(params.value);\r\n                } else {\r\n                    if (params.colDef.colId.toLowerCase() === 'price') {\r\n                        return new Intl.NumberFormat('en-US', { minimumFractionDigits: 4, maximumFractionDigits: 4 }).format(params.value);\r\n                    } else {\r\n                        return new Intl.NumberFormat('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 }).format(params.value);\r\n                    }\r\n                }\r\n            }\r\n            if (params.colDef.colId.toLowerCase() === 'contractquantity') {\r\n                const newValue = new AtlasNumber(params.value.toString());\r\n                return newValue.toString();\r\n            }\r\n        }\r\n    }\r\n\r\n    onRangeSelectionChanged(event) {\r\n        this.selectedColumnsArray = [];\r\n        const cellInfos: any = [];\r\n\r\n        const rangeSelections = this.agGridApi.getRangeSelections();\r\n        if (!rangeSelections || rangeSelections.length === 0) {\r\n            return;\r\n        }\r\n        if (rangeSelections && rangeSelections.length === 1) {\r\n            this.rangeSelectionCalculation(event);\r\n        } else {\r\n            const selectedCells: any = [];\r\n            rangeSelections.forEach((row) => {\r\n                const cellExists = selectedCells.find((cell) => cell.start.rowIndex === row.start.rowIndex &&\r\n                    cell.end.rowIndex === row.end.rowIndex && cell.columns[0].getColId() === row.columns[0].getColId());\r\n                if (cellExists === null || cellExists === undefined) {\r\n                    selectedCells.push(row);\r\n\r\n                    const obj = { rowIndex: row.start.rowIndex, columnName: row.columns[0].getColId() };\r\n                    cellInfos.push(obj);\r\n                }\r\n            });\r\n\r\n            const api = this.agGridApi;\r\n            let sum = 0;\r\n            let columnName: string;\r\n            let columnHeader: string;\r\n            const selectedColumnsArray = this.selectedColumnsArray;\r\n            const allowedColumnsforQuickSum = this.allowedColumnsforQuickSum;\r\n\r\n            selectedCells.forEach((row) => {\r\n                row.columns.forEach((column) => {\r\n                    sum = 0;\r\n                    columnName = column.getColDef().colId.toLowerCase();\r\n                    columnHeader = column.getColDef().headerName;\r\n                    if (allowedColumnsforQuickSum.includes(columnName)) {\r\n                        for (let rowIndex = 0; rowIndex < cellInfos.length; rowIndex++) {\r\n                            if (cellInfos[rowIndex].columnName.toLowerCase() === columnName) {\r\n                                const rowModel = api.getModel();\r\n                                const rowNode = rowModel.getRow(Number(cellInfos[rowIndex].rowIndex));\r\n                                const value = api.getValue(column, rowNode);\r\n                                sum += Number(value);\r\n                            }\r\n                        }\r\n\r\n                        const columnObj = selectedColumnsArray.find((selectedColumn) => selectedColumn.name === columnHeader);\r\n                        if (columnObj) {\r\n                            columnObj.sum = sum;\r\n                        } else {\r\n                            selectedColumnsArray.push({ name: columnHeader, sum });\r\n                        }\r\n                    }\r\n                });\r\n            });\r\n            this.selectedColumnsArray = selectedColumnsArray;\r\n        }\r\n    }\r\n\r\n    toggleChanged() {\r\n        this.additionalBooleanParam = !(this.additionalBooleanParam || false);\r\n        this.loadData(true);\r\n    }\r\n\r\n    onDismissClicked() {\r\n        this.isLimitReached = false;\r\n    }\r\n\r\n    onGridViewSelected(gridViewId: number) {\r\n        this.gridPreferences.selectedGridViewId = gridViewId;\r\n        // this is to trigger the input setter in the enlarged grid child\r\n        this.gridPreferences = new UserGridPreferencesParameters(this.gridPreferences);\r\n    }\r\n\r\n    onGridEnlargementClose(lastUsedGridView: UserGridViewDto) {\r\n        if (lastUsedGridView && lastUsedGridView.gridViewId) {\r\n            this.userPreferencesComponent.loadGridView(lastUsedGridView.gridViewId, false);\r\n        }\r\n    }\r\n\r\n    export(): void {\r\n        if (this.exportAdapter) {\r\n            this.exportAdapter.export(this.gridCode, this.filters, this.dataVersionId, this.gridPreferences.selectedGridViewId);\r\n        }\r\n    }\r\n\r\n    onExportButtonClicked() {\r\n        this.export();\r\n    }\r\n}\r\n","module.exports = \"\\r\\n\"","module.exports = \"\"","import { Component, EventEmitter, HostListener, Input, OnDestroy, OnInit, Output } from '@angular/core';\r\nimport { MatDialog } from '@angular/material';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { interval, Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { CompanyManagerService } from '../../../core/services/company-manager.service';\r\nimport { ConfirmationDialogComponent } from '../../../shared/components/confirmation-dialog/confirmation-dialog.component';\r\nimport { LockResourceInformation } from '../../entities/lock-resource-information.entity';\r\nimport { LockService } from './../../services/http-services/lock.service';\r\n\r\n@Component({\r\n    selector: 'atlas-lock-interval',\r\n    templateUrl: './lock-interval.component.html',\r\n    styleUrls: ['./lock-interval.component.scss'],\r\n})\r\n\r\nexport class LockIntervalComponent implements OnInit, OnDestroy {\r\n    @Input() resourceId: number = null;\r\n    @Input() resourceType: string = null;\r\n    @Input() isEdit: boolean = false;\r\n    @Input() resourceCode: string = null;\r\n    @Input() resourcesInformation: LockResourceInformation[] = null;\r\n    @Output() readonly lockLost = new EventEmitter<boolean>();\r\n\r\n    companyId: string = null;\r\n    destroy$ = new Subject();\r\n\r\n    constructor(private route: ActivatedRoute,\r\n        private lockService: LockService,\r\n        private dialog: MatDialog,\r\n        protected router: Router,\r\n        protected companyManager: CompanyManagerService) { }\r\n\r\n    ngOnInit() {\r\n\r\n        this.companyId = this.route.snapshot.paramMap.get('company');\r\n        const source = interval(15 * 1000);\r\n\r\n        source.pipe(takeUntil(this.destroy$)).subscribe(() => {\r\n            if (this.resourcesInformation !== null && this.resourcesInformation.length > 0) {\r\n                this.lockService.refreshLockOwnership(this.resourcesInformation.filter((rsc) => rsc.needRefresh === true))\r\n                    .pipe(\r\n                        takeUntil(this.destroy$),\r\n                    )\r\n                    .subscribe((result) => {\r\n                        this.resourcesInformation.forEach((rsc) => { rsc.needRefresh = true; });\r\n                    }, (err) => {\r\n                        if (err.error && err.error.type === 'https://ldc.com/atlas/lock-refresh-error' && err.error.detail !== '') {\r\n                            this.dialog.open(ConfirmationDialogComponent, {\r\n                                data: {\r\n                                    title: 'Lock',\r\n                                    text: err.error.detail,\r\n                                    okButton: 'Got it',\r\n                                },\r\n                            });\r\n                            //this.lockLost.emit()\r\n                            this.router.navigate(['/' + this.companyManager.getCurrentCompanyId() + '/home']);\r\n                        }\r\n                    });\r\n            }\r\n            else {\r\n                if (this.isSingleResource()) {\r\n                    this.resourcesInformation = new Array<LockResourceInformation>();\r\n                    const resourceInformation = new LockResourceInformation();\r\n                    resourceInformation.resourceType = this.resourceType;\r\n                    resourceInformation.resourceId = this.resourceId;\r\n                    resourceInformation.resourceCode = this.resourceCode;\r\n                    resourceInformation.needRefresh = true;\r\n\r\n                    this.resourcesInformation.push(resourceInformation);\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    isSingleResource(): boolean {\r\n\r\n        return (this.isEdit && this.resourceId !== null);\r\n    }\r\n\r\n    @HostListener('window:beforeunload', ['$event']) unloadNotification($event: any) {\r\n        // this.lockService.cleanSessionLocksSubject.next();\r\n        this.lockService.cleanSessionLocks().subscribe();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.destroy$.next();\r\n        this.destroy$.complete();\r\n    }\r\n}\r\n","module.exports = \"<div class=\\\"custom-form\\\"\\r\\n     [class.isEmpty]=\\\"!fieldCtrl.value\\\"\\r\\n     [class.required-field]=\\\"true\\\">\\r\\n    <mat-form-field color=\\\"accent\\\">\\r\\n        <mat-select [multiple]=\\\"true\\\"\\r\\n                    [formControl]=\\\"fieldCtrl\\\"\\r\\n                    [placeholder]=\\\"placeholder\\\">\\r\\n            <mat-select-trigger>\\r\\n                {{ displayFn() }}\\r\\n            </mat-select-trigger>\\r\\n            <div id=\\\"myHeader\\\"\\r\\n                 class=\\\"fixedHeader\\\">\\r\\n                <mat-select-header #stickyHeader>\\r\\n                    <input matInput\\r\\n                           type=\\\"search\\\"\\r\\n                           [placeholder]=\\\"placeholderFilter\\\"\\r\\n                           [formControl]=\\\"formCtrl\\\"\\r\\n                           autocomplete=\\\"off\\\"\\r\\n                           (keydown)=\\\"$event.stopPropagation()\\\"\\r\\n                           (input)=\\\"onSearchChange($event.target.value)\\\">\\r\\n                </mat-select-header>\\r\\n            </div>\\r\\n            <div id=\\\"options\\\">\\r\\n                <mat-option (click)=\\\"toggleAll()\\\"\\r\\n                            *ngIf=\\\"displayAll\\\"\\r\\n                            style=\\\"color:black\\\"\\r\\n                            [value]=\\\"allOptionsElement\\\">\\r\\n                    All\\r\\n                </mat-option>\\r\\n                <mat-option *ngFor=\\\"let option of filteredOptions\\\"\\r\\n                            [value]=\\\"option.element\\\"\\r\\n                            (click)=\\\"selectionChanged($event)\\\"\\r\\n                            [ngClass]=\\\"{'hidden-during-loading':option.hide}\\\">\\r\\n                    <span *ngIf=\\\"displayCode\\\"\\r\\n                          style=\\\"color:black\\\">{{ option.element[codeProperty] }}</span>\\r\\n                    <span *ngIf=\\\"option.element[codeProperty] !== null && displayCode && displayProperty\\\"\\r\\n                          style=\\\"color:black\\\">|</span>\\r\\n                    <span *ngIf=\\\"displayProperty\\\"\\r\\n                          style=\\\"color:black\\\">{{ option.element[displayProperty] }}</span>\\r\\n                </mat-option>\\r\\n            </div>\\r\\n        </mat-select>\\r\\n        <mat-error *ngIf=\\\"fieldCtrl.hasError('required')\\\">\\r\\n            {{elementName}} is required\\r\\n        </mat-error>\\r\\n        <mat-hint>\\r\\n            Required *\\r\\n        </mat-hint>\\r\\n    </mat-form-field>\\r\\n</div>\\r\\n\"","module.exports = \".optionAll {\\n  border-bottom-color: black; }\\n\\n.fixedHeader {\\n  position: -webkit-sticky;\\n  position: sticky;\\n  top: -2px;\\n  margin-top: -2px;\\n  padding-top: 12px;\\n  padding-left: 10px;\\n  z-index: 500;\\n  padding-bottom: 20px;\\n  background-color: white; }\\n\"","import { ChangeDetectorRef, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { FormControl, Validators } from '@angular/forms';\r\nimport { MatSelectChange } from '@angular/material';\r\nimport { UtilService } from '../../services/util.service';\r\nimport { FormComponentBaseComponent } from '../form-components/form-component-base/form-component-base.component';\r\n\r\n@Component({\r\n    selector: 'atlas-multiple-autocomplete-dropdown',\r\n    templateUrl: './multiple-autocomplete-dropdown.component.html',\r\n    styleUrls: ['./multiple-autocomplete-dropdown.component.scss'],\r\n})\r\n\r\nexport class MultipleAutocompleteDropdownComponent extends FormComponentBaseComponent implements OnInit {\r\n    @Input() options: any[] = [];\r\n    @Input() allSelected: boolean = true;\r\n    @Input() selectedOptions: any[] = [];\r\n    @Input() allOptionsElement: any;\r\n    @Input() displayCode = true; // if the codeProperty should be displayed with the displayProperty\r\n    @Input() filterProperty: string;\r\n    @Input() codeProperty: string;\r\n    @Input() displayProperty: string; // property on which we'll be sorting the displayed array\r\n    @Input() placeholder: string;\r\n    @Input() placeholderFilter: string;\r\n    @Input() elementName: string;\r\n    @Input() fieldCtrl: FormControl = new FormControl('', [Validators.required]);\r\n\r\n    @Output() readonly selectionChangedEvent = new EventEmitter<any>();\r\n\r\n    filteredOptions: Array<{ element: any, hide: boolean }>;  // options filtered that is displayed to the user\r\n\r\n    formCtrl: FormControl = new FormControl();\r\n\r\n    displayAll: boolean = true; // if false, hide button \"All\" (used while filtering)\r\n\r\n    size: number = 0;\r\n    isLoading = true;\r\n\r\n    constructor(protected utils: UtilService) {\r\n        super(utils);\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.size = this.options ? this.options.length : 0;\r\n        this.displayAll = !(this.size === 0);\r\n\r\n        if (this.allSelected && this.options) {\r\n            this.selectedOptions = this.options.map((o) => o);\r\n        } else if (!this.selectedOptions) {\r\n            this.selectedOptions = [];\r\n        }\r\n        this.initForm();\r\n        this.isLoading = false;\r\n    }\r\n\r\n    // Called from parent component if the options are changed by the parent\r\n    optionsChanged() {\r\n        this.size = this.options ? this.options.length : 0;\r\n        this.displayAll = !(this.size === 0);\r\n        if (this.allSelected) {\r\n            this.selectedOptions = this.options.map((o) => o);\r\n        } else if (this.selectedOptions) {\r\n            this.selectedOptions = this.selectedOptions.filter((selectedoption) => {\r\n                return this.options.find((option) => option[this.codeProperty] === selectedoption[this.codeProperty]\r\n                    && (!this.displayProperty || option[this.displayProperty] === selectedoption[this.displayProperty])) ? true : false;\r\n            });\r\n            if (this.fieldCtrl) {\r\n                this.fieldCtrl.patchValue(this.selectedOptions);\r\n                this.fieldCtrl.updateValueAndValidity();\r\n            }\r\n        } else {\r\n            this.selectedOptions = [];\r\n        }\r\n        this.initSelected();\r\n        this.initAutocomplete();\r\n        const fakeEvent = new MatSelectChange(null, null);\r\n        this.selectionChanged(fakeEvent);\r\n    }\r\n\r\n    initForm() {\r\n        this.initSelected();\r\n        this.initAutocomplete();\r\n    }\r\n\r\n    initSelected() {\r\n        if (this.allSelected && this.options) {\r\n            this.selectedOptions = this.options.map((o) => o);\r\n            if (this.displayAll) {\r\n                this.selectedOptions.push(this.allOptionsElement);\r\n            }        \r\n        }\r\n        if (this.fieldCtrl) {\r\n               this.fieldCtrl.patchValue(this.selectedOptions);\r\n            }\r\n    }\r\n\r\n    initAutocomplete() {\r\n        if (this.options) {\r\n            this.filteredOptions = this.options.map((option) => ({ element: option, hide: false }));\r\n            this.sortFilteredOptions();\r\n        }\r\n    }\r\n    \r\n    sortFilteredOptions() {\r\n        this.filteredOptions = this.filteredOptions.sort((obj1, obj2) => {\r\n            if (obj1.element[this.codeProperty] < obj2.element[this.codeProperty]) {\r\n                return -1;\r\n            }\r\n            if (obj1.element[this.codeProperty] > obj2.element[this.codeProperty]) {\r\n                return 1;\r\n            }\r\n            return 0;\r\n        });\r\n    }\r\n\r\n    getFormCtrl(): FormControl {\r\n        return this.fieldCtrl;\r\n    }\r\n\r\n    resetSelected() {\r\n        this.selectedOptions = this.allSelected ? this.options.map((o) => o) : [];\r\n    }\r\n\r\n    resetComponent() {\r\n        this.allSelected = true;\r\n        this.displayAll = !(this.options.length === 0);\r\n        this.selectedOptions = this.options.map((o) => o);\r\n        if (this.displayAll) {\r\n            this.selectedOptions.push(this.allOptionsElement);\r\n        }\r\n        this.fieldCtrl.patchValue(this.selectedOptions);\r\n        this.filteredOptions = this.options.map((option) => ({ element: option, hide: false }));\r\n        this.sortFilteredOptions();\r\n        this.filteredOptions = this.filteredOptions\r\n            .filter((de) => de.element[this.codeProperty] !== this.allOptionsElement[this.codeProperty]);\r\n    }\r\n\r\n    getSelectedOptions(): any[] {\r\n        this.selectedOptions = this.selectedOptions.sort((obj1, obj2) => {\r\n            if (obj1[this.codeProperty] < obj2[this.codeProperty]) {\r\n                return -1;\r\n            }\r\n            if (obj1[this.codeProperty] > obj2[this.codeProperty]) {\r\n                return 1;\r\n            }\r\n            return 0;\r\n        });\r\n        return this.selectedOptions;\r\n    }\r\n\r\n    getOptions(dep: any[]): any[] {\r\n        return dep;\r\n    }\r\n\r\n    // click on button 'all'\r\n    toggleAll() {\r\n        if (this.allSelected) {\r\n            this.selectedOptions = [];\r\n            this.fieldCtrl.patchValue([]);\r\n            this.allSelected = false;\r\n        } else {\r\n            this.selectedOptions = this.options.map((o) => o);\r\n            this.selectedOptions.push(this.allOptionsElement);\r\n            this.fieldCtrl.patchValue(this.selectedOptions);\r\n            this.allSelected = true;\r\n        }\r\n        this.filteredOptions = this.options\r\n            .map((option) => ({ element: option, hide: false }));\r\n        this.sortFilteredOptions();\r\n        this.selectionChangedEvent.emit(this.selectedOptions);\r\n    }\r\n\r\n    // click of any option other than 'all'\r\n    selectionChanged(event: MatSelectChange): void { // react to select even in the dropdown\r\n        let isEmpty = false;\r\n        if (event) {\r\n            const optionsWithoutAll = this.fieldCtrl.value && this.allOptionsElement ? this.fieldCtrl.value.filter(\r\n                (de) => de[this.codeProperty] !== this.allOptionsElement[this.codeProperty]) : [];\r\n            this.selectedOptions = optionsWithoutAll;\r\n            if (this.selectedOptions.length === this.size) {\r\n                this.allSelected = true;\r\n                if (this.displayAll) {\r\n                    this.selectedOptions.push(this.allOptionsElement);\r\n                }\r\n            } else {\r\n                this.allSelected = false;\r\n                if (this.selectedOptions.length === 0) {\r\n                    isEmpty = true;\r\n                }\r\n            }\r\n            this.fieldCtrl.patchValue(this.selectedOptions);\r\n        }\r\n        this.selectionChangedEvent.emit(this.selectedOptions);\r\n    }\r\n\r\n    // autocomplete function\r\n    onSearchChange(event) : void {\r\n        this.displayAll = event && this.options.length > 0 ? false : true;\r\n        this.filteredOptions = this.options\r\n            .map((option) => ({\r\n                element: option,\r\n                hide: !((this.displayProperty && option[this.displayProperty].toUpperCase().startsWith(event.toUpperCase()))\r\n                    || option[this.codeProperty].toUpperCase().startsWith(event.toUpperCase())),\r\n            }));\r\n        this.sortFilteredOptions();\r\n    }\r\n\r\n\r\n    displayFn() : string {\r\n        let res: string;\r\n        let sortedArray: any[];\r\n        const propertyToOrder = this.displayProperty ? this.displayProperty : this.codeProperty;\r\n        if (this.fieldCtrl.value) {\r\n            if (this.fieldCtrl.value.length > 1) {\r\n                sortedArray = this.fieldCtrl.value;\r\n                sortedArray = sortedArray.sort((obj1, obj2) => {\r\n                    if (obj1[propertyToOrder] < obj2[propertyToOrder]) {\r\n                        return -1;\r\n                    }\r\n                    if (obj1[propertyToOrder] > obj2[propertyToOrder]) {\r\n                        return 1;\r\n                    }\r\n                    return 0;\r\n                });\r\n                res = (sortedArray ? sortedArray[0][propertyToOrder] : '');\r\n                if (!sortedArray.includes(this.allOptionsElement)) {\r\n                    const num = sortedArray.length - 1;\r\n                    if (sortedArray.length === 2) {\r\n                        res = res.concat(' and ', num.toString(), ' other');\r\n                    } else if (sortedArray.length > 2) {\r\n                        res = res.concat(' and ', num.toString(), ' others');\r\n                    }\r\n                } else {\r\n                    res = this.allOptionsElement[this.displayProperty];\r\n                }\r\n            } else {\r\n                const el = this.fieldCtrl.value[0];\r\n                if (el) {\r\n                    res = this.displayProperty ? el[this.displayProperty] : el[this.codeProperty];\r\n                }\r\n            }\r\n        } else {\r\n            res = this.placeholderFilter;\r\n        }\r\n        return res;\r\n    }\r\n}\r\n","module.exports = \"<mat-expansion-panel [expanded]=\\\"isPanelExpanded\\\"\\r\\n                     (opened)=\\\"isPanelExpanded = true\\\"\\r\\n                     (closed)=\\\"isPanelExpanded = false\\\">\\r\\n    <mat-expansion-panel-header>\\r\\n        <mat-panel-title fxLayout=\\\"row\\\"\\r\\n                         fxLayoutAlign=\\\"start center\\\"\\r\\n                         dir=\\\"ltr\\\"\\r\\n                         fxLayoutGap=\\\"5px\\\">\\r\\n            <h2>Parameters</h2>\\r\\n            <mat-icon matSuffix\\r\\n                      *ngIf=\\\"!isCostMatrixDisplay\\\"\\r\\n                      class=\\\"compass-icon\\\"\\r\\n                      (click)=\\\"emmitClick($event)\\\">explore</mat-icon>\\r\\n        </mat-panel-title>\\r\\n    </mat-expansion-panel-header>\\r\\n    <mat-panel-description>\\r\\n        <atlas-chip-list *ngIf=\\\"chipStringList\\\"\\r\\n                         [textList]=\\\"chipStringList\\\"></atlas-chip-list>\\r\\n    </mat-panel-description>\\r\\n</mat-expansion-panel>\\r\\n\"","module.exports = \"h2 + .material-icons {\\n  color: #676767;\\n  font-size: 0.9em;\\n  margin-top: 0.2em; }\\n\"","import { ChangeDetectorRef, Component, DoCheck, EventEmitter, Input, IterableDiffer, IterableDiffers, Output } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'atlas-params-list',\r\n    templateUrl: './params-list.component.html',\r\n    styleUrls: ['./params-list.component.scss'],\r\n})\r\nexport class ParamsListComponent implements DoCheck {\r\n    isPanelExpanded: boolean = false;\r\n    @Input() chipStringList: string[];\r\n    @Input() isCostMatrixDisplay: boolean;\r\n    @Output() readonly iconClicked = new EventEmitter();\r\n    iterableDiffer: IterableDiffer<string> | null;\r\n\r\n    constructor(private iterableDiffers: IterableDiffers, private ref: ChangeDetectorRef) {\r\n        this.iterableDiffer = this.iterableDiffers.find([]).create(null);\r\n        if (this.chipStringList) {\r\n            this.isPanelExpanded = this.chipStringList.length > 0;\r\n        }\r\n    }\r\n\r\n    ngDoCheck() {\r\n        const changes = this.iterableDiffer.diff(this.chipStringList);\r\n        if (changes) {\r\n            this.ref.markForCheck();\r\n        }\r\n    }\r\n\r\n    emmitClick($event: MouseEvent) {\r\n        this.iconClicked.emit($event);\r\n        $event.stopPropagation(); // Preventing event bubbling\r\n    }\r\n}\r\n","module.exports = \"<h3 class=\\\"atlas-grid-card-title\\\">Parameters</h3>\\r\\n<form [formGroup]=\\\"paramsFormGroup\\\">\\r\\n    <ag-grid-angular *ngIf=\\\"gridOptions\\\"\\r\\n                     [gridOptions]=\\\"gridOptions\\\"\\r\\n                     (gridReady)=\\\"onGridReady($event)\\\"\\r\\n                     class=\\\"ag-theme-material\\\">\\r\\n    </ag-grid-angular>\\r\\n</form>\\r\\n\\r\\n<mat-divider></mat-divider>\\r\\n<div fxLayout=\\\"row\\\"\\r\\n     fxLayoutAlign=\\\"space-between start\\\">\\r\\n    <button mat-button\\r\\n            (click)=\\\"onDiscardButtonClicked()\\\"\\r\\n            type=\\\"button\\\">\\r\\n        DISCARD\\r\\n    </button>\\r\\n    <button mat-button\\r\\n            (click)=\\\"onSaveButtonClicked()\\\"\\r\\n            [disabled]=\\\"paramsFormGroup.errors\\\"\\r\\n            type=\\\"button\\\">\\r\\n        SAVE\\r\\n    </button>\\r\\n</div>\"","module.exports = \"ag-grid-angular.ag-theme-material {\\n  height: calc(100vh - 248px);\\n  margin: auto auto -13px auto; }\\n\\n.editor-container {\\n  padding-right: 20px; }\\n\\n.mat-divider {\\n  margin-top: 16px; }\\n\\nbutton {\\n  font-weight: bold;\\n  margin-right: 5%; }\\n\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material';\r\nimport * as agGrid from 'ag-grid-community';\r\nimport { Observable, of } from 'rxjs';\r\nimport { TagField } from '../../../trading/entities/tag-field';\r\nimport { ContractTerm } from '../../entities/contract-term.entity';\r\nimport { Counterparty } from '../../entities/counterparty.entity';\r\nimport { EnumEntity } from '../../entities/enum-entity.entity';\r\nimport { PagingOptions } from '../../entities/http-services/paging-options';\r\nimport { PaymentTerm } from '../../entities/payment-term.entity';\r\nimport { Port } from '../../entities/port.entity';\r\nimport { Tag } from '../../entities/tag.entity';\r\nimport { CostMatrixParametersFields } from '../../enums/costmatrix-parameters-fields.enum';\r\nimport { MasterdataService } from '../../services/http-services/masterdata.service';\r\nimport { CommoditySearchTerm } from '../../services/masterdata/dtos/commodity-search-term';\r\nimport { SnackbarService } from '../../services/snackbar.service';\r\nimport { AgGridCheckboxComponent } from '../ag-grid-checkbox/ag-grid-checkbox.component';\r\nimport { AgGridSelectComponent } from '../ag-grid-select/ag-grid-select.component';\r\nimport { ConfirmationDialogComponent } from '../confirmation-dialog/confirmation-dialog.component';\r\n\r\n@Component({\r\n    selector: 'atlas-params-sidenav-selector',\r\n    templateUrl: './params-sidenav-selector.component.html',\r\n    styleUrls: ['./params-sidenav-selector.component.scss'],\r\n})\r\nexport class ParamsSidenavSelectorComponent implements OnInit {\r\n    static cmd1: string[];\r\n    static cmd2: string[];\r\n    static cmd3: string[];\r\n    static cmd4: string[];\r\n    static cmd5: string[];\r\n    static contractTerms: ContractTerm[];\r\n    static contractTypes: EnumEntity[];\r\n    static counterparties: Counterparty[];\r\n    static paymentTerms: PaymentTerm[];\r\n    static ports: Port[];\r\n\r\n    tagFieldList: TagField[];\r\n    parametersPresaved: any;\r\n\r\n    @Input() tagFields: Observable<TagField[]>;\r\n    @Input() parameters: Tag[];\r\n    @Output() readonly closeParamsSidenavSelector = new EventEmitter();\r\n    @Input() paramsFormGroup: FormGroup = new FormGroup({});\r\n\r\n    constructor(protected snackbarService: SnackbarService, protected masterdataService: MasterdataService, protected dialog: MatDialog) {}\r\n\r\n    gridOptions: agGrid.GridOptions;\r\n    gridApi: agGrid.GridApi;\r\n    gridColumnApi: agGrid.ColumnApi;\r\n    gridComponents = {\r\n        atlasCheckbox: AgGridCheckboxComponent,\r\n        atlasSelect: AgGridSelectComponent,\r\n    };\r\n\r\n    ngOnInit() {\r\n        this.getCommodities();\r\n        this.gridOptions = null;\r\n    }\r\n\r\n    onGridReady(params: agGrid.GridReadyEvent) {\r\n        this.gridApi = params.api;\r\n        this.gridColumnApi = params.columnApi;\r\n\r\n        params.api.sizeColumnsToFit();\r\n\r\n        this.tagFields.subscribe((rowData) => {\r\n            params.api.setRowData(rowData);\r\n            this.tagFields\r\n                .subscribe((newRowData) => {\r\n                    this.tagFieldList = newRowData;\r\n                    params.api.setRowData(newRowData);\r\n                })\r\n                .add(() => {\r\n                    this.createFormControls();\r\n                    this.gridApi.refreshCells({ force: true });\r\n                });\r\n        });\r\n    }\r\n\r\n    createFormControls() {\r\n        const columns = this.gridColumnApi.getAllColumns();\r\n\r\n        this.gridApi.forEachNode((rowNode: agGrid.RowNode, index) => {\r\n            columns\r\n                .filter((column) => column.getColDef().field === 'value')\r\n                .forEach(() => {\r\n                    const key = this.tagFieldList[index].typeName;\r\n                    const control = new FormControl();\r\n                    let list = new Array();\r\n                    if (this.parameters) {\r\n                        this.parameters.forEach((tag) => {\r\n                            if (tag.typeName === this.tagFieldList[index].typeName) {\r\n                                list = tag.tagValueId.split(',');\r\n                                const isListIds = list.filter((i) => isNaN(Number(i))).length === 0;\r\n                                if (isListIds) {\r\n                                    list = tag.tagValueId.split(',').map((item) => {\r\n                                        return parseInt(item, 10);\r\n                                    });\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n\r\n                    if (list.length > 0) {\r\n                        control.setValue(list);\r\n                    }\r\n                    this.paramsFormGroup.addControl(key, control);\r\n                    this.parametersPresaved = this.paramsFormGroup.value;\r\n                });\r\n        });\r\n    }\r\n    // Parameters\r\n    /**\r\n     * Returns the column definition for the sidebar-table of parameters\r\n     */\r\n    getParametersGridColDefinition(): agGrid.ColDef[] {\r\n        return [\r\n            {\r\n                colId: 'label',\r\n                headerName: 'Parameters',\r\n                field: 'label',\r\n                width: 300,\r\n                maxWidth: 300,\r\n            },\r\n            {\r\n                colId: 'value',\r\n                headerName: 'Value',\r\n                field: 'value',\r\n                width: 400,\r\n                maxWidth: 700,\r\n                cellRenderer: 'atlasSelect',\r\n                cellRendererParams(params) {\r\n                    if (params.data.label === CostMatrixParametersFields.Cmy1) {\r\n                        return {\r\n                            options: ParamsSidenavSelectorComponent.cmd1,\r\n                            labelField: null,\r\n                            valueField: null,\r\n                            key: 'Commodity.PrincipalCommodity',\r\n                            gridId: 'commodityGrid',\r\n                            modalHelperData: null,\r\n                        };\r\n                    }\r\n                    if (params.data.label === CostMatrixParametersFields.Cmy2) {\r\n                        return {\r\n                            options: ParamsSidenavSelectorComponent.cmd2,\r\n                            labelField: null,\r\n                            valueField: null,\r\n                            key: 'Commodity.Part2',\r\n                            gridId: 'commodityGrid',\r\n                            modalHelperData: null,\r\n                        };\r\n                    }\r\n                    if (params.data.label === CostMatrixParametersFields.Cmy3) {\r\n                        return {\r\n                            options: ParamsSidenavSelectorComponent.cmd3,\r\n                            labelField: null,\r\n                            valueField: null,\r\n                            key: 'Commodity.Part3',\r\n                            gridId: 'commodityGrid',\r\n                            modalHelperData: null,\r\n                        };\r\n                    }\r\n                    if (params.data.label === CostMatrixParametersFields.Cmy4) {\r\n                        return {\r\n                            options: ParamsSidenavSelectorComponent.cmd4,\r\n                            labelField: null,\r\n                            valueField: null,\r\n                            key: 'Commodity.Part4',\r\n                            gridId: 'commodityGrid',\r\n                            modalHelperData: null,\r\n                        };\r\n                    }\r\n                    if (params.data.label === CostMatrixParametersFields.Cmy5) {\r\n                        return {\r\n                            options: ParamsSidenavSelectorComponent.cmd5,\r\n                            labelField: null,\r\n                            valueField: null,\r\n                            key: 'Commodity.Part5',\r\n                            gridId: 'commodityGrid',\r\n                            modalHelperData: null,\r\n                        };\r\n                    }\r\n                    if (params.data.label === CostMatrixParametersFields.ContractTerms) {\r\n                        return {\r\n                            options: ParamsSidenavSelectorComponent.contractTerms,\r\n                            labelField: 'displayName',\r\n                            valueField: 'contractTermId',\r\n                            key: 'SectionDto.ContractTermCode',\r\n                            gridId: null,\r\n                            modalHelperData: null,\r\n                        };\r\n                    }\r\n                    if (params.data.label === CostMatrixParametersFields.ContractType) {\r\n                        return {\r\n                            options: ParamsSidenavSelectorComponent.contractTypes,\r\n                            labelField: 'enumEntityValue',\r\n                            valueField: 'enumEntityId',\r\n                            key: 'TradeDto.Type',\r\n                            gridId: null,\r\n                            modalHelperData: null,\r\n                        };\r\n                    }\r\n                    if (params.data.label === CostMatrixParametersFields.Counterparty) {\r\n                        return {\r\n                            options: ParamsSidenavSelectorComponent.counterparties,\r\n                            labelField: 'counterpartyCode',\r\n                            valueField: 'counterpartyID',\r\n                            key: 'SectionDto.CounterpartyReference',\r\n                            gridId: 'counterpartiesGrid',\r\n                            modalHelperData: of(ParamsSidenavSelectorComponent.counterparties),\r\n                        };\r\n                    }\r\n                    if (params.data.label === CostMatrixParametersFields.PaymentTerms) {\r\n                        return {\r\n                            options: ParamsSidenavSelectorComponent.paymentTerms,\r\n                            labelField: 'paymentTermCode',\r\n                            valueField: 'paymentTermsId',\r\n                            key: 'SectionDto.PaymentTermCode',\r\n                            gridId: 'paymentTermsGrid',\r\n                            modalHelperData: of(ParamsSidenavSelectorComponent.paymentTerms),\r\n                        };\r\n                    }\r\n                    if (\r\n                        params.data.label === CostMatrixParametersFields.PortOfDestination ||\r\n                        params.data.label === CostMatrixParametersFields.PortOfOrigin\r\n                    ) {\r\n                        return {\r\n                            options: ParamsSidenavSelectorComponent.ports,\r\n                            labelField: 'portCode',\r\n                            valueField: 'portId',\r\n                            key:\r\n                                params.data.label === CostMatrixParametersFields.PortOfDestination\r\n                                    ? 'SectionDto.PortDestinationCode'\r\n                                    : 'SectionDto.PortOriginCode',\r\n                            gridId: 'portsGrid',\r\n                            modalHelperData: of(ParamsSidenavSelectorComponent.ports),\r\n                        };\r\n                    }\r\n                },\r\n            },\r\n            {\r\n                headerName: 'Select',\r\n                field: '',\r\n                width: 300,\r\n                maxWidth: 300,\r\n            },\r\n        ];\r\n    }\r\n\r\n    getContext() {\r\n        return {\r\n            formGroup: this.paramsFormGroup,\r\n            createKey: this.createKey,\r\n        };\r\n    }\r\n\r\n    createParametersObjectFromForm(): Tag[] {\r\n        const keys = Object.keys(this.paramsFormGroup.value);\r\n\r\n        const tagfields: Tag[] = new Array<Tag>();\r\n\r\n        keys.forEach((key) => {\r\n            let ids: string;\r\n            if (this.paramsFormGroup.controls[key].enabled && this.paramsFormGroup.value[key]) {\r\n                ids = this.paramsFormGroup.value[key].join();\r\n                tagfields.push({ id: ids, tagValueId: ids, typeName: key });\r\n            }\r\n        });\r\n        return tagfields;\r\n    }\r\n\r\n    onSaveButtonClicked() {\r\n        if (this.paramsFormGroup.valid) {\r\n            this.closeParamsSidenavSelector.emit(this.createParametersObjectFromForm());\r\n            this.snackbarService.throwErrorSnackBar(\r\n                'Parameters has beed added to the cost matrix. This changes will not prevail until you save the cost matrix',\r\n            );\r\n        } else {\r\n            this.snackbarService.throwErrorSnackBar('Parameters are invalid. Please resolve the errors.');\r\n        }\r\n    }\r\n\r\n    onDiscardButtonClicked() {\r\n        const confirmDialog = this.dialog.open(ConfirmationDialogComponent, {\r\n            data: {\r\n                title: 'Discard Changes',\r\n                text: 'You have some modification pending. Close and lose changes?',\r\n                okButton: 'Ok',\r\n                cancelButton: 'Cancel',\r\n            },\r\n        });\r\n        confirmDialog.afterClosed().subscribe((answer) => {\r\n            if (answer) {\r\n                this.paramsFormGroup.setValue(this.parametersPresaved);\r\n\r\n                this.closeParamsSidenavSelector.emit(this.createParametersObjectFromForm());\r\n            }\r\n        });\r\n    }\r\n    private createKey(rowId: string, column: agGrid.Column): string {\r\n        return `${rowId}${column.getColId()}`;\r\n    }\r\n\r\n    getCommodities() {\r\n        const comodities = this.masterdataService\r\n            .getCommodities(new CommoditySearchTerm(), new PagingOptions())\r\n            .subscribe((commodities) => {\r\n                ParamsSidenavSelectorComponent.cmd1 = [...new Set(commodities.value.map((x) => x.commodityType))].sort();\r\n                ParamsSidenavSelectorComponent.cmd2 = [...new Set(commodities.value.map((x) => x.commodityOrigin))].sort();\r\n                ParamsSidenavSelectorComponent.cmd3 = [...new Set(commodities.value.map((x) => x.commodityGrade))].sort();\r\n                ParamsSidenavSelectorComponent.cmd4 = [...new Set(commodities.value.map((x) => x.commodityLvl4))].sort();\r\n                ParamsSidenavSelectorComponent.cmd5 = [...new Set(commodities.value.map((x) => x.commodityLvl5))].sort();\r\n                this.masterdataService.getContractTerms().subscribe((contractTerms) => {\r\n                    ParamsSidenavSelectorComponent.contractTerms = contractTerms.value;\r\n                    this.masterdataService.getContractTypes().subscribe((contractType) => {\r\n                        ParamsSidenavSelectorComponent.contractTypes = contractType.value;\r\n                        this.masterdataService.getCounterparties('', new PagingOptions()).subscribe((counterparty) => {\r\n                            ParamsSidenavSelectorComponent.counterparties = counterparty.value;\r\n                            this.masterdataService.getPaymentTerms('', new PagingOptions()).subscribe((paymentTerms) => {\r\n                                ParamsSidenavSelectorComponent.paymentTerms = paymentTerms.value;\r\n                                this.masterdataService.getPorts('', new PagingOptions()).subscribe((ports) => {\r\n                                    ParamsSidenavSelectorComponent.ports = ports.value;\r\n\r\n                                    this.gridOptions = {\r\n                                        columnDefs: this.getParametersGridColDefinition(),\r\n                                        frameworkComponents: this.gridComponents,\r\n                                        context: this.getContext(),\r\n                                    };\r\n                                });\r\n                            });\r\n                        });\r\n                    });\r\n                });\r\n            });\r\n    }\r\n}\r\n","module.exports = \"<div fxLayout=\\\"row\\\"\\r\\n     fxLayoutAlign=\\\"start\\\">\\r\\n    <h2 class=\\\"picklist-title\\\">{{title}}</h2>\\r\\n</div>\\r\\n<div fxLayout=\\\"row\\\"\\r\\n     fxLayoutAlign=\\\"start\\\"\\r\\n     fxLayoutGap=\\\"24px\\\"\\r\\n     fxLayout.xs=\\\"column\\\">\\r\\n    <mat-card>\\r\\n        <mat-card-content>\\r\\n            <div fxLayout=\\\"column\\\"\\r\\n                 fxLayoutAlign=\\\"space-between start\\\">\\r\\n                <div>\\r\\n                    <mat-checkbox class=\\\"picklist-header\\\"\\r\\n                                  [checked]=\\\"isAllOriginalChecked\\\"\\r\\n                                  (change)=\\\"onAllOriginalChecked($event)\\\"\\r\\n                                  [indeterminate]=\\\"originalListIndeterminated\\\">{{originalListHeader}}</mat-checkbox>\\r\\n                </div>\\r\\n                <div>\\r\\n                    <mat-selection-list #originalList\\r\\n                                        [(ngModel)]=\\\"originalOptionsChecked\\\"\\r\\n                                        [compareWith]=\\\"compareListItems\\\"\\r\\n                                        (ngModelChange)=\\\"onOriginalItemsSelected($event)\\\">\\r\\n                        <mat-list-option class=\\\"picklist-option\\\"\\r\\n                                         *ngFor=\\\"let item of options; trackBy:trackPicklist\\\"\\r\\n                                         [value]=\\\"item\\\"\\r\\n                                         checkboxPosition=\\\"before\\\">\\r\\n                            {{(displayWith ? item[displayWith] : item)}}\\r\\n                        </mat-list-option>\\r\\n                    </mat-selection-list>\\r\\n                </div>\\r\\n            </div>\\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n    <div fxFlex=\\\"20\\\"\\r\\n         fxLayout=\\\"column\\\"\\r\\n         fxLayoutAlign=\\\"center center\\\"\\r\\n         fxLayoutGap=\\\"24px\\\">\\r\\n        <button mat-mini-fab\\r\\n                (click)=\\\"onPickItemsClicked()\\\">\\r\\n            <mat-icon>keyboard_arrow_right</mat-icon>\\r\\n        </button>\\r\\n        <button mat-mini-fab\\r\\n                (click)=\\\"onRemoveItemsClicked()\\\">\\r\\n            <mat-icon>keyboard_arrow_left</mat-icon>\\r\\n        </button>\\r\\n    </div>\\r\\n\\r\\n    <mat-card>\\r\\n        <mat-card-content>\\r\\n            <div fxLayout=\\\"column\\\"\\r\\n                 fxLayoutAlign=\\\"space-between start\\\">\\r\\n                <div>\\r\\n                    <mat-checkbox class=\\\"picklist-header\\\"\\r\\n                                  [checked]=\\\"isAllPickedChecked\\\"\\r\\n                                  (change)=\\\"onAllPickedChecked($event)\\\"\\r\\n                                  [indeterminate]=\\\"pickedListIndeterminated\\\">{{pickedListHeader}}</mat-checkbox>\\r\\n                </div>\\r\\n                <div>\\r\\n                    <mat-selection-list #pickedList\\r\\n                                        [(ngModel)]=\\\"pickedOptionsChecked\\\"\\r\\n                                        [compareWith]=\\\"compareListItems\\\"\\r\\n                                        (ngModelChange)=\\\"onPickedItemsSelected($event)\\\">\\r\\n                        <mat-list-option class=\\\"picklist-option\\\"\\r\\n                                         *ngFor=\\\"let item of pickedOptions; trackBy:trackPicklist\\\"\\r\\n                                         [value]=\\\"item\\\"\\r\\n                                         checkboxPosition=\\\"before\\\">\\r\\n                            {{(displayWith ? item[displayWith] : item)}}\\r\\n                        </mat-list-option>\\r\\n                    </mat-selection-list>\\r\\n                </div>\\r\\n            </div>\\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n</div>\\r\\n\"","module.exports = \".mat-card {\\n  max-height: 320px;\\n  overflow-y: auto;\\n  height: auto;\\n  width: 100%; }\\n\\nmat-selection-list {\\n  padding-top: 4px; }\\n\\nbutton.mat-mini-fab {\\n  background-color: #53c234;\\n  color: white; }\\n\"","\r\nimport { Component, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { MatCheckboxChange, MatSelectionList, MatSelectionListChange } from '@angular/material';\r\n\r\n@Component({\r\n    selector: 'atlas-picklist',\r\n    templateUrl: './picklist.component.html',\r\n    styleUrls: ['./picklist.component.scss'],\r\n})\r\nexport class PicklistComponent implements OnInit {\r\n    @ViewChild('originalList') originalList: MatSelectionList;\r\n    @ViewChild('pickedList') pickedList: MatSelectionList;\r\n\r\n    @Input() id: number | string;\r\n    @Input() title: string;\r\n    @Input() originalListHeader: string = 'Available';\r\n    @Input() pickedListHeader: string = 'Selected';\r\n    @Input() options: any[];\r\n    // Property which is used to display in the list\r\n    @Input() displayWith: string;\r\n    // Property which is used to compare items in the list to avoid always recreating DOM elements\r\n    @Input() compareWith: string;\r\n    @Output() readonly pick = new EventEmitter<any[]>();\r\n    @Output() readonly remove = new EventEmitter<any[]>();\r\n\r\n    pickedOptions: any[] = [];\r\n    originalOptionsChecked: any[] = [];\r\n    pickedOptionsChecked: any[] = [];\r\n    isAllOriginalChecked = false;\r\n    isAllPickedChecked = false;\r\n    originalListIndeterminated = false;\r\n    pickedListIndeterminated = false;\r\n\r\n    constructor() { }\r\n\r\n    ngOnInit() {\r\n\r\n    }\r\n\r\n    onAllOriginalChecked(change: MatCheckboxChange) {\r\n        this.isAllOriginalChecked = change.checked;\r\n        if (this.isAllOriginalChecked) {\r\n            this.originalList.selectAll();\r\n        } else {\r\n            this.originalList.deselectAll();\r\n        }\r\n    }\r\n\r\n    onAllPickedChecked(change: MatCheckboxChange) {\r\n        this.isAllPickedChecked = change.checked;\r\n        if (this.isAllPickedChecked) {\r\n            this.pickedList.selectAll();\r\n        } else {\r\n            this.pickedList.deselectAll();\r\n        }\r\n    }\r\n\r\n    isAllSelected(isOriginalList: boolean): boolean {\r\n        if (isOriginalList) {\r\n            return this.options.length !== 0 &&\r\n                this.originalOptionsChecked.length === this.options.length;\r\n        } else {\r\n            return this.pickedOptions.length !== 0 &&\r\n                this.pickedOptionsChecked.length === this.pickedOptions.length;\r\n        }\r\n    }\r\n\r\n    onOriginalItemsSelected(selectedOptions: MatSelectionListChange) {\r\n        this.isAllOriginalChecked = this.isAllSelected(true);\r\n        this.originalListIndeterminated = !this.isAllOriginalChecked && this.originalOptionsChecked.length > 0;\r\n    }\r\n\r\n    onPickedItemsSelected(selectedOptions: MatSelectionListChange) {\r\n        this.isAllPickedChecked = this.isAllSelected(false);\r\n        this.pickedListIndeterminated = !this.isAllPickedChecked && this.pickedOptionsChecked.length > 0;\r\n    }\r\n\r\n    pickItems(checkedOptions: any[], source: any[], destination: any[]) {\r\n        if (checkedOptions && checkedOptions.length > 0) {\r\n            checkedOptions.forEach((item) => {\r\n                const index = source.findIndex((option) => {\r\n                    return this.compareWith ?\r\n                        option[this.compareWith] === item[this.compareWith] :\r\n                        option === item;\r\n                });\r\n                if (index > -1) {\r\n                    destination.push(item);\r\n                    source.splice(index, 1);\r\n                }\r\n            });\r\n            checkedOptions = [];\r\n        }\r\n        source = source.sort((n1, n2) => this.displayWith ?\r\n            ((n1[this.displayWith] < n2[this.displayWith]) ? -1 : 1) : ((n1 < n2) ? -1 : 1));\r\n        destination = destination.sort((n1, n2) => this.displayWith ?\r\n            ((n1[this.displayWith] < n2[this.displayWith]) ? -1 : 1) : ((n1 < n2) ? -1 : 1));\r\n    }\r\n\r\n    getPickedItems() {\r\n        return this.pickedOptions;\r\n    }\r\n\r\n    onPickItemsClicked() {\r\n        this.pick.emit(this.originalOptionsChecked);\r\n        this.pickItems(this.originalOptionsChecked, this.options, this.pickedOptions);\r\n    }\r\n\r\n    onRemoveItemsClicked() {\r\n        this.remove.emit(this.pickedOptionsChecked);\r\n        this.pickItems(this.pickedOptionsChecked, this.pickedOptions, this.options);\r\n    }\r\n\r\n    trackPicklist(index: number, item: any): any {\r\n        return this.compareWith ? item[this.compareWith] : item;\r\n    }\r\n\r\n    compareListItems(option: any, selectedOption: any): boolean {\r\n        return this.compareWith ?\r\n            option[this.compareWith] === selectedOption[this.compareWith]\r\n            : option === selectedOption;\r\n    }\r\n}\r\n","module.exports = \"<mat-icon *ngIf=\\\"getCustomIconForPrivilegeLevel1()\\\"\\r\\n          [svgIcon]=\\\"getCustomIconForPrivilegeLevel1()\\\"></mat-icon>\\r\\n<mat-icon *ngIf=\\\"getMatIconForPrivilegeLevel1()\\\">{{ getMatIconForPrivilegeLevel1() }}</mat-icon>\\r\\n\"","module.exports = \"\"","import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'atlas-privilege-level1-icon',\r\n    templateUrl: './privilege-level1-icon.component.html',\r\n    styleUrls: ['./privilege-level1-icon.component.scss'],\r\n})\r\nexport class PrivilegeLevel1IconComponent implements OnInit {\r\n    @Input() privilegeLevel1Name: string;\r\n    previousLevel1Name: string;\r\n\r\n    customIconName: string;\r\n    matIconName: string;\r\n\r\n    constructor() { }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    getMatIconForPrivilegeLevel1(): string {\r\n        if (this.privilegeLevel1Name === this.previousLevel1Name) {\r\n            return this.matIconName;\r\n        }\r\n        this.getIcons();\r\n        return this.matIconName;\r\n    }\r\n\r\n    getCustomIconForPrivilegeLevel1(): string {\r\n        if (this.privilegeLevel1Name === this.previousLevel1Name) {\r\n            return this.customIconName;\r\n        }\r\n        this.getIcons();\r\n        return this.customIconName;\r\n    }\r\n\r\n    getIcons() {\r\n\r\n        this.customIconName = null;\r\n        this.matIconName = null;\r\n        switch (this.privilegeLevel1Name) {\r\n            case 'Home': {\r\n                this.matIconName = 'home';\r\n                break;\r\n            }\r\n            case 'Trades': {\r\n                this.customIconName = 'trades';\r\n                break;\r\n            }\r\n            case 'Cash': {\r\n                this.matIconName = 'account_balance_wallet';\r\n                break;\r\n            }\r\n            case 'Charters': {\r\n                this.matIconName = 'directions_boat';\r\n                break;\r\n            }\r\n            case 'Invoices': {\r\n                this.matIconName = 'description';\r\n                break;\r\n            }\r\n            case 'Documents': {\r\n                this.customIconName = 'documents';\r\n                break;\r\n            }\r\n            case 'Reports': {\r\n                this.matIconName = 'bar_chart';\r\n                break;\r\n            }\r\n            case 'Administration': {\r\n                this.matIconName = 'vpn_key';\r\n                break;\r\n            }\r\n            case 'Dashboards': {\r\n                this.matIconName = 'dashboard';\r\n                break;\r\n            }\r\n            case 'Financials': {\r\n                this.matIconName = 'account_balance';\r\n                break;\r\n            }\r\n            case 'MasterData': {\r\n                this.matIconName = 'view_quilt';\r\n                break;\r\n            }\r\n            case 'Referential': {\r\n                this.matIconName = 'view_quilt';\r\n                break;\r\n            }\r\n        }\r\n\r\n        this.previousLevel1Name = this.privilegeLevel1Name;\r\n    }\r\n}\r\n","module.exports = \"<button mat-icon-button (click)=\\\"invokeParentMethod()\\\">\\r\\n  <mat-icon>chevron_right</mat-icon>\\r\\n</button>\\r\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\nimport { ICellRendererAngularComp } from 'ag-grid-angular';\r\n\r\n@Component({\r\n  selector: 'atr-row-selection-button',\r\n  templateUrl: './row-selection-button.component.html',\r\n  styleUrls: ['./row-selection-button.component.scss']\r\n})\r\nexport class RowSelectionButton implements ICellRendererAngularComp  {\r\npublic params: any;\r\n\r\n  constructor() { }\r\n\r\n  agInit(params: any): void {\r\n    this.params = params;\r\n  }\r\n\r\n  public invokeParentMethod() {\r\n    this.params.context.componentParent.rowSelectionButtonClicked(this.params.data);\r\n}\r\n\r\nrefresh(): boolean {\r\n  return false;\r\n}\r\n\r\n}\r\n","module.exports = \"<div [formGroup]=\\\"formGroup\\\">\\r\\n    <mat-form-field>\\r\\n        <input #input\\r\\n               matInput\\r\\n               [matAutocomplete]=\\\"autocomplete\\\"\\r\\n               [placeholder]=\\\"placeholder\\\"\\r\\n               formControlName=\\\"formCtrl\\\"\\r\\n               (focus)=\\\"clearValueEvent()\\\"\\r\\n               (focusout)=\\\"setValueEvent($event, autocomplete)\\\"\\r\\n               (click)=\\\"openAutocompletePanel()\\\">\\r\\n        <mat-autocomplete #autocomplete=\\\"matAutocomplete\\\"\\r\\n                          (optionSelected)=\\\"selectionChanged($event); input.value=''; input.blur()\\\">\\r\\n            <mat-option *ngFor=\\\"let object of filteredObjects\\\"\\r\\n                        [value]=\\\"object\\\">\\r\\n                <mat-checkbox [checked]=\\\"isSelected(object)\\\">\\r\\n                    <span>{{ getDisplayValue(object) }}</span>\\r\\n                </mat-checkbox>\\r\\n            </mat-option>\\r\\n        </mat-autocomplete>\\r\\n    </mat-form-field>\\r\\n</div>\\r\\n\"","module.exports = \"\"","import { Component, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { FormControl, FormGroup } from '../../../../../node_modules/@angular/forms';\r\nimport { MatAutocompleteSelectedEvent, MatAutocompleteTrigger } from '../../../../../node_modules/@angular/material';\r\n\r\n@Component({\r\n    selector: 'atlas-select-multiple-autocomplete',\r\n    templateUrl: './select-multiple-autocomplete.component.html',\r\n    styleUrls: ['./select-multiple-autocomplete.component.scss'],\r\n})\r\nexport class SelectMultipleAutocompleteComponent implements OnInit {\r\n\r\n    @ViewChild('input', { read: MatAutocompleteTrigger }) autocompleteTrigger: MatAutocompleteTrigger;\r\n\r\n    @Input() objects: any[] = [];\r\n    @Input() displayCode = false;\r\n    @Input() valueProperty: string;\r\n    @Input() codeProperty: string;\r\n    @Input() displayProperty: string;\r\n    @Input() placeholder: string;\r\n    @Input() selectedValues: any[] = [];\r\n    @Input() controller: FormControl;\r\n\r\n    filteredObjects: any[] = [];\r\n\r\n    formGroup: FormGroup;\r\n    formCtrl: FormControl;\r\n\r\n    constructor() { }\r\n\r\n    ngOnInit() {\r\n        this.initForm();\r\n    }\r\n\r\n    initForm() {\r\n        this.formCtrl = new FormControl();\r\n        this.formGroup = new FormGroup({\r\n            formCtrl: this.formCtrl,\r\n        });\r\n        this.setData();\r\n    }\r\n\r\n    setData() {\r\n        this.initSelected();\r\n        if (this.formCtrl !== undefined) {\r\n            this.setValue();\r\n            this.initAutocomplete();\r\n        }\r\n    }\r\n\r\n    initSelected() {\r\n        if (this.controller) {\r\n            this.selectedValues = this.controller.value ? this.controller.value : [];\r\n        } else {\r\n            this.selectedValues = this.selectedValues\r\n                .filter((v) => this.objects.map(\r\n                    (o) => this.getProperty(o, this.valueProperty)).includes(this.getProperty(v, this.valueProperty)))\r\n                .map((v) => this.objects.filter(\r\n                    (o) => this.getProperty(o, this.valueProperty) === this.getProperty(v, this.valueProperty))[0]);\r\n        }\r\n    }\r\n\r\n    initAutocomplete() {\r\n        this.filteredObjects = this.objects;\r\n        this.formCtrl.valueChanges.subscribe((value) => {\r\n            let valueAsString: string = '';\r\n            if (value) {\r\n                valueAsString = typeof (value) === 'string' || !this.displayProperty ?\r\n                    value.toLowerCase() : value[this.valueProperty];\r\n            }\r\n            this.filteredObjects = this.objects.filter((o: any) =>\r\n                this.getProperty(o, this.displayProperty).toLowerCase().startsWith(valueAsString));\r\n        });\r\n    }\r\n\r\n    selectionChanged(event: MatAutocompleteSelectedEvent): void {\r\n        if (!event.option) { return; }\r\n        const object = event.option.value;\r\n\r\n        if (!this.isSelected(object)) {\r\n            this.selectedValues.push(object);\r\n            this.updateController();\r\n        } else {\r\n            this.deselect(object);\r\n        }\r\n    }\r\n\r\n    updateController() {\r\n        if (this.controller) {\r\n            this.controller.setValue(this.selectedValues);\r\n        }\r\n    }\r\n\r\n    isSelected(object: any) {\r\n        return this.selectedValues.includes(object);\r\n    }\r\n\r\n    clearValueEvent() {\r\n        this.formCtrl.setValue('');\r\n    }\r\n\r\n    setValueEvent(event, autocomplete) {\r\n        if (!autocomplete.options.map((option) => option._element.nativeElement).includes(event.relatedTarget)) {\r\n            this.setValue();\r\n        }\r\n    }\r\n\r\n    setValue() {\r\n        const value = this.selectedValues.map((s) => this.getDisplayValue(s)).sort().join(' ; ');\r\n        this.formCtrl.setValue(value);\r\n    }\r\n\r\n    openAutocompletePanel() {\r\n        this.autocompleteTrigger.openPanel();\r\n    }\r\n\r\n    deselect(value) {\r\n        const index = this.selectedValues.indexOf(value);\r\n        this.selectedValues.splice(index, 1);\r\n        this.updateController();\r\n    }\r\n\r\n    getDisplayValue(object: any) {\r\n        if (this.displayCode) {\r\n            return this.getProperty(object, this.codeProperty) + ' | ' + this.getProperty(object, this.displayProperty);\r\n        }\r\n        return this.getProperty(object, this.displayProperty);\r\n    }\r\n\r\n    getProperty(object: any, property: string) {\r\n        if (property) {\r\n            return object[property];\r\n        }\r\n        return object;\r\n    }\r\n}\r\n","module.exports = \"\\r\\n\"","module.exports = \"<a mat-list-item\\r\\n   [class.active]=\\\"isActive([company,'home'])\\\"\\r\\n   routerLink=\\\"/{{company}}/home\\\"\\r\\n   class=\\\"menu-icon\\\">\\r\\n    <mat-icon matListIcon>home</mat-icon>\\r\\n    <a mat-line>Home</a>\\r\\n</a>\\r\\n<a mat-list-item\\r\\n   *ifAuthorized=\\\"'Trades',Company:this.company\\\"\\r\\n   [class.active]=\\\"isActive([company,'trades'])\\\"\\r\\n   routerLink=\\\"/{{company}}/trades\\\"\\r\\n   class=\\\"menu-icon\\\">\\r\\n    <atlas-privilege-level1-icon matListIcon\\r\\n                                 privilegeLevel1Name=\\\"Trades\\\">\\r\\n    </atlas-privilege-level1-icon>\\r\\n    <a mat-line>Trades</a>\\r\\n</a>\\r\\n<a mat-list-item\\r\\n   *ifAuthorized=\\\"'Charters',Company:this.company\\\"\\r\\n   [class.active]=\\\"isActive([company,'execution','charter'])\\\"\\r\\n   routerLink=\\\"/{{company}}/execution/charter\\\"\\r\\n   class=\\\"menu-icon\\\">\\r\\n    <atlas-privilege-level1-icon matListIcon\\r\\n                                 privilegeLevel1Name=\\\"Charters\\\">\\r\\n    </atlas-privilege-level1-icon>\\r\\n    <a mat-line>Charters</a>\\r\\n</a>\\r\\n<a mat-list-item\\r\\n   *ifAuthorized=\\\"'Invoices',company:this.company\\\"\\r\\n   [class.active]=\\\"isActive([company,'execution','invoicing'])\\\"\\r\\n   routerLink=\\\"/{{company}}/execution/invoicing/home\\\"\\r\\n   class=\\\"menu-icon\\\">\\r\\n    <atlas-privilege-level1-icon matListIcon\\r\\n                                 privilegeLevel1Name=\\\"Invoices\\\">\\r\\n    </atlas-privilege-level1-icon>\\r\\n    <a mat-line>Invoices</a>\\r\\n</a>\\r\\n<a mat-list-item\\r\\n   *ifAuthorized=\\\"'Cash',Company:this.company\\\"\\r\\n   [class.active]=\\\"isActive([company, 'execution', 'cash'])\\\"\\r\\n   routerLink=\\\"/{{company}}/execution/cash\\\"\\r\\n   class=\\\"menu-icon\\\">\\r\\n    <atlas-privilege-level1-icon matListIcon\\r\\n                                 privilegeLevel1Name=\\\"Cash\\\">\\r\\n    </atlas-privilege-level1-icon>\\r\\n    <a mat-line>Cash</a>\\r\\n</a>\\r\\n<a mat-list-item\\r\\n   *ifAuthorized=\\\"'Financials',Company:this.company\\\"\\r\\n   [class.active]=\\\"isActive([company,'financial'])\\\"\\r\\n   routerLink=\\\"/{{company}}/financial\\\"\\r\\n   class=\\\"menu-icon\\\">\\r\\n    <atlas-privilege-level1-icon matListIcon\\r\\n                                 privilegeLevel1Name=\\\"Financials\\\">\\r\\n    </atlas-privilege-level1-icon>\\r\\n    <a mat-line>Financials</a>\\r\\n</a>\\r\\n<a mat-list-item\\r\\n   *ifAuthorized=\\\"'Reports',company:this.company\\\"\\r\\n   [class.active]=\\\"isActive([company,'reporting'])\\\"\\r\\n   routerLink=\\\"/{{company}}/reporting\\\"\\r\\n   class=\\\"menu-icon\\\">\\r\\n    <atlas-privilege-level1-icon matListIcon\\r\\n                                 privilegeLevel1Name=\\\"Reports\\\">\\r\\n    </atlas-privilege-level1-icon>\\r\\n    <a mat-line>Reports</a>\\r\\n</a>\\r\\n<a mat-list-item\\r\\n   [hidden]=\\\"isCompanyFrozen\\\"\\r\\n   *ifAuthorized=\\\"'Referential',company:this.company\\\"\\r\\n   [class.active]=\\\"isActive([company,'referential'])\\\"\\r\\n   routerLink=\\\"/{{company}}/referential\\\"\\r\\n   class=\\\"menu-icon\\\">\\r\\n    <atlas-privilege-level1-icon matListIcon\\r\\n                                 privilegeLevel1Name=\\\"Referential\\\">\\r\\n    </atlas-privilege-level1-icon>\\r\\n    <a mat-line>Referential</a>\\r\\n</a>\\r\\n<a mat-list-item\\r\\n   *ifAuthorized=\\\"'Documents',company:this.company\\\"\\r\\n   [class.active]=\\\"isActive([company,'execution','document','list'])\\\"\\r\\n   routerLink=\\\"/{{company}}/execution/document/list\\\"\\r\\n   class=\\\"menu-icon\\\">\\r\\n    <atlas-privilege-level1-icon matListIcon\\r\\n                                 privilegeLevel1Name=\\\"Documents\\\">\\r\\n    </atlas-privilege-level1-icon>\\r\\n    <a mat-line>Documents</a>\\r\\n</a>\\r\\n<a mat-list-item\\r\\n   *ifAuthorized=\\\"'Administration',company:this.company\\\"\\r\\n   [class.active]=\\\"isActive([company,'admin'])\\\"\\r\\n   routerLink=\\\"/{{company}}/admin\\\"\\r\\n   class=\\\"menu-icon\\\">\\r\\n    <atlas-privilege-level1-icon matListIcon\\r\\n                                 privilegeLevel1Name=\\\"Administration\\\">\\r\\n    </atlas-privilege-level1-icon>\\r\\n    <a mat-line>Admin</a>\\r\\n</a>\\r\\n\\r\\n<mat-divider></mat-divider>\\r\\n\\r\\n<a mat-list-item\\r\\n   class=\\\"menu-icon\\\">\\r\\n    <mat-icon matListIcon>help_outline</mat-icon>\\r\\n    <a mat-line>Help</a>\\r\\n</a>\"","import { Component, OnInit } from '@angular/core';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { filter } from 'rxjs/operators';\r\nimport { CompanyManagerService } from '../../../core/services/company-manager.service';\r\nimport { SecurityService } from '../../services/security.service';\r\nimport { UiService } from '../../services/ui.service';\r\n\r\n@Component({\r\n    selector: 'atlas-side-nav',\r\n    templateUrl: './side-nav.component.html',\r\n    styleUrls: ['./side-nav.component.css'],\r\n})\r\nexport class SideNavComponent implements OnInit {\r\n\r\n    company: string = '';\r\n    isExpanded: boolean = false;\r\n    isCompanyFrozen: boolean = false;\r\n\r\n    constructor(private securityService: SecurityService,\r\n        private router: Router,\r\n        private uiService: UiService,\r\n        private companyManager: CompanyManagerService,\r\n    ) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.router.events.pipe(\r\n            filter((event) => event instanceof NavigationEnd))\r\n            .subscribe((event: NavigationEnd) => {\r\n                this.company = this.companyManager.getCurrentCompanyId();\r\n                const currentCompany = this.company;\r\n                this.isCompanyFrozen = this.companyManager.getCompany(currentCompany).isFrozen;\r\n            });\r\n    }\r\n\r\n    toggleSideBar() {\r\n        this.isExpanded = !this.isExpanded;\r\n    }\r\n\r\n    navigateToExternalLink(link: string) {\r\n        window.open(link, '_blank');\r\n    }\r\n\r\n    isActive(instruction: any[]): boolean {\r\n        return this.router.isActive(this.router.createUrlTree(instruction), false);\r\n    }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"report-container\\\"\\r\\n     [hidden]=\\\"!displayReport\\\">\\r\\n    <form [action]=\\\"reportUrl\\\"\\r\\n          method=\\\"post\\\"\\r\\n          target=\\\"reportFrame\\\"\\r\\n          #ssrsSubmissionForm>\\r\\n        <input *ngIf=\\\"toBeDownloaded\\\"\\r\\n               type=\\\"hidden\\\"\\r\\n               name=\\\"rs:Format\\\"\\r\\n               value=\\\"excel\\\">\\r\\n        <input type=\\\"hidden\\\"\\r\\n               name=\\\"rs:Embed\\\"\\r\\n               value=\\\"true\\\">\\r\\n        <input type=\\\"hidden\\\"\\r\\n               name=\\\"rs:ClearSession\\\"\\r\\n               value=\\\"true\\\">\\r\\n        <input type=\\\"hidden\\\"\\r\\n               name=\\\"rc:Parameters\\\"\\r\\n               value=\\\"{{showParameters}}\\\">\\r\\n        <input type=\\\"hidden\\\"\\r\\n               name=\\\"rs:ParameterLanguage\\\"\\r\\n               value=\\\"{{language}}\\\">\\r\\n        <div *ngFor=\\\"let param of parameters\\\">\\r\\n            <input type=\\\"hidden\\\"\\r\\n                   name=\\\"{{(param['value'] === null || param['value'] === undefined)? param['name'] + ':isnull' : param['name']}}\\\"\\r\\n                   value=\\\"{{ (param['value'] === null || param['value'] === undefined)? 'true' : param['value']  }}\\\">\\r\\n        </div>\\r\\n        <input type=\\\"hidden\\\"\\r\\n               name=\\\"rc:Toolbar\\\"\\r\\n               value=\\\"{{toolbar}}\\\">\\r\\n    </form>\\r\\n    <iframe name=\\\"reportFrame\\\"\\r\\n            class=\\\"ssrs-reportviewer\\\"\\r\\n            [style.width.%]=\\\"width\\\"\\r\\n            [style.height.%]=\\\"height\\\"\\r\\n            scrolling=\\\"yes\\\"></iframe>\\r\\n</div>\\r\\n\\r\\n\\r\\n<mat-card *ngIf=\\\"!displayReport\\\"\\r\\n          class=\\\"empty-state\\\">\\r\\n    <div class=\\\"empty-state-content\\\">\\r\\n        <h3>We love precise reports too</h3>\\r\\n        <p>Please select criterias before generating one</p>\\r\\n    </div>\\r\\n</mat-card>\"","module.exports = \".ssrs-reportviewer {\\n  overflow-x: hidden;\\n  overflow-Y: hidden;\\n  position: relative;\\n  left: 0px;\\n  top: 0px;\\n  border: none;\\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12); }\\n\\n.empty-state {\\n  background: url(\\\"/assets/img/empty-status.svg\\\") bottom center;\\n  background-size: 100%;\\n  background-repeat: no-repeat;\\n  min-height: 160px;\\n  line-height: 19px;\\n  font-size: 16px;\\n  text-align: center;\\n  position: relative; }\\n\\n.empty-state p {\\n    font-size: 16px;\\n    letter-spacing: 0.5px; }\\n\\n.empty-state h3 {\\n    font-weight: 600; }\\n\\n.empty-state .empty-state-content {\\n    position: absolute;\\n    top: 50%;\\n    left: 50%;\\n    -webkit-transform: translate(-50%, -50%);\\n            transform: translate(-50%, -50%); }\\n\\n.report-container {\\n  height: 100%;\\n  margin: 8px 0; }\\n\"","import { Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';\r\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\r\n\r\n@Component({\r\n    selector: 'atlas-ssrsreport-viewer',\r\n    templateUrl: './ssrsreport-viewer.component.html',\r\n    styleUrls: ['./ssrsreport-viewer.component.scss'],\r\n})\r\n\r\n/* parameters eg:\r\n[\r\n    { name: 'Database', value: null },\r\n    { name: 'TradeStatus', value: 4 },\r\n    { name: 'IncludeGoods', value: 1 },\r\n    { name: 'Company', value: 'e3' },\r\n];\r\n*/\r\nexport class SSRSReportViewerComponent {\r\n    // for exemples: https://www.npmjs.com/package/ngx-ssrs-reportviewer\r\n    reportPath: string;\r\n    reportServer: string;\r\n    parameters: any[] = [];\r\n\r\n    @Input() showParameters?: string = 'false';\r\n    @Input() language?: string = 'en-us';\r\n    @Input() width?: number = 100;\r\n    @Input() height?: number = 100;\r\n    @Input() toolbar?: string = 'true';\r\n    @Input() toBeDownloaded?: boolean = false;\r\n\r\n    @Input() displayReport: boolean = false;\r\n\r\n    @Output() readonly hasError = new EventEmitter<any>();\r\n\r\n    reportUrl: SafeResourceUrl;\r\n\r\n    @ViewChild('ssrsSubmissionForm') ssrsSubmissionForm: any;\r\n    // private ssrsSubmissionForm: ElementRef;\r\n    // @ViewChild('ssrsSubmissionForm') set content(content: ElementRef) {\r\n    //     this.ssrsSubmissionForm = content;\r\n    // }\r\n\r\n    constructor(private sanitizer: DomSanitizer) {\r\n    }\r\n\r\n    public generateReport(reportServer: string, reportPath: string, parameters: any[]) {\r\n        this.reportServer = reportServer;\r\n        this.reportPath = reportPath;\r\n        this.parameters = parameters;\r\n\r\n        this.reportUrl = this.sanitizer\r\n            .bypassSecurityTrustResourceUrl(this.reportServer + '?/'\r\n                + this.reportPath);\r\n\r\n        this.displayReport = (this.toBeDownloaded) ? false : true;\r\n        setTimeout(() => {\r\n            return this.ssrsSubmissionForm.nativeElement.submit();\r\n        });\r\n    }\r\n\r\n}\r\n","module.exports = \"<div  fxLayout=\\\"column\\\"\\r\\n      *ngIf=\\\"totalSumShow\\\"\\r\\n      class=\\\"value-legs-total-figure\\\"\\r\\n      fxLayoutAlign=\\\"space-around end\\\">\\r\\n    <div fxFlex=\\\"33\\\">\\r\\n        <mat-card-subtitle class=\\\"total-figure \\\">Amount : <span class=\\\"total-figure-value\\\">{{formatValue(amountSum)}}\\r\\n            </span></mat-card-subtitle>\\r\\n    </div>\\r\\n    <div fxFlex=\\\"33\\\">\\r\\n        <mat-card-subtitle class=\\\"total-figure\\\">{{functionalCcyTitle}} : <span\\r\\n                  class=\\\"total-figure-value\\\">{{formatValue(functionalCcySum)}}\\r\\n            </span>\\r\\n        </mat-card-subtitle>\\r\\n    </div>\\r\\n    <div fxFlex=\\\"33\\\">\\r\\n        <mat-card-subtitle class=\\\"total-figure \\\">{{statutoryCcyTitle}} : <span\\r\\n                  class=\\\"total-figure-value\\\">{{formatValue(statutoryCcySum)}}\\r\\n\\r\\n            </span> </mat-card-subtitle>\\r\\n    </div>\\r\\n</div>\\r\\n\"","module.exports = \".value-legs-total-figure {\\n  margin-top: 8px; }\\n\\n.mat-card-subtitle.total-figure {\\n  float: left; }\\n\\n.align-right {\\n  float: right; }\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'atlas-sum-columntotal',\r\n    templateUrl: './sum-columntotal.component.html',\r\n    styleUrls: ['./sum-columntotal.component.scss'],\r\n})\r\nexport class SumColumntotalComponent implements OnInit {\r\n    totalSumShow: boolean = false;\r\n    amountSum: number = 0;\r\n    functionalCcySum: number = 0;\r\n    statutoryCcySum: number = 0;\r\n    functionalCcyTitle: string;\r\n    statutoryCcyTitle: string;\r\n    constructor() { }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    formatValue(amount: number): string {\r\n        if (isNaN(amount) || amount === null) { return ''; }\r\n        return new Intl.NumberFormat('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 }).format(amount);\r\n    }\r\n\r\n}\r\n","module.exports = \"<mat-toolbar matToolbarHighlight\\r\\n             class='top-toolbar-primary'>\\r\\n\\r\\n    <div fxLayout=\\\"row\\\"\\r\\n         fxLayoutAlign=\\\"start center\\\"\\r\\n         fxLayoutGap=\\\"10px\\\"\\r\\n         class=\\\"toolbar-div\\\">\\r\\n\\r\\n        <button mat-button\\r\\n                class=\\\"button-icon\\\"\\r\\n                (click)=\\\"onLoadPreviousPageButtonClicked()\\\"\\r\\n                [color]=\\\"color\\\"\\r\\n                *ngIf=\\\"!isHomePage\\\">\\r\\n            <mat-icon>arrow_back</mat-icon>\\r\\n        </button>\\r\\n        <button mat-button\\r\\n                class=\\\"button-icon\\\"\\r\\n                [color]=\\\"color\\\"\\r\\n                *ngIf=\\\"isHomePage\\\"\\r\\n                disabled>\\r\\n            <atlas-privilege-level1-icon class=\\\"privilege-icon\\\"\\r\\n                                         [privilegeLevel1Name]=\\\"privilegeLevel1Name\\\">\\r\\n            </atlas-privilege-level1-icon>\\r\\n        </button>\\r\\n        <h1 color=\\\"white\\\">{{pageTitle}} {{entityLabel}}</h1>\\r\\n    </div>\\r\\n    <span class=\\\"fill-space\\\"></span>\\r\\n    <div fxLayout=\\\"row\\\"\\r\\n         fxLayoutAlign=\\\"center\\\"\\r\\n         fxLayoutGap=\\\"8px\\\">\\r\\n        <div>\\r\\n            <span class=\\\"metadata-text\\\">v.{{versionNumber}}</span>\\r\\n        </div>\\r\\n        <div class=\\\"company\\\">\\r\\n            <atlas-company-picker></atlas-company-picker>\\r\\n        </div>\\r\\n    </div>\\r\\n    <a mat-icon-button\\r\\n       matTooltip=\\\"Notifications\\\">\\r\\n        <mat-icon class=\\\"mat-icon\\\">notifications</mat-icon>\\r\\n    </a>\\r\\n    <div fxLayout=\\\"row\\\"\\r\\n         fxLayoutAlign=\\\"center center\\\"\\r\\n         [ngClass]='settingsClass'>\\r\\n        <div [ngClass]='profilePictureClass'\\r\\n             matTooltip=\\\"Profile\\\">\\r\\n            {{userInitials}}\\r\\n        </div>\\r\\n        <div fxLayout=\\\"column\\\"\\r\\n             fxLayoutAlign=\\\"start center\\\">\\r\\n            <div class=\\\"static\\\">\\r\\n                <mat-expansion-panel [ngClass]='foreGroundClass'\\r\\n                                     (mouseleave)=\\\"closePanel()\\\"\\r\\n                                     [expanded]=\\\"isPanelOpen\\\"\\r\\n                                     (opened)=\\\"isPanelOpen = true\\\"\\r\\n                                     [ngClass]=\\\"{'username-chip': isPanelOpen}\\\">\\r\\n\\r\\n                    <mat-expansion-panel-header expandedHeight=\\\"35px\\\"\\r\\n                                                collapsedHeight=\\\"35px\\\">\\r\\n                        <mat-panel-title>\\r\\n                            {{username}}\\r\\n                        </mat-panel-title>\\r\\n                    </mat-expansion-panel-header>\\r\\n\\r\\n                    <div mat-menu-item\\r\\n                         class=\\\"user-setting-item\\\"\\r\\n                         (click)=\\\"navigate()\\\">\\r\\n                        <mat-icon>settings_applications</mat-icon>\\r\\n                        <span class=\\\"settingIcon\\\">User Settings</span>\\r\\n                    </div>\\r\\n\\r\\n                </mat-expansion-panel>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n    <a mat-icon-button\\r\\n       matTooltip=\\\"Sign Off\\\"\\r\\n       (click)=\\\"onLogout()\\\">\\r\\n        <mat-icon matListIcon>power_settings_new</mat-icon>\\r\\n    </a>\\r\\n</mat-toolbar>\"","module.exports = \"/**\\n * Applies styles for users in high contrast mode. Note that this only applies\\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\\n * attribute, however Chrome handles high contrast differently.\\n * @param target Which kind of high contrast setting to target. Defaults to `active`, can be\\n *    `white-on-black` or `black-on-white`.\\n */\\n/* Theme for the ripple elements.*/\\n/* stylelint-disable material/no-prefixes */\\n/* stylelint-enable */\\n.mat-elevation-z0 {\\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z1 {\\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z2 {\\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z3 {\\n  box-shadow: 0px 3px 3px -2px rgba(0, 0, 0, 0.2), 0px 3px 4px 0px rgba(0, 0, 0, 0.14), 0px 1px 8px 0px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z4 {\\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z5 {\\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 5px 8px 0px rgba(0, 0, 0, 0.14), 0px 1px 14px 0px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z6 {\\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z7 {\\n  box-shadow: 0px 4px 5px -2px rgba(0, 0, 0, 0.2), 0px 7px 10px 1px rgba(0, 0, 0, 0.14), 0px 2px 16px 1px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z8 {\\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z9 {\\n  box-shadow: 0px 5px 6px -3px rgba(0, 0, 0, 0.2), 0px 9px 12px 1px rgba(0, 0, 0, 0.14), 0px 3px 16px 2px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z10 {\\n  box-shadow: 0px 6px 6px -3px rgba(0, 0, 0, 0.2), 0px 10px 14px 1px rgba(0, 0, 0, 0.14), 0px 4px 18px 3px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z11 {\\n  box-shadow: 0px 6px 7px -4px rgba(0, 0, 0, 0.2), 0px 11px 15px 1px rgba(0, 0, 0, 0.14), 0px 4px 20px 3px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z12 {\\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 12px 17px 2px rgba(0, 0, 0, 0.14), 0px 5px 22px 4px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z13 {\\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 13px 19px 2px rgba(0, 0, 0, 0.14), 0px 5px 24px 4px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z14 {\\n  box-shadow: 0px 7px 9px -4px rgba(0, 0, 0, 0.2), 0px 14px 21px 2px rgba(0, 0, 0, 0.14), 0px 5px 26px 4px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z15 {\\n  box-shadow: 0px 8px 9px -5px rgba(0, 0, 0, 0.2), 0px 15px 22px 2px rgba(0, 0, 0, 0.14), 0px 6px 28px 5px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z16 {\\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z17 {\\n  box-shadow: 0px 8px 11px -5px rgba(0, 0, 0, 0.2), 0px 17px 26px 2px rgba(0, 0, 0, 0.14), 0px 6px 32px 5px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z18 {\\n  box-shadow: 0px 9px 11px -5px rgba(0, 0, 0, 0.2), 0px 18px 28px 2px rgba(0, 0, 0, 0.14), 0px 7px 34px 6px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z19 {\\n  box-shadow: 0px 9px 12px -6px rgba(0, 0, 0, 0.2), 0px 19px 29px 2px rgba(0, 0, 0, 0.14), 0px 7px 36px 6px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z20 {\\n  box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 20px 31px 3px rgba(0, 0, 0, 0.14), 0px 8px 38px 7px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z21 {\\n  box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 21px 33px 3px rgba(0, 0, 0, 0.14), 0px 8px 40px 7px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z22 {\\n  box-shadow: 0px 10px 14px -6px rgba(0, 0, 0, 0.2), 0px 22px 35px 3px rgba(0, 0, 0, 0.14), 0px 8px 42px 7px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z23 {\\n  box-shadow: 0px 11px 14px -7px rgba(0, 0, 0, 0.2), 0px 23px 36px 3px rgba(0, 0, 0, 0.14), 0px 9px 44px 8px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z24 {\\n  box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12); }\\n.mat-badge-content {\\n  font-weight: 600;\\n  font-size: 12px;\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-badge-small .mat-badge-content {\\n  font-size: 6px; }\\n.mat-badge-large .mat-badge-content {\\n  font-size: 24px; }\\n.mat-h1, .mat-headline, .mat-typography h1 {\\n  font: 400 24px/32px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0 0 16px; }\\n.mat-h2, .mat-title, .mat-typography h2 {\\n  font: 500 20px/32px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0 0 16px; }\\n.mat-h3, .mat-subheading-2, .mat-typography h3 {\\n  font: 400 16px/28px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0 0 16px; }\\n.mat-h4, .mat-subheading-1, .mat-typography h4 {\\n  font: 400 15px/24px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0 0 16px; }\\n.mat-h5, .mat-typography h5 {\\n  font: 400 11.62px/20px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0 0 12px; }\\n.mat-h6, .mat-typography h6 {\\n  font: 400 9.38px/20px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0 0 12px; }\\n.mat-body-strong, .mat-body-2 {\\n  font: 500 14px/24px Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-body, .mat-body-1, .mat-typography {\\n  font: 400 14px/20px Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-body p, .mat-body-1 p, .mat-typography p {\\n    margin: 0 0 12px; }\\n.mat-small, .mat-caption {\\n  font: 400 12px/20px Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-display-4, .mat-typography .mat-display-4 {\\n  font: 300 112px/112px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0 0 56px;\\n  letter-spacing: -0.05em; }\\n.mat-display-3, .mat-typography .mat-display-3 {\\n  font: 400 56px/56px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0 0 64px;\\n  letter-spacing: -0.02em; }\\n.mat-display-2, .mat-typography .mat-display-2 {\\n  font: 400 45px/48px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0 0 64px;\\n  letter-spacing: -0.005em; }\\n.mat-display-1, .mat-typography .mat-display-1 {\\n  font: 400 34px/40px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0 0 64px; }\\n.mat-bottom-sheet-container {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 16px;\\n  font-weight: 400; }\\n.mat-button, .mat-raised-button, .mat-icon-button, .mat-stroked-button,\\n.mat-flat-button, .mat-fab, .mat-mini-fab {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 14px;\\n  font-weight: 500; }\\n.mat-button-toggle {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-card {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-card-title {\\n  font-size: 24px;\\n  font-weight: 400; }\\n.mat-card-subtitle,\\n.mat-card-content,\\n.mat-card-header .mat-card-title {\\n  font-size: 14px; }\\n.mat-checkbox {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-checkbox-layout .mat-checkbox-label {\\n  line-height: 24px; }\\n.mat-chip {\\n  font-size: 13px;\\n  line-height: 18px; }\\n.mat-chip .mat-chip-trailing-icon.mat-icon,\\n  .mat-chip .mat-chip-remove.mat-icon {\\n    font-size: 18px; }\\n.mat-table {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-header-cell {\\n  font-size: 12px;\\n  font-weight: 500; }\\n.mat-cell, .mat-footer-cell {\\n  font-size: 14px; }\\n.mat-calendar {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-calendar-body {\\n  font-size: 13px; }\\n.mat-calendar-body-label,\\n.mat-calendar-period-button {\\n  font-size: 14px;\\n  font-weight: 500; }\\n.mat-calendar-table-header th {\\n  font-size: 11px;\\n  font-weight: 400; }\\n.mat-dialog-title {\\n  font: 500 20px/32px Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-expansion-panel-header {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 15px;\\n  font-weight: 400; }\\n.mat-expansion-panel-content {\\n  font: 400 14px/20px Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-form-field {\\n  font-size: inherit;\\n  font-weight: 400;\\n  line-height: 1.125;\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-form-field-wrapper {\\n  padding-bottom: 1.34375em; }\\n.mat-form-field-prefix .mat-icon,\\n.mat-form-field-suffix .mat-icon {\\n  font-size: 150%;\\n  line-height: 1.125; }\\n.mat-form-field-prefix .mat-icon-button,\\n.mat-form-field-suffix .mat-icon-button {\\n  height: 1.5em;\\n  width: 1.5em; }\\n.mat-form-field-prefix .mat-icon-button .mat-icon,\\n  .mat-form-field-suffix .mat-icon-button .mat-icon {\\n    height: 1.125em;\\n    line-height: 1.125; }\\n.mat-form-field-infix {\\n  padding: 0.5em 0;\\n  border-top: 0.84375em solid transparent; }\\n.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,\\n.mat-form-field-can-float .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\\n  -webkit-transform: translateY(-1.34375em) scale(0.75);\\n          transform: translateY(-1.34375em) scale(0.75);\\n  width: 133.33333333%; }\\n.mat-form-field-can-float .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\\n.mat-form-field-label {\\n  -webkit-transform: translateY(-1.34374em) scale(0.75);\\n          transform: translateY(-1.34374em) scale(0.75);\\n  width: 133.33334333%; }\\n.mat-form-field-label-wrapper {\\n  top: -0.84375em;\\n  padding-top: 0.84375em; }\\n.mat-form-field-label {\\n  top: 1.34375em; }\\n.mat-form-field-underline {\\n  bottom: 1.34375em; }\\n.mat-form-field-subscript-wrapper {\\n  font-size: 75%;\\n  margin-top: 0.66666667em;\\n  top: calc(100% - 1.79166667em); }\\n.mat-form-field-appearance-legacy .mat-form-field-wrapper {\\n  padding-bottom: 1.25em; }\\n.mat-form-field-appearance-legacy .mat-form-field-infix {\\n  padding: 0.4375em 0; }\\n.mat-form-field-appearance-legacy.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,\\n.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\\n  -webkit-transform: translateY(-1.28125em) scale(0.75) perspective(100px) translateZ(0.001px);\\n          transform: translateY(-1.28125em) scale(0.75) perspective(100px) translateZ(0.001px);\\n  -ms-transform: translateY(-1.28125em) scale(0.75);\\n  width: 133.33333333%; }\\n.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill + .mat-form-field-label-wrapper\\n.mat-form-field-label {\\n  -webkit-transform: translateY(-1.28125em) scale(0.75) perspective(100px) translateZ(0.00101px);\\n          transform: translateY(-1.28125em) scale(0.75) perspective(100px) translateZ(0.00101px);\\n  -ms-transform: translateY(-1.28124em) scale(0.75);\\n  width: 133.33334333%; }\\n.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\\n.mat-form-field-label {\\n  -webkit-transform: translateY(-1.28125em) scale(0.75) perspective(100px) translateZ(0.00102px);\\n          transform: translateY(-1.28125em) scale(0.75) perspective(100px) translateZ(0.00102px);\\n  -ms-transform: translateY(-1.28123em) scale(0.75);\\n  width: 133.33335333%; }\\n.mat-form-field-appearance-legacy .mat-form-field-label {\\n  top: 1.28125em; }\\n.mat-form-field-appearance-legacy .mat-form-field-underline {\\n  bottom: 1.25em; }\\n.mat-form-field-appearance-legacy .mat-form-field-subscript-wrapper {\\n  margin-top: 0.54166667em;\\n  top: calc(100% - 1.66666667em); }\\n.mat-form-field-appearance-fill .mat-form-field-infix {\\n  padding: 0.25em 0 0.75em 0; }\\n.mat-form-field-appearance-fill .mat-form-field-label {\\n  top: 1.09375em;\\n  margin-top: -0.5em; }\\n.mat-form-field-appearance-fill.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,\\n.mat-form-field-appearance-fill.mat-form-field-can-float .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\\n  -webkit-transform: translateY(-0.59375em) scale(0.75);\\n          transform: translateY(-0.59375em) scale(0.75);\\n  width: 133.33333333%; }\\n.mat-form-field-appearance-fill.mat-form-field-can-float .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\\n.mat-form-field-label {\\n  -webkit-transform: translateY(-0.59374em) scale(0.75);\\n          transform: translateY(-0.59374em) scale(0.75);\\n  width: 133.33334333%; }\\n.mat-form-field-appearance-outline .mat-form-field-infix {\\n  padding: 1em 0 1em 0; }\\n.mat-form-field-appearance-outline .mat-form-field-label {\\n  top: 1.84375em;\\n  margin-top: -0.25em; }\\n.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,\\n.mat-form-field-appearance-outline.mat-form-field-can-float .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\\n  -webkit-transform: translateY(-1.59375em) scale(0.75);\\n          transform: translateY(-1.59375em) scale(0.75);\\n  width: 133.33333333%; }\\n.mat-form-field-appearance-outline.mat-form-field-can-float .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\\n.mat-form-field-label {\\n  -webkit-transform: translateY(-1.59374em) scale(0.75);\\n          transform: translateY(-1.59374em) scale(0.75);\\n  width: 133.33334333%; }\\n.mat-grid-tile-header,\\n.mat-grid-tile-footer {\\n  font-size: 14px; }\\n.mat-grid-tile-header .mat-line,\\n  .mat-grid-tile-footer .mat-line {\\n    white-space: nowrap;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    display: block;\\n    box-sizing: border-box; }\\n.mat-grid-tile-header .mat-line:nth-child(n+2),\\n    .mat-grid-tile-footer .mat-line:nth-child(n+2) {\\n      font-size: 12px; }\\ninput.mat-input-element {\\n  margin-top: -0.0625em; }\\n.mat-menu-item {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 16px;\\n  font-weight: 400; }\\n.mat-paginator,\\n.mat-paginator-page-size .mat-select-trigger {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 12px; }\\n.mat-radio-button {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-select {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-select-trigger {\\n  height: 1.125em; }\\n.mat-slide-toggle-content {\\n  font: 400 14px/20px Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-slider-thumb-label-text {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 12px;\\n  font-weight: 500; }\\n.mat-stepper-vertical, .mat-stepper-horizontal {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-step-label {\\n  font-size: 14px;\\n  font-weight: 400; }\\n.mat-step-label-selected {\\n  font-size: 14px;\\n  font-weight: 500; }\\n.mat-tab-group {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-tab-label, .mat-tab-link {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 14px;\\n  font-weight: 500; }\\n.mat-toolbar,\\n.mat-toolbar h1,\\n.mat-toolbar h2,\\n.mat-toolbar h3,\\n.mat-toolbar h4,\\n.mat-toolbar h5,\\n.mat-toolbar h6 {\\n  font: 500 20px/32px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0; }\\n.mat-tooltip {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 10px;\\n  padding-top: 6px;\\n  padding-bottom: 6px; }\\n.mat-tooltip-handset {\\n  font-size: 14px;\\n  padding-top: 9px;\\n  padding-bottom: 9px; }\\n.mat-list-item {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-list-option {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-list .mat-list-item, .mat-nav-list .mat-list-item, .mat-selection-list .mat-list-item {\\n  font-size: 16px; }\\n.mat-list .mat-list-item .mat-line, .mat-nav-list .mat-list-item .mat-line, .mat-selection-list .mat-list-item .mat-line {\\n    white-space: nowrap;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    display: block;\\n    box-sizing: border-box; }\\n.mat-list .mat-list-item .mat-line:nth-child(n+2), .mat-nav-list .mat-list-item .mat-line:nth-child(n+2), .mat-selection-list .mat-list-item .mat-line:nth-child(n+2) {\\n      font-size: 14px; }\\n.mat-list .mat-list-option, .mat-nav-list .mat-list-option, .mat-selection-list .mat-list-option {\\n  font-size: 16px; }\\n.mat-list .mat-list-option .mat-line, .mat-nav-list .mat-list-option .mat-line, .mat-selection-list .mat-list-option .mat-line {\\n    white-space: nowrap;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    display: block;\\n    box-sizing: border-box; }\\n.mat-list .mat-list-option .mat-line:nth-child(n+2), .mat-nav-list .mat-list-option .mat-line:nth-child(n+2), .mat-selection-list .mat-list-option .mat-line:nth-child(n+2) {\\n      font-size: 14px; }\\n.mat-list .mat-subheader, .mat-nav-list .mat-subheader, .mat-selection-list .mat-subheader {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 14px;\\n  font-weight: 500; }\\n.mat-list[dense] .mat-list-item, .mat-nav-list[dense] .mat-list-item, .mat-selection-list[dense] .mat-list-item {\\n  font-size: 12px; }\\n.mat-list[dense] .mat-list-item .mat-line, .mat-nav-list[dense] .mat-list-item .mat-line, .mat-selection-list[dense] .mat-list-item .mat-line {\\n    white-space: nowrap;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    display: block;\\n    box-sizing: border-box; }\\n.mat-list[dense] .mat-list-item .mat-line:nth-child(n+2), .mat-nav-list[dense] .mat-list-item .mat-line:nth-child(n+2), .mat-selection-list[dense] .mat-list-item .mat-line:nth-child(n+2) {\\n      font-size: 12px; }\\n.mat-list[dense] .mat-list-option, .mat-nav-list[dense] .mat-list-option, .mat-selection-list[dense] .mat-list-option {\\n  font-size: 12px; }\\n.mat-list[dense] .mat-list-option .mat-line, .mat-nav-list[dense] .mat-list-option .mat-line, .mat-selection-list[dense] .mat-list-option .mat-line {\\n    white-space: nowrap;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    display: block;\\n    box-sizing: border-box; }\\n.mat-list[dense] .mat-list-option .mat-line:nth-child(n+2), .mat-nav-list[dense] .mat-list-option .mat-line:nth-child(n+2), .mat-selection-list[dense] .mat-list-option .mat-line:nth-child(n+2) {\\n      font-size: 12px; }\\n.mat-list[dense] .mat-subheader, .mat-nav-list[dense] .mat-subheader, .mat-selection-list[dense] .mat-subheader {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 12px;\\n  font-weight: 500; }\\n.mat-option {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 16px; }\\n.mat-optgroup-label {\\n  font: 500 14px/24px Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-simple-snackbar {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 14px; }\\n.mat-simple-snackbar-action {\\n  line-height: 1;\\n  font-family: inherit;\\n  font-size: inherit;\\n  font-weight: 500; }\\n.mat-tree {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-tree-node {\\n  font-weight: 400;\\n  font-size: 14px; }\\n.mat-ripple {\\n  overflow: hidden; }\\n.mat-ripple.mat-ripple-unbounded {\\n  overflow: visible; }\\n.mat-ripple-element {\\n  position: absolute;\\n  border-radius: 50%;\\n  pointer-events: none;\\n  transition: opacity, -webkit-transform 0ms cubic-bezier(0, 0, 0.2, 1);\\n  transition: opacity, transform 0ms cubic-bezier(0, 0, 0.2, 1);\\n  transition: opacity, transform 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 0ms cubic-bezier(0, 0, 0.2, 1);\\n  -webkit-transform: scale(0);\\n          transform: scale(0); }\\n@media screen and (-ms-high-contrast: active) {\\n    .mat-ripple-element {\\n      display: none; } }\\n.cdk-visually-hidden {\\n  border: 0;\\n  clip: rect(0 0 0 0);\\n  height: 1px;\\n  margin: -1px;\\n  overflow: hidden;\\n  padding: 0;\\n  position: absolute;\\n  width: 1px;\\n  outline: 0;\\n  -webkit-appearance: none;\\n  -moz-appearance: none; }\\n.cdk-overlay-container, .cdk-global-overlay-wrapper {\\n  pointer-events: none;\\n  top: 0;\\n  left: 0;\\n  height: 100%;\\n  width: 100%; }\\n.cdk-overlay-container {\\n  position: fixed;\\n  z-index: 1000; }\\n.cdk-overlay-container:empty {\\n    display: none; }\\n.cdk-global-overlay-wrapper {\\n  display: flex;\\n  position: absolute;\\n  z-index: 1000; }\\n.cdk-overlay-pane {\\n  position: absolute;\\n  pointer-events: auto;\\n  box-sizing: border-box;\\n  z-index: 1000;\\n  display: flex;\\n  max-width: 100%;\\n  max-height: 100%; }\\n.cdk-overlay-backdrop {\\n  position: absolute;\\n  top: 0;\\n  bottom: 0;\\n  left: 0;\\n  right: 0;\\n  z-index: 1000;\\n  pointer-events: auto;\\n  -webkit-tap-highlight-color: transparent;\\n  transition: opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1);\\n  opacity: 0; }\\n.cdk-overlay-backdrop.cdk-overlay-backdrop-showing {\\n    opacity: 1; }\\n@media screen and (-ms-high-contrast: active) {\\n      .cdk-overlay-backdrop.cdk-overlay-backdrop-showing {\\n        opacity: 0.6; } }\\n.cdk-overlay-dark-backdrop {\\n  background: rgba(0, 0, 0, 0.288); }\\n.cdk-overlay-transparent-backdrop, .cdk-overlay-transparent-backdrop.cdk-overlay-backdrop-showing {\\n  opacity: 0; }\\n.cdk-overlay-connected-position-bounding-box {\\n  position: absolute;\\n  z-index: 1000;\\n  display: flex;\\n  flex-direction: column;\\n  min-width: 1px;\\n  min-height: 1px; }\\n.cdk-global-scrollblock {\\n  position: fixed;\\n  width: 100%;\\n  overflow-y: scroll; }\\n@-webkit-keyframes cdk-text-field-autofill-start {\\n  /*!*/ }\\n@keyframes cdk-text-field-autofill-start {\\n  /*!*/ }\\n@-webkit-keyframes cdk-text-field-autofill-end {\\n  /*!*/ }\\n@keyframes cdk-text-field-autofill-end {\\n  /*!*/ }\\n.cdk-text-field-autofill-monitored:-webkit-autofill {\\n  -webkit-animation-name: cdk-text-field-autofill-start;\\n          animation-name: cdk-text-field-autofill-start; }\\n.cdk-text-field-autofill-monitored:not(:-webkit-autofill) {\\n  -webkit-animation-name: cdk-text-field-autofill-end;\\n          animation-name: cdk-text-field-autofill-end; }\\ntextarea.cdk-textarea-autosize {\\n  resize: none; }\\ntextarea.cdk-textarea-autosize-measuring {\\n  height: auto !important;\\n  overflow: hidden !important;\\n  padding: 2px 0 !important;\\n  box-sizing: content-box !important; }\\n.mat-ripple-element {\\n  background-color: rgba(0, 0, 0, 0.1); }\\n.mat-option {\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-option:hover:not(.mat-option-disabled), .mat-option:focus:not(.mat-option-disabled) {\\n    background: rgba(0, 0, 0, 0.04); }\\n.mat-option.mat-selected:not(.mat-option-multiple):not(.mat-option-disabled) {\\n    background: rgba(0, 0, 0, 0.04); }\\n.mat-option.mat-active {\\n    background: rgba(0, 0, 0, 0.04);\\n    color: rgba(0, 0, 0, 0.87); }\\n.mat-option.mat-option-disabled {\\n    color: rgba(0, 0, 0, 0.38); }\\n.mat-primary .mat-option.mat-selected:not(.mat-option-disabled) {\\n  color: #5788ce; }\\n.mat-accent .mat-option.mat-selected:not(.mat-option-disabled) {\\n  color: #53c234; }\\n.mat-warn .mat-option.mat-selected:not(.mat-option-disabled) {\\n  color: #df5a4d; }\\n.mat-optgroup-label {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-optgroup-disabled .mat-optgroup-label {\\n  color: rgba(0, 0, 0, 0.38); }\\n.mat-pseudo-checkbox {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-pseudo-checkbox::after {\\n    color: #fafafa; }\\n.mat-pseudo-checkbox-checked,\\n.mat-pseudo-checkbox-indeterminate,\\n.mat-accent .mat-pseudo-checkbox-checked,\\n.mat-accent .mat-pseudo-checkbox-indeterminate {\\n  background: #53c234; }\\n.mat-primary .mat-pseudo-checkbox-checked,\\n.mat-primary .mat-pseudo-checkbox-indeterminate {\\n  background: #5788ce; }\\n.mat-warn .mat-pseudo-checkbox-checked,\\n.mat-warn .mat-pseudo-checkbox-indeterminate {\\n  background: #df5a4d; }\\n.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-disabled,\\n.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-disabled {\\n  background: #b0b0b0; }\\n.mat-app-background {\\n  background-color: #fafafa;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-theme-loaded-marker {\\n  display: none; }\\n.mat-autocomplete-panel {\\n  background: white;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-autocomplete-panel .mat-option.mat-selected:not(.mat-active):not(:hover) {\\n    background: white; }\\n.mat-autocomplete-panel .mat-option.mat-selected:not(.mat-active):not(:hover):not(.mat-option-disabled) {\\n      color: rgba(0, 0, 0, 0.87); }\\n.mat-badge-content {\\n  color: white;\\n  background: #5788ce; }\\n.mat-badge-accent .mat-badge-content {\\n  background: #53c234;\\n  color: white; }\\n.mat-badge-warn .mat-badge-content {\\n  color: #fefcfe;\\n  background: #df5a4d; }\\n.mat-badge {\\n  position: relative; }\\n.mat-badge-hidden .mat-badge-content {\\n  display: none; }\\n.mat-badge-content {\\n  position: absolute;\\n  text-align: center;\\n  display: inline-block;\\n  border-radius: 50%;\\n  transition: -webkit-transform 200ms ease-in-out;\\n  transition: transform 200ms ease-in-out;\\n  transition: transform 200ms ease-in-out, -webkit-transform 200ms ease-in-out;\\n  -webkit-transform: scale(0.6);\\n          transform: scale(0.6);\\n  overflow: hidden;\\n  white-space: nowrap;\\n  text-overflow: ellipsis;\\n  pointer-events: none; }\\n.mat-badge-content.mat-badge-active {\\n  -webkit-transform: none;\\n          transform: none; }\\n.mat-badge-small .mat-badge-content {\\n  width: 16px;\\n  height: 16px;\\n  line-height: 16px; }\\n@media screen and (-ms-high-contrast: active) {\\n    .mat-badge-small .mat-badge-content {\\n      outline: solid 1px;\\n      border-radius: 0; } }\\n.mat-badge-small.mat-badge-above .mat-badge-content {\\n  top: -8px; }\\n.mat-badge-small.mat-badge-below .mat-badge-content {\\n  bottom: -8px; }\\n.mat-badge-small.mat-badge-before .mat-badge-content {\\n  left: -16px; }\\n[dir='rtl'] .mat-badge-small.mat-badge-before .mat-badge-content {\\n  left: auto;\\n  right: -16px; }\\n.mat-badge-small.mat-badge-after .mat-badge-content {\\n  right: -16px; }\\n[dir='rtl'] .mat-badge-small.mat-badge-after .mat-badge-content {\\n  right: auto;\\n  left: -16px; }\\n.mat-badge-small.mat-badge-overlap.mat-badge-before .mat-badge-content {\\n  left: -8px; }\\n[dir='rtl'] .mat-badge-small.mat-badge-overlap.mat-badge-before .mat-badge-content {\\n  left: auto;\\n  right: -8px; }\\n.mat-badge-small.mat-badge-overlap.mat-badge-after .mat-badge-content {\\n  right: -8px; }\\n[dir='rtl'] .mat-badge-small.mat-badge-overlap.mat-badge-after .mat-badge-content {\\n  right: auto;\\n  left: -8px; }\\n.mat-badge-medium .mat-badge-content {\\n  width: 22px;\\n  height: 22px;\\n  line-height: 22px; }\\n@media screen and (-ms-high-contrast: active) {\\n    .mat-badge-medium .mat-badge-content {\\n      outline: solid 1px;\\n      border-radius: 0; } }\\n.mat-badge-medium.mat-badge-above .mat-badge-content {\\n  top: -11px; }\\n.mat-badge-medium.mat-badge-below .mat-badge-content {\\n  bottom: -11px; }\\n.mat-badge-medium.mat-badge-before .mat-badge-content {\\n  left: -22px; }\\n[dir='rtl'] .mat-badge-medium.mat-badge-before .mat-badge-content {\\n  left: auto;\\n  right: -22px; }\\n.mat-badge-medium.mat-badge-after .mat-badge-content {\\n  right: -22px; }\\n[dir='rtl'] .mat-badge-medium.mat-badge-after .mat-badge-content {\\n  right: auto;\\n  left: -22px; }\\n.mat-badge-medium.mat-badge-overlap.mat-badge-before .mat-badge-content {\\n  left: -11px; }\\n[dir='rtl'] .mat-badge-medium.mat-badge-overlap.mat-badge-before .mat-badge-content {\\n  left: auto;\\n  right: -11px; }\\n.mat-badge-medium.mat-badge-overlap.mat-badge-after .mat-badge-content {\\n  right: -11px; }\\n[dir='rtl'] .mat-badge-medium.mat-badge-overlap.mat-badge-after .mat-badge-content {\\n  right: auto;\\n  left: -11px; }\\n.mat-badge-large .mat-badge-content {\\n  width: 28px;\\n  height: 28px;\\n  line-height: 28px; }\\n@media screen and (-ms-high-contrast: active) {\\n    .mat-badge-large .mat-badge-content {\\n      outline: solid 1px;\\n      border-radius: 0; } }\\n.mat-badge-large.mat-badge-above .mat-badge-content {\\n  top: -14px; }\\n.mat-badge-large.mat-badge-below .mat-badge-content {\\n  bottom: -14px; }\\n.mat-badge-large.mat-badge-before .mat-badge-content {\\n  left: -28px; }\\n[dir='rtl'] .mat-badge-large.mat-badge-before .mat-badge-content {\\n  left: auto;\\n  right: -28px; }\\n.mat-badge-large.mat-badge-after .mat-badge-content {\\n  right: -28px; }\\n[dir='rtl'] .mat-badge-large.mat-badge-after .mat-badge-content {\\n  right: auto;\\n  left: -28px; }\\n.mat-badge-large.mat-badge-overlap.mat-badge-before .mat-badge-content {\\n  left: -14px; }\\n[dir='rtl'] .mat-badge-large.mat-badge-overlap.mat-badge-before .mat-badge-content {\\n  left: auto;\\n  right: -14px; }\\n.mat-badge-large.mat-badge-overlap.mat-badge-after .mat-badge-content {\\n  right: -14px; }\\n[dir='rtl'] .mat-badge-large.mat-badge-overlap.mat-badge-after .mat-badge-content {\\n  right: auto;\\n  left: -14px; }\\n.mat-bottom-sheet-container {\\n  background: white;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-button, .mat-icon-button, .mat-stroked-button {\\n  color: inherit;\\n  background: transparent; }\\n.mat-button.mat-primary, .mat-icon-button.mat-primary, .mat-stroked-button.mat-primary {\\n    color: #5788ce; }\\n.mat-button.mat-accent, .mat-icon-button.mat-accent, .mat-stroked-button.mat-accent {\\n    color: #53c234; }\\n.mat-button.mat-warn, .mat-icon-button.mat-warn, .mat-stroked-button.mat-warn {\\n    color: #df5a4d; }\\n.mat-button.mat-primary[disabled], .mat-button.mat-accent[disabled], .mat-button.mat-warn[disabled], .mat-button[disabled][disabled], .mat-icon-button.mat-primary[disabled], .mat-icon-button.mat-accent[disabled], .mat-icon-button.mat-warn[disabled], .mat-icon-button[disabled][disabled], .mat-stroked-button.mat-primary[disabled], .mat-stroked-button.mat-accent[disabled], .mat-stroked-button.mat-warn[disabled], .mat-stroked-button[disabled][disabled] {\\n    color: rgba(0, 0, 0, 0.26); }\\n.mat-button.mat-primary .mat-button-focus-overlay, .mat-icon-button.mat-primary .mat-button-focus-overlay, .mat-stroked-button.mat-primary .mat-button-focus-overlay {\\n    background-color: rgba(87, 136, 206, 0.12); }\\n.mat-button.mat-accent .mat-button-focus-overlay, .mat-icon-button.mat-accent .mat-button-focus-overlay, .mat-stroked-button.mat-accent .mat-button-focus-overlay {\\n    background-color: rgba(83, 194, 52, 0.12); }\\n.mat-button.mat-warn .mat-button-focus-overlay, .mat-icon-button.mat-warn .mat-button-focus-overlay, .mat-stroked-button.mat-warn .mat-button-focus-overlay {\\n    background-color: rgba(223, 90, 77, 0.12); }\\n.mat-button[disabled] .mat-button-focus-overlay, .mat-icon-button[disabled] .mat-button-focus-overlay, .mat-stroked-button[disabled] .mat-button-focus-overlay {\\n    background-color: transparent; }\\n.mat-button.mat-primary .mat-ripple-element, .mat-icon-button.mat-primary .mat-ripple-element, .mat-stroked-button.mat-primary .mat-ripple-element {\\n    background-color: rgba(87, 136, 206, 0.1); }\\n.mat-button.mat-accent .mat-ripple-element, .mat-icon-button.mat-accent .mat-ripple-element, .mat-stroked-button.mat-accent .mat-ripple-element {\\n    background-color: rgba(83, 194, 52, 0.1); }\\n.mat-button.mat-warn .mat-ripple-element, .mat-icon-button.mat-warn .mat-ripple-element, .mat-stroked-button.mat-warn .mat-ripple-element {\\n    background-color: rgba(223, 90, 77, 0.1); }\\n.mat-flat-button, .mat-raised-button, .mat-fab, .mat-mini-fab {\\n  color: rgba(0, 0, 0, 0.87);\\n  background-color: white; }\\n.mat-flat-button.mat-primary, .mat-raised-button.mat-primary, .mat-fab.mat-primary, .mat-mini-fab.mat-primary {\\n    color: white; }\\n.mat-flat-button.mat-accent, .mat-raised-button.mat-accent, .mat-fab.mat-accent, .mat-mini-fab.mat-accent {\\n    color: white; }\\n.mat-flat-button.mat-warn, .mat-raised-button.mat-warn, .mat-fab.mat-warn, .mat-mini-fab.mat-warn {\\n    color: #fefcfe; }\\n.mat-flat-button.mat-primary[disabled], .mat-flat-button.mat-accent[disabled], .mat-flat-button.mat-warn[disabled], .mat-flat-button[disabled][disabled], .mat-raised-button.mat-primary[disabled], .mat-raised-button.mat-accent[disabled], .mat-raised-button.mat-warn[disabled], .mat-raised-button[disabled][disabled], .mat-fab.mat-primary[disabled], .mat-fab.mat-accent[disabled], .mat-fab.mat-warn[disabled], .mat-fab[disabled][disabled], .mat-mini-fab.mat-primary[disabled], .mat-mini-fab.mat-accent[disabled], .mat-mini-fab.mat-warn[disabled], .mat-mini-fab[disabled][disabled] {\\n    color: rgba(0, 0, 0, 0.26); }\\n.mat-flat-button.mat-primary, .mat-raised-button.mat-primary, .mat-fab.mat-primary, .mat-mini-fab.mat-primary {\\n    background-color: #5788ce; }\\n.mat-flat-button.mat-accent, .mat-raised-button.mat-accent, .mat-fab.mat-accent, .mat-mini-fab.mat-accent {\\n    background-color: #53c234; }\\n.mat-flat-button.mat-warn, .mat-raised-button.mat-warn, .mat-fab.mat-warn, .mat-mini-fab.mat-warn {\\n    background-color: #df5a4d; }\\n.mat-flat-button.mat-primary[disabled], .mat-flat-button.mat-accent[disabled], .mat-flat-button.mat-warn[disabled], .mat-flat-button[disabled][disabled], .mat-raised-button.mat-primary[disabled], .mat-raised-button.mat-accent[disabled], .mat-raised-button.mat-warn[disabled], .mat-raised-button[disabled][disabled], .mat-fab.mat-primary[disabled], .mat-fab.mat-accent[disabled], .mat-fab.mat-warn[disabled], .mat-fab[disabled][disabled], .mat-mini-fab.mat-primary[disabled], .mat-mini-fab.mat-accent[disabled], .mat-mini-fab.mat-warn[disabled], .mat-mini-fab[disabled][disabled] {\\n    background-color: rgba(0, 0, 0, 0.12); }\\n.mat-flat-button.mat-primary .mat-ripple-element, .mat-raised-button.mat-primary .mat-ripple-element, .mat-fab.mat-primary .mat-ripple-element, .mat-mini-fab.mat-primary .mat-ripple-element {\\n    background-color: rgba(255, 255, 255, 0.1); }\\n.mat-flat-button.mat-accent .mat-ripple-element, .mat-raised-button.mat-accent .mat-ripple-element, .mat-fab.mat-accent .mat-ripple-element, .mat-mini-fab.mat-accent .mat-ripple-element {\\n    background-color: rgba(255, 255, 255, 0.1); }\\n.mat-flat-button.mat-warn .mat-ripple-element, .mat-raised-button.mat-warn .mat-ripple-element, .mat-fab.mat-warn .mat-ripple-element, .mat-mini-fab.mat-warn .mat-ripple-element {\\n    background-color: rgba(254, 252, 254, 0.1); }\\n.mat-icon-button.mat-primary .mat-ripple-element {\\n  background-color: rgba(87, 136, 206, 0.2); }\\n.mat-icon-button.mat-accent .mat-ripple-element {\\n  background-color: rgba(83, 194, 52, 0.2); }\\n.mat-icon-button.mat-warn .mat-ripple-element {\\n  background-color: rgba(223, 90, 77, 0.2); }\\n.mat-button-toggle {\\n  color: rgba(0, 0, 0, 0.38); }\\n.mat-button-toggle .mat-button-toggle-focus-overlay {\\n    background-color: rgba(0, 0, 0, 0.12); }\\n.mat-button-toggle-checked {\\n  background-color: #e0e0e0;\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-button-toggle-disabled {\\n  background-color: #eeeeee;\\n  color: rgba(0, 0, 0, 0.26); }\\n.mat-button-toggle-disabled.mat-button-toggle-checked {\\n    background-color: #bdbdbd; }\\n.mat-card {\\n  background: white;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-card-subtitle {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-checkbox-frame {\\n  border-color: rgba(0, 0, 0, 0.54); }\\n.mat-checkbox-checkmark {\\n  fill: #fafafa; }\\n.mat-checkbox-checkmark-path {\\n  stroke: #fafafa !important; }\\n@media screen and (-ms-high-contrast: black-on-white) {\\n    .mat-checkbox-checkmark-path {\\n      stroke: #000 !important; } }\\n.mat-checkbox-mixedmark {\\n  background-color: #fafafa; }\\n.mat-checkbox-indeterminate.mat-primary .mat-checkbox-background, .mat-checkbox-checked.mat-primary .mat-checkbox-background {\\n  background-color: #5788ce; }\\n.mat-checkbox-indeterminate.mat-accent .mat-checkbox-background, .mat-checkbox-checked.mat-accent .mat-checkbox-background {\\n  background-color: #53c234; }\\n.mat-checkbox-indeterminate.mat-warn .mat-checkbox-background, .mat-checkbox-checked.mat-warn .mat-checkbox-background {\\n  background-color: #df5a4d; }\\n.mat-checkbox-disabled.mat-checkbox-checked .mat-checkbox-background, .mat-checkbox-disabled.mat-checkbox-indeterminate .mat-checkbox-background {\\n  background-color: #b0b0b0; }\\n.mat-checkbox-disabled:not(.mat-checkbox-checked) .mat-checkbox-frame {\\n  border-color: #b0b0b0; }\\n.mat-checkbox-disabled .mat-checkbox-label {\\n  color: #b0b0b0; }\\n@media screen and (-ms-high-contrast: active) {\\n  .mat-checkbox-disabled {\\n    opacity: 0.5; } }\\n@media screen and (-ms-high-contrast: active) {\\n  .mat-checkbox-background {\\n    background: none; } }\\n.mat-checkbox:not(.mat-checkbox-disabled).mat-primary .mat-checkbox-ripple .mat-ripple-element {\\n  background-color: rgba(87, 136, 206, 0.26); }\\n.mat-checkbox:not(.mat-checkbox-disabled).mat-accent .mat-checkbox-ripple .mat-ripple-element {\\n  background-color: rgba(83, 194, 52, 0.26); }\\n.mat-checkbox:not(.mat-checkbox-disabled).mat-warn .mat-checkbox-ripple .mat-ripple-element {\\n  background-color: rgba(223, 90, 77, 0.26); }\\n.mat-chip.mat-standard-chip {\\n  background-color: #e0e0e0;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-chip.mat-standard-chip .mat-chip-remove {\\n    color: rgba(0, 0, 0, 0.87);\\n    opacity: 0.4; }\\n.mat-chip.mat-standard-chip .mat-chip-remove:hover {\\n    opacity: 0.54; }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-primary {\\n  background-color: #5788ce;\\n  color: white; }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-primary .mat-chip-remove {\\n    color: white;\\n    opacity: 0.4; }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-primary .mat-chip-remove:hover {\\n    opacity: 0.54; }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-warn {\\n  background-color: #df5a4d;\\n  color: #fefcfe; }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-warn .mat-chip-remove {\\n    color: #fefcfe;\\n    opacity: 0.4; }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-warn .mat-chip-remove:hover {\\n    opacity: 0.54; }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-accent {\\n  background-color: #53c234;\\n  color: white; }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-accent .mat-chip-remove {\\n    color: white;\\n    opacity: 0.4; }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-accent .mat-chip-remove:hover {\\n    opacity: 0.54; }\\n.mat-table {\\n  background: white; }\\n.mat-table thead, .mat-table tbody, .mat-table tfoot,\\nmat-header-row, mat-row, mat-footer-row,\\n[mat-header-row], [mat-row], [mat-footer-row],\\n.mat-table-sticky {\\n  background: inherit; }\\nmat-row, mat-header-row, mat-footer-row,\\nth.mat-header-cell, td.mat-cell, td.mat-footer-cell {\\n  border-bottom-color: rgba(0, 0, 0, 0.12); }\\n.mat-header-cell {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-cell, .mat-footer-cell {\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-calendar-arrow {\\n  border-top-color: rgba(0, 0, 0, 0.54); }\\n.mat-datepicker-toggle,\\n.mat-datepicker-content .mat-calendar-next-button,\\n.mat-datepicker-content .mat-calendar-previous-button {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-calendar-table-header {\\n  color: rgba(0, 0, 0, 0.38); }\\n.mat-calendar-table-header-divider::after {\\n  background: rgba(0, 0, 0, 0.12); }\\n.mat-calendar-body-label {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-calendar-body-cell-content {\\n  color: rgba(0, 0, 0, 0.87);\\n  border-color: transparent; }\\n.mat-calendar-body-disabled > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected) {\\n  color: rgba(0, 0, 0, 0.38); }\\n.mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected),\\n.cdk-keyboard-focused .mat-calendar-body-active > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected),\\n.cdk-program-focused .mat-calendar-body-active > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected) {\\n  background-color: rgba(0, 0, 0, 0.04); }\\n.mat-calendar-body-today:not(.mat-calendar-body-selected) {\\n  border-color: rgba(0, 0, 0, 0.38); }\\n.mat-calendar-body-disabled > .mat-calendar-body-today:not(.mat-calendar-body-selected) {\\n  border-color: rgba(0, 0, 0, 0.18); }\\n.mat-calendar-body-selected {\\n  background-color: #5788ce;\\n  color: white; }\\n.mat-calendar-body-disabled > .mat-calendar-body-selected {\\n  background-color: rgba(87, 136, 206, 0.4); }\\n.mat-calendar-body-today.mat-calendar-body-selected {\\n  box-shadow: inset 0 0 0 1px white; }\\n.mat-datepicker-content {\\n  background-color: white;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-datepicker-content.mat-accent .mat-calendar-body-selected {\\n    background-color: #53c234;\\n    color: white; }\\n.mat-datepicker-content.mat-accent .mat-calendar-body-disabled > .mat-calendar-body-selected {\\n    background-color: rgba(83, 194, 52, 0.4); }\\n.mat-datepicker-content.mat-accent .mat-calendar-body-today.mat-calendar-body-selected {\\n    box-shadow: inset 0 0 0 1px white; }\\n.mat-datepicker-content.mat-warn .mat-calendar-body-selected {\\n    background-color: #df5a4d;\\n    color: #fefcfe; }\\n.mat-datepicker-content.mat-warn .mat-calendar-body-disabled > .mat-calendar-body-selected {\\n    background-color: rgba(223, 90, 77, 0.4); }\\n.mat-datepicker-content.mat-warn .mat-calendar-body-today.mat-calendar-body-selected {\\n    box-shadow: inset 0 0 0 1px #fefcfe; }\\n.mat-datepicker-toggle-active {\\n  color: #5788ce; }\\n.mat-datepicker-toggle-active.mat-accent {\\n    color: #53c234; }\\n.mat-datepicker-toggle-active.mat-warn {\\n    color: #df5a4d; }\\n.mat-dialog-container {\\n  background: white;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-divider {\\n  border-top-color: rgba(0, 0, 0, 0.12); }\\n.mat-divider-vertical {\\n  border-right-color: rgba(0, 0, 0, 0.12); }\\n.mat-expansion-panel {\\n  background: white;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-action-row {\\n  border-top-color: rgba(0, 0, 0, 0.12); }\\n.mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:not([aria-disabled='true']).cdk-keyboard-focused, .mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:not([aria-disabled='true']).cdk-program-focused, .mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:not([aria-disabled='true']):hover {\\n  background: rgba(0, 0, 0, 0.04); }\\n@media (hover: none) {\\n  .mat-expansion-panel:not(.mat-expanded):not([aria-disabled='true'])\\n.mat-expansion-panel-header:hover {\\n    background: white; } }\\n.mat-expansion-panel-header-title {\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-expansion-panel-header-description,\\n.mat-expansion-indicator::after {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-expansion-panel-header[aria-disabled='true'] {\\n  color: rgba(0, 0, 0, 0.26); }\\n.mat-expansion-panel-header[aria-disabled='true'] .mat-expansion-panel-header-title,\\n  .mat-expansion-panel-header[aria-disabled='true'] .mat-expansion-panel-header-description {\\n    color: inherit; }\\n.mat-form-field-label {\\n  color: rgba(0, 0, 0, 0.6); }\\n.mat-hint {\\n  color: rgba(0, 0, 0, 0.6); }\\n.mat-form-field.mat-focused .mat-form-field-label {\\n  color: #5788ce; }\\n.mat-form-field.mat-focused .mat-form-field-label.mat-accent {\\n    color: #53c234; }\\n.mat-form-field.mat-focused .mat-form-field-label.mat-warn {\\n    color: #df5a4d; }\\n.mat-focused .mat-form-field-required-marker {\\n  color: #53c234; }\\n.mat-form-field-ripple {\\n  background-color: rgba(0, 0, 0, 0.87); }\\n.mat-form-field.mat-focused .mat-form-field-ripple {\\n  background-color: #5788ce; }\\n.mat-form-field.mat-focused .mat-form-field-ripple.mat-accent {\\n    background-color: #53c234; }\\n.mat-form-field.mat-focused .mat-form-field-ripple.mat-warn {\\n    background-color: #df5a4d; }\\n.mat-form-field.mat-form-field-invalid .mat-form-field-label {\\n  color: #df5a4d; }\\n.mat-form-field.mat-form-field-invalid .mat-form-field-label.mat-accent,\\n  .mat-form-field.mat-form-field-invalid .mat-form-field-label .mat-form-field-required-marker {\\n    color: #df5a4d; }\\n.mat-form-field.mat-form-field-invalid .mat-form-field-ripple,\\n.mat-form-field.mat-form-field-invalid .mat-form-field-ripple.mat-accent {\\n  background-color: #df5a4d; }\\n.mat-error {\\n  color: #df5a4d; }\\n.mat-form-field-appearance-legacy .mat-form-field-label {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-form-field-appearance-legacy .mat-hint {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-form-field-appearance-legacy .mat-form-field-underline {\\n  background-color: rgba(0, 0, 0, 0.42); }\\n.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline {\\n  background-image: linear-gradient(to right, rgba(0, 0, 0, 0.42) 0%, rgba(0, 0, 0, 0.42) 33%, transparent 0%);\\n  background-size: 4px 100%;\\n  background-repeat: repeat-x; }\\n.mat-form-field-appearance-standard .mat-form-field-underline {\\n  background-color: rgba(0, 0, 0, 0.42); }\\n.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline {\\n  background-image: linear-gradient(to right, rgba(0, 0, 0, 0.42) 0%, rgba(0, 0, 0, 0.42) 33%, transparent 0%);\\n  background-size: 4px 100%;\\n  background-repeat: repeat-x; }\\n.mat-form-field-appearance-fill .mat-form-field-flex {\\n  background-color: rgba(0, 0, 0, 0.04); }\\n.mat-form-field-appearance-fill.mat-form-field-disabled .mat-form-field-flex {\\n  background-color: rgba(0, 0, 0, 0.02); }\\n.mat-form-field-appearance-fill .mat-form-field-underline::before {\\n  background-color: rgba(0, 0, 0, 0.42); }\\n.mat-form-field-appearance-fill.mat-form-field-disabled .mat-form-field-label {\\n  color: rgba(0, 0, 0, 0.38); }\\n.mat-form-field-appearance-fill.mat-form-field-disabled .mat-form-field-underline::before {\\n  background-color: transparent; }\\n.mat-form-field-appearance-outline .mat-form-field-outline {\\n  color: rgba(0, 0, 0, 0.12); }\\n.mat-form-field-appearance-outline .mat-form-field-outline-thick {\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick {\\n  color: #5788ce; }\\n.mat-form-field-appearance-outline.mat-focused.mat-accent .mat-form-field-outline-thick {\\n  color: #53c234; }\\n.mat-form-field-appearance-outline.mat-focused.mat-warn .mat-form-field-outline-thick {\\n  color: #df5a4d; }\\n.mat-form-field-appearance-outline.mat-form-field-invalid.mat-form-field-invalid .mat-form-field-outline-thick {\\n  color: #df5a4d; }\\n.mat-form-field-appearance-outline.mat-form-field-disabled .mat-form-field-label {\\n  color: rgba(0, 0, 0, 0.38); }\\n.mat-form-field-appearance-outline.mat-form-field-disabled .mat-form-field-outline {\\n  color: rgba(0, 0, 0, 0.06); }\\n.mat-icon.mat-primary {\\n  color: #5788ce; }\\n.mat-icon.mat-accent {\\n  color: #53c234; }\\n.mat-icon.mat-warn {\\n  color: #df5a4d; }\\n.mat-input-element:disabled {\\n  color: rgba(0, 0, 0, 0.38); }\\n.mat-input-element {\\n  caret-color: #5788ce; }\\n.mat-input-element::-webkit-input-placeholder {\\n    color: rgba(0, 0, 0, 0.42); }\\n.mat-input-element:-ms-input-placeholder {\\n    color: rgba(0, 0, 0, 0.42); }\\n.mat-input-element::-ms-input-placeholder {\\n    color: rgba(0, 0, 0, 0.42); }\\n.mat-input-element::placeholder {\\n    color: rgba(0, 0, 0, 0.42); }\\n.mat-input-element::-moz-placeholder {\\n    color: rgba(0, 0, 0, 0.42); }\\n.mat-input-element::-webkit-input-placeholder {\\n    color: rgba(0, 0, 0, 0.42); }\\n.mat-input-element:-ms-input-placeholder {\\n    color: rgba(0, 0, 0, 0.42); }\\n.mat-accent .mat-input-element {\\n  caret-color: #53c234; }\\n.mat-warn .mat-input-element,\\n.mat-form-field-invalid .mat-input-element {\\n  caret-color: #df5a4d; }\\n.mat-list .mat-list-item, .mat-nav-list .mat-list-item, .mat-selection-list .mat-list-item {\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-list .mat-list-option, .mat-nav-list .mat-list-option, .mat-selection-list .mat-list-option {\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-list .mat-subheader, .mat-nav-list .mat-subheader, .mat-selection-list .mat-subheader {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-list-item-disabled {\\n  background-color: #eeeeee; }\\n.mat-list-option:hover, .mat-list-option.mat-list-item-focus,\\n.mat-nav-list .mat-list-item:hover,\\n.mat-nav-list .mat-list-item.mat-list-item-focus {\\n  background: rgba(0, 0, 0, 0.04); }\\n.mat-menu-panel {\\n  background: white; }\\n.mat-menu-item {\\n  background: transparent;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-menu-item[disabled], .mat-menu-item[disabled]::after {\\n    color: rgba(0, 0, 0, 0.38); }\\n.mat-menu-item .mat-icon:not([color]),\\n.mat-menu-item-submenu-trigger::after {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-menu-item:hover:not([disabled]),\\n.mat-menu-item.cdk-program-focused:not([disabled]),\\n.mat-menu-item.cdk-keyboard-focused:not([disabled]),\\n.mat-menu-item-highlighted:not([disabled]) {\\n  background: rgba(0, 0, 0, 0.04); }\\n.mat-paginator {\\n  background: white; }\\n.mat-paginator,\\n.mat-paginator-page-size .mat-select-trigger {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-paginator-decrement,\\n.mat-paginator-increment {\\n  border-top: 2px solid rgba(0, 0, 0, 0.54);\\n  border-right: 2px solid rgba(0, 0, 0, 0.54); }\\n.mat-paginator-first,\\n.mat-paginator-last {\\n  border-top: 2px solid rgba(0, 0, 0, 0.54); }\\n.mat-icon-button[disabled] .mat-paginator-decrement,\\n.mat-icon-button[disabled] .mat-paginator-increment,\\n.mat-icon-button[disabled] .mat-paginator-first,\\n.mat-icon-button[disabled] .mat-paginator-last {\\n  border-color: rgba(0, 0, 0, 0.38); }\\n.mat-progress-bar-background {\\n  fill: #5788ce; }\\n.mat-progress-bar-buffer {\\n  background-color: #5788ce; }\\n.mat-progress-bar-fill::after {\\n  background-color: #5788ce; }\\n.mat-progress-bar.mat-accent .mat-progress-bar-background {\\n  fill: #b3ff8c; }\\n.mat-progress-bar.mat-accent .mat-progress-bar-buffer {\\n  background-color: #b3ff8c; }\\n.mat-progress-bar.mat-accent .mat-progress-bar-fill::after {\\n  background-color: #53c234; }\\n.mat-progress-bar.mat-warn .mat-progress-bar-background {\\n  fill: #546e7a; }\\n.mat-progress-bar.mat-warn .mat-progress-bar-buffer {\\n  background-color: #546e7a; }\\n.mat-progress-bar.mat-warn .mat-progress-bar-fill::after {\\n  background-color: #df5a4d; }\\n.mat-progress-spinner circle, .mat-spinner circle {\\n  stroke: #5788ce; }\\n.mat-progress-spinner.mat-accent circle, .mat-spinner.mat-accent circle {\\n  stroke: #53c234; }\\n.mat-progress-spinner.mat-warn circle, .mat-spinner.mat-warn circle {\\n  stroke: #df5a4d; }\\n.mat-radio-outer-circle {\\n  border-color: rgba(0, 0, 0, 0.54); }\\n.mat-radio-button.mat-primary.mat-radio-checked .mat-radio-outer-circle {\\n  border-color: #5788ce; }\\n.mat-radio-button.mat-primary .mat-radio-inner-circle {\\n  background-color: #5788ce; }\\n.mat-radio-button.mat-primary .mat-radio-ripple .mat-ripple-element {\\n  background-color: rgba(87, 136, 206, 0.26); }\\n.mat-radio-button.mat-accent.mat-radio-checked .mat-radio-outer-circle {\\n  border-color: #53c234; }\\n.mat-radio-button.mat-accent .mat-radio-inner-circle {\\n  background-color: #53c234; }\\n.mat-radio-button.mat-accent .mat-radio-ripple .mat-ripple-element {\\n  background-color: rgba(83, 194, 52, 0.26); }\\n.mat-radio-button.mat-warn.mat-radio-checked .mat-radio-outer-circle {\\n  border-color: #df5a4d; }\\n.mat-radio-button.mat-warn .mat-radio-inner-circle {\\n  background-color: #df5a4d; }\\n.mat-radio-button.mat-warn .mat-radio-ripple .mat-ripple-element {\\n  background-color: rgba(223, 90, 77, 0.26); }\\n.mat-radio-button.mat-radio-disabled.mat-radio-checked .mat-radio-outer-circle,\\n.mat-radio-button.mat-radio-disabled .mat-radio-outer-circle {\\n  border-color: rgba(0, 0, 0, 0.38); }\\n.mat-radio-button.mat-radio-disabled .mat-radio-ripple .mat-ripple-element,\\n.mat-radio-button.mat-radio-disabled .mat-radio-inner-circle {\\n  background-color: rgba(0, 0, 0, 0.38); }\\n.mat-radio-button.mat-radio-disabled .mat-radio-label-content {\\n  color: rgba(0, 0, 0, 0.38); }\\n.mat-select-content, .mat-select-panel-done-animating {\\n  background: white; }\\n.mat-select-value {\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-select-placeholder {\\n  color: rgba(0, 0, 0, 0.42); }\\n.mat-select-disabled .mat-select-value {\\n  color: rgba(0, 0, 0, 0.38); }\\n.mat-select-arrow {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-select-panel .mat-option.mat-selected:not(.mat-option-multiple) {\\n  background: rgba(0, 0, 0, 0.12); }\\n.mat-form-field.mat-focused.mat-primary .mat-select-arrow {\\n  color: #5788ce; }\\n.mat-form-field.mat-focused.mat-accent .mat-select-arrow {\\n  color: #53c234; }\\n.mat-form-field.mat-focused.mat-warn .mat-select-arrow {\\n  color: #df5a4d; }\\n.mat-form-field .mat-select.mat-select-invalid .mat-select-arrow {\\n  color: #df5a4d; }\\n.mat-form-field .mat-select.mat-select-disabled .mat-select-arrow {\\n  color: rgba(0, 0, 0, 0.38); }\\n.mat-drawer-container {\\n  background-color: #fafafa;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-drawer {\\n  background-color: white;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-drawer.mat-drawer-push {\\n    background-color: white; }\\n.mat-drawer-backdrop.mat-drawer-shown {\\n  background-color: rgba(0, 0, 0, 0.6); }\\n.mat-slide-toggle.mat-checked:not(.mat-disabled) .mat-slide-toggle-thumb {\\n  background-color: #53c234; }\\n.mat-slide-toggle.mat-checked:not(.mat-disabled) .mat-slide-toggle-bar {\\n  background-color: rgba(83, 194, 52, 0.5); }\\n.mat-slide-toggle:not(.mat-checked) .mat-ripple-element {\\n  background-color: rgba(0, 0, 0, 0.06); }\\n.mat-slide-toggle .mat-ripple-element {\\n  background-color: rgba(83, 194, 52, 0.12); }\\n.mat-slide-toggle.mat-primary.mat-checked:not(.mat-disabled) .mat-slide-toggle-thumb {\\n  background-color: #5788ce; }\\n.mat-slide-toggle.mat-primary.mat-checked:not(.mat-disabled) .mat-slide-toggle-bar {\\n  background-color: rgba(87, 136, 206, 0.5); }\\n.mat-slide-toggle.mat-primary:not(.mat-checked) .mat-ripple-element {\\n  background-color: rgba(0, 0, 0, 0.06); }\\n.mat-slide-toggle.mat-primary .mat-ripple-element {\\n  background-color: rgba(87, 136, 206, 0.12); }\\n.mat-slide-toggle.mat-warn.mat-checked:not(.mat-disabled) .mat-slide-toggle-thumb {\\n  background-color: #607d8b; }\\n.mat-slide-toggle.mat-warn.mat-checked:not(.mat-disabled) .mat-slide-toggle-bar {\\n  background-color: rgba(96, 125, 139, 0.5); }\\n.mat-slide-toggle.mat-warn:not(.mat-checked) .mat-ripple-element {\\n  background-color: rgba(0, 0, 0, 0.06); }\\n.mat-slide-toggle.mat-warn .mat-ripple-element {\\n  background-color: rgba(96, 125, 139, 0.12); }\\n.mat-disabled .mat-slide-toggle-thumb {\\n  background-color: #bdbdbd; }\\n.mat-disabled .mat-slide-toggle-bar {\\n  background-color: rgba(0, 0, 0, 0.1); }\\n.mat-slide-toggle-thumb {\\n  background-color: #fafafa; }\\n.mat-slide-toggle-bar {\\n  background-color: rgba(0, 0, 0, 0.38); }\\n.mat-slider-track-background {\\n  background-color: rgba(0, 0, 0, 0.26); }\\n.mat-primary .mat-slider-track-fill,\\n.mat-primary .mat-slider-thumb,\\n.mat-primary .mat-slider-thumb-label {\\n  background-color: #5788ce; }\\n.mat-primary .mat-slider-thumb-label-text {\\n  color: white; }\\n.mat-accent .mat-slider-track-fill,\\n.mat-accent .mat-slider-thumb,\\n.mat-accent .mat-slider-thumb-label {\\n  background-color: #53c234; }\\n.mat-accent .mat-slider-thumb-label-text {\\n  color: white; }\\n.mat-warn .mat-slider-track-fill,\\n.mat-warn .mat-slider-thumb,\\n.mat-warn .mat-slider-thumb-label {\\n  background-color: #df5a4d; }\\n.mat-warn .mat-slider-thumb-label-text {\\n  color: #fefcfe; }\\n.mat-slider-focus-ring {\\n  background-color: rgba(83, 194, 52, 0.2); }\\n.mat-slider:hover .mat-slider-track-background,\\n.cdk-focused .mat-slider-track-background {\\n  background-color: rgba(0, 0, 0, 0.38); }\\n.mat-slider-disabled .mat-slider-track-background,\\n.mat-slider-disabled .mat-slider-track-fill,\\n.mat-slider-disabled .mat-slider-thumb {\\n  background-color: rgba(0, 0, 0, 0.26); }\\n.mat-slider-disabled:hover .mat-slider-track-background {\\n  background-color: rgba(0, 0, 0, 0.26); }\\n.mat-slider-min-value .mat-slider-focus-ring {\\n  background-color: rgba(0, 0, 0, 0.12); }\\n.mat-slider-min-value.mat-slider-thumb-label-showing .mat-slider-thumb,\\n.mat-slider-min-value.mat-slider-thumb-label-showing .mat-slider-thumb-label {\\n  background-color: rgba(0, 0, 0, 0.87); }\\n.mat-slider-min-value.mat-slider-thumb-label-showing.cdk-focused .mat-slider-thumb,\\n.mat-slider-min-value.mat-slider-thumb-label-showing.cdk-focused .mat-slider-thumb-label {\\n  background-color: rgba(0, 0, 0, 0.26); }\\n.mat-slider-min-value:not(.mat-slider-thumb-label-showing) .mat-slider-thumb {\\n  border-color: rgba(0, 0, 0, 0.26);\\n  background-color: transparent; }\\n.mat-slider-min-value:not(.mat-slider-thumb-label-showing):hover .mat-slider-thumb, .mat-slider-min-value:not(.mat-slider-thumb-label-showing).cdk-focused .mat-slider-thumb {\\n  border-color: rgba(0, 0, 0, 0.38); }\\n.mat-slider-min-value:not(.mat-slider-thumb-label-showing):hover.mat-slider-disabled .mat-slider-thumb, .mat-slider-min-value:not(.mat-slider-thumb-label-showing).cdk-focused.mat-slider-disabled .mat-slider-thumb {\\n  border-color: rgba(0, 0, 0, 0.26); }\\n.mat-slider-has-ticks .mat-slider-wrapper::after {\\n  border-color: rgba(0, 0, 0, 0.7); }\\n.mat-slider-horizontal .mat-slider-ticks {\\n  background-image: repeating-linear-gradient(to right, rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7) 2px, transparent 0, transparent);\\n  background-image: -moz-repeating-linear-gradient(0.0001deg, rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7) 2px, transparent 0, transparent); }\\n.mat-slider-vertical .mat-slider-ticks {\\n  background-image: repeating-linear-gradient(to bottom, rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7) 2px, transparent 0, transparent); }\\n.mat-step-header.cdk-keyboard-focused, .mat-step-header.cdk-program-focused, .mat-step-header:hover {\\n  background-color: rgba(0, 0, 0, 0.04); }\\n.mat-step-header .mat-step-label,\\n.mat-step-header .mat-step-optional {\\n  color: rgba(0, 0, 0, 0.38); }\\n.mat-step-header .mat-step-icon {\\n  background-color: #5788ce;\\n  color: white; }\\n.mat-step-header .mat-step-icon-not-touched {\\n  background-color: rgba(0, 0, 0, 0.38);\\n  color: white; }\\n.mat-step-header .mat-step-label.mat-step-label-active {\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-stepper-horizontal, .mat-stepper-vertical {\\n  background-color: white; }\\n.mat-stepper-vertical-line::before {\\n  border-left-color: rgba(0, 0, 0, 0.12); }\\n.mat-stepper-horizontal-line {\\n  border-top-color: rgba(0, 0, 0, 0.12); }\\n.mat-sort-header-arrow {\\n  color: #757575; }\\n.mat-tab-nav-bar,\\n.mat-tab-header {\\n  border-bottom: 1px solid rgba(0, 0, 0, 0.12); }\\n.mat-tab-group-inverted-header .mat-tab-nav-bar,\\n.mat-tab-group-inverted-header .mat-tab-header {\\n  border-top: 1px solid rgba(0, 0, 0, 0.12);\\n  border-bottom: none; }\\n.mat-tab-label, .mat-tab-link {\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-tab-label.mat-tab-disabled, .mat-tab-link.mat-tab-disabled {\\n    color: rgba(0, 0, 0, 0.38); }\\n.mat-tab-header-pagination-chevron {\\n  border-color: rgba(0, 0, 0, 0.87); }\\n.mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\\n  border-color: rgba(0, 0, 0, 0.38); }\\n.mat-tab-group[class*='mat-background-'] .mat-tab-header,\\n.mat-tab-nav-bar[class*='mat-background-'] {\\n  border-bottom: none;\\n  border-top: none; }\\n.mat-tab-group.mat-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-group.mat-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\\n.mat-tab-group.mat-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\\n.mat-tab-group.mat-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\\n.mat-tab-nav-bar.mat-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\\n.mat-tab-nav-bar.mat-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\\n  background-color: rgba(87, 136, 206, 0.3); }\\n.mat-tab-group.mat-primary .mat-ink-bar, .mat-tab-nav-bar.mat-primary .mat-ink-bar {\\n  background-color: #5788ce; }\\n.mat-tab-group.mat-primary.mat-background-primary .mat-ink-bar, .mat-tab-nav-bar.mat-primary.mat-background-primary .mat-ink-bar {\\n  background-color: white; }\\n.mat-tab-group.mat-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-group.mat-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\\n.mat-tab-group.mat-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\\n.mat-tab-group.mat-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\\n.mat-tab-nav-bar.mat-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\\n.mat-tab-nav-bar.mat-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\\n  background-color: rgba(179, 255, 140, 0.3); }\\n.mat-tab-group.mat-accent .mat-ink-bar, .mat-tab-nav-bar.mat-accent .mat-ink-bar {\\n  background-color: #53c234; }\\n.mat-tab-group.mat-accent.mat-background-accent .mat-ink-bar, .mat-tab-nav-bar.mat-accent.mat-background-accent .mat-ink-bar {\\n  background-color: white; }\\n.mat-tab-group.mat-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-group.mat-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\\n.mat-tab-group.mat-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\\n.mat-tab-group.mat-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\\n.mat-tab-nav-bar.mat-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\\n.mat-tab-nav-bar.mat-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\\n  background-color: rgba(84, 110, 122, 0.3); }\\n.mat-tab-group.mat-warn .mat-ink-bar, .mat-tab-nav-bar.mat-warn .mat-ink-bar {\\n  background-color: #df5a4d; }\\n.mat-tab-group.mat-warn.mat-background-warn .mat-ink-bar, .mat-tab-nav-bar.mat-warn.mat-background-warn .mat-ink-bar {\\n  background-color: #fefcfe; }\\n.mat-tab-group.mat-background-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-group.mat-background-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\\n.mat-tab-group.mat-background-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\\n.mat-tab-group.mat-background-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-background-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-background-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\\n.mat-tab-nav-bar.mat-background-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\\n.mat-tab-nav-bar.mat-background-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\\n  background-color: rgba(87, 136, 206, 0.3); }\\n.mat-tab-group.mat-background-primary .mat-tab-header, .mat-tab-group.mat-background-primary .mat-tab-links, .mat-tab-nav-bar.mat-background-primary .mat-tab-header, .mat-tab-nav-bar.mat-background-primary .mat-tab-links {\\n  background-color: #5788ce; }\\n.mat-tab-group.mat-background-primary .mat-tab-label, .mat-tab-group.mat-background-primary .mat-tab-link, .mat-tab-nav-bar.mat-background-primary .mat-tab-label, .mat-tab-nav-bar.mat-background-primary .mat-tab-link {\\n  color: white; }\\n.mat-tab-group.mat-background-primary .mat-tab-label.mat-tab-disabled, .mat-tab-group.mat-background-primary .mat-tab-link.mat-tab-disabled, .mat-tab-nav-bar.mat-background-primary .mat-tab-label.mat-tab-disabled, .mat-tab-nav-bar.mat-background-primary .mat-tab-link.mat-tab-disabled {\\n    color: rgba(255, 255, 255, 0.4); }\\n.mat-tab-group.mat-background-primary .mat-tab-header-pagination-chevron, .mat-tab-nav-bar.mat-background-primary .mat-tab-header-pagination-chevron {\\n  border-color: white; }\\n.mat-tab-group.mat-background-primary .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron, .mat-tab-nav-bar.mat-background-primary .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\\n  border-color: rgba(255, 255, 255, 0.4); }\\n.mat-tab-group.mat-background-primary .mat-ripple-element, .mat-tab-nav-bar.mat-background-primary .mat-ripple-element {\\n  background-color: rgba(255, 255, 255, 0.12); }\\n.mat-tab-group.mat-background-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-group.mat-background-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\\n.mat-tab-group.mat-background-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\\n.mat-tab-group.mat-background-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-background-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-background-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\\n.mat-tab-nav-bar.mat-background-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\\n.mat-tab-nav-bar.mat-background-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\\n  background-color: rgba(179, 255, 140, 0.3); }\\n.mat-tab-group.mat-background-accent .mat-tab-header, .mat-tab-group.mat-background-accent .mat-tab-links, .mat-tab-nav-bar.mat-background-accent .mat-tab-header, .mat-tab-nav-bar.mat-background-accent .mat-tab-links {\\n  background-color: #53c234; }\\n.mat-tab-group.mat-background-accent .mat-tab-label, .mat-tab-group.mat-background-accent .mat-tab-link, .mat-tab-nav-bar.mat-background-accent .mat-tab-label, .mat-tab-nav-bar.mat-background-accent .mat-tab-link {\\n  color: white; }\\n.mat-tab-group.mat-background-accent .mat-tab-label.mat-tab-disabled, .mat-tab-group.mat-background-accent .mat-tab-link.mat-tab-disabled, .mat-tab-nav-bar.mat-background-accent .mat-tab-label.mat-tab-disabled, .mat-tab-nav-bar.mat-background-accent .mat-tab-link.mat-tab-disabled {\\n    color: rgba(255, 255, 255, 0.4); }\\n.mat-tab-group.mat-background-accent .mat-tab-header-pagination-chevron, .mat-tab-nav-bar.mat-background-accent .mat-tab-header-pagination-chevron {\\n  border-color: white; }\\n.mat-tab-group.mat-background-accent .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron, .mat-tab-nav-bar.mat-background-accent .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\\n  border-color: rgba(255, 255, 255, 0.4); }\\n.mat-tab-group.mat-background-accent .mat-ripple-element, .mat-tab-nav-bar.mat-background-accent .mat-ripple-element {\\n  background-color: rgba(255, 255, 255, 0.12); }\\n.mat-tab-group.mat-background-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-group.mat-background-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\\n.mat-tab-group.mat-background-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\\n.mat-tab-group.mat-background-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-background-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-background-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\\n.mat-tab-nav-bar.mat-background-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\\n.mat-tab-nav-bar.mat-background-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\\n  background-color: rgba(84, 110, 122, 0.3); }\\n.mat-tab-group.mat-background-warn .mat-tab-header, .mat-tab-group.mat-background-warn .mat-tab-links, .mat-tab-nav-bar.mat-background-warn .mat-tab-header, .mat-tab-nav-bar.mat-background-warn .mat-tab-links {\\n  background-color: #df5a4d; }\\n.mat-tab-group.mat-background-warn .mat-tab-label, .mat-tab-group.mat-background-warn .mat-tab-link, .mat-tab-nav-bar.mat-background-warn .mat-tab-label, .mat-tab-nav-bar.mat-background-warn .mat-tab-link {\\n  color: #fefcfe; }\\n.mat-tab-group.mat-background-warn .mat-tab-label.mat-tab-disabled, .mat-tab-group.mat-background-warn .mat-tab-link.mat-tab-disabled, .mat-tab-nav-bar.mat-background-warn .mat-tab-label.mat-tab-disabled, .mat-tab-nav-bar.mat-background-warn .mat-tab-link.mat-tab-disabled {\\n    color: rgba(254, 252, 254, 0.4); }\\n.mat-tab-group.mat-background-warn .mat-tab-header-pagination-chevron, .mat-tab-nav-bar.mat-background-warn .mat-tab-header-pagination-chevron {\\n  border-color: #fefcfe; }\\n.mat-tab-group.mat-background-warn .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron, .mat-tab-nav-bar.mat-background-warn .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\\n  border-color: rgba(254, 252, 254, 0.4); }\\n.mat-tab-group.mat-background-warn .mat-ripple-element, .mat-tab-nav-bar.mat-background-warn .mat-ripple-element {\\n  background-color: rgba(254, 252, 254, 0.12); }\\n.mat-toolbar {\\n  background: whitesmoke;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-toolbar.mat-primary {\\n    background: #5788ce;\\n    color: white; }\\n.mat-toolbar.mat-accent {\\n    background: #53c234;\\n    color: white; }\\n.mat-toolbar.mat-warn {\\n    background: #df5a4d;\\n    color: #fefcfe; }\\n.mat-toolbar .mat-form-field-underline,\\n  .mat-toolbar .mat-form-field-ripple,\\n  .mat-toolbar .mat-focused .mat-form-field-ripple {\\n    background-color: currentColor; }\\n.mat-toolbar .mat-form-field-label,\\n  .mat-toolbar .mat-focused .mat-form-field-label,\\n  .mat-toolbar .mat-select-value,\\n  .mat-toolbar .mat-select-arrow,\\n  .mat-toolbar .mat-form-field.mat-focused .mat-select-arrow {\\n    color: inherit; }\\n.mat-toolbar .mat-input-element {\\n    caret-color: currentColor; }\\n.mat-tooltip {\\n  background: rgba(97, 97, 97, 0.9); }\\n.mat-tree {\\n  background: white; }\\n.mat-tree-node {\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-snack-bar-container {\\n  background: #323232;\\n  color: white; }\\n.mat-simple-snackbar-action {\\n  color: #53c234; }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-chip.mat-standard-chip {\\n  background-color: #009cb9;\\n  color: white; }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-chip.mat-standard-chip mat-icon {\\n    margin-left: -8px;\\n    margin-right: 5px; }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-chip.mat-standard-chip.flat {\\n    cursor: not-allowed; }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-chip.mat-standard-chip.mat-lemon {\\n    background-color: #f9f871; }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-chip.mat-standard-chip.mat-energy {\\n    background-color: #ffc65b; }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-chip.mat-standard-chip.mat-cherry {\\n    background-color: #cb4d84;\\n    color: white; }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-chip.mat-standard-chip.mat-coral {\\n    background-color: #f46b72; }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-chip.mat-standard-chip.mat-apricot {\\n    background-color: #ff9661; }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-chip.mat-standard-chip.mat-violine {\\n    background-color: #90408d;\\n    color: white; }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-chip.mat-standard-chip.mat-aqua {\\n    background-color: #00bab4;\\n    color: white; }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-chip.mat-standard-chip.mat-duck {\\n    background-color: #009cb9;\\n    color: white; }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-chip.mat-standard-chip.mat-grass {\\n    background-color: #43d49e;\\n    color: white; }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-chip.mat-standard-chip.mat-royal {\\n    background-color: #007caa;\\n    color: white; }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-chip.mat-standard-chip.mat-error {\\n    background-color: #df5a4d;\\n    color: white; }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-chip.mat-standard-chip.mat-success {\\n    background-color: #8ce683;\\n    color: white; }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-chip.mat-standard-chip.mat-approved {\\n    background-color: #229e00;\\n    color: white; }\\n.mat-expansion-panel {\\n  color: white;\\n  background-color: #53c234; }\\n.mat-expansion-panel-header-title {\\n  font-size: 16px !important;\\n  color: white !important; }\\n.mat-expansion-panel:hover {\\n  background-color: #53c234 !important; }\\n.mat-expansion-panel-header.mat-expanded,\\n.mat-expansion-panel.mat-expanded {\\n  border-radius: 3px 3px 0 0; }\\n.mat-expansion-panel-body {\\n  box-shadow: 0 5px 5px -3px rgba(0, 0, 0, 0.2), 0 8px 10px 1px rgba(0, 0, 0, 0.14), 0 3px 14px 2px rgba(0, 0, 0, 0.12); }\\n.mat-menu-item {\\n  color: #332f30; }\\n.user-setting-item {\\n  margin: 0;\\n  padding: 5px;\\n  height: 24px;\\n  line-height: 1.5; }\\n.static {\\n  position: relative;\\n  height: 35px; }\\n.mat-select-placeholder.mat-floating-placeholder {\\n  -webkit-transform: scale(0.75) translateY(7px) !important;\\n          transform: scale(0.75) translateY(7px) !important; }\\n.seperator {\\n  color: #606060; }\\n.profile-picture-demo {\\n  border-radius: 100%;\\n  height: 32px;\\n  width: 32px;\\n  background-color: #C8962A;\\n  text-align: center;\\n  font-size: 12px;\\n  color: white;\\n  position: relative;\\n  line-height: 30px;\\n  font-family: Helvetica, Arial Black, sans;\\n  margin-left: 10px;\\n  margin-right: 10px; }\\n.profile-picture-dev {\\n  border-radius: 100%;\\n  height: 32px;\\n  width: 32px;\\n  background-color: #FFC790;\\n  text-align: center;\\n  font-size: 12px;\\n  color: white;\\n  position: relative;\\n  line-height: 30px;\\n  font-family: Helvetica, Arial Black, sans;\\n  margin-left: 10px;\\n  margin-right: 10px; }\\n.profile-picture-primary {\\n  border-radius: 100%;\\n  height: 32px;\\n  width: 32px;\\n  background-color: #5788ce;\\n  text-align: center;\\n  font-size: 12px;\\n  color: white;\\n  position: relative;\\n  line-height: 30px;\\n  font-family: Helvetica, Arial Black, sans;\\n  margin-left: 10px;\\n  margin-right: 10px; }\\n.profile-picture-uat {\\n  border-radius: 100%;\\n  height: 32px;\\n  width: 32px;\\n  background-color: #FF9DA0;\\n  text-align: center;\\n  font-size: 12px;\\n  color: white;\\n  position: relative;\\n  line-height: 30px;\\n  font-family: Helvetica, Arial Black, sans;\\n  margin-left: 10px;\\n  margin-right: 10px; }\\n.profile-picture-training {\\n  border-radius: 100%;\\n  height: 32px;\\n  width: 32px;\\n  background-color: #FF7FB4;\\n  text-align: center;\\n  font-size: 12px;\\n  color: white;\\n  position: relative;\\n  line-height: 30px;\\n  font-family: Helvetica, Arial Black, sans;\\n  margin-left: 10px;\\n  margin-right: 10px; }\\n.profile-picture-support {\\n  border-radius: 100%;\\n  height: 32px;\\n  width: 32px;\\n  background-color: #C26FBD;\\n  text-align: center;\\n  font-size: 12px;\\n  color: white;\\n  position: relative;\\n  line-height: 30px;\\n  font-family: Helvetica, Arial Black, sans;\\n  margin-left: 10px;\\n  margin-right: 10px; }\\n.top-toolbar-primary {\\n  color: white !important;\\n  box-shadow: none !important;\\n  z-index: 2; }\\n.username {\\n  font-family: 'Roboto', sans-serif !important;\\n  font-size: 12px;\\n  line-height: 20px;\\n  padding-right: 0px;\\n  color: white;\\n  letter-spacing: .4px; }\\n.settings-demo {\\n  border-right-style: solid;\\n  border-right-color: #C8962A;\\n  border-left-style: solid;\\n  border-left-color: #C8962A;\\n  border-width: 1px;\\n  padding-left: 5px;\\n  padding-right: 10px;\\n  margin-left: 5px;\\n  margin-right: 5px;\\n  height: 62px; }\\n.settings-primary {\\n  border-right-style: solid;\\n  border-right-color: #5788ce;\\n  border-left-style: solid;\\n  border-left-color: #5788ce;\\n  border-width: 1px;\\n  padding-left: 5px;\\n  padding-right: 10px;\\n  margin-left: 5px;\\n  margin-right: 5px;\\n  height: 62px; }\\n.settings-dev {\\n  border-right-style: solid;\\n  border-right-color: #FFC790;\\n  border-left-style: solid;\\n  border-left-color: #FFC790;\\n  border-width: 1px;\\n  padding-left: 5px;\\n  padding-right: 10px;\\n  margin-left: 5px;\\n  margin-right: 5px;\\n  height: 62px; }\\n.settings-uat {\\n  border-right-style: solid;\\n  border-right-color: #FF9DA0;\\n  border-left-style: solid;\\n  border-left-color: #FF9DA0;\\n  border-width: 1px;\\n  padding-left: 5px;\\n  padding-right: 10px;\\n  margin-left: 5px;\\n  margin-right: 5px;\\n  height: 62px; }\\n.settings-training {\\n  border-right-style: solid;\\n  border-right-color: #FF7FB4;\\n  border-left-style: solid;\\n  border-left-color: #FF7FB4;\\n  border-width: 1px;\\n  padding-left: 5px;\\n  padding-right: 10px;\\n  margin-left: 5px;\\n  margin-right: 5px;\\n  height: 62px; }\\n.settings-support {\\n  border-right-style: solid;\\n  border-right-color: #C26FBD;\\n  border-left-style: solid;\\n  border-left-color: #C26FBD;\\n  border-width: 1px;\\n  padding-left: 5px;\\n  padding-right: 10px;\\n  margin-left: 5px;\\n  margin-right: 5px;\\n  height: 62px; }\\n.mat-toolbar h1 {\\n  position: relative;\\n  left: -15px;\\n  color: white;\\n  margin-top: 3px;\\n  padding-left: 16px !important; }\\n.mat-toolbar .button-icon {\\n  line-height: 32px !important;\\n  margin-top: 0;\\n  padding-top: 0; }\\n.foreground-element {\\n  z-index: 2;\\n  position: relative; }\\n.foreground-element.mat-expansion-panel {\\n    background-color: #605C5E !important; }\\n.foreground-element-primary {\\n  z-index: 2;\\n  position: relative; }\\n.foreground-element-primary.mat-expansion-panel {\\n    background-color: #53c234 !important; }\\n.username-chip.mat-expansion-panel {\\n  box-shadow: 0 5px 5px -3px rgba(0, 0, 0, 0.2), 0 8px 10px 1px rgba(0, 0, 0, 0.14), 0 3px 14px 2px rgba(0, 0, 0, 0.12) !important; }\\n.settingIcon {\\n  bottom: 6px;\\n  left: 10px;\\n  position: relative; }\\n\"","import { Location } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { AdminActionsService } from '../../../admin/services/admin-actions.service';\r\nimport { AuthenticationService } from '../../../core/services/authentication.service';\r\nimport { AuthorizationService } from '../../../core/services/authorization.service';\r\nimport { CompanyManagerService } from '../../../core/services/company-manager.service';\r\nimport { UiService } from '../../services/ui.service';\r\n@Component({\r\n    selector: 'atr-top-nav',\r\n    templateUrl: './top-nav.component.html',\r\n    styleUrls: ['./top-nav.component.scss'],\r\n})\r\nexport class TopNavComponent implements OnInit {\r\n\r\n    isExpanded = false;\r\n    pageTitle: string;\r\n    entityLabel: string | number;\r\n    isHomePage: boolean;\r\n    privilegeLevel1Name: string;\r\n    username: string;\r\n    userInitials: string;\r\n    selectedSearchCriteria: string;\r\n    expanded = true;\r\n    envName: string;\r\n    foreGroundStyles: string = 'foreground-element';\r\n    primaryEnv: string = '-primary';\r\n\r\n    foreGroundClass: string;\r\n    activeUrl: string = '';\r\n    item: string;\r\n    profilePictureClass: string;\r\n    settingsClass: string;\r\n    toolbarStyles: string = 'top-toolbar';\r\n    profileStyle: string = 'profile-picture';\r\n    settingsStyle: string = 'settings';\r\n    company: string;\r\n    isPanelOpen = false;\r\n    versionNumber: string = environment.version;\r\n    constructor(private uiService: UiService,\r\n        private router: Router,\r\n        private route: ActivatedRoute,\r\n        private location: Location,\r\n        private authorizationService: AuthorizationService,\r\n        private authenticationService: AuthenticationService,\r\n        private companyManager: CompanyManagerService,\r\n        protected adminActionsService: AdminActionsService,\r\n    ) {\r\n        this.router.events.subscribe((path: any) => {\r\n            this.activeUrl = path.url;\r\n            this.setPageTitle();\r\n        });\r\n        const currentUser = this.authorizationService.getCurrentUser();\r\n        this.username = currentUser.displayName;\r\n        this.userInitials = ((currentUser.firstName ? currentUser.firstName.substring(0, 1) : '')\r\n            + (currentUser.lastName ? currentUser.lastName.substring(0, 2) : '')).toUpperCase();\r\n    }\r\n\r\n    ngOnInit() {\r\n        // set title first time app loads\r\n        this.activeUrl = this.router.url;\r\n        this.setPageTitle();\r\n        this.envName = this.uiService.getStylesForEnvironments();\r\n        this.profilePictureClass = this.profileStyle + this.envName;\r\n        this.settingsClass = this.settingsStyle + this.envName;\r\n\r\n        if (this.envName !== this.primaryEnv) {\r\n            this.foreGroundClass = this.foreGroundStyles;\r\n        } else {\r\n            this.foreGroundClass = this.foreGroundStyles + this.envName;\r\n        }\r\n    }\r\n\r\n    setPageTitle() {\r\n        const originalRoute = this.router.routerState.root;\r\n        let route = originalRoute;\r\n        while (route.firstChild) {\r\n            route = route.firstChild;\r\n        }\r\n        if (route.data) {\r\n            route.data.subscribe((value) => {\r\n                this.setTitleFromRouteData(value);\r\n            });\r\n        } else if (originalRoute.data) {\r\n            originalRoute.data.subscribe((value) => {\r\n                this.setTitleFromRouteData(value);\r\n            });\r\n        } else {\r\n            this.pageTitle = '';\r\n            this.isHomePage = false;\r\n            this.privilegeLevel1Name = undefined;\r\n        }\r\n    }\r\n\r\n    setTitleFromRouteData(dataValue): void {\r\n        if (!dataValue) {\r\n            this.pageTitle = '';\r\n            this.entityLabel = '';\r\n            this.isHomePage = false;\r\n            return;\r\n        }\r\n\r\n        if (dataValue['overrideTitle']) {\r\n            this.pageTitle = dataValue['overrideTitle'];\r\n        } else if (dataValue['title']) {\r\n            this.pageTitle = dataValue['title'];\r\n        } else {\r\n            this.pageTitle = '';\r\n        }\r\n\r\n        this.isHomePage = dataValue['isHomePage'] ? dataValue['isHomePage'] : false;\r\n        this.privilegeLevel1Name = dataValue['privilegeLevel1Name'];\r\n        this.entityLabel = '';\r\n        this.uiService.getEntityLabelIfExists(this.activeUrl, dataValue).subscribe((data) => {\r\n            this.entityLabel = data ? data : '';\r\n        });\r\n    }\r\n\r\n    onLogout() {\r\n        this.authenticationService.logout();\r\n    }\r\n\r\n    onLoadPreviousPageButtonClicked() {\r\n        // made changes to identify router state change when we are changing the url with skiplocationchnage\r\n        // location.back was moving to location history page\r\n        const visibleUrl = window.location.pathname;\r\n        if (visibleUrl === this.activeUrl) {\r\n            this.location.back();\r\n        } else {\r\n            this.router.navigateByUrl(visibleUrl);\r\n        }\r\n    }\r\n\r\n    closePanel() {\r\n        this.isPanelOpen = false;\r\n    }\r\n    navigate() {\r\n        this.adminActionsService.userPreferenceSubject.next();\r\n    }\r\n}\r\n","module.exports = \"<div class=\\\"avatar\\\">\\r\\n\\t{{text}}\\r\\n</div>\\r\\n\"","module.exports = \".avatar {\\n  background-color: white;\\n  border-radius: 50%;\\n  width: 100%;\\n  height: 100%; }\\n\"","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n\tselector: 'atr-user-avatar',\r\n\ttemplateUrl: './user-avatar.component.html',\r\n\tstyleUrls: ['./user-avatar.component.scss']\r\n})\r\nexport class UserAvatarComponent implements OnInit {\r\n\t@Input() text: string;\r\n\r\n\tconstructor() { }\r\n\r\n\tngOnInit() {\r\n\r\n\t}\r\n\r\n}\r\n","module.exports = \"<div fxLayout=\\\"row\\\"\\r\\n     fxLayoutAlign=\\\"left start\\\">\\r\\n    <div class='vessel-contextual-search '\\r\\n         fxFlex=\\\"33%\\\">\\r\\n        <atlas-dropdown-select [isEditable]=\\\"isEditable\\\"\\r\\n                               label=\\\"Vessel Code\\\"\\r\\n                               [fieldControl]=\\\"vesselPart1Ctrl\\\"\\r\\n                               [options]=\\\"vesselPart1FilteredList\\\"\\r\\n                               [isAutocompleteActivated]=\\\"isAutocompleteActivated\\\">\\r\\n        </atlas-dropdown-select>\\r\\n        <mat-error *ngIf=\\\"vesselPart1Ctrl.hasError('inDropdownList')\\\">\\r\\n            Not in list\\r\\n        </mat-error>\\r\\n    </div>\\r\\n\\r\\n    <div class='vessel-contextual-search '\\r\\n         fxFlex=\\\"33%\\\">\\r\\n        <atlas-dropdown-select [isEditable]=\\\"isEditable\\\"\\r\\n                               label=\\\"Flag\\\"\\r\\n                               [fieldControl]=\\\"vesselPart2Ctrl\\\"\\r\\n                               [options]=\\\"vesselPart2FilteredList\\\"\\r\\n                               [isAutocompleteActivated]=\\\"isAutocompleteActivated\\\">\\r\\n        </atlas-dropdown-select>\\r\\n        <mat-error *ngIf=\\\"vesselPart2Ctrl.hasError('inDropdownList')\\\">\\r\\n\\r\\n        </mat-error>\\r\\n    </div>\\r\\n\\r\\n    <div class='vessel-contextual-search '\\r\\n         fxFlex=\\\"33%\\\">\\r\\n        <atlas-dropdown-select [isEditable]=\\\"isEditable\\\"\\r\\n                               label=\\\"Built\\\"\\r\\n                               [fieldControl]=\\\"vesselPart3Ctrl\\\"\\r\\n                               [options]=\\\"vesselPart3FilteredList\\\"\\r\\n                               [isAutocompleteActivated]=\\\"isAutocompleteActivated\\\">\\r\\n        </atlas-dropdown-select>\\r\\n        <mat-error *ngIf=\\\"vesselPart3Ctrl.hasError('inDropdownList')\\\">\\r\\n            Not in list\\r\\n        </mat-error>\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n    <mat-icon matSuffix\\r\\n              *ngIf=\\\"selectedVesselCtrl.enabled\\\"\\r\\n              class=\\\"compass-icon\\\"\\r\\n              (click)=\\\"onExploreClicked($event)\\\">\\r\\n        explore\\r\\n    </mat-icon>\\r\\n\\r\\n    <mat-hint *ngIf=\\\"!selectedVesselCtrl.value && !required\\\">Please enter a valid Vessel</mat-hint>\\r\\n    <mat-hint *ngIf=\\\"selectedVesselCtrl.value\\\">{{selectedVesselCtrl.value.description}}</mat-hint>\"","module.exports = \".vessel-contextual-search-field {\\n  width: 15%; }\\n\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { FormBuilder, FormGroup, ValidatorFn } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Subject } from 'rxjs';\r\nimport { inDropdownListValidator } from '../../directives/autocomplete-dropdown.directive';\r\nimport { AtlasFormControl } from '../../entities/atlas-form-control';\r\nimport { MasterDataProps } from '../../entities/masterdata-props.entity';\r\nimport { MasterData } from '../../entities/masterdata.entity';\r\nimport { SectionTraffic } from '../../entities/section-traffic.entity';\r\nimport { Vessel } from '../../entities/vessel.entity';\r\nimport { MasterdataService } from '../../services/http-services/masterdata.service';\r\nimport { SnackbarService } from '../../services/snackbar.service';\r\nimport { nameof, UtilService } from '../../services/util.service';\r\nimport { ContextualSearchBaseLightBoxComponent } from '../contextual-search/base-light-box/contextual-search-base-light-box.component';\r\n\r\n@Component({\r\n    selector: 'atlas-vessel-contextual-search',\r\n    templateUrl: './vessel-contextual-search.component.html',\r\n    styleUrls: ['./vessel-contextual-search.component.scss'],\r\n})\r\nexport class VesselContextualSearchComponent implements OnInit {\r\n\r\n    fieldGroup: FormGroup;\r\n    @Input() required: boolean = false;\r\n    @Output() readonly optionSelected = new EventEmitter();\r\n\r\n    isAutocompleteActivated: boolean = true;\r\n\r\n    company: string;\r\n    vessels: Vessel[];\r\n\r\n    vesselPart1Ctrl = new AtlasFormControl('VesselName');\r\n    vesselPart1CompleteList: string[] = [];\r\n    vesselPart1FilteredList: string[] = [];\r\n    vesselPart1Validators: ValidatorFn[] = [];\r\n\r\n    vesselPart2Ctrl = new AtlasFormControl('flag');\r\n    vesselPart2CompleteList: string[] = [];\r\n    vesselPart2FilteredList: string[] = [];\r\n    vesselPart2Validators: ValidatorFn[] = [];\r\n\r\n    vesselPart3Ctrl = new AtlasFormControl('built');\r\n    vesselPart3CompleteList: string[] = [];\r\n    vesselPart3FilteredList: string[] = [];\r\n    vesselPart3Validators: ValidatorFn[] = [];\r\n\r\n    selectedVesselCtrl = new AtlasFormControl('');\r\n\r\n    masterdataList: string[] = [MasterDataProps.Vessels];\r\n    destroy$ = new Subject();\r\n    gridId = 'vesselsGrid';\r\n    lightBoxTitle = 'Results for vessel';\r\n    isEditable = true;\r\n    // masterData: MasterData;\r\n    masterdata: MasterData = new MasterData();\r\n\r\n    constructor(private route: ActivatedRoute, protected utils: UtilService,\r\n        protected dialog: MatDialog,\r\n        protected utilService: UtilService,\r\n        protected snackbarService: SnackbarService,\r\n        protected formBuilder: FormBuilder,\r\n        protected masterdataService: MasterdataService,\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.masterdata = this.route.snapshot.data['masterdata'] as MasterData;\r\n\r\n        this.vessels = this.masterdata.vessels;\r\n        this.initialize();\r\n    }\r\n\r\n    initialize() {\r\n\r\n        this.vesselPart2Ctrl.disable();\r\n        this.vesselPart3Ctrl.disable();\r\n\r\n        this.buildVesselArrays();\r\n\r\n        this.onSelectedVesselValueChange();\r\n    }\r\n\r\n    initControlValidators() {\r\n        this.vesselPart1Validators = [];\r\n        this.vesselPart2Validators = [];\r\n        this.vesselPart3Validators = [];\r\n        this.vesselPart1Validators.push(\r\n            inDropdownListValidator(\r\n                this.vesselPart1CompleteList,\r\n                nameof<Vessel>('vesselName'),\r\n            ),\r\n        );\r\n\r\n        this.vesselPart2Validators.push(\r\n            inDropdownListValidator(\r\n                this.vesselPart2CompleteList,\r\n                nameof<Vessel>('flag'),\r\n            ),\r\n        );\r\n\r\n        this.vesselPart3Validators.push(\r\n            inDropdownListValidator(\r\n                this.vesselPart3CompleteList,\r\n                nameof<Vessel>('built'),\r\n            ),\r\n        );\r\n\r\n    }\r\n\r\n    getFormGroup() {\r\n        this.fieldGroup = this.formBuilder.group(\r\n            {\r\n                vesselPart1: this.vesselPart1Ctrl,\r\n                vesselPart2: this.vesselPart2Ctrl,\r\n                vesselPart3: this.vesselPart3Ctrl,\r\n                selectedCommodity: this.selectedVesselCtrl,\r\n            },\r\n        );\r\n\r\n        return this.fieldGroup;\r\n    }\r\n\r\n    // setValidators() {\r\n    //     this.initControlValidators();\r\n    //     this.vesselPart1Ctrl.setValidators(\r\n    //         Validators.compose(this.vesselPart1Validators),\r\n    //     );\r\n\r\n    //     // this.vesselPart2Ctrl.setValidators(\r\n    //     //     Validators.compose(this.vesselPart2Validators),\r\n    //     // );\r\n\r\n    //     // this.vesselPart3Ctrl.setValidators(\r\n    //     //     Validators.compose(this.vesselPart3Validators),\r\n    //     // );\r\n\r\n    // }\r\n\r\n    private buildVesselArrays() {\r\n        this.vessels.forEach((cmy: Vessel) => {\r\n            // vessel Part 1 should always be defined and is independant\r\n            this.vesselPart1CompleteList = this.pushUniqueStringInArray(this.vesselPart1CompleteList, cmy.vesselName);\r\n\r\n        });\r\n\r\n        // Form Controls value changes\r\n        // -- Part 1\r\n        this.vesselPart1FilteredList = this.vesselPart1CompleteList;\r\n        this.vesselPart1Ctrl.valueChanges.subscribe((value: string) => {\r\n            this.vesselPart2Ctrl.reset();\r\n            this.vesselPart3Ctrl.disable();\r\n\r\n            this.vesselPart2CompleteList = [];\r\n\r\n            this.vesselPart1FilteredList = this.vesselPart1CompleteList.filter((cmyType) => {\r\n                return cmyType.toLocaleLowerCase().startsWith(value.toLocaleLowerCase());\r\n            });\r\n            if (this.vesselPart1Ctrl.valid) {\r\n                const validVessels: Vessel[] = this.vessels.filter((vessel: Vessel) => {\r\n                    return vessel.vesselName === value;\r\n                });\r\n\r\n                if (validVessels.length > 0) {\r\n                    this.vesselPart2Ctrl.enable();\r\n\r\n                    validVessels.forEach((vessel: Vessel) => {\r\n                        const str = vessel.flag ? vessel.flag : '';\r\n                        this.vesselPart2CompleteList =\r\n                            this.pushUniqueStringInArray(this.vesselPart2CompleteList, str.toString());\r\n                    });\r\n                    this.vesselPart2FilteredList = this.vesselPart2CompleteList;\r\n\r\n                    this.getSelectedVessels();\r\n\r\n                }\r\n            }\r\n\r\n        });\r\n\r\n        // -- Part 2\r\n        this.vesselPart2Ctrl.valueChanges.subscribe((value: number) => {\r\n            this.vesselPart3Ctrl.reset();\r\n            this.vesselPart3CompleteList = [];\r\n            this.vesselPart3Ctrl.disable();\r\n\r\n            this.vesselPart2FilteredList = this.vesselPart2CompleteList.filter((cmyOrigin) => {\r\n                return value && cmyOrigin;\r\n            });\r\n\r\n            if (this.vesselPart2Ctrl.valid && this.vesselPart2Ctrl.enabled) {\r\n\r\n                const validVessels: Vessel[] = this.vessels.filter((vessel: Vessel) => {\r\n                    return vessel.flag === this.vesselPart1Ctrl.value\r\n                        && vessel.flag === this.vesselPart1Ctrl.value;\r\n                });\r\n\r\n                if (validVessels.length > 0) {\r\n                    this.vesselPart3Ctrl.enable();\r\n\r\n                    validVessels.forEach((vessel: Vessel) => {\r\n\r\n                        const str = vessel.built ? vessel.built : '';\r\n                        this.vesselPart3CompleteList =\r\n                            this.pushUniqueStringInArray(this.vesselPart3CompleteList, str);\r\n                    });\r\n\r\n                    this.vesselPart3FilteredList = this.vesselPart3CompleteList;\r\n                    // this.setValidators();\r\n                    this.getSelectedVessels();\r\n\r\n                }\r\n\r\n            }\r\n        });\r\n\r\n        // -- Part 3 : just filter the list\r\n\r\n        this.vesselPart3Ctrl.valueChanges.subscribe((value: string) => {\r\n            this.vesselPart3FilteredList = this.vesselPart3CompleteList.filter((cmyPart3) => {\r\n                return value && cmyPart3.toLocaleLowerCase().startsWith(value.toLocaleLowerCase());\r\n            });\r\n            if (this.vesselPart3Ctrl.valid) {\r\n                this.getSelectedVessels();\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    // todo: move this to utilService\r\n    pushUniqueStringInArray(stringArray: string[], value: string): string[] {\r\n        const myClonedArray: string[] = JSON.parse(JSON.stringify(stringArray));\r\n        if (myClonedArray.lastIndexOf(value) === -1) {\r\n            myClonedArray.push(value);\r\n        }\r\n        return myClonedArray.sort((str1, str2) => str1.localeCompare(str2));\r\n    }\r\n\r\n    getVessel(): Vessel {\r\n        return this.selectedVesselCtrl.value;\r\n    }\r\n\r\n    onExploreClicked(event) {\r\n        const searchLightBox = this.dialog.open(ContextualSearchBaseLightBoxComponent, {\r\n            data: {\r\n                gridId: this.gridId,\r\n                rowData$: this.getFilteredVessels(),\r\n            },\r\n            width: '80%',\r\n            height: '80%',\r\n        });\r\n\r\n        searchLightBox.afterClosed().subscribe((vessel: Vessel) => {\r\n            if (vessel) {\r\n                this.patchValue(vessel);\r\n            }\r\n        });\r\n\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n    }\r\n\r\n    patchValue(vessel: Vessel) {\r\n        this.selectedVesselCtrl.patchValue(vessel);\r\n        this.vesselPart1Ctrl.patchValue(vessel.vesselName);\r\n        this.vesselPart2Ctrl.patchValue(vessel.flag);\r\n        this.vesselPart3Ctrl.patchValue(vessel.built);\r\n        this.onSelectedVesselValueChange();\r\n    }\r\n\r\n    initForm(data: SectionTraffic) {\r\n        this.vesselPart1Ctrl.patchValue(data.vesselCode);\r\n    }\r\n\r\n    private getSelectedVessels() {\r\n\r\n        this.selectedVesselCtrl.patchValue(\r\n            this.vessels.find((cmy: Vessel) => {\r\n                return cmy.vesselName === this.vesselPart1Ctrl.value\r\n                    && cmy.flag === this.vesselPart2Ctrl.value\r\n                    && cmy.built === this.vesselPart3Ctrl.value;\r\n\r\n            }),\r\n        );\r\n        this.onSelectedVesselValueChange();\r\n    }\r\n\r\n    private getFilteredVessels(): Vessel[] {\r\n        return this.vessels.filter((cmy) => {\r\n            return (((this.vesselPart1Ctrl.value\r\n                && cmy.vesselName.toLowerCase().startsWith(String(this.vesselPart1Ctrl.value).toLowerCase()))\r\n                ||\r\n                (!this.vesselPart1Ctrl.value))\r\n                &&\r\n                ((this.vesselPart2Ctrl.value\r\n                    && cmy.flag.toString().toLowerCase().startsWith(String(this.vesselPart2Ctrl.value).toLowerCase()))\r\n                    ||\r\n                    (!this.vesselPart2Ctrl.value))\r\n                &&\r\n                ((this.vesselPart3Ctrl.value\r\n                    && cmy.built.toLowerCase().startsWith(String(this.vesselPart3Ctrl.value).toLowerCase()))\r\n                    ||\r\n                    (!this.vesselPart3Ctrl.value)));\r\n        });\r\n    }\r\n\r\n    private onSelectedVesselValueChange() {\r\n\r\n        if (!this.selectedVesselCtrl.value) {\r\n            if (this.required) {\r\n                this.selectedVesselCtrl.setErrors({ invalidVessel: true });\r\n            } else {\r\n                this.selectedVesselCtrl.setErrors(null);\r\n            }\r\n        } else {\r\n            this.selectedVesselCtrl.setErrors(null);\r\n            this.optionSelected.emit((this.selectedVesselCtrl.value as Vessel).vesselName);\r\n        }\r\n    }\r\n\r\n}\r\n","module.exports = \"<div>\\r\\n    <mat-card class=\\\"warning-card warning-banner-card\\\">\\r\\n        <div class=\\\"warning-circle-icon\\\">\\r\\n            <mat-icon>warning_outline</mat-icon>\\r\\n        </div>\\r\\n        <mat-card-header>\\r\\n            <mat-card-title>\\r\\n                <h4 class=\\\"no-margin\\\">{{title}}</h4>\\r\\n            </mat-card-title>\\r\\n            <mat-card-subtitle>\\r\\n                {{description}}\\r\\n            </mat-card-subtitle>\\r\\n        </mat-card-header>\\r\\n    </mat-card>\\r\\n</div>\\r\\n\"","module.exports = \"mat-card.warning-card.mat-card {\\n  padding: 0 !important;\\n  height: 75px;\\n  display: flex;\\n  align-items: center; }\\n  mat-card.warning-card.mat-card mat-card-header.mat-card-header mat-card-title.mat-card-title {\\n    margin: 0;\\n    padding: 8px 0; }\\n  mat-card.warning-card.mat-card mat-card-header.mat-card-header h4 {\\n    margin: 0; }\\n  mat-card.warning-card.mat-card mat-card-header.mat-card-header mat-card-subtitle.mat-card-subtitle {\\n    margin: 0; }\\n\"","import { Component, Input, OnInit, ChangeDetectionStrategy } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'atlas-warning-banner',\r\n    templateUrl: './warning-banner.component.html',\r\n    styleUrls: ['./warning-banner.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class WarningBannerComponent implements OnInit {\r\n    @Input() title: string;\r\n    @Input() description: string;\r\n\r\n    constructor() { }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n}\r\n","import { Directive, Input, OnInit, TemplateRef, ViewContainerRef } from '@angular/core';\r\nimport { FlagInfo } from '../dtos/flag-info';\r\nimport { FeatureFlagService } from '../services/http-services/feature-flag.service';\r\n\r\n@Directive({\r\n    selector: '[atlasFeatureFlag]',\r\n})\r\nexport class FeatureFlagDirective implements OnInit {\r\n    private isElseSection: boolean = false;\r\n    private gapName: string = null;\r\n\r\n    @Input() atlasFeatureFlag: string;\r\n    set(value: string) {\r\n        this.atlasFeatureFlag = value;\r\n    }\r\n\r\n    constructor(\r\n        private templateRef: TemplateRef<any>,\r\n        private viewContainer: ViewContainerRef,\r\n        private featureFlagService: FeatureFlagService,\r\n    ) {}\r\n\r\n    ngOnInit(): void {\r\n        this.parseGapName(this.atlasFeatureFlag);\r\n\r\n        this.featureFlagService.getFlagInfo(this.gapName).subscribe(\r\n            (data: FlagInfo) => {\r\n                if (data && data.active === true) {\r\n                    this.showMe(data.active);\r\n                } else {\r\n                    this.showMe(false);\r\n                }\r\n            },\r\n            (error) => {\r\n                this.showMe(false);\r\n            },\r\n        );\r\n    }\r\n\r\n    private parseGapName(appFlagValue: string) {\r\n        const NOT_CHAR = '!';\r\n        const splits = appFlagValue.split(NOT_CHAR);\r\n\r\n        if (splits.length === 1 && splits[0] === appFlagValue) {\r\n            // A gap is in the form of <GapName>\r\n            this.isElseSection = false;\r\n            this.gapName = appFlagValue;\r\n        } else if (splits.length === 2 && splits[0].trim().length === 0) {\r\n            // A gap is in the form of !<GapName>\r\n            this.isElseSection = true;\r\n            this.gapName = splits[1];\r\n        } else {\r\n            // Unexpected parsed gap name, use logger to warn and, perhaps show an error.\r\n        }\r\n    }\r\n\r\n    private showMe(flagActive: boolean) {\r\n        if (!this.isElseSection && flagActive) {\r\n            this.viewContainer.createEmbeddedView(this.templateRef);\r\n        } else {\r\n            this.viewContainer.clear();\r\n        }\r\n    }\r\n}\r\n","import { Directive, Input, Renderer2, TemplateRef, ViewContainerRef } from '@angular/core';\r\nimport { AuthorizationService } from '../../core/services/authorization.service';\r\nimport { ActionDefaultBehaviours } from '../enums/action-default-behaviours.enum';\r\nimport { PermissionLevels } from '../enums/permission-level.enum';\r\n\r\n@Directive({ selector: '[ifAuthorized]' })\r\nexport class AuthorizedDirective {\r\n\r\n    @Input() ifAuthorized: string;\r\n    @Input() ifAuthorizedBehaviour: ActionDefaultBehaviours = ActionDefaultBehaviours.Hide;\r\n    @Input() ifAuthorizedLevel: PermissionLevels = PermissionLevels.Read;\r\n    @Input() ifAuthorizedSuperPrivilege: string;\r\n\r\n    /*different waysuse it\r\n     * *ifAuthorized = \"'Level1.Level2.Level3'; company:urlManagementService.getCurrentCompanyId();\r\n     behaviour: ActionDefaultBehaviours.Disable\"\r\n     * *ifAuthorized = \"'Level1.Level2.Level3'; company:urlManagementService.getCurrentCompanyId(), level: PermissionLevels.read\"\r\n\t * *ifAuthorized = \"'Level1.Level2.Level3'; company:urlManagementService.getCurrentCompanyId(),\r\n     * behaviour: ActionDefaultBehaviours.Disable\"\r\n     * \t * *ifAuthorized = \"'Level1.Level2.Level3'; company:urlManagementService.getCurrentCompanyId(),\r\n     * superPrivilege: 'Level1.Level2.Level3'\"\r\n\t * *ifAuthorized = \"'Level1.Level2';company:'urlManagementService.getCurrentCompanyId()'\"\r\n\t * *ifAuthorized = \"'Level1';company:'urlManagementService.getCurrentCompanyId()\"\r\n\t */\r\n\r\n    constructor(private templateRef: TemplateRef<any>,\r\n        private viewContainer: ViewContainerRef,\r\n        private authorizationService: AuthorizationService,\r\n        private renderer: Renderer2) {\r\n    }\r\n\r\n    @Input()\r\n    set ifAuthorizedCompany(value: string) {\r\n        const privileges = this.ifAuthorized.split('.');\r\n        const privilege = privileges[privileges.length - 1];\r\n        const firstParent = (privileges.length > 1) ? privileges[privileges.length - 2] : null;\r\n        const secondParent = (privileges.length > 2) ? privileges[privileges.length - 3] : null;\r\n\r\n        let hasSuperPrivilege = false;\r\n        if (this.ifAuthorizedSuperPrivilege) {\r\n            const superPrivileges = this.ifAuthorizedSuperPrivilege.split('.');\r\n            const superPrivilege = superPrivileges[superPrivileges.length - 1];\r\n            const superFirstParent = (superPrivileges.length > 1) ? superPrivileges[superPrivileges.length - 2] : null;\r\n            const superSecondParent = (superPrivileges.length > 2) ? superPrivileges[superPrivileges.length - 3] : null;\r\n            const superPrivilegePermissionLevel = this.authorizationService.getPermissionLevel(\r\n                value, superPrivilege, superFirstParent, superSecondParent);\r\n            hasSuperPrivilege = superPrivilegePermissionLevel > PermissionLevels.None;\r\n        }\r\n\r\n        if (hasSuperPrivilege) {\r\n            return;\r\n        }\r\n\r\n        this.viewContainer.clear();\r\n        const userPermissionLevel = this.authorizationService.getPermissionLevel(value, privilege, firstParent, secondParent);\r\n        if (userPermissionLevel === PermissionLevels.None) {\r\n            if (this.ifAuthorizedBehaviour === ActionDefaultBehaviours.Disable) {\r\n                // this peace of code does not work and I do not know how to fix it\r\n                // other people seem to have this error:\r\n                // tslint:disable-next-line:max-line-length\r\n                // https://stackoverflow.com/questions/50655436/unable-to-setattribute-disabled-using-renderer2-on-angular-material-select/50655779\r\n                // their 'bypass\" doesn't seem to work for me\r\n                // iit does apply the attribut to the dom but maybe the attribute is given to the wrong drom element?\r\n\r\n                this.viewContainer.createEmbeddedView(this.templateRef);\r\n                this.renderer.setProperty(this.templateRef.elementRef.nativeElement, 'disable', true);\r\n            }\r\n        } else if (this.ifAuthorizedLevel <= userPermissionLevel) {\r\n            // If my permission level is higher than the authorized level, then i'll display\r\n            this.viewContainer.createEmbeddedView(this.templateRef);\r\n            if (userPermissionLevel === PermissionLevels.Read) {\r\n                this.renderer.setProperty(this.templateRef.elementRef.nativeElement, 'disable', true);\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { ValidatorFn } from '@angular/forms/src/directives/validators';\r\nimport { AbstractControl } from '@angular/forms/src/model';\r\n\r\nexport function inDropdownListValidator(\r\n    list: any[] = [],\r\n    propertyToCompare: string = 'value',\r\n    allowEmpty: boolean = false,\r\n    caseSensitive: boolean = true): ValidatorFn {\r\n    return (control: AbstractControl): { [key: string]: any } => {\r\n        if (allowEmpty && control.value && control.value.length === 0) {\r\n            return null;\r\n        }\r\n        const inList = list.find((x) => {\r\n            if ((typeof control.value === 'string') || !control.value) {\r\n                return isEqual(x[propertyToCompare], control.value, caseSensitive) ||\r\n                    isEqual(x, control.value, caseSensitive);\r\n            }\r\n\r\n            return isEqual(x[propertyToCompare], control.value, caseSensitive)\r\n                || isEqual(x, control.value, caseSensitive)\r\n                || isEqual(x[propertyToCompare], control.value[propertyToCompare], caseSensitive);\r\n        });\r\n        return (inList || !control.value) ? null : { inDropdownList: true };\r\n    };\r\n}\r\n\r\nfunction isEqual(text1: string, text2: string, caseSensitive: boolean): boolean {\r\n    if (text1 && text2 && !caseSensitive) {\r\n        return text1.toLocaleLowerCase() === text2.toLocaleLowerCase();\r\n    }\r\n    return text1 === text2;\r\n}\r\n","import { Directive, HostListener, ElementRef, Input } from '@angular/core';\r\nimport { MatDatepickerInputEvent } from \"@angular/material/datepicker\";\r\nimport { Moment } from \"moment\";\r\nimport * as _moment from 'moment';\r\nconst moment = _moment;\r\n\r\n@Directive({\r\n\tselector: '[atr-date-picker-local-date]'\r\n})\r\nexport class DatepickerLocaldateDirective {\r\n\tel: ElementRef = null;\r\n\tconstructor(element: ElementRef) {\r\n\t\tthis.el = element;\r\n\t}\r\n\r\n\t@HostListener('dateChange', ['$event'])\r\n\tonDateValueChange(event: MatDatepickerInputEvent<Moment>) {\r\n\r\n\r\n\t}\r\n}\r\n","import { Directive, ElementRef, OnInit } from '@angular/core';\r\nimport { UiService } from '../services/ui.service';\r\n@Directive({\r\n    selector: '[matToolbarHighlight]',\r\n})\r\nexport class HighlightDirective implements OnInit {\r\n    element: ElementRef = null;\r\n    envName: string;\r\n    constructor(el: ElementRef, private uiService: UiService) {\r\n        this.element = el;\r\n\r\n    }\r\n    ngOnInit() {\r\n        this.envName = this.uiService.getStylesForEnvironments();\r\n        switch (this.envName) {\r\n            case '-dev': {\r\n                return this.element.nativeElement.style.backgroundColor = '#FF9661';\r\n            }\r\n            case '-demo': {\r\n                return this.element.nativeElement.style.backgroundColor = '#FFC65B';\r\n            }\r\n            case '-uat': {\r\n                return this.element.nativeElement.style.backgroundColor = '#F46B72';\r\n            }\r\n            case '-training': {\r\n                return this.element.nativeElement.style.backgroundColor = '#CB4D84';\r\n            }\r\n            case '-support': {\r\n                return this.element.nativeElement.style.backgroundColor = '#90408D';\r\n            }\r\n\r\n            default: {\r\n                return this.element.nativeElement.style.backgroundColor = '#185b9d';\r\n            }\r\n\r\n        }\r\n    }\r\n}\r\n","import { Directive, ElementRef, HostListener, Input } from '@angular/core';\r\n\r\n@Directive({\r\n    selector: '[atlas-number-decimals]',\r\n})\r\nexport class NumberDecimalsDirective {\r\n\r\n    el: ElementRef = null;\r\n    constructor(element: ElementRef) {\r\n        this.el = element;\r\n    }\r\n    @Input() maxdecimals: number = 0;\r\n    @Input() positive: boolean = false;\r\n    @Input() maxValue: number = undefined;\r\n\r\n    @HostListener('change') onChangeHandler() {\r\n        this.setMaxNumberOfDecimals();\r\n        this.checkPositive();\r\n        this.checkMaxValue();\r\n\r\n    }\r\n\r\n    @HostListener('document:keyup', ['$event']) onKeydownHandler(event: KeyboardEvent) {\r\n        this.setMaxNumberOfDecimals();\r\n        this.checkPositive();\r\n        this.checkMaxValue();\r\n    }\r\n\r\n    setMaxNumberOfDecimals() {\r\n        if (this.maxdecimals == null) { this.maxdecimals = 2; }\r\n        if (this.el.nativeElement.value != null) {\r\n            const valueString: string = String(this.el.nativeElement.value);\r\n            const splits: string[] = valueString.split('.');\r\n            if (splits.length > 1) {\r\n                if (splits[1].length > this.maxdecimals) {\r\n                    this.el.nativeElement.value = Number(valueString.substring(0, valueString.length - 1));\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    checkPositive() {\r\n        if (this.positive) {\r\n            if (this.el.nativeElement.value != null) {\r\n                if (Number(this.el.nativeElement.value) < 0) {\r\n                    this.el.nativeElement.value = Number(this.el.nativeElement.value) * -1;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    checkMaxValue() {\r\n        if (this.maxValue !== undefined) {\r\n            if (this.el.nativeElement.value != null) {\r\n                if (Number(this.el.nativeElement.value) > this.maxValue) {\r\n                    this.el.nativeElement.value = this.maxValue;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { Directive, ElementRef, HostListener, Input } from '@angular/core';\r\n\r\n@Directive({\r\n\tselector: '[sign-number]'\r\n})\r\nexport class SignNumberDirective {\r\n\r\n\tel: ElementRef = null;\r\n\tconstructor(element: ElementRef) {\r\n\t\tthis.el = element;\r\n\t}\r\n\t@Input() maxdecimals: number;\r\n\t@Input() positive: boolean = false; \r\n\r\n\r\n\t@HostListener('change') onChangeHandler() {\r\n\t\tthis.setMaxNumberOfDecimals();\r\n\t\tthis.checkPositive();\r\n\t\tthis.addPlusSign();\r\n\t}\r\n\r\n\t@HostListener('onfocusout') onFocusOutHandler() {\r\n\t\tthis.setMaxNumberOfDecimals();\r\n\t\tthis.checkPositive();\r\n\t\tthis.addPlusSign(); \r\n\t}\r\n\r\n\t@HostListener('document:keyup', ['$event']) onKeydownHandler(event: KeyboardEvent) {\r\n\t\tthis.setMaxNumberOfDecimals();\r\n\t\tthis.checkPositive();\r\n\t\tthis.addPlusSign();\r\n\t}\r\n\r\n\tsetMaxNumberOfDecimals() {\r\n\t\tif (this.maxdecimals == null) this.maxdecimals = 2;\r\n\t\tif (this.el.nativeElement.value != null) {\r\n\t\t\tlet valueString: string = String(this.el.nativeElement.value);\r\n\t\t\tlet splits: string[] = valueString.split('.');\r\n\t\t\tif (splits.length > 1) {\r\n\t\t\t\tif (splits[1].length > this.maxdecimals) {\r\n\t\t\t\t\tthis.el.nativeElement.value = Number(valueString.substring(0, valueString.length - 1));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tcheckPositive() {\r\n\t\tif (this.positive) {\r\n\t\t\tif (this.el.nativeElement.value != null) {\r\n\t\t\t\tif (Number(this.el.nativeElement.value) < 0) {\r\n\t\t\t\t\tthis.el.nativeElement.value = Number(this.el.nativeElement.value) * -1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\taddPlusSign() {\r\n\t\tif (this.el.nativeElement.value != null) {\r\n\t\t\tif (Number(this.el.nativeElement.value) > 0) {\r\n\t\t\t\tif (!this.el.nativeElement.value.startWith(\"+\"))\r\n\t\t\t\t\tthis.el.nativeElement.value = \"+\" + Number(this.el.nativeElement.value);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n","import { Directive, ElementRef, HostListener, Input } from '@angular/core';\r\n@Directive({\r\n    selector: '[specialIsAlphaNumeric]'\r\n})\r\nexport class SpecialCharacterDirective {\r\n\r\n    regexStr = '^[a-zA-Z0-9.]*$';\r\n    @Input() isAlphaNumeric: boolean;\r\n\r\n    constructor(private el: ElementRef) { }\r\n\r\n\r\n    @HostListener('keypress', ['$event']) onKeyPress(event) {\r\n        return new RegExp(this.regexStr).test(event.key);\r\n    }\r\n\r\n    @HostListener('paste', ['$event'])\r\n    @HostListener('keyup', ['$event'])\r\n    @HostListener('mouseout', ['$event'])\r\n    onEvent(event) {\r\n        this.el.nativeElement.value = this.el.nativeElement.value.replace(/[^A-Za-z0-9. ]/g, '').replace(/\\s/g, '');\r\n    }\r\n\r\n    validateFields(event) {\r\n        this.el.nativeElement.value = this.el.nativeElement.value.replace(/[^A-Za-z ]/g, '').replace(/\\s/g, '');\r\n        event.preventDefault();\r\n    }\r\n}","import { ListAndSearchFilter } from '../../entities/list-and-search/list-and-search-filter.entity';\r\n\r\nexport class ListAndSearchFilterDto {\r\n    fieldId?: number;\r\n    gridColumnId?: number;\r\n    groupName?: string;\r\n    fieldName?: string;\r\n    fieldFriendlyName?: string;\r\n    operator?: string;\r\n    value1?: string;\r\n    value2?: string;\r\n    isActive?: boolean = true;\r\n    clauses?: ListAndSearchFilterDto[];\r\n    logicalOperator?: string;\r\n\r\n    constructor(filter?: ListAndSearchFilter) {\r\n        if (filter) {\r\n            this.fieldId = filter.fieldId;\r\n            this.gridColumnId = filter.gridColumnId;\r\n            this.fieldName = filter.fieldName;\r\n            this.fieldFriendlyName = filter.fieldFriendlyName;\r\n            this.operator = filter.predicate.operator;\r\n            this.value1 = filter.predicate.value1;\r\n            this.value2 = filter.predicate.value2;\r\n            this.groupName = filter.groupName;\r\n            this.clauses = (filter.clauses) ? filter.clauses.map((clause) => {\r\n                return new ListAndSearchFilterDto(clause);\r\n            }) : null;\r\n            this.logicalOperator = filter.logicalOperator;\r\n        }\r\n    }\r\n}\r\n","import { ListAndSearchFilterDto } from './list-and-search-filter-dto.dto';\r\n\r\nexport class ListAndSearchUserFilterSetDto {\r\n    filterSetId: number;\r\n    name: string;\r\n    isDefault: boolean;\r\n    isSharedWithAllUsers: boolean;\r\n    isSharedWithAllCompanies: boolean;\r\n    companyId: string;\r\n    gridCode: string;\r\n    isUserDefault: boolean;\r\n    ownerId: number;\r\n    filters?: ListAndSearchFilterDto[];\r\n    isModified = false;\r\n\r\n    constructor() {\r\n        this.isModified = true;\r\n    }\r\n}\r\n","export class UserGridViewDto {\r\n    gridViewId: number;\r\n    companyId: string;\r\n    name: string;\r\n    isDefault: boolean = false;\r\n    isSharedWithAllUsers: boolean = false;\r\n    isSharedWithAllCompanies: boolean = false;\r\n    gridCode: string;\r\n    isFavorite: boolean = false;\r\n    createdBy: string;\r\n    gridViewColumnConfig: string = '';\r\n}\r\n","export class AtlasAgGridParam {\r\n    rowHeight: number;\r\n    headerHeight: number;\r\n}\r\n","import { AbstractControl, AbstractControlOptions, AsyncValidatorFn, FormControl, ValidatorFn, Validators } from '@angular/forms';\r\n\r\nexport class AtlasFormControl extends FormControl {\r\n    private _id: string;\r\n    private _validators: ValidatorFn[];\r\n    private _asyncValidators: AsyncValidatorFn[];\r\n    private _isRequired: boolean;\r\n\r\n    public constructor(\r\n        id: string,\r\n        formState: any = '',\r\n        validatorOrOpts?:\r\n            | ValidatorFn\r\n            | ValidatorFn[]\r\n            | AbstractControlOptions\r\n            | null,\r\n        asyncValidator?: AsyncValidatorFn | AsyncValidatorFn[] | null,\r\n    ) {\r\n        super(formState, validatorOrOpts, asyncValidator);\r\n        this._id = id;\r\n        this._validators = [];\r\n        this._asyncValidators = []; this._id = id;\r\n        this._validators = [];\r\n        this._asyncValidators = [];\r\n        this._isRequired = false;\r\n    }\r\n\r\n    get id(): string {\r\n        return this._id;\r\n    }\r\n\r\n    get validators() {\r\n        return this._validators;\r\n    }\r\n\r\n    get asyncValidators() {\r\n        return this._asyncValidators;\r\n    }\r\n\r\n    get isRequired() {\r\n        return this._isRequired;\r\n    }\r\n\r\n    private addValidators<T>(validator: T | T[], collection: T[]) {\r\n        if (Array.isArray(validator)) {\r\n            validator.forEach((item) => {\r\n                if (collection.indexOf(item) <= -1) {\r\n                    collection.push(item);\r\n                }\r\n            });\r\n        } else {\r\n            const newValidator = validator as T;\r\n            if (collection.indexOf(newValidator) <= -1) {\r\n                collection.push(newValidator);\r\n            }\r\n        }\r\n    }\r\n\r\n    setValidators(newValidator: ValidatorFn | ValidatorFn[]) {\r\n        if (newValidator) {\r\n            this.addValidators<ValidatorFn>(newValidator, this._validators);\r\n            super.setValidators(Validators.compose(this._validators));\r\n            if (this.validator) {\r\n                // tslint:disable-next-line:no-object-literal-type-assertion\r\n                const validator = this.validator({} as AbstractControl);\r\n                if (validator && validator.required) {\r\n                    this._isRequired = true;\r\n                }\r\n            }\r\n        }\r\n        this.updateValueAndValidity();\r\n    }\r\n\r\n    setAsyncValidators(newValidator: AsyncValidatorFn | AsyncValidatorFn[]) {\r\n        if (newValidator) {\r\n            this.addValidators<AsyncValidatorFn>(newValidator, this._asyncValidators);\r\n            super.setAsyncValidators(Validators.composeAsync(this._asyncValidators));\r\n        }\r\n    }\r\n\r\n    clearValidators() {\r\n        this._validators = [];\r\n        super.clearValidators();\r\n    }\r\n\r\n    clearAsyncValidators() {\r\n        this._asyncValidators = [];\r\n        super.clearAsyncValidators();\r\n    }\r\n}\r\n","import { BigNumber } from 'bignumber.js';\r\n\r\nexport class AtlasNumber {\r\n    bigNumber: BigNumber;\r\n\r\n    constructor(nb: string) {\r\n        let nbCleaned = nb;\r\n        if (nb) {\r\n            const ngToString = nb.toString();\r\n            nbCleaned = ngToString.replace(/\\,/gi, '');\r\n        }\r\n        this.bigNumber = new BigNumber(nbCleaned);\r\n    }\r\n\r\n    public times(toMultiply) {\r\n        this.bigNumber = this.bigNumber.times(toMultiply);\r\n        return this;\r\n    }\r\n\r\n    public dividedBy(toDivide) {\r\n        this.bigNumber = this.bigNumber.dividedBy(new BigNumber(toDivide));\r\n        return this;\r\n    }\r\n\r\n    public plus(toAdd) {\r\n        this.bigNumber = this.bigNumber.plus(toAdd);\r\n        return this;\r\n    }\r\n\r\n    public strictlyBiggerThan(numberToCompare: string | number): boolean {\r\n        return this.bigNumber.comparedTo(numberToCompare) > 0;\r\n    }\r\n\r\n    public equal(numberToCompare: string | number): boolean {\r\n        return this.bigNumber.comparedTo(numberToCompare) === 0;\r\n    }\r\n\r\n    public toString() {\r\n        return this.bigNumber.toString(10);\r\n    }\r\n}\r\n","export class Bulkapproval {\r\n\r\n    companyId: string;\r\n    sectionIds: number[];\r\n    dataVersionId: number;\r\n}\r\n","export class CancelSectionStatusCommand {\r\n    companyId: string;\r\n    sectionIds: number[];\r\n    blDate: Date;\r\n}\r\n","import { HttpHeaders, HttpParams } from '@angular/common/http';\r\n\r\nexport class HttpRequestOptions {\r\n    headers?: HttpHeaders | {\r\n        [header: string]: string | string[];\r\n    };\r\n    observe?: any; // 'body', response, events;\r\n    params?: HttpParams | {\r\n        [param: string]: string | string[];\r\n    };\r\n    reportProgress?: boolean;\r\n    responseType: any; // 'arraybuffer, blob, text, json';\r\n    withCredentials?: boolean;\r\n}\r\n","export class PagingOptions {\r\n    offset?: number;\r\n    limit?: number;\r\n}","import { ListAndSearchFilterType } from '../../enums/list-and-search-filter-type.enum';\r\n\r\nexport class ListAndSearchFilterPredicate {\r\n    filterType: ListAndSearchFilterType;\r\n    operator: string;\r\n    value1: string;\r\n    value2?: string;\r\n\r\n}\r\n","import { ListAndSearchFilterDto } from '../../dtos/list-and-search/list-and-search-filter-dto.dto';\r\nimport { ListAndSearchFilterPredicate } from './list-and-search-filter-predicate.entity';\r\n\r\nexport class ListAndSearchFilter {\r\n    gridColumnId: number;\r\n    fieldId: number;\r\n    fieldName: string;\r\n    fieldFriendlyName: string;\r\n    predicate: ListAndSearchFilterPredicate;\r\n    isActive: boolean = false;\r\n    groupName: string;\r\n    clauses?: ListAndSearchFilter[];\r\n    logicalOperator?: string;\r\n\r\n    constructor(filter?: ListAndSearchFilterDto) {\r\n        this.predicate = new ListAndSearchFilterPredicate();\r\n        if (filter) {\r\n            this.fieldId = filter.fieldId;\r\n            this.gridColumnId = filter.gridColumnId;\r\n            this.fieldName = filter.fieldName;\r\n            this.predicate.operator = filter.operator;\r\n            this.predicate.value1 = filter.value1;\r\n            this.predicate.value2 = filter.value2;\r\n            this.isActive = filter.isActive;\r\n            this.fieldFriendlyName = filter.fieldFriendlyName;\r\n            this.clauses = (filter.clauses) ? filter.clauses.map((clause) => {\r\n                return new ListAndSearchFilter(clause);\r\n            }) : null;\r\n            this.logicalOperator = filter.logicalOperator;\r\n        }\r\n    }\r\n}\r\n","export class ListAndSearchOperator {\r\n    symbole: string; // ex: >, !=\r\n    operator: string; // ex: eq, neq, gt\r\n    validator: RegExp; // regex\r\n}\r\n","import { ListAndSearchOperator } from './list-and-search-operator.entity';\r\n\r\nexport class ListAndSearchPredicatePreset {\r\n    operators: ListAndSearchOperator[];\r\n    acceptedValues: string[];\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ListAndSearchOperator } from '../list-and-search-operator.entity';\r\nimport { ListAndSearchPredicatePreset } from '../list-and-search-predicate-preset.entity';\r\n\r\n@Injectable()\r\nexport class ListAndSearchDatePredicatePresetProvider {\r\n    private dateFilterPredicatePresets: ListAndSearchPredicatePreset;\r\n\r\n    getPresets() {\r\n        if (!this.dateFilterPredicatePresets) {\r\n            this.buildPredicates();\r\n        }\r\n\r\n        return this.dateFilterPredicatePresets;\r\n    }\r\n    // allows following formats: 1/1/0001  01/01/1000 31/12/9999 and sadly 31/02/0010\r\n    // ((([0-2]?\\d{1})|([3][0,1]{1}))\\/((0?\\d{1})|(1[0-2]{1}))\\/(([1]{1}[9]{1}[9]{1}\\d{1})|([2-9]{1}\\d{3})))\r\n\r\n    private buildPredicates() {\r\n        this.dateFilterPredicatePresets = new ListAndSearchPredicatePreset();\r\n\r\n        this.dateFilterPredicatePresets.operators = [];\r\n\r\n        let dateOperator = new ListAndSearchOperator();\r\n        dateOperator.operator = 'empty';\r\n        dateOperator.symbole = 'Empty';\r\n        dateOperator.validator = /^= empty$/;\r\n        this.dateFilterPredicatePresets.operators.push(dateOperator);\r\n\r\n        dateOperator = new ListAndSearchOperator();\r\n        dateOperator.operator = 'notEmpty';\r\n        dateOperator.symbole = 'Not Empty';\r\n        dateOperator.validator = /^= not empty$/;\r\n        this.dateFilterPredicatePresets.operators.push(dateOperator);\r\n\r\n        dateOperator = new ListAndSearchOperator();\r\n        dateOperator.operator = 'eq';\r\n        dateOperator.symbole = 'Yesterday';\r\n        dateOperator.validator = /^(=) (yesterday)$/;\r\n        this.dateFilterPredicatePresets.operators.push(dateOperator);\r\n\r\n        dateOperator = new ListAndSearchOperator();\r\n        dateOperator.operator = 'eq';\r\n        dateOperator.symbole = 'Today';\r\n        dateOperator.validator = /^(=) (today)$/;\r\n        this.dateFilterPredicatePresets.operators.push(dateOperator);\r\n\r\n        dateOperator = new ListAndSearchOperator();\r\n        dateOperator.operator = 'bt';\r\n        dateOperator.symbole = 'Between';\r\n        dateOperator.validator = /^(between) (.+) (and) (.+)$/;\r\n        this.dateFilterPredicatePresets.operators.push(dateOperator);\r\n\r\n        dateOperator = new ListAndSearchOperator();\r\n        dateOperator.operator = 'eq';\r\n        dateOperator.symbole = '=';\r\n        dateOperator.validator = /^(=) (.+)$/;\r\n        this.dateFilterPredicatePresets.operators.push(dateOperator);\r\n\r\n        dateOperator = new ListAndSearchOperator();\r\n        dateOperator.operator = 'ne';\r\n        dateOperator.symbole = '!=';\r\n        dateOperator.validator = /^(!=) (.+)$/;\r\n        this.dateFilterPredicatePresets.operators.push(dateOperator);\r\n\r\n        dateOperator = new ListAndSearchOperator();\r\n        dateOperator.operator = 'gt';\r\n        dateOperator.symbole = '>';\r\n        dateOperator.validator = /^(>) (.+)$/;\r\n        this.dateFilterPredicatePresets.operators.push(dateOperator);\r\n\r\n        dateOperator = new ListAndSearchOperator();\r\n        dateOperator.operator = 'ge';\r\n        dateOperator.symbole = '>=';\r\n        dateOperator.validator = /^(>=) (.+)$/;\r\n        this.dateFilterPredicatePresets.operators.push(dateOperator);\r\n\r\n        dateOperator = new ListAndSearchOperator();\r\n        dateOperator.operator = 'lt';\r\n        dateOperator.symbole = '<';\r\n        dateOperator.validator = /^(<) (.+)$/;\r\n        this.dateFilterPredicatePresets.operators.push(dateOperator);\r\n\r\n        dateOperator = new ListAndSearchOperator();\r\n        dateOperator.operator = 'le';\r\n        dateOperator.symbole = '<=';\r\n        dateOperator.validator = /^(<=) (.+)$/;\r\n        this.dateFilterPredicatePresets.operators.push(dateOperator);\r\n\r\n        this.dateFilterPredicatePresets.acceptedValues = [];\r\n        this.dateFilterPredicatePresets.acceptedValues.push('.');\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ListAndSearchOperator } from '../list-and-search-operator.entity';\r\nimport { ListAndSearchPredicatePreset } from '../list-and-search-predicate-preset.entity';\r\n\r\n@Injectable()\r\nexport class ListAndSearchNumericPredicatePresetProvider {\r\n    private numericFilterPredicatePresets: ListAndSearchPredicatePreset;\r\n\r\n    getPresets() {\r\n        if (!this.numericFilterPredicatePresets) {\r\n            this.buildPredicates();\r\n        }\r\n\r\n        return this.numericFilterPredicatePresets;\r\n    }\r\n\r\n    private buildPredicates() {\r\n        this.numericFilterPredicatePresets = new ListAndSearchPredicatePreset();\r\n\r\n        this.numericFilterPredicatePresets.operators = [];\r\n\r\n        let numericOperator = new ListAndSearchOperator();\r\n        numericOperator.operator = 'empty';\r\n        numericOperator.symbole = 'Empty';\r\n        numericOperator.validator = /^= empty$/;\r\n        this.numericFilterPredicatePresets.operators.push(numericOperator);\r\n\r\n        numericOperator = new ListAndSearchOperator();\r\n        numericOperator.operator = 'notEmpty';\r\n        numericOperator.symbole = 'Not Empty';\r\n        numericOperator.validator = /^= not empty$/;\r\n        this.numericFilterPredicatePresets.operators.push(numericOperator);\r\n\r\n        numericOperator = new ListAndSearchOperator();\r\n        numericOperator.operator = 'bt';\r\n        numericOperator.symbole = 'Between';\r\n        numericOperator.validator = /^(between) (-?[0-9]+(\\.[0-9]+)?) and (-?[0-9]+(\\.[0-9]+)?)$/;\r\n        this.numericFilterPredicatePresets.operators.push(numericOperator);\r\n\r\n        numericOperator = new ListAndSearchOperator();\r\n        numericOperator.operator = 'eq';\r\n        numericOperator.symbole = '=';\r\n        numericOperator.validator = /^(=) (-?[0-9]+(\\.[0-9]+)?)$/;\r\n        this.numericFilterPredicatePresets.operators.push(numericOperator);\r\n\r\n        numericOperator = new ListAndSearchOperator();\r\n        numericOperator.operator = 'ne';\r\n        numericOperator.symbole = '!=';\r\n        numericOperator.validator = /^(!=) (-?[0-9]+(\\.[0-9]+)?)$/;\r\n        this.numericFilterPredicatePresets.operators.push(numericOperator);\r\n\r\n        numericOperator = new ListAndSearchOperator();\r\n        numericOperator.operator = 'gt';\r\n        numericOperator.symbole = '>';\r\n        numericOperator.validator = /^(>) (-?[0-9]+(\\.[0-9]+)?)$/;\r\n        this.numericFilterPredicatePresets.operators.push(numericOperator);\r\n\r\n        numericOperator = new ListAndSearchOperator();\r\n        numericOperator.operator = 'ge';\r\n        numericOperator.symbole = '>=';\r\n        numericOperator.validator = /^(>=) (-?[0-9]+(\\.[0-9]+)?)$/;\r\n        this.numericFilterPredicatePresets.operators.push(numericOperator);\r\n\r\n        numericOperator = new ListAndSearchOperator();\r\n        numericOperator.operator = 'lt';\r\n        numericOperator.symbole = '<';\r\n        numericOperator.validator = /^(<) (-?[0-9]+(\\.[0-9]+)?)$/;\r\n        this.numericFilterPredicatePresets.operators.push(numericOperator);\r\n\r\n        numericOperator = new ListAndSearchOperator();\r\n        numericOperator.operator = 'le';\r\n        numericOperator.symbole = '<=';\r\n        numericOperator.validator = /^(<=) (-?[0-9]+(\\.[0-9]+)?)$/;\r\n        this.numericFilterPredicatePresets.operators.push(numericOperator);\r\n\r\n        this.numericFilterPredicatePresets.acceptedValues = [];\r\n        this.numericFilterPredicatePresets.acceptedValues.push('.');\r\n    }\r\n\r\n}\r\n","\r\nimport { Injectable } from '@angular/core';\r\nimport { ListAndSearchOperator } from '../list-and-search-operator.entity';\r\nimport { ListAndSearchPredicatePreset } from '../list-and-search-predicate-preset.entity';\r\n\r\n@Injectable()\r\nexport class ListAndSearchPicklistPredicatePresetProvider {\r\n    private picklistFilterPredicatePresets: ListAndSearchPredicatePreset;\r\n\r\n    getPresets() {\r\n        if (!this.picklistFilterPredicatePresets) {\r\n            this.buildPredicates();\r\n        }\r\n\r\n        return this.picklistFilterPredicatePresets;\r\n    }\r\n\r\n    protected buildPredicates() {\r\n        this.picklistFilterPredicatePresets = new ListAndSearchPredicatePreset();\r\n\r\n        this.picklistFilterPredicatePresets.operators = [];\r\n\r\n        let picklistOperator = new ListAndSearchOperator();\r\n        picklistOperator.operator = 'empty';\r\n        picklistOperator.symbole = 'Empty';\r\n        picklistOperator.validator = /^= empty$/;\r\n        this.picklistFilterPredicatePresets.operators.push(picklistOperator);\r\n\r\n        picklistOperator = new ListAndSearchOperator();\r\n        picklistOperator.operator = 'notEmpty';\r\n        picklistOperator.symbole = 'Not Empty';\r\n        picklistOperator.validator = /^= not empty$/;\r\n        this.picklistFilterPredicatePresets.operators.push(picklistOperator);\r\n\r\n        picklistOperator = new ListAndSearchOperator();\r\n        picklistOperator.operator = 'eq';\r\n        picklistOperator.symbole = '=';\r\n        picklistOperator.validator = /^(=) (%?[^%]+%?)$/;\r\n        this.picklistFilterPredicatePresets.operators.push(picklistOperator);\r\n\r\n        picklistOperator = new ListAndSearchOperator();\r\n        picklistOperator.operator = 'ne';\r\n        picklistOperator.symbole = '!=';\r\n        picklistOperator.validator = /^(!=) (%?[^%]+%?)$/;\r\n        this.picklistFilterPredicatePresets.operators.push(picklistOperator);\r\n\r\n        picklistOperator = new ListAndSearchOperator();\r\n        picklistOperator.operator = 'in';\r\n        picklistOperator.symbole = 'in';\r\n        picklistOperator.validator = /^(in) (([^, ]*, )*[^, ]*)$/;\r\n        this.picklistFilterPredicatePresets.operators.push(picklistOperator);\r\n\r\n        this.picklistFilterPredicatePresets.acceptedValues = [];\r\n        this.picklistFilterPredicatePresets.acceptedValues.push('.');\r\n\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ListAndSearchOperator } from '../list-and-search-operator.entity';\r\nimport { ListAndSearchPredicatePreset } from '../list-and-search-predicate-preset.entity';\r\n\r\n@Injectable()\r\nexport class ListAndSearchTextPredicatePresetProvider {\r\n    private textFilterPredicatePresets: ListAndSearchPredicatePreset;\r\n\r\n    getPresets() {\r\n        if (!this.textFilterPredicatePresets) {\r\n            this.buildPredicates();\r\n        }\r\n\r\n        return this.textFilterPredicatePresets;\r\n    }\r\n\r\n    private buildPredicates() {\r\n        this.textFilterPredicatePresets = new ListAndSearchPredicatePreset();\r\n\r\n        this.textFilterPredicatePresets.operators = [];\r\n\r\n        let textOperator = new ListAndSearchOperator();\r\n        textOperator.operator = 'empty';\r\n        textOperator.symbole = 'Empty';\r\n        textOperator.validator = /^= empty$/;\r\n        this.textFilterPredicatePresets.operators.push(textOperator);\r\n\r\n        textOperator = new ListAndSearchOperator();\r\n        textOperator.operator = 'notEmpty';\r\n        textOperator.symbole = 'Not Empty';\r\n        textOperator.validator = /^= not empty$/;\r\n        this.textFilterPredicatePresets.operators.push(textOperator);\r\n\r\n        textOperator = new ListAndSearchOperator();\r\n        textOperator.operator = 'eq';\r\n        textOperator.symbole = '=';\r\n        textOperator.validator = /^(=) (%?[^%]+%?)$/;\r\n        this.textFilterPredicatePresets.operators.push(textOperator);\r\n\r\n        textOperator = new ListAndSearchOperator();\r\n        textOperator.operator = 'ne';\r\n        textOperator.symbole = '!=';\r\n        textOperator.validator = /^(!=) (%?[^%]+%?)$/;\r\n        this.textFilterPredicatePresets.operators.push(textOperator);\r\n\r\n        textOperator = new ListAndSearchOperator();\r\n        textOperator.operator = 'in';\r\n        textOperator.symbole = 'in';\r\n        textOperator.validator = /^(in) (([^, ]*, )*[^, ]*)$/;\r\n        this.textFilterPredicatePresets.operators.push(textOperator);\r\n\r\n        this.textFilterPredicatePresets.acceptedValues = [];\r\n        this.textFilterPredicatePresets.acceptedValues.push('.');\r\n    }\r\n\r\n}\r\n","export class LockResourceInformation {\r\n    resourceId: number;\r\n    resourceType: string;    \r\n    resourceCode: string;\r\n    needRefresh: boolean;\r\n}\r\n","export class MasterDataProps {\r\n    public static readonly Arbitrations = 'arbitrations';\r\n    public static readonly BankTypes = 'bankTypes';\r\n    public static readonly ShippingStatus = 'shippingStatus';\r\n    public static readonly BankNccTypes = 'bankNccTypes';\r\n    public static readonly BankAccountStatuses = 'bankAccountStatuses';\r\n    public static readonly NominalAccounts = 'nominalAccounts';\r\n    public static readonly CashTypes = 'cashTypes';\r\n    public static readonly LanguagePreference = 'languagePreference';\r\n    public static readonly DateFormatPreference = 'dateFormatPreference';\r\n    public static readonly InterfaceType = 'interfaceType';\r\n    public static readonly InterfaceObjectType = 'interfaceObjectType';\r\n    public static readonly Commodities = 'commodities';\r\n    public static readonly CommodityTypes = 'commodityTypes';\r\n    public static readonly Companies = 'companies';\r\n    public static readonly ContractTerms = 'contractTerms';\r\n    public static readonly CostTypes = 'costTypes';\r\n    public static readonly CostPriceCodes = 'costPriceCodes';\r\n    public static readonly Counterparties = 'counterparties';\r\n    public static readonly Countries = 'countries';\r\n    public static readonly Currencies = 'currencies';\r\n    public static readonly Departments = 'departments';\r\n    public static readonly PhysicalDocumentType = 'documentTypes';\r\n    public static readonly FixTypes = 'fixTypes';\r\n    public static readonly FuturesOptionsCommodities = 'futuresOptionsCommodities';\r\n    public static readonly FxRates = 'fxRates';\r\n    public static readonly FxDealType = 'fxTradeTypes';\r\n    public static readonly InvoiceTypes = 'invoiceTypes';\r\n    public static readonly BusinessSectors = 'businessSectors';\r\n    public static readonly PaymentTerms = 'paymentTerms';\r\n    public static readonly PeriodTypes = 'periodTypes';\r\n    public static readonly PricingOptions = 'pricingOptions';\r\n    public static readonly InvoiceStatus = 'invoiceStatus';\r\n    public static readonly PNLTypes = 'pnlTypes';\r\n    public static readonly Ports = 'ports';\r\n    public static readonly PositionMonthTypes = 'positionMonthTypes';\r\n    public static readonly WeightUnits = 'weightUnits';\r\n    public static readonly RateTypes = 'rateTypes';\r\n    public static readonly ToleranceTypes = 'toleranceTypes';\r\n    public static readonly Traders = 'traders';\r\n    public static readonly TransportTypes = 'transportTypes';\r\n    public static readonly Vats = 'vats';\r\n    public static readonly Vessels = 'vessels';\r\n    public static readonly PriceUnits = 'priceUnits';\r\n    public static readonly AccountTypes = 'accountTypes';\r\n    public static readonly Province = 'provinces';\r\n    public static readonly Branches = 'branches';\r\n    public static readonly Tax = 'taxTypes';\r\n    public static readonly TaxCode = 'taxCode';\r\n    public static readonly ShippingTypes = 'shippingStatus';\r\n    public static readonly LdcRegion = 'regions';\r\n    public static readonly TradeStatus = 'tradeStatus';\r\n    public static readonly AddressTypes = 'addressTypes';\r\n    public static readonly FuturesOptionsClients = 'futuresOptionsClients';\r\n    public static readonly ForeignExchangeRate = 'foreignExchangeRate';\r\n    public static readonly FuturesOptionsBrokers = 'futuresOptionsBrokers';\r\n    public static readonly ProfitCenters = 'profitCenters';\r\n    public static readonly AccountLineType = 'accountLineTypes';\r\n    public static readonly PhysicalDocumentTypes = 'physicalDocumentTypes';\r\n    public static readonly PhysicalDocumentStatus = 'physicalDocumentStatus';\r\n    public static readonly TransactionDocumentType = 'transactionDocumentType';\r\n    public static readonly TransactionDocumentStatus = 'transactionDocumentStatus';\r\n    public static readonly MonthEndReportType = 'monthEndReportType';\r\n    public static readonly MarketSectors = 'marketSectors';\r\n    public static readonly MdmCategories = 'mdmCategories';\r\n    public static readonly TaxTypes = 'taxTypes';\r\n    public static readonly CompanyTypes = 'companyTypes';\r\n    public static readonly CompanyPlatforms = 'companyPlatforms';\r\n    public static readonly TimeZones = 'timeZones';\r\n    public static readonly CompanyCropYearFormats = 'companyCropYearFormats';\r\n    public static readonly ProcessStatuses = 'processStatuses';\r\n    public static readonly FxTradeTypes = 'fxTradeTypes';\r\n    public static readonly InterfaceStatus = 'interfaceStatus';\r\n    public static readonly ContractTypes = 'contractTypes';\r\n}\r\n","import { InterfaceStatus } from '../enums/interface-status.enum';\r\nimport { AccountLineType } from './account-line-type.entity';\r\nimport { AccountType } from './account-type.entity';\r\nimport { AddressType } from './address-type.entity';\r\nimport { Arbitration } from './arbitration.entity';\r\nimport { BankAccountStatus } from './bank-account-status.entity';\r\nimport { BankNccType } from './bank-ncc-type.entity';\r\nimport { BankType } from './bank-type.entity';\r\nimport { Broker } from './broker.entity';\r\nimport { BusinessSector } from './business-sector-entity';\r\nimport { CashTypes } from './cash-type.entity';\r\nimport { Commodity } from './commodity.entity';\r\nimport { CommodityTypes } from './commodityTypes.entity';\r\nimport { Company } from './company.entity';\r\nimport { ContractTerm } from './contract-term.entity';\r\nimport { CostDirection } from './cost-direction.entity';\r\nimport { CostPriceCode } from './cost-price-code.entity';\r\nimport { CostType } from './cost-type.entity';\r\nimport { CounterpartyBankAccounts } from './counterparty-bankaccounts.entity';\r\nimport { CounterpartyTradeStatus } from './counterparty-trade-status.entity';\r\nimport { Counterparty } from './counterparty.entity';\r\nimport { Country } from './country.entity';\r\nimport { Currency } from './currency.entity';\r\nimport { DateFormat } from './date-format.entity';\r\nimport { Department } from './department.entity';\r\nimport { PhysicalDocumentType } from './document-type.entity';\r\nimport { EnumEntity } from './enum-entity.entity';\r\nimport { ExpenseCode } from './expense-code.entity';\r\nimport { FixType } from './fix-type.entity';\r\nimport { ForeignExchangeRate } from './foreign-exchange/foreign-exchange-rate.entity';\r\nimport { FuturesOptionsCommodity } from './futures-options-commodity.entity';\r\nimport { FxTradeType } from './fx-trade-type.entity';\r\nimport { InterfaceTypes } from './interface-type.entity';\r\nimport { InterfaceObjectTypes } from './interface-object-type.entity';\r\nimport { InvoiceStatus } from './invoice-status.entity';\r\nimport { InvoiceType } from './invoice-type.entity';\r\nimport { Language } from './language.entity';\r\nimport { LdcRegion } from './ldc-region.entity';\r\nimport { MdmCategory } from './mdm-Category.entity';\r\nimport { NominalAccount } from './nominal-account.entity';\r\nimport { Packing } from './packing.entity';\r\nimport { PaymentTerm } from './payment-term.entity';\r\nimport { PeriodType } from './period-type.entity';\r\nimport { PNLType } from './pnl-type.entity';\r\nimport { Port } from './port.entity';\r\nimport { PositionMonthType } from './position-month-type.entity';\r\nimport { PriceUnit } from './price-unit.entity';\r\nimport { PricingOptions } from './pricing-options.entity';\r\nimport { ProcessStatus } from './process-status.entity';\r\nimport { ProfitCenter } from './profit-center.entity';\r\nimport { Province } from './province.entity';\r\nimport { RateType } from './rate-type.entity';\r\nimport { ShippingStatus } from './shipping-status.entity';\r\nimport { TaxType } from './tax-Type.entity';\r\nimport { TimeZone } from './time-zone.entity';\r\nimport { ToleranceType } from './tolerance-type.entity';\r\nimport { TraderMasterData } from './trader-masterdata.entity';\r\nimport { transactionDocumentType } from './transaction-document-type.entity';\r\nimport { TransportType } from './transport-type.entity';\r\nimport { Vat } from './vat.entity';\r\nimport { Vessel } from './vessel.entity';\r\nimport { WeightUnit } from './weight-unit.entity';\r\nimport { TaxCode } from './tax-Code.entity';\r\nimport { Branch } from './branch.entity';\r\n\r\nexport class MasterData {\r\n    arbitrations: Arbitration[];\r\n    bankTypes: BankType[];\r\n    shippingStatus: ShippingStatus[];\r\n    bankNccTypes: BankNccType[];\r\n    bankAccountStatuses: BankAccountStatus[];\r\n    processStatuses: ProcessStatus[];\r\n    nominalAccounts: NominalAccount[];\r\n    cashTypes: CashTypes[];\r\n    languagePreference: Language[];\r\n    dateFormatPreference: DateFormat[];\r\n    interfaceType: InterfaceTypes[];\r\n    interfaceObjectType: InterfaceObjectTypes[];\r\n    brokers: Broker[];\r\n    commodities: Commodity[];\r\n    commodityTypes: CommodityTypes[];\r\n    companies: Company[];\r\n    contractTerms: ContractTerm[];\r\n    costPriceCodes: CostPriceCode[];\r\n    costTypes: CostType[];\r\n    costDirections: CostDirection[];\r\n    counterparties: Counterparty[];\r\n    countries: Country[];\r\n    currencies: Currency[];\r\n    departments: Department[];\r\n    documentTypes: PhysicalDocumentType[];\r\n    expenseCodes: ExpenseCode[];\r\n    fixTypes: FixType[];\r\n    futuresOptionsCommodities: FuturesOptionsCommodity[];\r\n    foreignExchangeRate: ForeignExchangeRate[];\r\n    futuresOptionsClients: Counterparty[];\r\n    futuresOptionsBrokers: Counterparty[];\r\n    fxRates: ForeignExchangeRate[];\r\n    invoiceTypes: InvoiceType[];\r\n    businessSectors: BusinessSector[];\r\n    packings: Packing[];\r\n    paymentTerms: PaymentTerm[];\r\n    periodTypes: PeriodType[];\r\n    pnlTypes: PNLType[];\r\n    ports: Port[];\r\n    positionMonthTypes: PositionMonthType[];\r\n    weightUnits: WeightUnit[];\r\n    rateTypes: RateType[];\r\n    pricingOptions: PricingOptions[];\r\n    invoiceStatus: InvoiceStatus[];\r\n    toleranceTypes: ToleranceType[];\r\n    traders: TraderMasterData[];\r\n    transportTypes: TransportType[];\r\n    vats: Vat[];\r\n    vessels: Vessel[];\r\n    priceUnits: PriceUnit[];\r\n    counterpartyBankAccounts: CounterpartyBankAccounts[];\r\n    profitCenters: ProfitCenter[];\r\n    accountLineTypes: AccountLineType[];\r\n    accountTypes: AccountType[];\r\n    provinces: Province[];\r\n    branches: Branch[];\r\n    regions: LdcRegion[];\r\n    tradeStatus: CounterpartyTradeStatus[];\r\n    addressTypes: AddressType[];\r\n    timeZones: TimeZone[];\r\n    // -- Enums\r\n    // contractType: EnumEntity[];\r\n    contractStatus: EnumEntity[];\r\n    contractTypes: EnumEntity[];\r\n    postingStatus: EnumEntity[];\r\n    booleanValues: EnumEntity[];\r\n    physicalDocumentTypes: EnumEntity[];\r\n    physicalDocumentStatus: EnumEntity[];\r\n    ad: AddressType[];\r\n    transactionDocumentType: transactionDocumentType[];\r\n    transactionDocumentStatus: EnumEntity[];\r\n    monthEndReportType: EnumEntity[];\r\n    companyTypes: EnumEntity[];\r\n    companyPlatforms: EnumEntity[];\r\n    companyCropYearFormats: EnumEntity[];\r\n    mdmCategories: MdmCategory[];\r\n    taxTypes: TaxType[];\r\n    fxTradeTypes: FxTradeType[];\r\n    interfaceStatus: InterfaceStatus[];\r\n    taxCode: TaxCode[];\r\n\r\n    constructor() {\r\n        this.arbitrations = [];\r\n        this.bankTypes = [];\r\n        this.shippingStatus = [];\r\n        this.bankNccTypes = [];\r\n        this.bankAccountStatuses = [];\r\n        this.processStatuses = [];\r\n        this.nominalAccounts = [];\r\n        this.cashTypes = [];\r\n        this.languagePreference = [];\r\n        this.interfaceType = [];\r\n        this.interfaceObjectType = [];\r\n        this.brokers = [];\r\n        this.commodities = [];\r\n        this.commodityTypes = [];\r\n        this.companies = [];\r\n        this.contractTerms = [];\r\n        this.costPriceCodes = [];\r\n        this.costTypes = [];\r\n        this.costDirections = [];\r\n        this.counterparties = [];\r\n        this.countries = [];\r\n        this.currencies = [];\r\n        this.departments = [];\r\n        this.documentTypes = [];\r\n        this.expenseCodes = [];\r\n        this.fixTypes = [];\r\n        this.dateFormatPreference = [];\r\n        this.futuresOptionsCommodities = [];\r\n        this.futuresOptionsClients = [];\r\n        this.foreignExchangeRate = [];\r\n        this.futuresOptionsBrokers = [];\r\n        this.invoiceTypes = [];\r\n        this.businessSectors = [];\r\n        this.packings = [];\r\n        this.paymentTerms = [];\r\n        this.periodTypes = [];\r\n        this.pnlTypes = [];\r\n        this.ports = [];\r\n        this.positionMonthTypes = [];\r\n        this.weightUnits = [];\r\n        this.rateTypes = [];\r\n        this.pricingOptions = [];\r\n        this.toleranceTypes = [];\r\n        this.transportTypes = [];\r\n        this.vats = [];\r\n        this.vessels = [];\r\n        this.priceUnits = [];\r\n        this.invoiceStatus = [];\r\n        this.fxRates = [];\r\n        this.counterpartyBankAccounts = [];\r\n        this.profitCenters = [];\r\n        this.accountLineTypes = [];\r\n        this.accountTypes = [];\r\n        this.provinces = [];\r\n        this.branches = [];\r\n        this.regions = [];\r\n        this.addressTypes = [];\r\n        this.tradeStatus = [];\r\n        this.timeZones = [];\r\n        // -- Enums\r\n        // this.contractType = [];\r\n        this.contractStatus = [];\r\n        this.contractTypes = [];\r\n        this.postingStatus = [];\r\n        this.booleanValues = [];\r\n        this.physicalDocumentTypes = [];\r\n        this.physicalDocumentStatus = [];\r\n        this.transactionDocumentStatus = [];\r\n        this.transactionDocumentType = [];\r\n        this.monthEndReportType = [];\r\n        this.mdmCategories = [];\r\n        this.taxTypes = [];\r\n        this.companyTypes = [];\r\n        this.companyPlatforms = [];\r\n        this.companyCropYearFormats = [];\r\n        this.fxTradeTypes = [];\r\n        this.interfaceStatus = [];\r\n        this.taxCode = [];\r\n        this.branches = [];\r\n    }\r\n}\r\n","export class StartStopPostingProcessCommand {\r\n    isActive: boolean;\r\n}\r\n","export class SectionTraffic {\r\n    sectionId: number;\r\n    blDate: Date;\r\n    blReference: string;\r\n    vesselCode: string;\r\n    companyId: string;\r\n    dataVersionId: number;\r\n    createdDateTime: Date;\r\n    createdBy: string;\r\n    modifiedDateTime: Date;\r\n    modifiedBy: string;\r\n    contractDate: Date;\r\n    portOrigin: string;\r\n    portDestination: string;\r\n    marketSector: string;\r\n    shippingStatusCode: string;\r\n    shippingStatusId: number;\r\n}\r\n","import { ContractStatus } from '../enums/contract-status.enum';\r\nimport { ContractTypes } from '../enums/contract-type.enum';\r\nimport { PositionMonthTypes } from '../enums/position-month-type.enum';\r\nimport { PricingMethods } from '../enums/pricing-method.enum';\r\nimport { ChildSectionsSearchResult } from './../dtos/chilesection-search-result';\r\nimport { Cost } from './cost.entity';\r\nimport { SectionReference } from './section-reference.entity';\r\nimport { Trade } from './trade.entity';\r\nimport { ContractInvoiceType } from '../enums/contract-invoice-type.enum';\r\n\r\nexport class Section {\r\n    constructor() {\r\n        this.childSections = new Array<Section>();\r\n        this.costs = new Array<Cost>();\r\n    }\r\n    contractType: ContractTypes;\r\n    sectionId: number;\r\n    contractId: number;\r\n    physicalContractId: number;\r\n    contractLabel: string;\r\n    sectionNumber: string;\r\n    status: ContractStatus;\r\n    firstApprovalDateTime: Date;\r\n    departmentId: number;\r\n    buyerCode: string;\r\n    buyerDescription: string;\r\n    charterDescription: string;\r\n    sellerDescription: string;\r\n    paymentTermDescription: string;\r\n    contractTermLocationDescription: string;\r\n    currencyDescription: string;\r\n    weightUnitDescription: string;\r\n    priceUnitDescription: string;\r\n    traderDisplayName: string;\r\n    companyId: string;\r\n    contractTermDescription: string;\r\n    sellerCode: string;\r\n    counterpartyReference: string;\r\n    commodityId: number;\r\n    originalQuantity: number;\r\n    quantity: number;\r\n    weightUnitId: number;\r\n    portOfOrigin: string;\r\n    portOfDestination: string;\r\n    deliveryPeriodStartDate: Date;\r\n    deliveryPeriodEndDate: Date;\r\n    positionMonthType: PositionMonthTypes;\r\n    positionMonthIndex: number;\r\n    positionMonth: Date;\r\n    cropYear: number;\r\n    cropYearTo: number;\r\n    packingCode: string;\r\n    contractTerms: string;\r\n    contractTermsLocation: string;\r\n    periodTypeCode: string;\r\n    periodTypeId: number;\r\n    arbitration: string;\r\n    marketSectorId: number;\r\n    pricingMethod: PricingMethods;\r\n    paymentTerms: string;\r\n    currencyCode: string;\r\n    priceUnitId: number;\r\n    price: number;\r\n    blDate: Date;\r\n    allocatedToId: number;\r\n    allocatedTo: SectionReference;\r\n    allocationDate: Date;\r\n    assignedCharterReference: string;\r\n    charterAssignmentDate: Date;\r\n    createdBy: string;\r\n    creationDate: Date;\r\n    lastModifiedBy: string;\r\n    lastModifiedDate: Date;\r\n    header: Trade<Section>;\r\n    sectionOriginId: number;\r\n    contractLabelOrigin?: string;\r\n    childSections: Section[];\r\n    costs: Cost[];\r\n    premiumDiscountTypeId?: number;\r\n    premiumDiscountValue: number;\r\n    premiumDiscountCurrency: string;\r\n    premiumDiscountBasis: number;\r\n    memorandum: string;\r\n    contractedValue: string;\r\n    sectionTypeId: number;\r\n    contractDate: Date;\r\n    charterId?: number;\r\n    invoiceReference: string;\r\n    shippingPeriod: string;\r\n    invoicingStatusId: number;\r\n    invoiceTypeId: number;\r\n    lastDocumentIssuedDate: Date;\r\n    dataVersionId: number;\r\n    otherReference: string;\r\n    isInterCo: boolean;\r\n    isRemoveInterco: boolean;\r\n    traderId: number;\r\n    charterStatusId: number;\r\n    contractSentDate: Date;\r\n    lastEmailReceivedDate: Date;\r\n    contractReturnedDate: Date;\r\n    currency: string;\r\n    isClosed: boolean;\r\n    isCancelled: boolean;\r\n    contractInvoiceTypeId: ContractInvoiceType;\r\n    invoiceDate: Date;\r\n    estimatedMaturityDate: Date;\r\n    totalInvoiceQuantity: number;\r\n    totalInvoiceValue: number;\r\n    totalInvoicePercent: number;\r\n\r\n    public setSectionFromChildSectionsSearchResult(\r\n        childSectionResult: ChildSectionsSearchResult,\r\n        sectionOriginId?: number): void {\r\n        this.sectionId = childSectionResult.sectionId;\r\n        this.contractId = childSectionResult.sectionId;\r\n        this.contractLabel = childSectionResult.contractLabel;\r\n        this.sectionNumber = childSectionResult.contractLabel.split('.')[1];\r\n        this.status = ContractStatus[childSectionResult.status];\r\n        this.counterpartyReference = childSectionResult.counterpartyReference;\r\n        this.quantity = childSectionResult.quantity;\r\n        this.deliveryPeriodStartDate = childSectionResult.deliveryPeriodStartDate;\r\n        this.positionMonthIndex = childSectionResult.positionMonthIndex;\r\n        this.contractTerms = childSectionResult.contractTerm;\r\n        this.contractTermsLocation = childSectionResult.contractTermsLocation;\r\n        this.pricingMethod = PricingMethods[childSectionResult.pricingMethod];\r\n        this.paymentTerms = childSectionResult.paymentTerm;\r\n        this.currencyCode = childSectionResult.currency;\r\n        this.price = childSectionResult.price;\r\n        this.blDate = childSectionResult.blDate;\r\n        this.assignedCharterReference = childSectionResult.assignedCharterReference;\r\n        this.lastModifiedBy = childSectionResult.lastModifiedBy;\r\n        this.sectionOriginId = sectionOriginId;\r\n        this.contractLabelOrigin = childSectionResult.contractLabel;\r\n        this.contractDate = childSectionResult.contractDate;\r\n        this.physicalContractId = childSectionResult.physicalContractId;\r\n        this.creationDate = childSectionResult.createdDateTime;\r\n        this.createdBy = childSectionResult.createdBy;\r\n        this.lastModifiedDate = childSectionResult.modifiedDateTime;\r\n        this.lastModifiedBy = childSectionResult.modifiedBy;\r\n        this.contractType = childSectionResult.contractType;\r\n        this.contractId = childSectionResult.contractId;\r\n        this.sectionNumber = childSectionResult.sectionNumber;\r\n        this.firstApprovalDateTime = childSectionResult.firstApprovalDateTime;\r\n        this.departmentId = childSectionResult.departmentId;\r\n        this.buyerCode = childSectionResult.buyerCode;\r\n        this.sellerCode = childSectionResult.sellerCode;\r\n        this.commodityId = childSectionResult.commodityId;\r\n        this.originalQuantity = childSectionResult.originalQuantity;\r\n        this.weightUnitId = childSectionResult.weightUnitId;\r\n        this.portOfOrigin = childSectionResult.portOriginCode;\r\n        this.portOfDestination = childSectionResult.portDestinationCode;\r\n        this.positionMonthType = childSectionResult.positionMonthType;\r\n        this.allocationDate = childSectionResult.allocationDate;\r\n        this.charterAssignmentDate = childSectionResult.charterAssignmentDate;\r\n        this.creationDate = childSectionResult.creationDate;\r\n        this.lastModifiedDate = childSectionResult.lastModifiedDate;\r\n        this.cropYear = childSectionResult.cropYear;\r\n        this.packingCode = childSectionResult.packingCode;\r\n        this.paymentTerms = childSectionResult.paymentTermCode;\r\n        this.periodTypeCode = childSectionResult.periodTypeCode;\r\n        this.priceUnitId = childSectionResult.priceUnitId;\r\n        this.arbitration = childSectionResult.arbitrationCode;\r\n        this.premiumDiscountTypeId = childSectionResult.premiumDiscountTypeId;\r\n        this.premiumDiscountValue = childSectionResult.premiumDiscountValue;\r\n        this.premiumDiscountCurrency = childSectionResult.premiumDiscountCurrency;\r\n        this.premiumDiscountBasis = childSectionResult.premiumDiscountBasis;\r\n        this.contractedValue = childSectionResult.contractedValue;\r\n        this.sectionTypeId = childSectionResult.sectionTypeId;\r\n        this.portOfOrigin = childSectionResult.portOfOrigin;\r\n        this.portOfDestination = childSectionResult.portOfDestination;\r\n        this.deliveryPeriodEndDate = childSectionResult.deliveryPeriodEndDate;\r\n        this.contractTerms = childSectionResult.contractTerms;\r\n        this.periodTypeId = childSectionResult.periodTypeId;\r\n        this.paymentTerms = childSectionResult.paymentTerms;\r\n        this.cropYearTo = childSectionResult.cropYearTo;\r\n        this.arbitration = childSectionResult.arbitration;\r\n        this.positionMonth = childSectionResult.positionMonth;\r\n        this.charterId = childSectionResult.charterId;\r\n        this.invoiceReference = childSectionResult.invoiceReference;\r\n        this.otherReference = childSectionResult.otherReference;\r\n        this.shippingPeriod = childSectionResult.shippingPeriod;\r\n        this.periodTypeId = childSectionResult.periodTypeId;\r\n        this.invoicingStatusId = childSectionResult.invoicingStatusId;\r\n        this.invoiceTypeId = childSectionResult.invoiceTypeId;\r\n        this.currency = childSectionResult.currency;\r\n        this.estimatedMaturityDate = childSectionResult.estimatedMaturityDate;\r\n    }\r\n}\r\n","export class TradePropertyPrivilege {\r\n    buyerCodePrivilege: boolean;\r\n    sellerCodePrivilege: boolean;\r\n    counterPartyPrivilege: boolean;\r\n    commodityPrivilege: boolean;\r\n    cropYearPrivilege: boolean;\r\n    quantityCodePrivilege: boolean;\r\n    quantityPrivilege: boolean;\r\n    quantityContractedPrivilege: boolean;\r\n    contractTermsPrivilege: boolean;\r\n    portTermsPrivilege: boolean;\r\n    arbitrationPrivilege: boolean;\r\n    currencyPrivilege: boolean;\r\n    priceCodePrivilege: boolean;\r\n    contractPricePrivilege: boolean;\r\n    contractValuePrivilege: boolean;\r\n    paymentTermsPrivilege: boolean;\r\n    periodTypePrivilege: boolean;\r\n    fromDatePrivilege: boolean;\r\n    toDatePrivilege: boolean;\r\n    positionTypePrivilege: boolean;\r\n    portOfOriginPrivilege: boolean;\r\n    portOfDestinationPrivilege: boolean;\r\n    businessSectorPrivilege: boolean;\r\n    memoPrivilege: boolean;\r\n    contractIssuedOnPrivilege: boolean;\r\n    otherReferencePrivilege: boolean;\r\n    vesselNamePrivilege: boolean;\r\n    blDatePrivilege: boolean;\r\n    blReferencePrivilege: boolean;\r\n    hasSuperTradePrivilege: boolean;\r\n    invoicingStatusPrivilege: boolean;\r\n}\r\n","import * as agGrid from 'ag-grid-community';\r\n\r\n// this class is used for passing gridPreferences parameters to the gridEnlargementComponent\r\n// it reflects the input of the userGridViewPreferences\r\nexport class UserGridPreferencesParameters {\r\n    gridOptions: agGrid.GridOptions;\r\n    company: string;\r\n    gridId: string;\r\n\r\n    savingEnabled?: boolean = true;\r\n    sharingEnabled?: boolean = false;\r\n\r\n    isFavouriteMenuEnabled?: boolean = true;\r\n    isAutosize?: boolean = true;\r\n    canDeleteView?: boolean = true;\r\n    showExport?: boolean = true;\r\n    hasColumnHandling?: boolean = true;\r\n    hasCustomExport?: boolean = false;\r\n\r\n    // --\r\n    selectedGridViewId?: number;\r\n\r\n    constructor(preferences?: UserGridPreferencesParameters) {\r\n        if (preferences) {\r\n            this.gridOptions = preferences.gridOptions;\r\n            this.company = preferences.company;\r\n            this.gridId = preferences.gridId;\r\n\r\n            this.savingEnabled = (preferences.savingEnabled === undefined) ? this.savingEnabled : preferences.savingEnabled;\r\n            this.sharingEnabled = (preferences.sharingEnabled === undefined) ? this.sharingEnabled : preferences.sharingEnabled;\r\n            this.isFavouriteMenuEnabled = (preferences.isFavouriteMenuEnabled === undefined) ?\r\n                this.isFavouriteMenuEnabled : preferences.isFavouriteMenuEnabled;\r\n            this.isAutosize = (preferences.isAutosize === undefined) ? this.isAutosize : preferences.isAutosize;\r\n            this.canDeleteView = (preferences.canDeleteView === undefined) ? this.canDeleteView : preferences.canDeleteView;\r\n            this.hasColumnHandling = (preferences.hasColumnHandling === undefined) ? this.hasColumnHandling : preferences.hasColumnHandling;\r\n            this.showExport = (preferences.showExport === undefined) ? this.showExport : preferences.showExport;\r\n\r\n            this.selectedGridViewId = (preferences.selectedGridViewId === undefined) ?\r\n                this.selectedGridViewId : preferences.selectedGridViewId;\r\n\r\n            this.hasCustomExport = (preferences.hasCustomExport === undefined) ?\r\n                this.hasCustomExport : preferences.hasCustomExport;\r\n\r\n        }\r\n    }\r\n}\r\n","import { UserPermission } from './user-permission.entity';\r\nimport { UserPreferenceResult } from './user-preference-result.entity';\r\n\r\nexport class User {\r\n    userId: number;\r\n    displayName: string;\r\n    firstName: string;\r\n    lastName: string;\r\n    email: string;\r\n    phoneNumber: string;\r\n    favoriteLanguage: string;\r\n    location: string;\r\n    isDisabled: boolean;\r\n    userPrincipalName: string;\r\n    samAccountName: string;\r\n    azureObjectIdentifier: string;\r\n    createdDateTime: Date;\r\n    createdBy: string;\r\n    modifiedDateTime: Date;\r\n    modifiedBy: string;\r\n    lastConnectionDateTime: Date;\r\n    managerSamAccountName: string;\r\n    permissions: UserPermission[] = [];\r\n    companyRole: string;\r\n\r\n    // --\r\n    companyPreferences: Map<string, UserPreferenceResult> = new Map<string, UserPreferenceResult>();\r\n\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\n\r\nexport const WINDOW = new InjectionToken('WindowToken');\r\n","export enum ActionDefaultBehaviours {\r\n\tHide = 0,\r\n\tDisable\r\n}\r\n\r\n\r\n","export enum ContractInvoiceType {\r\n    Washout = 1,\r\n    Cancellation = 2,\r\n}\r\n","export enum ContractStatus {\r\n    Unapproved = 0,\r\n    Approved = 1,\r\n    Invoiced = 2,\r\n    PartiallyInvoiced = 3,\r\n    ToBeInvoiced = 4,\r\n    Closed = 5,\r\n    Cancelled = 6,\r\n    Deleted = 7,\r\n    Open = 8,\r\n}\r\n","\r\nexport enum ContractTypes {\r\n    Purchase = 0,\r\n    Sale = 1,\r\n\tFO = 2,\r\n}\r\n","export enum CostMatrixParametersFields {\r\n    Cmy1 = 'Cmy1',\r\n    Cmy2 = 'Cmy2',\r\n    Cmy3 = 'Cmy3',\r\n    Cmy4 = 'Cmy4',\r\n    Cmy5 = 'Cmy5',\r\n    ContractTerms = 'Contract terms',\r\n    ContractType = 'Contract type',\r\n    Counterparty = 'Counterparty',\r\n    PaymentTerms = 'Payment terms',\r\n    PortOfDestination = 'Port of destination',\r\n    PortOfOrigin = 'Port of origin',\r\n}\r\n","export enum CreditAgainstTypes {\r\n    CurrentDate = 'C',\r\n    BLDate = 'B',\r\n    ArrivalDate = 'A',\r\n    InvoiceDate = 'I',\r\n}\r\n","export enum DateFormats {\r\n    Month = 0,\r\n    Date = 1,\r\n    Year = 2,\r\n}\r\n","export enum DiscountBasis {\r\n    Amount = 0,\r\n    Rate = 1,\r\n    Percent = 2,\r\n}\r\n","export enum DiscountTypes {\r\n    Premium = 0,\r\n    Discount = 1,\r\n}\r\n","export enum DocumentEntityTypes {\r\n    Unknown,\r\n    Contract,\r\n    Invoice,\r\n    Cash,\r\n}\r\n","export enum DocumentTypes {\r\n    Unknown = 0,\r\n    ContractAdvice = 1,\r\n\r\n    // Invoice\r\n    InvoiceGoodsInvoice = 10,\r\n    InvoiceCostsInvoice = 11,\r\n    InvoiceGoodsCostInvoice = 12,\r\n    InvoiceWashout = 13,\r\n    InvoiceString = 14,\r\n    InvoiceCircle = 15,\r\n    InvoiceProvisional = 16,\r\n    InvoiceFinal = 17,\r\n    InvoicePrepayment = 18,\r\n    InvoiceCancellation = 19,\r\n\r\n    // Cash\r\n    CashSimpleCash = 30,\r\n    CashPickByTransaction = 31,\r\n    CashDifferentClient = 32,\r\n    CashDifferentCurrency = 33,\r\n\r\n    // ManualCreation\r\n    ManualCreationJournalEntry = 50,\r\n    ManualCreationManualccrual = 51,\r\n    ManualCreationManualMTM = 52,\r\n\r\n    // MonthEnd\r\n    MonthEndAccruals = 70,\r\n    MonthEndMTMFX = 71,\r\n    MonthEndMTMFnO = 72,\r\n    MonthEndMTMPhysicals = 73,\r\n    MonthEndMTMInventory = 74,\r\n    MonthEndInventoryValidation = 75\r\n}\r\n","export enum ForeignExchangeRateCreationMode {\r\n    Manual = 1,\r\n    Imported = 2,\r\n    Automatic = 3,\r\n}\r\n","export enum FreezeType {\r\n    Current = 0,\r\n    Daily = 1,\r\n    Monthly = 2,\r\n}\r\n","export enum GenerateDocumentActions {\r\n    ConfirmDocumentGeneration = 1,\r\n    BrowseDocumentGeneration = 2,\r\n}\r\n","export enum InvoiceStatus {\r\n    NotInvoiced = 1,\r\n    NotFullyInvoiced = 2,\r\n    FullyInvoiced = 3,\r\n}\r\n","export enum InvoiceTypes {\r\n    Purchase = 1,\r\n    Sales = 2,\r\n    Cost = 3,\r\n    CostReceivable = 4,\r\n    CostCreditNote = 5,\r\n    CostDebitNote = 6,\r\n    Washout = 7,\r\n    WashoutDebitNote = 8,\r\n    Reversal = 9,\r\n    GoodsCostPurchase = 10,\r\n    GoodsCostSales = 11,\r\n    Cancelled = 12,\r\n}\r\n","export enum ListAndSearchFilterType {\r\n    Numeric = 'numeric',\r\n    Text = 'text',\r\n    Date = 'date',\r\n    Boolean = 'boolean',\r\n    Period = 'period',\r\n    Picklist = 'picklist',\r\n    OptionSet = 'optionset',\r\n}\r\n","export enum ListAndSearchKeyWords {\r\n    Empty = 'empty',\r\n    NotEmpty = 'notEmpty',\r\n    Today = 'today',\r\n    Yesterday = 'yesterday',\r\n}\r\n","export enum PermissionLevels {\r\n\tNone = 0,\r\n\tRead = 1,\r\n\tReadWrite = 2\r\n}\r\n","export enum PricingMethods\r\n{\r\n    Priced = 0,\r\n\tFnO = 1\r\n}\r\n","export enum SectionTypes {\r\n    Trade = 1,\r\n    Tranche = 2,\r\n    Split = 3,\r\n}\r\n","export enum TriStateCheckboxStatus {\r\n    None = 0,\r\n    All = 1,\r\n    Partial = 2,\r\n}\r\n","\r\nimport { Injectable } from '@angular/core';\r\nimport { CanDeactivate } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\nexport interface CanComponentDeactivate {\r\n    canDeactivate: () => Observable<boolean> | Promise<boolean> | boolean\r\n}\r\n\r\n@Injectable()\r\nexport class CanDeactivateGuard implements CanDeactivate<CanComponentDeactivate> {\r\n    canDeactivate(component: CanComponentDeactivate) {\r\n        if (component) {\r\n            return component.canDeactivate ? component.canDeactivate() : true;\r\n        }\r\n        return true;\r\n    }\r\n}","\r\nimport { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map, mergeMap } from 'rxjs/operators';\r\nimport { AuthorizationService } from '../../core/services/authorization.service';\r\nimport { UserCompanyPrivilegeDto } from '../services/authorization/dtos/user-company-privilege';\r\nimport { SecurityService } from '../services/security.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class SecurityGuard implements CanActivate {\r\n    constructor(private securityService: SecurityService,\r\n        private authorizationService: AuthorizationService,\r\n    ) { }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot,\r\n    ): Observable<boolean> | Promise<boolean> | boolean {\r\n        return this.authorizationService.isUserAuthorized$.pipe(\r\n            mergeMap((isUserAuthenticated) => {\r\n                if (isUserAuthenticated === false) {\r\n                    return of(false);\r\n                } else {\r\n                    return this.securityService.isSecurityReady().pipe(\r\n                        map(() => {\r\n                            if (this.authorizationService.isUserAllowedForCompany(route.params.company)) {\r\n                                const privileges: UserCompanyPrivilegeDto[] = route.data.authorizations as UserCompanyPrivilegeDto[];\r\n                                if (privileges != null) {\r\n                                    // tslint:disable-next-line: forin\r\n                                    for (const privilege in privileges) {\r\n                                        const permissionLevelRequired = privileges[privilege].permission;\r\n\r\n                                        const permissionLevel = this.authorizationService.getPermissionLevel(\r\n                                            route.params.company,\r\n                                            privileges[privilege].privilegeName,\r\n                                            privileges[privilege].privilegeParentLevelOne,\r\n                                            privileges[privilege].privilegeParentLevelTwo,\r\n                                        );\r\n                                        if (permissionLevel >= permissionLevelRequired) {\r\n                                            return true;\r\n                                        }\r\n                                    }\r\n                                    return false;\r\n                                }\r\n                                return true;\r\n                            }\r\n                            return false;\r\n                        }));\r\n                }\r\n            }));\r\n    }\r\n}\r\n","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthenticationService } from '../../core/services/authentication.service';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n    constructor(private authenticationService: AuthenticationService) { }\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        const clonedRequest = req.clone({\r\n            headers: req.headers.set('Authorization', 'Bearer ' + this.authenticationService.getAccessToken()),\r\n        });\r\n\r\n        return next.handle(clonedRequest);\r\n    }\r\n\r\n}\r\n","\r\nimport {tap} from 'rxjs/operators';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor, HttpErrorResponse, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n\r\n@Injectable()\r\nexport class DateInterceptor implements HttpInterceptor {\r\n\t// Migrated from AngularJS https://raw.githubusercontent.com/Ins87/angular-date-interceptor/master/src/angular-date-interceptor.js\r\n\tiso8601 = /^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(\\.\\d+)?(([+-]\\d\\d:\\d\\d)|Z)?$/;\r\n\r\n\tintercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\t\treturn next.handle(req).pipe(tap((event: HttpEvent<any>) => {\r\n\t\t\tif (event instanceof HttpResponse) {\r\n\t\t\t\tif (!event.ok)\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\tconst body = event.body;\r\n\t\t\t\tthis.convertToDate(body);\t\t\t\t\r\n\t\t\t}\r\n\t\t}, (err: any) => {\r\n\t\t\tif (err instanceof HttpErrorResponse) {\r\n\t\t\t\tif (err.status === 401) {\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}));\r\n\t}\r\n\r\n\tconvertToDate(body) {\r\n\t\tif (body === null || body === undefined) {\r\n\t\t\treturn body;\r\n\t\t}\r\n\r\n\t\tif (typeof body !== 'object') {\r\n\t\t\treturn body;\r\n\t\t}\r\n\r\n\t\tfor (const key of Object.keys(body)) {\r\n\t\t\tconst value = body[key];\r\n\r\n\t\t\tconst isDateTimePropertyName = key.endsWith('Date') || key.endsWith('Time');\r\n\r\n\t\t\tif (isDateTimePropertyName && this.isIso8601(value)) {\r\n\t\t\t\tbody[key] = new Date(value);\r\n\t\t\t} else if (typeof value === 'object') {\r\n\t\t\t\tthis.convertToDate(value);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tisIso8601(value) {\t\t\r\n\t\tif (value === null || value === undefined) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t//console.count(\"isIso8601\");\r\n\t\treturn this.iso8601.test(value);\r\n\t}\r\n}\r\n\r\n","/* \"Barrel\" of Http Interceptors */\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\nimport { AuthInterceptor } from './auth-interceptor';\r\nimport { DateInterceptor } from './date-interceptor';\r\n//import { ContextInterceptor } from './context-interceptor';\r\n\r\n/** Http interceptor providers in outside-in order */\r\nexport const httpInterceptorProviders = [\r\n\t{ provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\r\n\t{ provide: HTTP_INTERCEPTORS, useClass: DateInterceptor, multi: true }\r\n\t//{ provide: HTTP_INTERCEPTORS, useClass: ContextInterceptor, multi: true }\r\n];\r\n","import { NgModule } from '@angular/core';\r\nimport {\r\n\tMatAutocompleteModule,\r\n\tMatButtonModule,\r\n\tMatButtonToggleModule,\r\n\tMatCardModule,\r\n\tMatCheckboxModule,\r\n\tMatChipsModule,\r\n\tMatDatepickerModule,\r\n\tMatDialogModule,\r\n\tMatExpansionModule,\r\n\tMatFormFieldModule,\r\n\tMatGridListModule,\r\n\tMatIconModule,\r\n\tMatInputModule,\r\n\tMatListModule,\r\n\tMatMenuModule,\r\n\tMatPaginatorModule,\r\n\tMatProgressBarModule,\r\n\tMatProgressSpinnerModule,\r\n\tMatRadioModule,\r\n\tMatSelectModule,\r\n\tMatSidenavModule,\r\n\tMatSliderModule,\r\n\tMatSlideToggleModule,\r\n\tMatSnackBarModule,\r\n\tMatSortModule,\r\n\tMatTableModule,\r\n\tMatTabsModule,\r\n\tMatToolbarModule,\r\n\tMatTooltipModule,\r\n\tMatRippleModule,\r\n\tMatStepperModule\r\n} from '@angular/material';\r\nimport { MatMomentDateModule } from '@angular/material-moment-adapter';\r\nimport { CdkTableModule } from '@angular/cdk/table';\r\nimport { A11yModule } from '@angular/cdk/a11y';\r\nimport { BidiModule } from '@angular/cdk/bidi';\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\nimport { PlatformModule } from '@angular/cdk/platform';\r\nimport { ObserversModule } from '@angular/cdk/observers';\r\nimport { PortalModule } from '@angular/cdk/portal';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\r\n\r\n/**\r\n * NgModule that includes all Material modules that are required to serve the demo-app.\r\n */\r\n@NgModule({\r\n\texports: [\r\n\t\tMatAutocompleteModule,\r\n\t\tMatButtonModule,\r\n\t\tMatButtonToggleModule,\r\n\t\tMatCardModule,\r\n\t\tMatCheckboxModule,\r\n\t\tMatChipsModule,\r\n\t\tMatTableModule,\r\n\t\tMatDatepickerModule,\r\n\t\tMatDialogModule,\r\n\t\tMatExpansionModule,\r\n\t\tMatFormFieldModule,\r\n\t\tMatGridListModule,\r\n\t\tMatIconModule,\r\n\t\tMatInputModule,\r\n\t\tMatListModule,\r\n\t\tMatMenuModule,\r\n\t\tMatPaginatorModule,\r\n\t\tMatProgressBarModule,\r\n\t\tMatProgressSpinnerModule,\r\n\t\tMatRadioModule,\r\n\t\tMatRippleModule,\r\n\t\tMatSelectModule,\r\n\t\tMatSidenavModule,\r\n\t\tMatSlideToggleModule,\r\n\t\tMatSliderModule,\r\n\t\tMatSnackBarModule,\r\n\t\tMatSortModule,\r\n\t\tMatTabsModule,\r\n\t\tMatToolbarModule,\r\n\t\tMatTooltipModule,\r\n\t\tMatMomentDateModule,\r\n\t\tCdkTableModule,\r\n\t\tA11yModule,\r\n\t\tBidiModule,\r\n\t\tObserversModule,\r\n\t\tOverlayModule,\r\n\t\tPlatformModule,\r\n\t\tPortalModule,\r\n\t\tFlexLayoutModule,\r\n\t\tMatStepperModule\r\n\t]\r\n})\r\nexport class MaterialModule { }\r\n","import { ItemConfigurationProperties } from '../entities/form-configuration.entity';\r\n\r\nexport const headerFields: ItemConfigurationProperties[] = [\r\n    {\r\n        id: 'ContractType',\r\n        displayName: 'ContractType',\r\n        isMandatory: true,\r\n        defaultValue: null,\r\n        format: null,\r\n        isEditable: true,\r\n    },\r\n    {\r\n        id: 'ContractReference',\r\n        displayName: 'ContractReference',\r\n        isMandatory: false,\r\n        defaultValue: null,\r\n        format: null,\r\n        isEditable: true,\r\n    },\r\n    {\r\n        id: 'ContractDate',\r\n        displayName: 'ContractDate',\r\n        isMandatory: true,\r\n        defaultValue: null,\r\n        format: null,\r\n        isEditable: true,\r\n    },\r\n    {\r\n        id: 'Department',\r\n        displayName: 'Department',\r\n        isMandatory: true,\r\n        defaultValue: null,\r\n        format: null,\r\n        isEditable: true,\r\n    },\r\n    {\r\n        id: 'DepartmentDescription',\r\n        displayName: 'DepartmentDescription',\r\n        isMandatory: true,\r\n        defaultValue: null,\r\n        format: null,\r\n        isEditable: true,\r\n    },\r\n    {\r\n        id: 'Trader',\r\n        displayName: 'Trader',\r\n        isMandatory: true,\r\n        defaultValue: null,\r\n        format: null,\r\n        isEditable: true,\r\n    },\r\n];\r\n\r\nexport const counterpartiesFields: ItemConfigurationProperties[] = [\r\n    {\r\n        id: 'Buyer',\r\n        displayName: 'Buyer',\r\n        isMandatory: true,\r\n        defaultValue: null,\r\n        format: null,\r\n        isEditable: true,\r\n    },\r\n    {\r\n        id: 'BuyerDescription',\r\n        displayName: 'BuyerDescription',\r\n        isMandatory: true,\r\n        defaultValue: null,\r\n        format: null,\r\n        isEditable: true,\r\n    },\r\n    {\r\n        id: 'Seller',\r\n        displayName: 'Seller',\r\n        isMandatory: true,\r\n        defaultValue: null,\r\n        format: null,\r\n        isEditable: true,\r\n    },\r\n    {\r\n        id: 'SellerDescription',\r\n        displayName: 'SellerDescription',\r\n        isMandatory: true,\r\n        defaultValue: null,\r\n        format: null,\r\n        isEditable: true,\r\n    },\r\n    {\r\n        id: 'CounterpartyReference',\r\n        displayName: 'CounterpartyReference',\r\n        isMandatory: false,\r\n        defaultValue: null,\r\n        format: null,\r\n        isEditable: true,\r\n    },\r\n];\r\n\r\nexport const commodityFields: ItemConfigurationProperties[] = [\r\n    {\r\n        id: 'Commodity',\r\n        displayName: 'Commodity',\r\n        isMandatory: true,\r\n        defaultValue: null,\r\n        format: null,\r\n        isEditable: true,\r\n    },\r\n    {\r\n        id: 'CommodityDescription',\r\n        displayName: 'CommodityDescription',\r\n        isMandatory: true,\r\n        defaultValue: null,\r\n        format: null,\r\n        isEditable: true,\r\n    },\r\n    {\r\n        id: 'CropYear',\r\n        displayName: 'CropYear',\r\n        isMandatory: false,\r\n        defaultValue: null,\r\n        format: null,\r\n        isEditable: true,\r\n    },\r\n];\r\n\r\nexport const quantityFields: ItemConfigurationProperties[] = [\r\n    {\r\n        id: 'QuantityCode',\r\n        displayName: 'QuantityCode',\r\n        isMandatory: true,\r\n        defaultValue: 'MT',\r\n        format: null,\r\n        isEditable: true,\r\n    },\r\n    {\r\n        id: 'Quantity',\r\n        displayName: 'Quantity',\r\n        isMandatory: true,\r\n        defaultValue: null,\r\n        format: null,\r\n        isEditable: true,\r\n    },\r\n    {\r\n        id: 'QuantityContracted',\r\n        displayName: 'QuantityContracted',\r\n        isMandatory: true,\r\n        defaultValue: null,\r\n        format: null,\r\n        isEditable: true,\r\n    },\r\n];\r\n\r\nexport const priceFields: ItemConfigurationProperties[] = [\r\n    {\r\n        id: 'PricingMethod',\r\n        displayName: 'PricingMethod',\r\n        isMandatory: true,\r\n        defaultValue: 'Priced',\r\n        format: null,\r\n        isEditable: true,\r\n    },\r\n    {\r\n        id: 'Currency',\r\n        displayName: 'Currency',\r\n        isMandatory: true,\r\n        defaultValue: null,\r\n        format: null,\r\n        isEditable: true,\r\n    },\r\n    {\r\n        id: 'PriceCode',\r\n        displayName: 'PriceCode',\r\n        isMandatory: true,\r\n        defaultValue: null,\r\n        format: null,\r\n        isEditable: true,\r\n    },\r\n    {\r\n        id: 'PaymentTerms',\r\n        displayName: 'PaymentTerms',\r\n        isMandatory: true,\r\n        defaultValue: null,\r\n        format: null,\r\n        isEditable: true,\r\n    },\r\n    {\r\n        id: 'PaymentTermsDescription',\r\n        displayName: 'PaymentTermsDescription',\r\n        isMandatory: true,\r\n        defaultValue: null,\r\n        format: null,\r\n        isEditable: true,\r\n    },\r\n    {\r\n        id: 'Price',\r\n        displayName: 'Price',\r\n        isMandatory: true,\r\n        defaultValue: null,\r\n        format: null,\r\n        isEditable: true,\r\n    },\r\n    {\r\n        id: 'ContractedValue',\r\n        displayName: 'ContractedValue',\r\n        isMandatory: false,\r\n        defaultValue: '0',\r\n        format: null,\r\n        isEditable: true,\r\n    },\r\n    {\r\n        id: 'FlatPricePremiumOrDiscount',\r\n        displayName: 'FlatPricePremiumOrDiscount',\r\n        isMandatory: false,\r\n        defaultValue: null,\r\n        format: null,\r\n        isEditable: true,\r\n    },\r\n    {\r\n        id: 'FlatPricePDCurrency',\r\n        displayName: 'FlatPricePDCurrency',\r\n        isMandatory: false,\r\n        defaultValue: null,\r\n        format: null,\r\n        isEditable: true,\r\n    },\r\n    {\r\n        id: 'FlatPRicePDRateOrPercent',\r\n        displayName: 'FlatPRicePDRateOrPercent',\r\n        isMandatory: false,\r\n        defaultValue: null,\r\n        format: null,\r\n        isEditable: true,\r\n    },\r\n    {\r\n        id: 'FlatPricePDValue',\r\n        displayName: 'FlatPricePDValue',\r\n        isMandatory: false,\r\n        defaultValue: null,\r\n        format: null,\r\n        isEditable: true,\r\n    },\r\n];\r\n\r\nexport const termsFields: ItemConfigurationProperties[] = [\r\n    {\r\n        id: 'ContractTerms',\r\n        displayName: 'ContractTerms',\r\n        isMandatory: true,\r\n        defaultValue: null,\r\n        format: null,\r\n        isEditable: true,\r\n    },\r\n    {\r\n        id: 'ContractTermsDescription',\r\n        displayName: 'ContractTermsDescription',\r\n        isMandatory: true,\r\n        defaultValue: null,\r\n        format: null,\r\n        isEditable: true,\r\n    },\r\n    {\r\n        id: 'ContractTermsPort',\r\n        displayName: 'ContractTermsPort',\r\n        isMandatory: true,\r\n        defaultValue: null,\r\n        format: null,\r\n        isEditable: true,\r\n    },\r\n    {\r\n        id: 'ContractTermsPortDescription',\r\n        displayName: 'ContractTermsPortDescription',\r\n        isMandatory: true,\r\n        defaultValue: null,\r\n        format: null,\r\n        isEditable: true,\r\n    },\r\n    {\r\n        id: 'Arbitration',\r\n        displayName: 'Arbitration',\r\n        isMandatory: false,\r\n        defaultValue: null,\r\n        format: null,\r\n        isEditable: true,\r\n    },\r\n    {\r\n        id: 'ArbitrationDescription',\r\n        displayName: 'ArbitrationDescription',\r\n        isMandatory: false,\r\n        defaultValue: null,\r\n        format: null,\r\n        isEditable: true,\r\n    },\r\n];\r\n\r\nexport const locationFields: ItemConfigurationProperties[] = [\r\n    {\r\n        id: 'PortOfOrigin',\r\n        displayName: 'PortOfOrigin',\r\n        isMandatory: false,\r\n        defaultValue: null,\r\n        format: null,\r\n        isEditable: true,\r\n    },\r\n    {\r\n        id: 'PortOfOriginDescription',\r\n        displayName: 'PortOfOriginDescription',\r\n        isMandatory: false,\r\n        defaultValue: null,\r\n        format: null,\r\n        isEditable: true,\r\n    },\r\n    {\r\n        id: 'PortOfDestionation',\r\n        displayName: 'PortOfDestionation',\r\n        isMandatory: false,\r\n        defaultValue: null,\r\n        format: null,\r\n        isEditable: true,\r\n    },\r\n    {\r\n        id: 'PortOfDestinationDescription',\r\n        displayName: 'PortOfDestinationDescription',\r\n        isMandatory: false,\r\n        defaultValue: null,\r\n        format: null,\r\n        isEditable: true,\r\n    },\r\n    {\r\n        id: 'MarketSector',\r\n        displayName: 'MarketSector',\r\n        isMandatory: false,\r\n        defaultValue: null,\r\n        format: null,\r\n        isEditable: true,\r\n    },\r\n    {\r\n        id: 'MarketSectorDescripton',\r\n        displayName: 'MarketSector',\r\n        isMandatory: false,\r\n        defaultValue: null,\r\n        format: null,\r\n        isEditable: true,\r\n    },\r\n];\r\n\r\nexport const shipmentPeriodFields: ItemConfigurationProperties[] = [\r\n    {\r\n        id: 'PeriodType',\r\n        displayName: 'PeriodType',\r\n        isMandatory: true,\r\n        defaultValue: null,\r\n        format: null,\r\n        isEditable: true,\r\n    },\r\n    {\r\n        id: 'PeriodFrom',\r\n        displayName: 'PeriodFrom',\r\n        isMandatory: true,\r\n        defaultValue: null,\r\n        format: null,\r\n        isEditable: true,\r\n    },\r\n    {\r\n        id: 'PeriodTo',\r\n        displayName: 'PeriodTo',\r\n        isMandatory: true,\r\n        defaultValue: null,\r\n        format: null,\r\n        isEditable: true,\r\n    },\r\n    {\r\n        id: 'PositionType',\r\n        displayName: 'PositionType',\r\n        isMandatory: true,\r\n        defaultValue: 'Start',\r\n        format: null,\r\n        isEditable: true,\r\n    },\r\n];\r\n\r\nexport const memorandumFields: ItemConfigurationProperties[] = [\r\n    {\r\n        id: 'Memorandum',\r\n        displayName: 'Memorandum',\r\n        isMandatory: false,\r\n        defaultValue: null,\r\n        format: null,\r\n        isEditable: true,\r\n    },\r\n];\r\n","export class ErrorDisplayView {\r\n    catchPhrase: string;\r\n    status: number;\r\n    title: string;\r\n    message: string;\r\n    image: string;\r\n\r\n    constructor(status: string) {\r\n        const errorList: { [status: number]: ErrorDisplayView; } = {\r\n            401:\r\n            {\r\n                status: 401,\r\n                catchPhrase: 'Uho...',\r\n                title: 'Unauthorized access',\r\n                message: 'Who gave you that link ? You shouldn\\'t be there !',\r\n                image: 'assets/img/Error401.svg',\r\n            },\r\n            403:\r\n            {\r\n                status: 403,\r\n                catchPhrase: 'Uho...',\r\n                title: 'You do not have access to ATLAS V2',\r\n                message: 'For any questions contact the support team atlas-replat-support@ldc.com',\r\n                image: 'assets/img/Error403.svg',\r\n            },\r\n            404:\r\n            {\r\n                status: 404,\r\n                catchPhrase: 'To infinity and beyond !',\r\n                title: 'Page not Found',\r\n                message: 'Unfortunately, this page doesn\\'t exist, check you URL.',\r\n                image: 'assets/img/Error404.svg',\r\n            },\r\n            500:\r\n            {\r\n                status: 500,\r\n                catchPhrase: 'Oops !',\r\n                title: 'Technical error',\r\n                message: 'Something went wrong... don\\'t worry, it\\'s not you, it\\'s us.',\r\n                image: 'assets/img/Error500.svg',\r\n            },\r\n        };\r\n\r\n        if (status in errorList) {\r\n            return errorList[status];\r\n        }\r\n    }\r\n}\r\n","import { Cost } from '../entities/cost.entity';\r\nimport { SectionReference } from '../entities/section-reference.entity';\r\nimport { Section } from '../entities/section.entity';\r\nimport { Trade } from '../entities/trade.entity';\r\nimport { ContractStatus } from '../enums/contract-status.enum';\r\nimport { ContractTypes } from '../enums/contract-type.enum';\r\nimport { PositionMonthTypes } from '../enums/position-month-type.enum';\r\nimport { PricingMethods } from '../enums/pricing-method.enum';\r\nimport { SectionTypes } from '../enums/section-type.enum';\r\n\r\nexport class TrancheSplitView {\r\n    constructor(section: Section, quantity: number, id: number = 0, sectionType: number = 1) {\r\n        this.id = id;\r\n        this.contractType = section.contractType;\r\n        this.contractLabel = section.contractLabel;\r\n        this.contractId = section.contractId;\r\n        this.commodityId = section.commodityId;\r\n        this.sectionNumber = section.sectionNumber;\r\n        this.status = section.status;\r\n        this.firstApprovalDateTime = section.firstApprovalDateTime;\r\n        this.departmentId = section.departmentId;\r\n        this.buyerCode = section.buyerCode;\r\n        this.sellerCode = section.sellerCode;\r\n        this.counterpartyReference = section.counterpartyReference;\r\n        this.originalQuantity = section.originalQuantity;\r\n        this.quantity = quantity;\r\n        this.portOfOrigin = section.portOfOrigin;\r\n        this.portOfDestination = section.portOfDestination;\r\n        this.costs = section.costs;\r\n        this.deliveryPeriodStartDate = section.deliveryPeriodStartDate;\r\n        this.deliveryPeriodEndDate = section.deliveryPeriodEndDate;\r\n        this.positionMonthType = section.positionMonthType;\r\n        this.positionMonthIndex = section.positionMonthIndex;\r\n        this.cropYear = section.cropYear;\r\n        this.packingCode = section.packingCode;\r\n        this.contractTerms = section.contractTerms;\r\n        this.contractTermsLocation = section.contractTermsLocation;\r\n        this.periodTypeCode = section.periodTypeCode;\r\n        this.periodTypeId = section.periodTypeId;\r\n        this.arbitration = section.arbitration;\r\n        this.pricingMethod = section.pricingMethod;\r\n        this.paymentTerms = section.paymentTerms;\r\n        this.currency = section.currencyCode;\r\n        this.price = section.price;\r\n        this.blDate = section.blDate;\r\n        this.allocatedToId = section.allocatedToId;\r\n        this.allocatedTo = section.allocatedTo;\r\n        this.allocationDate = section.allocationDate;\r\n        this.assignedCharterReference = section.assignedCharterReference;\r\n        this.charterAssignmentDate = section.charterAssignmentDate;\r\n        this.createdBy = section.createdBy;\r\n        this.creationDate = section.creationDate;\r\n        this.lastModifiedBy = section.lastModifiedBy;\r\n        this.lastModifiedDate = section.lastModifiedDate;\r\n        this.header = section.header;\r\n        this.periodTypeId = section.periodTypeId;\r\n        this.sectionOriginId = section.sectionId;\r\n        this.contractLabelOrigin = section.contractLabelOrigin;\r\n        this.premiumDiscountValue = section.premiumDiscountValue;\r\n        this.premiumDiscountCurrency = section.premiumDiscountCurrency;\r\n        this.premiumDiscountBasis = section.premiumDiscountBasis;\r\n        this.memorandum = section.memorandum;\r\n        this.contractedValue = section.contractedValue;\r\n        this.weightUnitId = section.weightUnitId;\r\n        this.priceUnitId = section.priceUnitId;\r\n        this.marketSectorId = section.marketSectorId;\r\n        this.sectionTypeId = sectionType === SectionTypes.Tranche ? SectionTypes.Tranche : SectionTypes.Split;\r\n    }\r\n\r\n    contractType: ContractTypes;\r\n    sectionId: number;\r\n    contractId: number;\r\n    physicalContractId: number;\r\n    contractLabel: string;\r\n    sectionNumber: string;\r\n    status: ContractStatus;\r\n    firstApprovalDateTime: Date;\r\n    departmentId: number;\r\n    buyerCode: string;\r\n    sellerCode: string;\r\n    counterpartyReference: string;\r\n    commodityId: number;\r\n    originalQuantity: number;\r\n    quantity: number;\r\n    weightUnitId: number;\r\n    portOfOrigin: string;\r\n    portOfDestination: string;\r\n    deliveryPeriodStartDate: Date;\r\n    deliveryPeriodEndDate: Date;\r\n    costs: Cost[];\r\n    positionMonthType: PositionMonthTypes;\r\n    positionMonthIndex: number;\r\n    positionMonth: Date;\r\n    cropYear: number;\r\n    cropYearTo: number;\r\n    packingCode: string;\r\n    contractTerms: string;\r\n    contractTermsLocation: string;\r\n    periodTypeCode: string;\r\n    periodTypeId: number;\r\n    arbitration: string;\r\n    marketSectorId: number;\r\n    pricingMethod: PricingMethods;\r\n    paymentTerms: string;\r\n    currency: string;\r\n    priceUnitId: number;\r\n    price: number;\r\n    blDate: Date;\r\n    allocatedToId: number;\r\n    allocatedTo: SectionReference;\r\n    allocationDate: Date;\r\n    assignedCharterReference: string;\r\n    charterAssignmentDate: Date;\r\n    createdBy: string;\r\n    creationDate: Date;\r\n    lastModifiedBy: string;\r\n    lastModifiedDate: Date;\r\n    header: Trade<Section>;\r\n    sectionOriginId: number;\r\n    contractLabelOrigin: string;\r\n    premiumDiscountValue: number;\r\n    premiumDiscountCurrency: string;\r\n    premiumDiscountBasis: number;\r\n    memorandum: string;\r\n    contractedValue: string;\r\n    sectionTypeId: number;\r\n    contractDate: Date;\r\n    charterId: number;\r\n    isTouched: boolean;\r\n    id: number;\r\n}\r\n","import createNumberMask from 'text-mask-addons/dist/createNumberMask';\r\nimport { isNumber } from 'util';\r\n\r\nexport function CreateMask(\r\n    prefix: string = '',\r\n    includeThousandsSeparator: boolean = true,\r\n    allowDecimal: boolean = true,\r\n    requireDecimal: boolean = true,\r\n    decimalLimit: number = 2,\r\n    allowNegative: false): any {\r\n\r\n    return createNumberMask({\r\n        prefix,\r\n        includeThousandsSeparator,\r\n        allowDecimal,\r\n        requireDecimal,\r\n        decimalLimit,\r\n        allowNegative,\r\n    });\r\n}\r\n\r\nexport function TwoDigitsDecimalNumberMask(): any {\r\n    return createNumberMask({\r\n        prefix: '',\r\n        includeThousandsSeparator: true,\r\n        allowDecimal: true,\r\n        requireDecimal: false,\r\n        decimalLimit: 2,\r\n    });\r\n}\r\n\r\nexport function TwoDigitsDecimalNegativeNumberMask(): any {\r\n    return createNumberMask({\r\n        prefix: '',\r\n        includeThousandsSeparator: true,\r\n        allowDecimal: true,\r\n        requireDecimal: false,\r\n        decimalLimit: 2,\r\n        allowNegative: true,\r\n    });\r\n}\r\n\r\nexport function FourDigitsDecimalNegativeNumberMask(): any {\r\n    return createNumberMask({\r\n        prefix: '',\r\n        includeThousandsSeparator: true,\r\n        allowDecimal: true,\r\n        requireDecimal: false,\r\n        decimalLimit: 4,\r\n        allowNegative: true,\r\n\r\n    });\r\n}\r\n\r\nexport function CustomNumberMask(numberOfIntegers: number, numberOfDigits: number, negativeAllowed = false): any {\r\n    return createNumberMask({\r\n        prefix: '',\r\n        includeThousandsSeparator: true,\r\n        allowDecimal: true,\r\n        requireDecimal: false,\r\n        decimalLimit: numberOfDigits,\r\n        allowNegative: negativeAllowed,\r\n        integerLimit: numberOfIntegers,\r\n    });\r\n}\r\n\r\nexport function IntegerNumber(): any {\r\n    return createNumberMask({\r\n        prefix: '',\r\n        suffix: '',\r\n        includeThousandsSeparator: true,\r\n        allowDecimal: false,\r\n        decimalLimit: 0,\r\n    });\r\n}\r\n\r\nexport function AllIntegerNumber(): any {\r\n    return createNumberMask({\r\n        prefix: '',\r\n        suffix: '',\r\n        includeThousandsSeparator: true,\r\n        allowDecimal: false,\r\n        decimalLimit: 0,\r\n        allowNegative: true,\r\n    });\r\n}\r\n\r\nexport function AllNumberMask(): any {\r\n    return createNumberMask({\r\n        prefix: '',\r\n        suffix: '',\r\n        includeThousandsSeparator: true,\r\n        decimalSymbol: '.',\r\n        thousandsSeparatorSymbol: ',',\r\n        allowDecimal: true,\r\n        decimalLimit: 20,\r\n        integerLimit: 20,\r\n        requireDecimal: false,\r\n        allowNegative: true,\r\n    });\r\n}\r\n\r\nexport function ConvertToNumber(value: string | Number): number {\r\n    if (isNumber(value)) {\r\n        return value as number;\r\n    }\r\n\r\n    let localValue = String(value);\r\n    if (localValue) {\r\n        localValue = localValue.replace(/[^\\d.-]/g, '');\r\n        return Number(localValue);\r\n    }\r\n}\r\n\r\nexport function ConvertToNumberWithDecimal(value: string | Number): number {\r\n    if (isNumber(value)) {\r\n        return value as number;\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport * as moment from 'moment';\r\n\r\n@Pipe({ name: 'formatDate' })\r\nexport class FormatDatePipe implements PipeTransform {\r\n    transform(value: Date): string {\r\n        return (value == null) ? null : moment(new Date(value)).format('DD MMM YYYY').toString().toUpperCase();\r\n    }\r\n    transformdate(value: Date): string {\r\n        return (value == null) ? null : moment(new Date(value)).format('DD/MM/YYYY').toString().toUpperCase();\r\n    }\r\n    transformtime(value: Date): string {\r\n        return (value == null) ? null : moment(new Date(value)).format('hh:mm:ss').toString().toUpperCase();\r\n    }\r\n    transformTimeWithoutSeconds(value: Date): string {\r\n        return (value == null) ? null : moment(new Date(value)).format('hh:mm').toString().toUpperCase();\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\nimport { Trader } from '../entities/trader.entity';\r\nimport { User } from '../entities/user.entity';\r\n\r\n@Pipe({\r\n\tname: 'userInitials',\r\n})\r\nexport class UserInitialsPipePipe implements PipeTransform {\r\n\ttransform(value: User | Trader, args?: any): string {\r\n\t\treturn (\r\n\t\t\tvalue.firstName.substr(0, 1) + value.lastName.substr(0, 2)\r\n\t\t).toUpperCase();\r\n\t}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\r\nimport * as moment from 'moment';\r\nimport { combineLatest, Observable, of } from 'rxjs';\r\nimport { concatMap, map } from 'rxjs/operators';\r\nimport { AuthorizationService } from '../../core/services/authorization.service';\r\nimport { CompanyManagerService } from '../../core/services/company-manager.service';\r\nimport { SecurityService } from '../services/security.service';\r\n\r\n@Injectable()\r\nexport class CompanyDateResolver // to be refactored as CompanyManagement Resolver\r\n    implements Resolve<moment.Moment> {\r\n    constructor(\r\n        private companyManager: CompanyManagerService,\r\n        private securityService: SecurityService,\r\n        private authorizationService: AuthorizationService,\r\n    ) { }\r\n\r\n    resolve(\r\n        route: ActivatedRouteSnapshot,\r\n    ): Observable<moment.Moment> {\r\n        return this.securityService.isSecurityReady().pipe(\r\n            concatMap(() => {\r\n                const company = route.params['company'];\r\n                this.companyManager.refreshCurrentCompany(company);\r\n                return this.companyManager.refreshCompanyDate(company);\r\n            }),\r\n            concatMap((companyDate: moment.Moment) => {\r\n                // will be refactored when adding a new UserIdentityManagement Service\r\n                return combineLatest(of(companyDate),\r\n                                     this.authorizationService.loadCompanyPreferences(),\r\n                );\r\n            }),\r\n            map(([companyDate, userCompanyPreferences]) => {\r\n                const company = route.params['company'];\r\n                const userPreferences = (userCompanyPreferences && userCompanyPreferences.length > 0) ? userCompanyPreferences[0] : null;\r\n                this.authorizationService.getCurrentUser().companyPreferences[company] = userPreferences;\r\n                this.authorizationService.user.companyPreferences[company] = userPreferences;\r\n                return companyDate;\r\n                // -- refactoring end\r\n            }),\r\n        );\r\n\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { ItemConfigurationProperties } from '../entities/form-configuration.entity';\r\nimport { FormConfigurationProviderService } from '../services/form-configuration-provider.service';\r\n\r\n@Injectable()\r\nexport class FormConfigurationResolver\r\n    implements Resolve<ItemConfigurationProperties[]> {\r\n    constructor(\r\n        private configurationProvider: FormConfigurationProviderService,\r\n    ) { }\r\n\r\n    resolve(\r\n        route: ActivatedRouteSnapshot,\r\n    ): Observable<ItemConfigurationProperties[]> {\r\n        const company = route.params['company'];\r\n        const formId = route.data.formId;\r\n        return this.configurationProvider.getConfiguration(company, formId);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\r\nimport { forkJoin as observableForkJoin, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { MasterData } from '../entities/masterdata.entity';\r\nimport { MasterdataService } from '../services/http-services/masterdata.service';\r\n\r\n@Injectable()\r\nexport class MasterDataResolver implements Resolve<MasterData> {\r\n    constructor(private masterDataService: MasterdataService) { }\r\n\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot):\r\n        Observable<MasterData> {\r\n        const masterdataList = route.data['masterdataList'] as string[];\r\n        const masterdataWithoutCompanyList = route.data['masterdataWithoutCompanyList'] as string[];\r\n        const company = route.params['company'];\r\n\r\n        return observableForkJoin([\r\n            this.masterDataService.getMasterData(masterdataList, company),\r\n            this.masterDataService.getMasterData(masterdataWithoutCompanyList, company, true),\r\n        ]).pipe(\r\n            map((results) => {\r\n                const masterdata = results[0];\r\n                this.masterDataService.concatMasterdataWitoutCompany(results[1]);\r\n                return masterdata;\r\n            }));\r\n    }\r\n}\r\n","import { trigger, animate, style, group, animateChild, query, stagger, transition } from '@angular/animations';\r\n\r\nexport const routerTransition = trigger('routerTransition',\r\n\t[\r\n\t\ttransition('* <=> *',\r\n\t\t\t[\r\n                /* order */\r\n                /* 1 */ query(':enter, :leave', style({ position: 'absolute', width: '100%' }), { optional: true }),\r\n                /* 2 */ group([// block executes in parallel\r\n\t\t\t\t\tquery(':enter',\r\n\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\tstyle({ /*transform: 'translateY(10%)',*/ opacity: 0 }),\r\n\t\t\t\t\t\t\tanimate('0.3s ease-in', style({ /*transform: 'translateY(0%)',*/ opacity: 1 }))\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\t{ optional: true }),\r\n\t\t\t\t\tquery(':leave',\r\n\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\tstyle({ /*transform: 'translateY(0%)',*/ opacity: 1 }),\r\n\t\t\t\t\t\t\tanimate('0.3s ease-out', style({ /*transform: 'translateY(10%)', */opacity: 0 }))\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\t{ optional: true })\r\n\t\t\t\t])\r\n\t\t\t])\r\n\t]);\r\n","import { Injectable } from '@angular/core';\r\nimport * as agGrid from 'ag-grid-community';\r\nimport { AtlasAgGridParam } from '../entities/atlas-ag-grid-param.entity';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\n\r\nexport class AgGridService {\r\n\r\n    atlasAgGridParam: AtlasAgGridParam;\r\n\r\n    constructor() {\r\n        this.atlasAgGridParam = new AtlasAgGridParam();\r\n        this.atlasAgGridParam.rowHeight = 24;\r\n        this.atlasAgGridParam.headerHeight = 48;\r\n    }\r\n\r\n    public getAgGridParam(): AtlasAgGridParam {\r\n        return this.atlasAgGridParam;\r\n    }\r\n\r\n    public getGridDefaultRowHeight(): number {\r\n        return this.atlasAgGridParam.rowHeight;\r\n    }\r\n\r\n    public sizeColumns(params: agGrid.GridOptions) {\r\n        if (params) {\r\n            if (params.columnApi) {\r\n                params.columnApi.autoSizeAllColumns(); // to assure that all columns have a width before checking condition\r\n            }\r\n\r\n            if (params.api && params.api['gridPanel'] && params.api['gridPanel']['columnController']) {\r\n\r\n                const availableWidth = params.api['gridPanel'].getWidthForSizeColsToFit();\r\n                const columns = params.api['gridPanel']['columnController'].getAllDisplayedColumns();\r\n                const usedWidth = params.api['gridPanel']['columnController'].getWidthOfColsInList(columns);\r\n\r\n                if (params.api && usedWidth <= availableWidth) {\r\n                    params.api.sizeColumnsToFit();\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { UtilService } from './util.service';\r\n\r\n@Injectable()\r\nexport class AutocompleteService {\r\n\r\n    constructor(\r\n        protected util: UtilService) { }\r\n\r\n    public setDescriptionByCodeAndFilterAutocomplete(value: string, descriptions: { [key: string]: string }, descriptionName: string, masterDataList: any[] = [],\r\n        dataToFilter: any[] = [], propertyToCompare: string, propertyToDisplay: string, minLength: number = 0): any[] {\r\n        if (value != null && value.length < minLength) {\r\n            return [];\r\n        }\r\n        this.setDescriptionByCode(value, descriptions, descriptionName, masterDataList, propertyToCompare, propertyToDisplay);\r\n        return value ? this.util.filterDictByValue(value, dataToFilter, propertyToCompare) : dataToFilter.slice();\r\n    }\r\n\r\n    public getDescriptionByCode(value: string, masterDataList: any[] = [], propertyToCompare, propertyToDisplay): string {\r\n        if (value) {\r\n            const ret = masterDataList.filter(\r\n                (fieldVal) => fieldVal[propertyToCompare] ? fieldVal[propertyToCompare].toLowerCase().trim() === value.toLowerCase().trim() : false);\r\n            if (ret.length > 0) {\r\n                return ret[0][propertyToDisplay];\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public setDescriptionByCode(value: string, descriptions: { [key: string]: string }, descriptionName: string, masterDataList: any[], propertyToCompare: string, propertyToDisplay: string) {\r\n        descriptions[descriptionName] = this.getDescriptionByCode(value, masterDataList, propertyToCompare, propertyToDisplay);\r\n    }\r\n\r\n    public getObjectFromCode(code: string, masterDataList: any[] = [], propertyToCompare: string): any {\r\n        if (!code) {\r\n            return null;\r\n        }\r\n\r\n        const ret = masterDataList.filter((md) => md[propertyToCompare].toLowerCase() === code.toLowerCase());\r\n        if (ret.length > 0) {\r\n            return ret[0];\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { WebStorageService } from './web-storage.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class BaseConfigurationProviderService<T> {\r\n    protected configuration: Map<string, Map<string, T>> = new Map();\r\n    protected currentConfiguration: T;\r\n    protected storageEnabled = true;\r\n\r\n    constructor(protected storageService: WebStorageService) { }\r\n\r\n    protected saveToMemory(\r\n        companyId: string,\r\n        resourceId: string,\r\n        config: T,\r\n    ) {\r\n        if (!this.isCompanyExists(companyId)) {\r\n            this.configuration.set(companyId, new Map());\r\n        }\r\n        this.configuration.get(companyId).set(resourceId, config);\r\n        this.currentConfiguration = config;\r\n    }\r\n\r\n    protected isCompanyExists(companyId: string) {\r\n        if (companyId) {\r\n            return this.configuration.has(companyId);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    protected isConfigurationExists(companyId: string, resourceId: string) {\r\n        if (companyId && resourceId && this.isCompanyExists(companyId)) {\r\n            return this.configuration.get(companyId).has(resourceId);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    protected getConfigurationFromStorage(\r\n        companyId: string,\r\n        resourceId: string,\r\n        key: string,\r\n    ): T {\r\n        if (this.storageEnabled && this.storageService.isInStorage(key)) {\r\n            const data = this.storageService.loadFromStorage(key) as T;\r\n            this.configuration.clear();\r\n            this.saveToMemory(companyId, resourceId, data);\r\n            return data;\r\n        }\r\n\r\n        return null;\r\n    }\r\n}\r\n","import { AbstractControl, ValidationErrors } from '@angular/forms';\r\n\r\nexport class AbstractControlService {\r\n\r\n    constructor() { }\r\n\r\n    static addError(control: AbstractControl, err: { key: string, value: boolean }) {\r\n        let controlErrors: ValidationErrors = control.errors;\r\n        if (!controlErrors || !(err.key in controlErrors)) {\r\n            if (!controlErrors) {\r\n                controlErrors = {};\r\n            }\r\n            controlErrors[err.key] = true;\r\n            control.setErrors(controlErrors);\r\n        }\r\n    }\r\n\r\n    static removeError(control: AbstractControl, err: { key: string, value: boolean }) {\r\n        const controlErrors: ValidationErrors = control.errors;\r\n        const newErrorList: ValidationErrors = {};\r\n        if (controlErrors) {\r\n            for (const key of Object.keys(controlErrors)) {\r\n                if (key !== err.key) {\r\n                    newErrorList[key] = true;\r\n                }\r\n            }\r\n            control.setErrors(newErrorList);\r\n        }\r\n    }\r\n}\r\n","export class FunctionalObjectTableFields {\r\n    tableId: number;\r\n    fieldIds: number[];\r\n}\r\n","import { Injectable, OnInit } from '@angular/core';\r\nimport { CookieService } from \"ngx-cookie-service\";\r\n\r\n@Injectable()\r\nexport class CookiesService {\r\n\r\n\r\n    constructor(private cookieService: CookieService) { }\r\n\r\n    setCookie(property: string, value: string) {\r\n\t\tlocalStorage.setItem(property, value);\r\n    }\r\n\r\n    getCookie(property: string): string\r\n    {\r\n\t\treturn localStorage.getItem(property);\r\n    }\r\n}\r\n\r\nexport class CookiesProps {\r\n    public static readonly currentCompany = \"currentCompany\";\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Moment } from 'moment';\r\n\r\n@Injectable()\r\nexport class DateConverterService {\r\n\r\n    constructor() { }\r\n\r\n    dateToStringConverter(dateToConvert: Date, timeToZero: boolean = true): string {\r\n        if (dateToConvert == null) {\r\n            return null;\r\n        }\r\n        dateToConvert = new Date(dateToConvert);\r\n        let date: Date;\r\n        if (timeToZero) {\r\n            date = new Date(Date.UTC(\r\n                dateToConvert.getFullYear(),\r\n                dateToConvert.getMonth(),\r\n                dateToConvert.getDate(),\r\n                0, 0, 0));\r\n        } else {\r\n            date = new Date(Date.UTC(\r\n                dateToConvert.getFullYear(),\r\n                dateToConvert.getMonth(),\r\n                dateToConvert.getDate(),\r\n                dateToConvert.getHours(),\r\n                dateToConvert.getMinutes(),\r\n                dateToConvert.getSeconds()));\r\n        }\r\n        return date.toISOString();\r\n    }\r\n\r\n    momentToUTC(dateMoment: Moment): Date {\r\n        if (dateMoment === undefined) { return null; }\r\n        if (dateMoment.toString() === '') { return null; }\r\n        const date: Date = dateMoment.toDate();\r\n        return new Date(Date.UTC(date.getFullYear(),\r\n                                 date.getMonth(),\r\n                                 date.getDate(),\r\n                                 date.getHours(),\r\n                                 date.getMinutes(),\r\n                                 date.getSeconds(),\r\n                                 date.getMilliseconds()));\r\n    }\r\n\r\n    toUTC(date: Date): Date {\r\n        if (date === undefined) { return null; }\r\n        if (date.toString() === '') { return null; }\r\n        return new Date(Date.UTC(date.getFullYear(),\r\n                                 date.getMonth(),\r\n                                 date.getDate(),\r\n                                 date.getHours(),\r\n                                 date.getMinutes(),\r\n                                 date.getSeconds(),\r\n                                 date.getMilliseconds()));\r\n    }\r\n\r\n    correctDate(date: Date): Date {\r\n        return new Date(date);\r\n    }\r\n\r\n}\r\n","import { APP_BASE_HREF } from '@angular/common';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Inject, Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../../environments/environment';\r\nimport { AtlasConfiguration } from '../entities/atlas-configuration.entity';\r\nimport { OAuth2Config } from '../entities/o-auth2-config.entity';\r\n\r\n@Injectable()\r\nexport class DiscoveryService {\r\n\r\n    constructor(private http: HttpClient,\r\n        @Inject(APP_BASE_HREF) private baseRef: string) { }\r\n\r\n    getConfiguration(): Observable<AtlasConfiguration> {\r\n        return this.http.get<AtlasConfiguration>(this.baseRef + environment.discoveryServiceLink);\r\n    }\r\n\r\n    getOAuthConfig(): Observable<OAuth2Config> {\r\n        return this.http.get<OAuth2Config>(this.baseRef + environment.discoveryServiceLink + '/oauth');\r\n    }\r\n}\r\n","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material';\r\nimport { DocumentGenerationConfirmationDialogBoxComponent } from '../components/document-generation-confirmation-dialog-box/document-generation-confirmation-dialog-box.component';\r\nimport { DocumentPopupButtonSettings } from '../entities/document-popup-button-settings.entity';\r\nimport { ProblemDetail } from '../entities/problem-detail.entity';\r\nimport { DocumentEntityTypes } from '../enums/document-entity-type.enum';\r\n\r\n@Injectable()\r\nexport class DocumentPopupService {\r\n    constructor(private dialog: MatDialog) { }\r\n\r\n    showDocumentGenerationPopup(title: string,\r\n        entityName: string,\r\n        buttonSettings: DocumentPopupButtonSettings,\r\n        hasBrowseButton = true,\r\n        useEntityNameInButtons = true): MatDialogRef<DocumentGenerationConfirmationDialogBoxComponent> {\r\n        const dialog = this.dialog.open(DocumentGenerationConfirmationDialogBoxComponent, {\r\n            data: {\r\n                title,\r\n                hasBrowseButton,\r\n                entityName,\r\n                useEntityNameInButtons,\r\n                buttonSettings,\r\n            },\r\n        });\r\n\r\n        return dialog;\r\n    }\r\n\r\n    startDialogWork(dialog: MatDialogRef<DocumentGenerationConfirmationDialogBoxComponent>, message: string) {\r\n        if (dialog) {\r\n            dialog.componentInstance.isWorkInProgress = true;\r\n            dialog.componentInstance.processMessage = message;\r\n        }\r\n    }\r\n\r\n    finishDialogWork(dialog: MatDialogRef<DocumentGenerationConfirmationDialogBoxComponent>) {\r\n        if (dialog) {\r\n            dialog.componentInstance.processMessage = '';\r\n            dialog.componentInstance.isWorkInProgress = false;\r\n        }\r\n    }\r\n\r\n    getEntityName(entity: DocumentEntityTypes): string {\r\n        switch (entity) {\r\n            case DocumentEntityTypes.Contract:\r\n                return 'contract advice';\r\n            case DocumentEntityTypes.Invoice:\r\n                return 'invoice';\r\n            case DocumentEntityTypes.Cash:\r\n                return 'payment order';\r\n            default:\r\n                return 'document';\r\n        }\r\n    }\r\n\r\n    getGenericErrorMessage(entity: DocumentEntityTypes): string {\r\n        return 'The selected document format does not allow ' +\r\n            'to add the Document reference. The '\r\n            + this.getEntityName(entity) + ' has not been created. '\r\n            + 'Please repeat the operation with another document or choose another option.';\r\n    }\r\n\r\n    getSizeError(entity: DocumentEntityTypes): string {\r\n        return 'The size of the selected document has to be inferior to 3MB. ' +\r\n            'The ' + this.getEntityName(entity) + 'has not been created. ' +\r\n            'Please repeat the operation with another document or choose another option.';\r\n    }\r\n\r\n    getErrorMessage(error: HttpErrorResponse, entity: DocumentEntityTypes): string {\r\n        if (error.status === 413) {\r\n            return this.getSizeError(entity);\r\n        } else {\r\n            const errorContent = error ? error.error : null;\r\n            const errorDetail = errorContent as ProblemDetail;\r\n            return errorDetail ? errorDetail.detail : this.getGenericErrorMessage(entity);\r\n        }\r\n    }\r\n}\r\n","import { InvoiceMarkingPercentLines } from '../../../../shared/entities/invoice-markings.entity';\r\nexport class InvoiceMarkingPercentLinesCommand {\r\n    invoiceMarkingPercentLines: InvoiceMarkingPercentLines[] = [];\r\n    dataVersionId: number;\r\n}","import { AllocationType } from '../../../../shared/enums/allocation-type.enum';\r\nimport { ShippingType } from '../../../../shared/enums/shipping-type-enum';\r\nimport { SplitType } from '../../../../shared/enums/split-type.enum';\r\nimport { ContractInvoiceType } from '../../../../shared/enums/contract-invoice-type.enum';\r\n\r\nexport class AllocateSectionCommand {\r\n    sectionId: number;\r\n    dataVersionId?: number;\r\n    allocatedSectionId: number;\r\n    shippingType: ShippingType;\r\n    quantity: number;\r\n    sourceQuantity: number;\r\n    targetQuantity: number;\r\n    sectionReference: string;\r\n    allocatedSectionReference: string;\r\n    splitType: SplitType;\r\n    allocationSourceType: AllocationType;\r\n    allocationTargetType: AllocationType;\r\n    contractInvoiceTypeId: ContractInvoiceType;\r\n}\r\n","import { AllocateSection } from '../../../../shared/entities/allocate-section.entity';\r\n\r\nexport class AllocateSectionListCommand {\r\n    allocateSections: AllocateSection[];\r\n\r\n}\r\n","import { AssignedSection } from '../../../entities/assigned-section.entity';\r\n\r\n\r\nexport class CreateCharterCommand {\r\n    charterId: number;\r\n    reference: string;\r\n    description: string;\r\n    transportType: string;\r\n    vesselId: number;\r\n    loadingLocation: string;\r\n    departureDate: Date;\r\n    dischargeLocation: string;\r\n    arrivalDate: Date;\r\n    creationDate: Date;\r\n    createdBy: string;\r\n    charterManagerId: number;\r\n    currency: string;\r\n    weightUnitId: number;\r\n    memo: string;\r\n    departmentId: number;\r\n    blDate?: Date;\r\n    blRef: string;\r\n    sectionsAssigned: AssignedSection[];\r\n}\r\n","import { InvoiceMarkings } from '../../../../shared/entities/invoice-markings.entity';\r\n\r\nexport class InvoiceMarkingListCommand {\r\n    invoices: InvoiceMarkings[] = [];\r\n    invoiceStatusId: number;\r\n    sectionId: number;\r\n    splitAction: boolean;\r\n    dataVersionId: number;\r\n}\r\n","export class InvoiceMarkingPostingStatusCommand {\r\n    transactionDocumentId: number;\r\n    postingStatusId: number;\r\n}\r\n","import { ManualJournalDocument } from '../../../../shared/entities/manual-journal-document.entity';\r\n\r\nexport class ManualJournalCommand {\r\n    manualJournal: ManualJournalDocument;\r\n}\r\n","import { AssignedSection } from '../../../entities/assigned-section.entity';\r\n\r\nexport class ReAssignSectionsCommand {\r\n    company: string;\r\n    newCharterId: number;\r\n    newCharterVesselCode: string;\r\n    charterId: number;\r\n    sectionsAssigned: AssignedSection[];\r\n\r\n}\r\n","export class RemoveAssignedSectionsCommand {\r\n    company: string;\r\n    charterId: number;\r\n    sectionIds: number[];\r\n}\r\n","import { SectionTraffic } from '../../../../shared/entities/section-traffic.entity';\r\n\r\nexport class AssignSectionsRequest {\r\n    charterId: number;\r\n    sectionsTraffic: SectionTraffic[];\r\n}\r\n\r\nexport interface SectionIdentifiers {\r\n    label: string;\r\n    sectionId: number;\r\n}\r\n","import { AssignedSection } from '../../../entities/assigned-section.entity';\r\n\r\nexport class UpdateCharterCommand {\r\n    charterId: number;\r\n    reference: string;\r\n    description: string;\r\n    transportType: string;\r\n    vesselId: number;\r\n    loadingLocation: string;\r\n    departureDate: Date;\r\n    dischargeLocation: string;\r\n    arrivalDate: Date;\r\n    creationDate: Date;\r\n    createdBy: string;\r\n    charterManagerId: number;\r\n    currency: string;\r\n    weightUnitId: number;\r\n    memo: string;\r\n    departmentId: number;\r\n    blDate?: Date;\r\n    blRef: string;\r\n    sectionsAssigned: AssignedSection[];\r\n    isDeassignSectionRequest: boolean;\r\n    marketSector: string;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { ListAndSearchFilterDto } from '../dtos/list-and-search/list-and-search-filter-dto.dto';\r\nimport { BaseConfigurationProviderService } from './base-configuration-provider.service';\r\nimport { GridConfigurationService } from './http-services/grid-configuration.service';\r\nimport { WebStorageService } from './web-storage.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class FilterProviderService extends BaseConfigurationProviderService<ListAndSearchFilterDto[]> {\r\n    constructor(private configurationService: GridConfigurationService,\r\n        protected storageService: WebStorageService) {\r\n        super(storageService);\r\n    }\r\n\r\n    public getFilters(\r\n        companyId: string,\r\n        gridCode: string,\r\n        filterSetId: number,\r\n        forceRefresh = false,\r\n    ): Observable<ListAndSearchFilterDto[]> {\r\n        if (companyId && filterSetId) {\r\n            const configurationId = filterSetId.toString();\r\n\r\n            if (this.isConfigurationExists(companyId, configurationId) && !forceRefresh) {\r\n                return of(this.configuration.get(companyId).get(configurationId));\r\n            }\r\n\r\n            const config = this.configurationService\r\n                .getUserFilterSetById(gridCode, filterSetId)\r\n                .pipe(\r\n                    map((configuration) => {\r\n                        const filters = configuration.filters;\r\n                        this.saveToMemory(companyId, configurationId, filters);\r\n                        return filters;\r\n                    },\r\n                    ));\r\n            return config;\r\n        }\r\n        return of();\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport * as _moment from 'moment';\r\nimport { ListAndSearchFilterPredicate } from '../entities/list-and-search/list-and-search-filter-predicate.entity';\r\nimport { ListAndSearchFilter } from '../entities/list-and-search/list-and-search-filter.entity';\r\nimport { ListAndSearchOperator } from '../entities/list-and-search/list-and-search-operator.entity';\r\nimport { ListAndSearchPredicatePreset } from '../entities/list-and-search/list-and-search-predicate-preset.entity';\r\nimport { ListAndSearchDatePredicatePresetProvider } from '../entities/list-and-search/providers/list-and-search-date-predicate-preset-provider.entity';\r\nimport { ListAndSearchNumericPredicatePresetProvider } from '../entities/list-and-search/providers/list-and-search-numeric-predicate-preset-provider.entity';\r\nimport { ListAndSearchPicklistPredicatePresetProvider } from '../entities/list-and-search/providers/list-and-search-picklist-predicate-preset-provider.entity';\r\nimport { ListAndSearchTextPredicatePresetProvider } from '../entities/list-and-search/providers/list-and-search-text-predicate-preset-provider.entity';\r\nimport { ListAndSearchFilterType } from '../enums/list-and-search-filter-type.enum';\r\nimport { ListAndSearchKeyWords } from '../enums/list-and-search-keywords.enum';\r\nconst moment = _moment;\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\n\r\nexport class FilterService {\r\n    filterPredicatesMap: Map<string, ListAndSearchPredicatePreset>\r\n        = new Map<string, ListAndSearchPredicatePreset>();\r\n\r\n    dateFormats: string[] = ['DD/MM/YYYY', 'DD MMM YYYY', 'DD-MM-YYYY'];\r\n\r\n    constructor(textPredicatePresets: ListAndSearchTextPredicatePresetProvider,\r\n        numericPredicatePresets: ListAndSearchNumericPredicatePresetProvider,\r\n        datePredicatePresets: ListAndSearchDatePredicatePresetProvider,\r\n        picklistPredicatePresets: ListAndSearchPicklistPredicatePresetProvider) {\r\n        this.filterPredicatesMap.set(ListAndSearchFilterType.Text as string, textPredicatePresets.getPresets());\r\n        this.filterPredicatesMap.set(ListAndSearchFilterType.Picklist as string, picklistPredicatePresets.getPresets());\r\n        this.filterPredicatesMap.set(ListAndSearchFilterType.Numeric as string, numericPredicatePresets.getPresets());\r\n        this.filterPredicatesMap.set(ListAndSearchFilterType.Date as string, datePredicatePresets.getPresets());\r\n        this.filterPredicatesMap.set(ListAndSearchFilterType.OptionSet as string, textPredicatePresets.getPresets());\r\n    }\r\n\r\n    validateInput(input: string, filterType: ListAndSearchFilterType): ListAndSearchFilterPredicate {\r\n        let validFilter: ListAndSearchFilterPredicate = null;\r\n        const operators = this.filterPredicatesMap.get(filterType).operators;\r\n        let i = -1;\r\n        let validated = false;\r\n        input = filterType === ListAndSearchFilterType.OptionSet ? '= ' + input : input;\r\n\r\n        while (!validated && i < operators.length - 1) {\r\n            i++;\r\n            validated = RegExp(operators[i].validator, 'i').test(input);\r\n        }\r\n        if (validated) {\r\n            const validOperator = operators[i];\r\n            if (filterType === ListAndSearchFilterType.Date) {\r\n                validFilter = this.processDateInput(input, validOperator);\r\n            } else {\r\n                validFilter = this.buildListAndSearchFilter(input, validOperator);\r\n                validFilter.filterType = filterType;\r\n            }\r\n        }\r\n\r\n        return validFilter;\r\n    }\r\n\r\n    private processDateInput(input: string, operator: ListAndSearchOperator): ListAndSearchFilterPredicate {\r\n\r\n        let predicate = new ListAndSearchFilterPredicate();\r\n        predicate.operator = operator.operator;\r\n        predicate = this.getCaptureValueFromRegex(input, operator, predicate);\r\n        let dateInputValidated: boolean = true;\r\n        let specialWordValue1: boolean = false;\r\n        let specialWordValue2: boolean = false;\r\n\r\n        if (operator.operator !== ListAndSearchKeyWords.Empty\r\n            && operator.operator !== ListAndSearchKeyWords.NotEmpty) {\r\n\r\n            if (predicate.value1.toLocaleLowerCase() !== ListAndSearchKeyWords.Today &&\r\n                predicate.value1.toLocaleLowerCase() !== ListAndSearchKeyWords.Yesterday) {\r\n                specialWordValue1 = false;\r\n\r\n                dateInputValidated = moment(predicate.value1, this.dateFormats, true).isValid();\r\n\r\n            } else {\r\n                specialWordValue1 = true;\r\n                predicate.value1 = predicate.value1.toLocaleLowerCase();\r\n            }\r\n            // in case we are dealing with between operator\r\n            if (dateInputValidated\r\n                && predicate.value2) {\r\n                if (predicate.value2.toLocaleLowerCase() !== ListAndSearchKeyWords.Today\r\n                    && predicate.value2.toLocaleLowerCase() !== ListAndSearchKeyWords.Yesterday) {\r\n                    specialWordValue2 = false;\r\n                    dateInputValidated = moment(predicate.value2, this.dateFormats, true).isValid();\r\n                } else {\r\n                    specialWordValue2 = true;\r\n                    predicate.value2 = predicate.value2.toLocaleLowerCase();\r\n                }\r\n            }\r\n        }\r\n\r\n        if (dateInputValidated) {\r\n            predicate.value1 = specialWordValue1 ? predicate.value1 :\r\n                moment(predicate.value1, this.dateFormats, true).format('DD MMM YYYY');\r\n            predicate.value2 = specialWordValue2 ? predicate.value2 :\r\n                moment(predicate.value2, this.dateFormats, true).format('DD MMM YYYY');\r\n            return predicate;\r\n        } else { return null; }\r\n    }\r\n\r\n    private buildListAndSearchFilter(input: string, operator: ListAndSearchOperator): ListAndSearchFilterPredicate {\r\n        let predicate = new ListAndSearchFilterPredicate();\r\n        predicate.operator = operator.operator;\r\n        predicate = this.getCaptureValueFromRegex(input, operator, predicate);\r\n        return predicate;\r\n    }\r\n\r\n    private getCaptureValueFromRegex(input: string,\r\n        operator: ListAndSearchOperator,\r\n        predicate: ListAndSearchFilterPredicate): ListAndSearchFilterPredicate {\r\n\r\n        // this is defined for simple operators for now such as for text and numerics\r\n        switch (operator.operator.toLocaleLowerCase()) {\r\n            case 'empty':\r\n            case 'notempty':\r\n                predicate.value1 = '';\r\n                break; // in these cases, the the value is emptry string\r\n            case 'bt':\r\n                // Array [\"between 42.64 and 69.43\", \"between\", \"42.64\", \".64\", \"69.43\", \".43\"]\r\n                const valueArray = RegExp(operator.validator, 'i').exec(input);\r\n                predicate.value1 = valueArray[2];\r\n                predicate.value2 = valueArray[4];\r\n                break;\r\n            default: predicate.value1 = RegExp(operator.validator, 'i').exec(input)[2]; // [input, operator, value, ...]\r\n        }\r\n\r\n        return predicate;\r\n    }\r\n\r\n    getFilterCompleteStringValue(filter: ListAndSearchFilter): string {\r\n        return filter.fieldFriendlyName + ' ' + this.getFilterStringValue(filter);\r\n    }\r\n\r\n    getFilterStringValue(filter: ListAndSearchFilter): string {\r\n        let filterStringValue: string = '';\r\n        if (filter.predicate.operator) {\r\n            switch (filter.predicate.operator.toLocaleLowerCase()) {\r\n                case 'empty':\r\n                    filterStringValue = '= Empty';\r\n                    break;\r\n                case 'notempty':\r\n                    filterStringValue = '= Not Empty ';\r\n                    break;\r\n                case 'bt':\r\n                    filterStringValue = 'Between ' + filter.predicate.value1 + ' and ' + filter.predicate.value2;\r\n                    break;\r\n                case 'eq':\r\n                    filterStringValue = '= ' + filter.predicate.value1;\r\n                    filterStringValue = (filter.predicate.value1.toLocaleLowerCase() === 'today') ? '= Today' : filterStringValue;\r\n                    filterStringValue = (filter.predicate.value1.toLocaleLowerCase() === 'yesterday') ? '= Yesterday' : filterStringValue;\r\n                    break;\r\n                case 'ne': filterStringValue = '!= ' + filter.predicate.value1;\r\n                           break;\r\n                case 'in': filterStringValue = 'in ' + filter.predicate.value1;\r\n                           break;\r\n                case 'gt': filterStringValue = '> ' + filter.predicate.value1;\r\n                           break;\r\n                case 'ge': filterStringValue = '>= ' + filter.predicate.value1;\r\n                           break;\r\n                case 'lt': filterStringValue = '< ' + filter.predicate.value1;\r\n                           break;\r\n                case 'le': filterStringValue = '<= ' + filter.predicate.value1;\r\n                           break;\r\n                default: filterStringValue = filter.predicate.operator + ' ' + filter.predicate.value1;\r\n            }\r\n        }\r\n\r\n        return filterStringValue;\r\n\r\n    }\r\n\r\n}\r\n","import { CommentStmt } from '@angular/compiler';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { ItemConfigurationProperties } from '../entities/form-configuration.entity';\r\nimport { BaseConfigurationProviderService } from './base-configuration-provider.service';\r\nimport { ApiCollection } from './common/models';\r\nimport { FormConfigurationService } from './http-services/form-configuration.service';\r\nimport { WebStorageService } from './web-storage.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class FormConfigurationProviderService extends BaseConfigurationProviderService<ItemConfigurationProperties[]> {\r\n    protected storageEnabled = true;\r\n\r\n    constructor(private configurationService: FormConfigurationService,\r\n        protected storageService: WebStorageService) {\r\n        super(storageService);\r\n    }\r\n\r\n    public getConfiguration(\r\n        companyId: string,\r\n        formId: string,\r\n    ): Observable<ItemConfigurationProperties[]> {\r\n        if (companyId && formId) {\r\n            const storageKey = this.generateStorageKey(companyId, formId);\r\n\r\n            if (this.isConfigurationExists(companyId, formId)) {\r\n                return of(this.configuration.get(companyId).get(formId));\r\n            }\r\n\r\n            // As we are fetching data from cache here, if we make the changes in the configuration the cache\r\n            // is not containing the new configuration as it does not update cache.\r\n            // After discussion with Sowmya we will remove the Comments.\r\n\r\n            // const data = this.getConfigurationFromStorage(companyId, formId, storageKey);\r\n            // if (data) {\r\n            //      return of(data);\r\n            //   } else {\r\n            const config = this.configurationService\r\n                .getFormConfiguration(formId)\r\n                .pipe(\r\n                    map((configuration) => {\r\n                        if (configuration.value === undefined || configuration.value === null) {\r\n                            const configurationFields = [];\r\n                            for (const index in configuration) {\r\n                                configurationFields.push(configuration[index]);\r\n                            }\r\n                            const configFields: ApiCollection<ItemConfigurationProperties> = {\r\n                                value: configurationFields,\r\n                            };\r\n\r\n                            this.storageService.saveToStorage(storageKey, configFields.value);\r\n                            this.configuration.clear();\r\n                            this.saveToMemory(companyId, formId, configFields.value);\r\n                            return configFields.value;\r\n\r\n                        } else {\r\n\r\n                            this.storageService.saveToStorage(storageKey, configuration.value);\r\n                            this.configuration.clear();\r\n                            this.saveToMemory(companyId, formId, configuration.value);\r\n                            return configuration.value;\r\n                        }\r\n                    },\r\n                    ));\r\n            return config;\r\n            //  }\r\n        }\r\n    }\r\n\r\n    public getFieldConfiguration(fieldId: string): ItemConfigurationProperties {\r\n        return this.getElementConfiguration(fieldId);\r\n    }\r\n\r\n    public isFieldMandatory(fieldId: string): boolean {\r\n        const configuration = this.getFieldConfiguration(fieldId);\r\n        if (configuration) {\r\n            return configuration.isMandatory;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public getFieldDefaultValue(fieldId: string): string {\r\n        const configuration = this.getFieldConfiguration(fieldId);\r\n        if (configuration) {\r\n            return configuration.defaultValue;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    public getFieldFormat(fieldId: string): string {\r\n        const configuration = this.getFieldConfiguration(fieldId);\r\n        if (configuration) {\r\n            return configuration.format;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getElementConfiguration(id: string): ItemConfigurationProperties {\r\n        return this.currentConfiguration.find((config) => config['id'] === id);\r\n    }\r\n\r\n    private generateStorageKey(companyId: string, formId: string): string {\r\n        return `$atlas_form_config_${companyId}_${formId}`;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { GridConfigurationProperties } from './../entities/grid-configuration.entity';\r\nimport { BaseConfigurationProviderService } from './base-configuration-provider.service';\r\nimport { GridConfigurationService } from './http-services/grid-configuration.service';\r\nimport { WebStorageService } from './web-storage.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class GridConfigurationProviderService extends BaseConfigurationProviderService<GridConfigurationProperties> {\r\n\r\n    constructor(private configurationService: GridConfigurationService,\r\n        protected storageService: WebStorageService) {\r\n        super(storageService);\r\n    }\r\n\r\n    private generateStorageKey(companyId: string, formId: string): string {\r\n        return `$atlas_grid_config_${companyId}_${formId}`;\r\n    }\r\n\r\n    public getConfiguration(\r\n        companyId: string,\r\n        gridId: string,\r\n    ): Observable<GridConfigurationProperties> {\r\n        if (companyId && gridId) {\r\n            if (this.isConfigurationExists(companyId, gridId)) {\r\n                return of(this.configuration.get(companyId).get(gridId));\r\n            }\r\n\r\n            const config = this.configurationService\r\n                .getGridConfiguration(gridId)\r\n                .pipe(\r\n                    map((configuration) => {\r\n                        this.configuration.clear();\r\n                        this.saveToMemory(companyId, gridId, configuration);\r\n                        return configuration;\r\n                    },\r\n                    ));\r\n            return config;\r\n        }\r\n        return of();\r\n    }\r\n\r\n    public getGridIdForDataEntity(dataEntity: string) {\r\n        switch (dataEntity) {\r\n            default: return dataEntity + 'Grid';\r\n        }\r\n\r\n    }\r\n\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { CompanyManagerService } from '../../../core/services/company-manager.service';\r\nimport { AccountingEntriesSearchResult } from '../../dtos/accountingEntries-search-result';\r\nimport { DocumentReferenceSearchResult } from '../../dtos/list-and-search/document-reference-search-result';\r\nimport { TransactionDocumentSearchResult } from '../../dtos/transaction-document-search-result';\r\nimport { TransactionReportSearchResult } from '../../dtos/transactionReport-search-result';\r\nimport { ListAndSearchRequest } from '../../entities/list-and-search/list-and-search-request.entity';\r\nimport { ApiPaginatedCollection } from '../common/models';\r\nimport { DateConverterService } from '../date-converter.service';\r\nimport { HttpBaseService } from './http-base.service';\r\nimport { AccountingImportReport } from '../../entities/accountingImportReport.entity';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class AccountingDocumentService extends HttpBaseService {\r\n    private readonly accountingDocumentsControllerUrl = 'AccountingDocuments';\r\n    constructor(\r\n        http: HttpClient,\r\n        private dateConverter: DateConverterService,\r\n        private companyManager: CompanyManagerService,\r\n    ) {\r\n        super(http);\r\n    }\r\n    search(request: ListAndSearchRequest):\r\n        Observable<ApiPaginatedCollection<AccountingEntriesSearchResult>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        return this.post<ApiPaginatedCollection<AccountingEntriesSearchResult>>(\r\n            `${environment.preAccountingServiceLink}/${encodeURIComponent(String(company))}/${this.accountingDocumentsControllerUrl}/search`,\r\n            request);\r\n    }\r\n    searchClientReport(request: ListAndSearchRequest):\r\n        Observable<ApiPaginatedCollection<TransactionReportSearchResult>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        return this.post<ApiPaginatedCollection<TransactionReportSearchResult>>(\r\n            `${environment.preAccountingServiceLink}/${encodeURIComponent(String(company))}/${this.accountingDocumentsControllerUrl}/searchClientReport`, request);\r\n    }\r\n    searchNominalReport(request: ListAndSearchRequest):\r\n        Observable<ApiPaginatedCollection<TransactionReportSearchResult>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        return this.post<ApiPaginatedCollection<TransactionReportSearchResult>>(\r\n            `${environment.preAccountingServiceLink}/${encodeURIComponent(String(company))}/${this.accountingDocumentsControllerUrl}/searchNominalReport`, request);\r\n    }\r\n\r\n    transactionDocumentContexuaSearch(request: ListAndSearchRequest): Observable<ApiPaginatedCollection<TransactionDocumentSearchResult>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        return this.post<ApiPaginatedCollection<TransactionDocumentSearchResult>>(\r\n            `${environment.preAccountingServiceLink}/${encodeURIComponent(String(company))}/${this.accountingDocumentsControllerUrl}/documentContextualSearch`, request);\r\n    }\r\n\r\n    documentReferenceContexuaSearch(request: ListAndSearchRequest, isReversalDocument: boolean = true): Observable<ApiPaginatedCollection<DocumentReferenceSearchResult>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        return this.post<ApiPaginatedCollection<DocumentReferenceSearchResult>>(\r\n            `${environment.preAccountingServiceLink}/${encodeURIComponent(String(company))}/${this.accountingDocumentsControllerUrl}/${isReversalDocument}/documentReferenceContextualSearch`, request);\r\n    }\r\n\r\n    fileUpload(file: File, isAccrualSelected: boolean = false, isMtmSelected: boolean = false): Observable<AccountingImportReport> {\r\n        const formData = new FormData();\r\n        formData.append('file', file, file.name);\r\n        formData.append('isAccuralSelected', isAccrualSelected.toString());\r\n        formData.append('isMTMSelected', isMtmSelected.toString());\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        return this.post(`${environment.preAccountingServiceLink}/${encodeURIComponent(String(company))}/${this.accountingDocumentsControllerUrl}` + '/fileupload', formData);\r\n    }\r\n\r\n}\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { CompanyManagerService } from '../../../core/services/company-manager.service';\r\nimport { AccountingFieldSetup } from '../../entities/accounting-field-setup.entity';\r\nimport { AccountingParameter } from '../../entities/accounting-parameter.entity';\r\nimport { AllocationSetUp } from '../../entities/allocation-set-up-entity';\r\nimport { ApplicationTable } from '../../entities/application-table.entity';\r\nimport { CompanyConfiguration } from '../../entities/company-configuration.entity';\r\nimport { Company } from '../../entities/company.entity';\r\nimport { CreateCompany } from '../../entities/create-company.entity';\r\nimport { DefaultAccountingSetup } from '../../entities/default-accounting-setup.entity';\r\nimport { FreezeCompany } from '../../entities/freeze-company.entity';\r\nimport { GridConfigurationProperties } from '../../entities/grid-configuration.entity';\r\nimport { HttpRequestOptions } from '../../entities/http-services/http-request-options.entity';\r\nimport { MandatoryTradeApprovalImageSetup } from '../../entities/mandatory-trade-fields';\r\nimport { TradeParameter } from '../../entities/trade-parameter.entity';\r\nimport { UserPreferenceResult } from '../../entities/user-preference-result.entity';\r\nimport { UserPreferences } from '../../entities/user-preferences.entity';\r\nimport { ApiCollection } from '../common/models';\r\nimport { CompanyConfigurationRecord } from '../configuration/dtos/company-configuration-record';\r\nimport { CreateFunctionalObjectCommand } from '../configuration/dtos/create-functional-object-command';\r\nimport { FunctionalObjectTableFields } from '../configuration/dtos/functional-object-table-fields';\r\nimport { IntercoNoIntercoUsers } from '../configuration/dtos/interco-no-interco-users';\r\nimport { UpdateFunctionalObjectCommand } from '../configuration/dtos/update-functional-object-command';\r\nimport { FunctionalObject } from './../../entities/functional-object.entity';\r\nimport { HttpBaseService } from './http-base.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class ConfigurationService extends HttpBaseService {\r\n    private readonly functionalObjectsControllerUrl = 'functionalobjects';\r\n    private readonly applicationTablesControllerUrl = 'applicationtables';\r\n    private readonly gridsControllerUrl = 'grids';\r\n    private readonly companyConfigurationControllerUrl = 'companyconfiguration';\r\n    private readonly companyCreationControllerUrl = 'companycreation';\r\n    private readonly globalParametersControllerUrl = 'globalparameters';\r\n\r\n    constructor(\r\n        protected httpClient: HttpClient,\r\n        private companyManager: CompanyManagerService,\r\n    ) {\r\n        super(httpClient);\r\n    }\r\n\r\n    getGridConfigByConfigurationTypeId(configurationTypeId: number): Observable<ApiCollection<GridConfigurationProperties>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        options.headers = this.defaultHttpHeaders;\r\n\r\n        return this.get<ApiCollection<GridConfigurationProperties>>(\r\n            `${environment.configurationServiceLink}/${encodeURIComponent(String(company))}` +\r\n            `/${this.gridsControllerUrl}/${configurationTypeId}/getGridConfigByConfigurationTypeId`);\r\n    }\r\n\r\n    public getGridColumnConfigurationByGridId(\r\n        gridId: number,\r\n    ): Observable<GridConfigurationProperties> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        return this.get<GridConfigurationProperties>(\r\n            `${environment.configurationServiceLink}/${encodeURIComponent(company)}` +\r\n            `/${this.gridsControllerUrl}/${gridId}/getGridConfigById`);\r\n    }\r\n\r\n    public getGridColumnConfiguration(\r\n        gridCode: string,\r\n    ): Observable<GridConfigurationProperties> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        return this.get<GridConfigurationProperties>(\r\n            `${environment.configurationServiceLink}/${encodeURIComponent(company)}` +\r\n            `/${this.gridsControllerUrl}/${gridCode}`);\r\n    }\r\n\r\n    updateGridColumnConfiguration(gridConfigurationProperties: GridConfigurationProperties): Observable<number> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        return this.post<number>(\r\n            `${environment.configurationServiceLink}/${encodeURIComponent(company)}` +\r\n            `/${this.gridsControllerUrl}/${gridConfigurationProperties.gridId}/updateGridConfig`, gridConfigurationProperties);\r\n    }\r\n\r\n    public getFunctionalObjects(): Observable<ApiCollection<FunctionalObject>> {\r\n        return this.get<ApiCollection<FunctionalObject>>(\r\n            `${environment.configurationServiceLink}/${this.functionalObjectsControllerUrl}`);\r\n    }\r\n\r\n    public searchFunctionalObjectsByName(name: string): Observable<ApiCollection<FunctionalObject>> {\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        options.headers = this.defaultHttpHeaders;\r\n        let queryParameters = new HttpParams();\r\n        if (name !== undefined && name !== null) {\r\n            queryParameters = queryParameters.set('name', name);\r\n        }\r\n        options.params = queryParameters;\r\n        return this.get<ApiCollection<FunctionalObject>>(\r\n            `${environment.configurationServiceLink}/${this.functionalObjectsControllerUrl}`,\r\n            options);\r\n    }\r\n\r\n    public getFunctionalObjectById(functionalObjectId: number): Observable<FunctionalObject> {\r\n        return this.get<FunctionalObject>(\r\n            `${environment.configurationServiceLink}/${this.functionalObjectsControllerUrl}/${String(functionalObjectId)}`);\r\n    }\r\n\r\n    public checkFunctionalObjectExists(name: string, id?: number): Observable<boolean> {\r\n        return this.post\r\n            (`${environment.configurationServiceLink}/${this.functionalObjectsControllerUrl}/${id}/${name}`,\r\n             {\r\n                    headers: this.defaultHttpHeaders,\r\n                    observe: 'response',\r\n                });\r\n    }\r\n\r\n    public createFunctionalObject(name: string, tables: ApplicationTable[]): Observable<boolean> {\r\n        const keys = this.getFunctionalObjectKeys(name, tables);\r\n\r\n        const request: CreateFunctionalObjectCommand = {\r\n            name,\r\n            keys,\r\n        };\r\n\r\n        return this.post<any>(\r\n            `${environment.configurationServiceLink}/${this.functionalObjectsControllerUrl}/create`, request);\r\n    }\r\n\r\n    public editFunctionalObject(id: number, name: string, tables: ApplicationTable[]): Observable<boolean> {\r\n        const keys = this.getFunctionalObjectKeys(name, tables);\r\n\r\n        const request: UpdateFunctionalObjectCommand = {\r\n            id,\r\n            name,\r\n            keys,\r\n        };\r\n\r\n        return this.post<any>(\r\n            `${environment.configurationServiceLink}/${this.functionalObjectsControllerUrl}/update`, request);\r\n    }\r\n\r\n    private getFunctionalObjectKeys(name: string, tables: ApplicationTable[]): FunctionalObjectTableFields[] {\r\n        const keys: FunctionalObjectTableFields[] = [];\r\n\r\n        for (let index = 0; index < tables.length; index++) {\r\n            const fields = new FunctionalObjectTableFields();\r\n            fields.tableId = tables[index].tableId;\r\n            fields.fieldIds = tables[index].fields.map((field) => field.fieldId);\r\n            keys.push(fields);\r\n        }\r\n\r\n        return keys;\r\n    }\r\n\r\n    public getAllApplicationTables(): Observable<ApplicationTable[]> {\r\n        return this.get<ApplicationTable[]>(\r\n            `${environment.configurationServiceLink}/${this.applicationTablesControllerUrl}`);\r\n    }\r\n\r\n    public getApplicationTableById(tableId: number): Observable<ApplicationTable> {\r\n        return this.get<ApplicationTable>(\r\n            `${environment.configurationServiceLink}/${this.applicationTablesControllerUrl}/${tableId}`);\r\n    }\r\n\r\n    getCompanyListDetails(company: string): Observable<Company[]> {\r\n        return this.get<Company[]>(\r\n            `${environment.configurationServiceLink}/${encodeURIComponent(String(company))}`\r\n            + `/${this.companyConfigurationControllerUrl}/getcompanylistdetails`);\r\n    }\r\n\r\n    public updateCompanyConfiguration(companyConfiguration: CompanyConfiguration) {\r\n        const company: string = companyConfiguration.companyId;\r\n        const action = `${encodeURIComponent(String(company))}/${this.companyConfigurationControllerUrl}/updateCompanyConfiguration`;\r\n\r\n        return this.patch(environment.configurationServiceLink + '/' + action, companyConfiguration);\r\n    }\r\n\r\n    createCompanyConfiguration(companyDetails: CompanyConfiguration) {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        const action = `${encodeURIComponent(String(company))}/${this.companyCreationControllerUrl}/createcompanyconfiguration`;\r\n        return this.post(environment.configurationServiceLink + '/' + action, companyDetails);\r\n    }\r\n\r\n    createUserPreference(userPreferenceDetails: UserPreferences) {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        const action = `${encodeURIComponent(String(company))}/${this.globalParametersControllerUrl}/createuserpreference`;\r\n        return this.post(environment.configurationServiceLink + '/' + action, userPreferenceDetails);\r\n    }\r\n\r\n    updateUserPreference(userPreferenceDetails: UserPreferences) {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        const action = `${encodeURIComponent(String(company))}/${this.globalParametersControllerUrl}/updateuserpreference`;\r\n        return this.post(environment.configurationServiceLink + '/' + action, userPreferenceDetails);\r\n    }\r\n\r\n    public getUserPreference(userId: number): Observable<UserPreferenceResult[]> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        return this.get<UserPreferenceResult[]>(\r\n            `${environment.configurationServiceLink}/${encodeURIComponent(String(company))}`\r\n            + `/${this.globalParametersControllerUrl}/getuserpreference` + '?userId=' + userId);\r\n    }\r\n\r\n    public deleteCompany(company: string) {\r\n        const action = `${encodeURIComponent(String(company))}/${this.companyConfigurationControllerUrl}/deletecompany`;\r\n        return this.delete(environment.configurationServiceLink + '/' + action);\r\n    }\r\n\r\n    public UpdateIsFrozenForCompany(company: string, freezeCompany: FreezeCompany) {\r\n        const action = `${encodeURIComponent(String(company))}/${this.companyConfigurationControllerUrl}/updateisfrozenforcompany`;\r\n        return this.patch(environment.configurationServiceLink + '/' + action, freezeCompany);\r\n    }\r\n\r\n    public checkCounterypartyExists(company: string): Observable<any> {\r\n        return this.get<boolean>(\r\n            `${environment.configurationServiceLink}/${encodeURIComponent(String(company))}`\r\n            + `/${this.companyConfigurationControllerUrl}/checkcounterpartyexists`);\r\n    }\r\n\r\n    createCompanyByCopy(companyDetails: CreateCompany) {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        const action = `${encodeURIComponent(String(company))}/${this.companyCreationControllerUrl}/createcompanybycopy`;\r\n        return this.post(environment.configurationServiceLink + '/' + action, companyDetails);\r\n    }\r\n\r\n    public getCompanyConfigurationDetails(company: string, year: number): Observable<CompanyConfigurationRecord> {\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        let queryParameters = new HttpParams();\r\n        if (year !== undefined && year !== null) {\r\n            queryParameters = queryParameters.set('year', year.toString());\r\n        }\r\n        options.params = queryParameters;\r\n\r\n        return this.get<CompanyConfigurationRecord>(\r\n            `${environment.configurationServiceLink}/${encodeURIComponent(String(company))}`\r\n            + `/${this.companyConfigurationControllerUrl}/getcompanyconfiguration`, options);\r\n    }\r\n\r\n    public getAccountingParameterDetails(company: string, year: number): Observable<AccountingParameter[]> {\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        let queryParameters = new HttpParams();\r\n        if (year !== undefined && year !== null) {\r\n            queryParameters = queryParameters.set('year', year.toString());\r\n        }\r\n        options.params = queryParameters;\r\n\r\n        return this.get<AccountingParameter[]>(\r\n            `${environment.configurationServiceLink}/${encodeURIComponent(String(company))}`\r\n            + `/${this.companyConfigurationControllerUrl}/getaccountingparameters`, options);\r\n    }\r\n\r\n    public getTradeParameterDetails(company: string): Observable<TradeParameter[]> {\r\n        return this.get<TradeParameter[]>(\r\n            `${environment.configurationServiceLink}/${encodeURIComponent(String(company))}`\r\n            + `/${this.companyConfigurationControllerUrl}/gettradingparameters`);\r\n    }\r\n\r\n    public getDefaultAccounting(company: string): Observable<DefaultAccountingSetup> {\r\n        return this.get<DefaultAccountingSetup>(\r\n            `${environment.configurationServiceLink}/${encodeURIComponent(String(company))}`\r\n            + `/${this.companyConfigurationControllerUrl}/getdefaultaccounting`);\r\n    }\r\n\r\n    public checkTransationExistsByCompanyId(company: string): Observable<any> {\r\n        return this.get<boolean>(\r\n            `${environment.configurationServiceLink}/${encodeURIComponent(String(company))}`\r\n            + `/${this.companyConfigurationControllerUrl}/checktransationexistsbycompanyid`);\r\n    }\r\n\r\n    public getAllocationSetUpByCompany(company: string): Observable<AllocationSetUp[]> {\r\n        return this.get<AllocationSetUp[]>(\r\n            `${environment.configurationServiceLink}/${encodeURIComponent(String(company))}`\r\n            + `/${this.companyConfigurationControllerUrl}/getallocationsetup`);\r\n    }\r\n\r\n    public getInterCoNoInterCoUsers(company: string): Observable<IntercoNoIntercoUsers[]> {\r\n        return this.get<IntercoNoIntercoUsers[]>(\r\n            `${environment.configurationServiceLink}/${encodeURIComponent(String(company))}`\r\n            + `/${this.companyConfigurationControllerUrl}/getinterconointercousers`);\r\n    }\r\n\r\n    public getAllocationSetUp(): Observable<AllocationSetUp[]> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        return this.get<AllocationSetUp[]>(\r\n            `${environment.configurationServiceLink}/${encodeURIComponent(String(company))}`\r\n            + `/${this.companyConfigurationControllerUrl}/getallocationsetup`);\r\n    }\r\n\r\n    public getMandatoryFieldsSetUp(): Observable<MandatoryTradeApprovalImageSetup[]> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        return this.get<MandatoryTradeApprovalImageSetup[]>(\r\n            `${environment.configurationServiceLink}/${encodeURIComponent(String(company))}`\r\n            + `/${this.companyConfigurationControllerUrl}/getmandatoryfieldsetup`);\r\n    }\r\n\r\n    public getMainAccountingSetup(): Observable<AccountingFieldSetup[]> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        return this.get<AccountingFieldSetup[]>(\r\n            `${environment.configurationServiceLink}/${encodeURIComponent(String(company))}`\r\n            + `/${this.companyConfigurationControllerUrl}/getmainaccountingsetup`);\r\n    }\r\n\r\n    // public getAccountingParameterSetUpByCompany(company: string, year: number, isCompanyCreation: boolean): Observable<AccountingParameter[]> {\r\n\r\n    //     const options: HttpRequestOptions = new HttpRequestOptions();\r\n    //     let queryParameters = new HttpParams();\r\n    //     if (year !== undefined && year !== null) {\r\n    //         queryParameters = queryParameters.set('year', year.toString());\r\n    //     }\r\n    //     queryParameters = queryParameters.set('isCompanyCreation', isCompanyCreation.toString());\r\n\r\n    //     options.params = queryParameters;\r\n\r\n    //     return this.get<AccountingParameter[]>(\r\n    //         `${environment.configurationServiceLink}/${encodeURIComponent(String(company))}`\r\n    //         + `/${this.companyConfigurationControllerUrl}/getaccountingparametersetup`, options);\r\n    // }\r\n\r\n    // public getTradeParameterSetUpByCompany(company: string, isCompanyCreation: boolean): Observable<TradeParameter[]> {\r\n\r\n    //     const options: HttpRequestOptions = new HttpRequestOptions();\r\n    //     let queryParameters = new HttpParams();\r\n    //     queryParameters = queryParameters.set('isCompanyCreation', isCompanyCreation.toString());\r\n\r\n    //     options.params = queryParameters;\r\n\r\n    //     return this.get<TradeParameter[]>(\r\n    //         `${environment.configurationServiceLink}/${encodeURIComponent(String(company))}`\r\n    //         + `/${this.companyConfigurationControllerUrl}/gettradeparametersetup`, options);\r\n    // }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { CompanyManagerService } from '../../../core/services/company-manager.service';\r\nimport { LdeomAccrual } from '../../entities/ldeom-accrual.entity';\r\nimport { LdeomAggregation } from '../../entities/ldeom-aggregation.entity';\r\nimport { HttpBaseService } from './http-base.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class ControllingService extends HttpBaseService {\r\n\r\n    private readonly valuationControllerUrl = 'Valuation';\r\n    private readonly reportingControllerUrl = 'Reporting';\r\n\r\n    constructor(protected http: HttpClient,\r\n        private companyManager: CompanyManagerService) {\r\n        super(http);\r\n    }\r\n\r\n    getAccrualsForLdeomReport(): Observable<LdeomAccrual[]> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        const accruals: Observable<LdeomAccrual[]> =\r\n            this.get<LdeomAccrual[]>(`${environment.controllingServiceLink}/${this.reportingControllerUrl}` +\r\n                `/${encodeURIComponent(String(company))}/Ldeom/Accruals/`);\r\n        return accruals;\r\n    }\r\n\r\n    getAggregationsForLdeomReport(): Observable<LdeomAggregation[]> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        return this.get<LdeomAggregation[]>(\r\n            `${environment.controllingServiceLink}/${this.reportingControllerUrl}` +\r\n            `/${encodeURIComponent(String(company))}/Ldeom/Aggregations/`);\r\n    }\r\n}\r\n","import { HttpClient, HttpParams, HttpResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, of as observableOf, of } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { CompanyManagerService } from '../../../core/services/company-manager.service';\r\nimport { PhysicalDocumentReference } from '../../entities/document-reference.entity';\r\nimport { PhysicalDocumentTemplate } from '../../entities/document-template.entity';\r\nimport { PhysicalDocumentType } from '../../entities/document-type.entity';\r\nimport { HttpRequestOptions } from '../../entities/http-services/http-request-options.entity';\r\nimport { ListAndSearchRequest } from '../../entities/list-and-search/list-and-search-request.entity';\r\nimport { ApiCollection, ApiPaginatedCollection } from '../common/models';\r\nimport { AssignContractAdviceCommand } from '../document/dtos/assign-contract-advice-command';\r\nimport { GenerateContractAdviceCommand } from '../document/dtos/generate-contract-advice-command';\r\nimport { UploadDocumentCommand } from '../document/dtos/upload-document-command.entity';\r\nimport { SnackbarService } from '../snackbar.service';\r\nimport { PhysicalDocument } from './../../entities/document-generated.entity';\r\nimport { HttpBaseService } from './http-base.service';\r\nimport { UpdateDocumentCommand } from '../document/dtos/update-document-command.entity';\r\nimport { DocumentTypes } from '../../enums/document-type.enum';\r\nimport { TradeDocumentResult } from '../../dtos/trade-document-result';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class DocumentService extends HttpBaseService {\r\n\r\n    private readonly generatedDocumentControllerUrl = 'physicaldocuments';\r\n    private readonly generatedDocumentTypesControllerUrl = 'physicaldocumenttypes';\r\n    private readonly sectionsControllerUrl = 'sections';\r\n    private readonly invoiceControllerUrl = 'invoices';\r\n    private readonly cashControllerUrl = 'cash';\r\n\r\n    constructor(protected http: HttpClient,\r\n        private companyManager: CompanyManagerService,\r\n        private snackbarService: SnackbarService) {\r\n        super(http);\r\n    }\r\n\r\n\r\n    getGeneratedDocuments(request: ListAndSearchRequest):\r\n        Observable<ApiPaginatedCollection<TradeDocumentResult>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        return this.post<ApiPaginatedCollection<TradeDocumentResult>>(\r\n            `${environment.documentServiceLink}/${encodeURIComponent(String(company))}/${this.generatedDocumentControllerUrl}/documentGenerated`, request);\r\n    }\r\n\r\n\r\n    getAllGeneratedDocuments(): Observable<ApiCollection<PhysicalDocument>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        const queryParameters = new HttpParams();\r\n        options.params = queryParameters;\r\n\r\n        /*return this.get<ApiCollection<PhysicalDocument>>(\r\n            `${environment.documentServiceLink}/${encodeURIComponent(company)}/${this.generatedDocumentControllerUrl}`, options);*/\r\n        const result: ApiCollection<PhysicalDocument> = { value: [] };\r\n        return observableOf(result);\r\n    }\r\n\r\n    getTemplates(documentType: number, module: string = \"module\"): Observable<ApiCollection<PhysicalDocumentTemplate>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        return this.get<ApiCollection<PhysicalDocumentTemplate>>(\r\n            `${environment.documentServiceLink}/${encodeURIComponent(company)}/` +\r\n            `${this.generatedDocumentTypesControllerUrl}/${documentType}/${module}/templates`);\r\n    }\r\n\r\n    getGeneratedDocumentContent(physicalDocumentId: number, isDraft = false): Observable<HttpResponse<Blob>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        options.responseType = 'blob';\r\n        options.observe = 'response';\r\n\r\n        return this.get(\r\n            `${environment.documentServiceLink}/${encodeURIComponent(company)}/${this.generatedDocumentControllerUrl}` +\r\n            (isDraft ? `/drafts/${physicalDocumentId}/content` : `/${physicalDocumentId}/content`),\r\n            options);\r\n    }\r\n\r\n    getDocumentTypes(): Observable<ApiCollection<PhysicalDocumentType>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        return this.get<ApiCollection<PhysicalDocumentType>>(\r\n            `${environment.documentServiceLink}/${encodeURIComponent(company)}/${this.generatedDocumentTypesControllerUrl}`)\r\n            .pipe(\r\n                map((documents) => {\r\n                    documents.value.map((doc: any) => {\r\n                        doc.physicalDocumentTypeId = doc.physicalDocumentTypeId;\r\n                        doc.physicalDocumentTypeLabel = doc.physicalDocumentTypeLabel;\r\n                        return doc;\r\n                    });\r\n                    return documents;\r\n                }),\r\n            );\r\n    }\r\n\r\n    generateContractAdvice(\r\n        sectionId: number,\r\n        documentTemplatePath: string,\r\n        isDraft: boolean = false): Observable<PhysicalDocumentReference> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        const command: GenerateContractAdviceCommand = {\r\n            company,\r\n            sectionId,\r\n            documentTemplatePath,\r\n        };\r\n\r\n        if (isDraft) {\r\n            return this.post<PhysicalDocumentReference>(\r\n                `${environment.documentServiceLink}/${encodeURIComponent(company)}/${this.generatedDocumentControllerUrl}`\r\n                + '/contractadvice/generate',\r\n                command);\r\n        } else {\r\n            return this.post<PhysicalDocumentReference>(\r\n                `${environment.tradeServiceLink}/${encodeURIComponent(company)}/${this.sectionsControllerUrl}/`\r\n                + `${encodeURIComponent(String(sectionId))}/documents/generatecontractadvice`,\r\n                command);\r\n        }\r\n    }\r\n\r\n    assignContractAdviceToSection(\r\n        sectionId: number,\r\n        documentId: number,\r\n        documentTemplatePath: string): Observable<PhysicalDocumentReference> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        const command: AssignContractAdviceCommand = {\r\n            company,\r\n            documentId,\r\n            documentTemplatePath,\r\n        };\r\n\r\n        return this.post<PhysicalDocumentReference>(\r\n            `${environment.tradeServiceLink}/${encodeURIComponent(company)}/${this.sectionsControllerUrl}/`\r\n            + `${encodeURIComponent(String(sectionId))}/documents/assigncontractadvice`,\r\n            command);\r\n    }\r\n\r\n    uploadDocument(\r\n        recordId: number,\r\n        physicalDocumentTypeId: number,\r\n        documentTemplatePath: string,\r\n        isDraft: boolean,\r\n        file: File): Observable<PhysicalDocumentReference> {\r\n        const company = this.companyManager.getCurrentCompanyId();\r\n        const command: UploadDocumentCommand = {\r\n            recordId,\r\n            physicalDocumentTypeId,\r\n            documentTemplatePath,\r\n        };\r\n\r\n        const formData = new FormData();\r\n        formData.append('file', file, file.name);\r\n        Object.keys(command).forEach((key) => formData.append(key, command[key]));\r\n\r\n        const documentUrl = `${environment.documentServiceLink}/${encodeURIComponent(company)}/${this.generatedDocumentControllerUrl}`;\r\n        return this.post<PhysicalDocumentReference>(documentUrl + (isDraft ? '/drafts/upload' : '/upload'), formData);\r\n    }\r\n\r\n    search(request: ListAndSearchRequest): Observable<ApiPaginatedCollection<PhysicalDocument>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        return this.post<ApiPaginatedCollection<PhysicalDocument>>(\r\n            `${environment.documentServiceLink}/${encodeURIComponent(String(company))}/${this.generatedDocumentControllerUrl}/search`,\r\n            request);\r\n    }\r\n\r\n    getUpdateUrl(recordId: number, documentType: DocumentTypes): string {\r\n        const company = this.companyManager.getCurrentCompanyId();\r\n        const updateUrl = `${encodeURIComponent(String(recordId))}/documents/update`;\r\n        switch (documentType) {\r\n            case DocumentTypes.ContractAdvice:\r\n                return `${environment.tradeServiceLink}/${encodeURIComponent(company)}/${this.sectionsControllerUrl}/`\r\n                    + updateUrl;\r\n            case DocumentTypes.InvoiceGoodsInvoice:\r\n            case DocumentTypes.InvoiceCostsInvoice:\r\n            case DocumentTypes.InvoiceGoodsCostInvoice:\r\n            case DocumentTypes.InvoiceWashout:\r\n            case DocumentTypes.InvoiceString:\r\n            case DocumentTypes.InvoiceCircle:\r\n            case DocumentTypes.InvoiceProvisional:\r\n            case DocumentTypes.InvoiceFinal:\r\n            case DocumentTypes.InvoicePrepayment:\r\n            case DocumentTypes.InvoiceCancellation:\r\n                return `${environment.executionServiceLink}/${encodeURIComponent(company)}/${this.invoiceControllerUrl}/`\r\n                    + updateUrl;\r\n            case DocumentTypes.CashSimpleCash:\r\n            case DocumentTypes.CashPickByTransaction:\r\n            case DocumentTypes.CashDifferentClient:\r\n            case DocumentTypes.CashDifferentCurrency:\r\n                return `${environment.executionServiceLink}/${encodeURIComponent(company)}/${this.cashControllerUrl}/`\r\n                    + updateUrl;\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n\r\n    updateDocument(originalDocument: PhysicalDocument,\r\n        draftDocumentId: number): Observable<PhysicalDocumentReference> {\r\n        const company = this.companyManager.getCurrentCompanyId();\r\n        const command: UpdateDocumentCommand = {\r\n            draftDocumentId,\r\n            physicalDocumentId: originalDocument.physicalDocumentId,\r\n            documentTemplatePath: originalDocument.documentName,\r\n        };\r\n\r\n        const updateUrl = this.getUpdateUrl(originalDocument.recordId, originalDocument.physicalDocumentType);\r\n        if (updateUrl) {\r\n            return this.post<PhysicalDocumentReference>(updateUrl, command);\r\n        } else {\r\n            return of(null);\r\n        }\r\n    }\r\n}\r\n","import { HttpClient, HttpParams, HttpResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { CompanyManagerService } from '../../../core/services/company-manager.service';\r\nimport { AllocationMessage } from '../../../trading/entities/allocation-message';\r\nimport { AllocatedTradeSearchResult } from '../../dtos/allocated-trade';\r\nimport { InvoiceMarkingSearchResult } from '../../dtos/invoice-marking';\r\nimport { InvoiceReversalSearchResult } from '../../dtos/invoice-reversal';\r\nimport { InvoiceSearchResult } from '../../dtos/invoice-search-result';\r\nimport { InvoiceSetupResult } from '../../dtos/invoice-setup-result';\r\nimport { TradeSearchResult } from '../../dtos/trade';\r\nimport { AllocateSection } from '../../entities/allocate-section.entity';\r\nimport { Allocation } from '../../entities/allocation.entity';\r\nimport { AssignedSection } from '../../entities/assigned-section.entity';\r\nimport { CashSummary } from '../../entities/cash.entity';\r\nimport { CharterBulkClosure } from '../../entities/charter-bulk-closure.entity';\r\nimport { Charter } from '../../entities/charter.entity';\r\nimport { CreateTransactionDocument } from '../../entities/create-transaction-document.entity';\r\nimport { HttpRequestOptions } from '../../entities/http-services/http-request-options.entity';\r\nimport { InvoiceMarkingDetails } from '../../entities/invoice-marking-status-tab.entity';\r\nimport { InvoiceMarkingPercentLines, InvoiceMarkings } from '../../entities/invoice-markings.entity';\r\nimport { ListAndSearchFilter } from '../../entities/list-and-search/list-and-search-filter.entity';\r\nimport { ListAndSearchRequest } from '../../entities/list-and-search/list-and-search-request.entity';\r\nimport { ManualJournalDocument } from '../../entities/manual-journal-document.entity';\r\nimport { SectionTraffic } from '../../entities/section-traffic.entity';\r\nimport { User } from '../../entities/user.entity';\r\nimport { ContractTypes } from '../../enums/contract-type.enum';\r\nimport { ApiCollection, ApiPaginatedCollection } from '../common/models';\r\nimport { DateConverterService } from '../date-converter.service';\r\nimport { AllocateSectionCommand } from '../execution/dtos/allocate-section-command';\r\nimport { AllocateSectionListCommand } from '../execution/dtos/allocate-section-list-command';\r\nimport { BulkDeallocateSectionCommand } from '../execution/dtos/bulk-deallocation-section-command';\r\nimport { BusinessSector } from '../execution/dtos/business-sector';\r\nimport { CashMatching } from '../execution/dtos/cash-matching';\r\nimport { CashRecord } from '../execution/dtos/cash-record';\r\nimport { CashSetup } from '../execution/dtos/cash-setup';\r\nimport { ContractsToCostInvoice } from '../execution/dtos/contracts-to-cost-invoice';\r\nimport { ContractsToInvoice } from '../execution/dtos/contracts-to-invoice';\r\nimport { ContractsToWashoutInvoice } from '../execution/dtos/contracts-to-washout-invoice';\r\nimport { GetCostsRequest, SearchCostForInvoicing } from '../execution/dtos/cost';\r\nimport { CreateCharterCommand } from '../execution/dtos/create-charter-command';\r\nimport { DocumentMatching } from '../execution/dtos/document-matching';\r\nimport { InterfaceSetup } from '../execution/dtos/interface-setup';\r\nimport { InvoiceForCashMatching } from '../execution/dtos/invoice-for-cash';\r\nimport { InvoiceHomeSearch } from '../execution/dtos/invoice-home-search';\r\nimport { InvoiceMarking } from '../execution/dtos/invoice-marking';\r\nimport { InvoiceMarkingListCommand } from '../execution/dtos/invoice-marking-list-command';\r\nimport { InvoiceMarkingPostingStatusCommand } from '../execution/dtos/invoice-marking-posting-status';\r\nimport { InvoiceRecord } from '../execution/dtos/invoice-record';\r\nimport { InvoiceSearch } from '../execution/dtos/invoice-search';\r\nimport { InvoiceSummaryRecord } from '../execution/dtos/invoice-summary-record';\r\nimport { ManualJournalCommand } from '../execution/dtos/manual-journal-command';\r\nimport { ManualJournalResponse } from '../execution/dtos/manual-journal-response';\r\nimport { MonthEndTemporaryAdjustmentListCommand } from '../execution/dtos/month-end-temporary-adjustment-list-command';\r\nimport { MonthEndTAResponse } from '../execution/dtos/month-end-temporary-adjustment-response';\r\nimport { FindUnpaidInvoicesResult } from '../execution/dtos/payment-order';\r\nimport { ReAssignSectionsCommand } from '../execution/dtos/reassign-sections-command';\r\nimport { RemoveAssignedSectionsCommand } from '../execution/dtos/remove-assigned-sections-command';\r\nimport { AssignSectionsRequest } from '../execution/dtos/section';\r\nimport { TradeForInvoiceSearchResult } from '../execution/dtos/trade';\r\nimport { TransactionCreationResponse } from '../execution/dtos/transaction-creation-response';\r\nimport { UpdateCharterCommand } from '../execution/dtos/update-charter-command';\r\nimport { DocumentMatchingRecord } from '../preaccounting/dtos/document-matching-record';\r\nimport { ListAndSearchFilterDto } from './../../dtos/list-and-search/list-and-search-filter-dto.dto';\r\nimport { HttpBaseService } from './http-base.service';\r\nimport { InvoiceMarkingPercentLinesCommand } from '../execution/dtos/Update-Invoice-Marking-Percent-Lines-Command';\r\nimport { YearEndProcess } from '../../dtos/year-end-process';\r\nimport { YearEndProcessResponse } from '../execution/year-end-process-response';\r\nimport { YearEndProcessCommand } from '../execution/year-end-process-command';\r\nimport { YearEndProcessReportResponse } from '../execution/year-end-process-report-response';\r\nimport { FXDealMonthEndTemporaryAdjustmentListCommand } from '../execution/dtos/fxdeal-month-end-temporary-adjustment-list-command';\r\nimport { FxDealMonthEndTAResponse } from '../execution/dtos/fxdeal-month-end-temporary-adjustment-response';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class ExecutionService extends HttpBaseService {\r\n\r\n    private readonly allocationControllerUrl = 'allocation';\r\n    private readonly chartersControllerUrl = 'charters';\r\n    private readonly charterManagerControllerUrl = 'chartermanagers';\r\n    private readonly invoiceControllerUrl = 'invoices';\r\n    private readonly cashControllerUrl = 'cash';\r\n    private readonly manualJournalControllerUrl = 'manualJournal';\r\n    private readonly manualDocumentMatchingControllerUrl = 'manualdocumentmatching';\r\n    private readonly monthEndTemporaryAdjustmentControllerUrl = 'MonthEndTemporaryAdjustment';\r\n    private readonly yearEndProcessControllerUrl = 'YearEndProcess';\r\n\r\n    constructor(protected http: HttpClient,\r\n        private dateConverter: DateConverterService,\r\n        private companyManager: CompanyManagerService) {\r\n        super(http);\r\n    }\r\n\r\n    // -- Allocation Methods\r\n    public findContractToAllocate(originalsectionId: number, sectionLabelKeyword: string, pricingMethod: number)\r\n        : Observable<ApiCollection<TradeSearchResult>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        options.headers = this.defaultHttpHeaders;\r\n\r\n        let queryParameters = new HttpParams();\r\n        if (originalsectionId !== undefined && originalsectionId !== null) {\r\n            queryParameters = queryParameters.set('originalsectionId', originalsectionId as any);\r\n        }\r\n        if (sectionLabelKeyword !== undefined && sectionLabelKeyword !== null) {\r\n            queryParameters = queryParameters.set('sectionLabelKeyword', sectionLabelKeyword as any);\r\n        }\r\n        if (pricingMethod !== undefined && pricingMethod !== null) {\r\n            queryParameters = queryParameters.set('pricingMethod', pricingMethod as any);\r\n        }\r\n        options.params = queryParameters;\r\n\r\n        return this.get<ApiCollection<TradeSearchResult>>(\r\n            `${environment.executionServiceLink}/${encodeURIComponent(String(company))}` +\r\n            `/${this.allocationControllerUrl}/contractstoallocate`,\r\n            options);\r\n    }\r\n\r\n    public allocate(allocatedSection: AllocateSectionCommand) {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        const action = `/${encodeURIComponent(String(company))}/${this.allocationControllerUrl}/allocate/`;\r\n        return this.post(environment.executionServiceLink + action, allocatedSection);\r\n    }\r\n\r\n    public allocateImageSections(allocatedSection: AllocateSection[]) {\r\n        const command = this.mapToAssignedSectionsAllocationCommand(allocatedSection);\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        const action = `/${encodeURIComponent(String(company))}/${this.allocationControllerUrl}/imageAllocateSectionList/`;\r\n        return this.post(environment.executionServiceLink + action, command);\r\n    }\r\n\r\n    // --Allocation Card Status Tab\r\n    public getAllocationBySectionId(sectionId: number, dataVersionId?: number): Observable<Allocation> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n\r\n        let queryParameters = new HttpParams();\r\n        if (dataVersionId) {\r\n            queryParameters = queryParameters.set('dataVersionId', dataVersionId.toString());\r\n        }\r\n        options.params = queryParameters;\r\n\r\n        return this.get<Allocation>(\r\n            `${environment.executionServiceLink}/${encodeURIComponent(String(company))}`\r\n            + `/${this.allocationControllerUrl}/allocationbysection/${encodeURIComponent(String(sectionId))}`,\r\n            options);\r\n    }\r\n\r\n    public GetSectionTrafficDetails(sectionId: number, dataVersionId?: number): Observable<SectionTraffic> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n\r\n        let queryParameters = new HttpParams();\r\n        if (dataVersionId) {\r\n            queryParameters = queryParameters.set('dataVersionId', dataVersionId.toString());\r\n        }\r\n        options.params = queryParameters;\r\n\r\n        return this.get<SectionTraffic>(\r\n            `${environment.executionServiceLink}/${encodeURIComponent(String(company))}`\r\n            + `/${this.allocationControllerUrl}/sectiontraffic/${encodeURIComponent(String(sectionId))}`,\r\n            options);\r\n    }\r\n\r\n    // -- Invoicing Methods\r\n    public findGoodsInvoices(invoiceRef: string): Observable<ApiPaginatedCollection<InvoiceHomeSearch>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        options.headers = this.defaultHttpHeaders;\r\n\r\n        let queryParameters = new HttpParams();\r\n        if (invoiceRef !== undefined && invoiceRef !== null) {\r\n            queryParameters = queryParameters.set('invoiceRef', invoiceRef as any);\r\n        }\r\n        options.params = queryParameters;\r\n\r\n        return this.get<ApiPaginatedCollection<InvoiceHomeSearch>>(\r\n            `${environment.executionServiceLink}/${encodeURIComponent(String(company))}/${this.invoiceControllerUrl}`,\r\n            options);\r\n    }\r\n\r\n    public findGoodsContractToInvoice(invoiceSearch: InvoiceSearch): Observable<ApiCollection<TradeForInvoiceSearchResult>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        options.headers = this.defaultHttpHeaders;\r\n\r\n        let queryParameters = new HttpParams();\r\n\r\n        queryParameters = queryParameters.set('type', invoiceSearch.type.toString() as any);\r\n        queryParameters = queryParameters.set('filterParameter', invoiceSearch.filterParameter as any);\r\n\r\n        if (invoiceSearch.periodFromDate != null && invoiceSearch.periodFromDate.toString() !== '') {\r\n            queryParameters = queryParameters.set(\r\n                'periodFromDate',\r\n                this.dateConverter.dateToStringConverter(invoiceSearch.periodFromDate) as any);\r\n        }\r\n        if (invoiceSearch.periodToDate != null && invoiceSearch.periodToDate.toString() !== '') {\r\n            queryParameters = queryParameters.set(\r\n                'periodToDate',\r\n                this.dateConverter.dateToStringConverter(invoiceSearch.periodToDate) as any);\r\n        }\r\n        options.params = queryParameters;\r\n\r\n        return this.get<ApiCollection<TradeForInvoiceSearchResult>>(\r\n            `${environment.executionServiceLink}/${encodeURIComponent(String(company))}/`\r\n            + `${this.invoiceControllerUrl}/contractstoinvoice`,\r\n            options);\r\n    }\r\n\r\n    public findCostsToInvoice(costSearchCriterias: SearchCostForInvoicing): Observable<ApiCollection<GetCostsRequest>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        options.headers = this.defaultHttpHeaders;\r\n\r\n        let queryParameters = new HttpParams();\r\n\r\n        queryParameters = queryParameters.set('costType', costSearchCriterias.costType as any);\r\n        queryParameters = queryParameters.set('supplierCode', costSearchCriterias.supplierCode as any);\r\n        queryParameters = queryParameters.set('charter', costSearchCriterias.charter as any);\r\n        queryParameters = queryParameters.set('contractRef', costSearchCriterias.contractRef as any);\r\n        options.params = queryParameters;\r\n\r\n        return this.get<ApiCollection<GetCostsRequest>>(\r\n            `${environment.executionServiceLink}/${encodeURIComponent(String(company))}/${this.invoiceControllerUrl}/coststoInvoice`,\r\n            options);\r\n    }\r\n\r\n    public findPurchaseGoodsContractToInvoiceBySectionId(sectionId: number): Observable<ApiCollection<TradeForInvoiceSearchResult>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        options.headers = this.defaultHttpHeaders;\r\n\r\n        let queryParameters = new HttpParams();\r\n        queryParameters = queryParameters.set('type', String(ContractTypes.Purchase));\r\n\r\n        options.params = queryParameters;\r\n\r\n        return this.get<ApiCollection<TradeForInvoiceSearchResult>>(\r\n            `${environment.executionServiceLink}/${encodeURIComponent(String(company))}`\r\n            + `/${this.invoiceControllerUrl}/contractstoinvoice/${encodeURIComponent(String(sectionId))}`,\r\n            options);\r\n    }\r\n\r\n    public findSaleGoodsContractToInvoiceBySectionId(sectionId: number): Observable<ApiCollection<TradeForInvoiceSearchResult>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        options.headers = this.defaultHttpHeaders;\r\n\r\n        let queryParameters = new HttpParams();\r\n        queryParameters = queryParameters.set('type', String(ContractTypes.Sale));\r\n        options.params = queryParameters;\r\n\r\n        return this.get<ApiCollection<TradeForInvoiceSearchResult>>(\r\n            `${environment.executionServiceLink}/${encodeURIComponent(String(company))}`\r\n            + `/${this.invoiceControllerUrl}/contractstoinvoice/${encodeURIComponent(String(sectionId))}`,\r\n            options);\r\n    }\r\n\r\n    public getInvoiceMarkingBySectionId(sectionId: number): Observable<ApiCollection<InvoiceMarking>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        options.headers = this.defaultHttpHeaders;\r\n\r\n        let queryParameters = new HttpParams();\r\n        if (sectionId !== undefined && sectionId !== null) {\r\n            queryParameters = queryParameters.set('sectionId', sectionId as any);\r\n        }\r\n        options.params = queryParameters;\r\n\r\n        return this.get<ApiCollection<InvoiceMarking>>(\r\n            `${environment.executionServiceLink}/${encodeURIComponent(String(company))}/invoicemarkings`,\r\n            options);\r\n    }\r\n\r\n    public getCostInvoiceMarkingByCostId(costId: number): Observable<ApiCollection<InvoiceMarking>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        options.headers = this.defaultHttpHeaders;\r\n\r\n        let queryParameters = new HttpParams();\r\n        if (costId !== undefined && costId !== null) {\r\n            queryParameters = queryParameters.set('costId', costId as any);\r\n        }\r\n        options.params = queryParameters;\r\n\r\n        return this.get<ApiCollection<InvoiceMarking>>(\r\n            `${environment.executionServiceLink}/${encodeURIComponent(String(company))}/invoicemarkings`,\r\n            options);\r\n    }\r\n\r\n    public invoiceContracts(invoice: InvoiceRecord): Observable<InvoiceRecord> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        return this.post<InvoiceRecord>(\r\n            `${environment.executionServiceLink}/${encodeURIComponent(String(company))}/${this.invoiceControllerUrl}`,\r\n            invoice);\r\n    }\r\n\r\n    public invoiceContractsAsDraft(invoice: InvoiceRecord): Observable<InvoiceRecord> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        return this.post<InvoiceRecord>(\r\n            `${environment.executionServiceLink}/${encodeURIComponent(String(company))}/${this.invoiceControllerUrl}/drafts`,\r\n            invoice);\r\n    }\r\n\r\n    public deleteDraftInvoice(invoiceId: number): Observable<boolean> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        return this.http.delete(\r\n            `${environment.executionServiceLink}/${encodeURIComponent(String(company))}`\r\n            + `/${this.invoiceControllerUrl}/drafts/${encodeURIComponent(String(invoiceId))}`,\r\n            {\r\n                observe: 'response',\r\n            }).pipe(map((resp) => resp.ok));\r\n    }\r\n\r\n    public createManualJournal(manualJournal: ManualJournalDocument): Observable<ManualJournalResponse> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        let manualJournalCommand: ManualJournalCommand;\r\n        manualJournalCommand = this.mapToManualJournalCommand(manualJournal);\r\n        return this.post<ManualJournalDocument>(\r\n            `${environment.executionServiceLink}/${encodeURIComponent(String(company))}/${this.manualJournalControllerUrl}`,\r\n            manualJournalCommand);\r\n    }\r\n\r\n    public CreateTransactionDocument(createTransactionDocument: CreateTransactionDocument): Observable<TransactionCreationResponse> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        return this.post<TransactionCreationResponse>(\r\n            `${environment.executionServiceLink}/${encodeURIComponent(String(company))}/${this.invoiceControllerUrl}/createtransactiondocument`,\r\n            createTransactionDocument);\r\n    }\r\n\r\n    getContractsToInvoice(invoiceType: number): Observable<ApiCollection<ContractsToInvoice>> {\r\n\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        let queryParameters = new HttpParams();\r\n\r\n        queryParameters = queryParameters.set('invoiceType', invoiceType.toString());\r\n\r\n        options.params = queryParameters;\r\n\r\n        return this.get<ApiCollection<ContractsToInvoice>>(\r\n            `${environment.executionServiceLink}/${encodeURIComponent(String(company))}`\r\n            + `/${this.invoiceControllerUrl}/contractstoinvoicebyinvoicetype`,\r\n            options);\r\n    }\r\n\r\n    searchContractsToPurchaseInvoiceForCommercial(filters: ListAndSearchFilter[],\r\n        offset?: number,\r\n        limit?: number): Observable<any> {\r\n\r\n        const filtersForColumns: ListAndSearchFilterDto[] = filters.map((filter) => {\r\n            return new ListAndSearchFilterDto(filter);\r\n        });\r\n\r\n        const request: ListAndSearchRequest = {\r\n            clauses: { clauses: filtersForColumns },\r\n            offset,\r\n            limit,\r\n        };\r\n\r\n        const list = this.searchContractForCommercialPurchaseInvoice(request)\r\n            .pipe(\r\n                map((data) => {\r\n                    return data.value;\r\n                }),\r\n            );\r\n\r\n        return list;\r\n    }\r\n\r\n    searchContractsToSaleInvoiceForCommercial(filters: ListAndSearchFilter[],\r\n        offset?: number,\r\n        limit?: number): Observable<any> {\r\n\r\n        const filtersForColumns: ListAndSearchFilterDto[] = filters.map((filter) => {\r\n            return new ListAndSearchFilterDto(filter);\r\n        });\r\n\r\n        const request: ListAndSearchRequest = {\r\n            clauses: { clauses: filtersForColumns },\r\n            offset,\r\n            limit,\r\n        };\r\n\r\n        const list = this.searchContractForCommercialSaleInvoice(request)\r\n            .pipe(\r\n                map((data) => {\r\n                    return data.value;\r\n                }),\r\n            );\r\n\r\n        return list;\r\n    }\r\n\r\n    getCostContractsToInvoice(): Observable<ApiCollection<ContractsToCostInvoice>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n\r\n        return this.get<ApiCollection<ContractsToCostInvoice>>(\r\n            `${environment.executionServiceLink}/${encodeURIComponent(String(company))}`\r\n            + `/${this.invoiceControllerUrl}/costcontractsbyinvoicetype`,\r\n            options);\r\n    }\r\n\r\n    searchContractsForCostInvoice(request: ListAndSearchRequest): Observable<ApiPaginatedCollection<ContractsToCostInvoice>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        return this.post<ApiPaginatedCollection<ContractsToCostInvoice>>(\r\n            `${environment.executionServiceLink}/${encodeURIComponent(String(company))}/${this.invoiceControllerUrl}`\r\n            + `/costinvoice/search`,\r\n            request);\r\n    }\r\n\r\n    getCostForSelectedContracts(sectionIds: number[]): Observable<ApiCollection<ContractsToCostInvoice>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        let queryParameters = new HttpParams();\r\n\r\n        queryParameters = queryParameters.set('sectionIds', sectionIds.toString());\r\n\r\n        options.params = queryParameters;\r\n\r\n        return this.get<ApiCollection<ContractsToCostInvoice>>(\r\n            `${environment.executionServiceLink}/${encodeURIComponent(String(company))}`\r\n            + `/${this.invoiceControllerUrl}/costsbysectionids`,\r\n            options);\r\n    }\r\n\r\n    // get Business Sector for posting purpose\r\n    getBusinessSectorForPosting() {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        return this.get<BusinessSector>(\r\n            `${environment.executionServiceLink}/${encodeURIComponent(String(company))}`\r\n            + `/${this.invoiceControllerUrl}/businesssectorconfiguration`,\r\n            options);\r\n    }\r\n    // get the allocated allocated contracts along with selected Washout Contracts\r\n    public getAllocatedContractsForSelectedWashout(selectedSectionIds: number[]): Observable<ApiCollection<ContractsToWashoutInvoice>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        let queryParameters = new HttpParams();\r\n\r\n        queryParameters = queryParameters.set('selectedSectionIds', selectedSectionIds.toString());\r\n\r\n        options.params = queryParameters;\r\n        return this.get<ApiCollection<ContractsToWashoutInvoice>>(\r\n            `${environment.executionServiceLink}/${encodeURIComponent(String(company))}`\r\n            + `/${this.invoiceControllerUrl}/allocatedwashoutsbySectionids`,\r\n            options);\r\n    }\r\n\r\n    // -- charters\r\n    public getCharters(): Observable<ApiPaginatedCollection<Charter>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        return this.get<ApiPaginatedCollection<Charter>>(\r\n            `${environment.executionServiceLink}/${encodeURIComponent(String(company))}/${this.chartersControllerUrl}`);\r\n    }\r\n\r\n    charterSearch(request: ListAndSearchRequest): Observable<ApiPaginatedCollection<Charter>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        return this.post<ApiPaginatedCollection<Charter>>(\r\n            `${environment.executionServiceLink}/${encodeURIComponent(String(company))}/${this.chartersControllerUrl}/search`, request);\r\n    }\r\n\r\n    searchAssignSections(request: ListAndSearchRequest): Observable<ApiPaginatedCollection<AssignedSection>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        return this.post<ApiPaginatedCollection<AssignedSection>>(\r\n            `${environment.executionServiceLink}/${encodeURIComponent(String(company))}/${this.chartersControllerUrl}/searchCharterAssignmentSections`, request);\r\n    }\r\n\r\n    public getChartersForCompanies(selectedCompanies: string[]): Observable<ApiPaginatedCollection<Charter>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        // selectedCompanies.push(company);\r\n\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        let queryParameters = new HttpParams();\r\n\r\n        queryParameters = queryParameters.set('selectedCompanies', selectedCompanies.toString());\r\n\r\n        options.params = queryParameters;\r\n\r\n        return this.get<ApiPaginatedCollection<Charter>>(\r\n            `${environment.executionServiceLink}/${encodeURIComponent(String(company))}`\r\n            + `/${this.chartersControllerUrl}`,\r\n            options);\r\n    }\r\n\r\n    public createCharter(charter: Charter): Observable<Charter> {\r\n        const command = this.mapToCreateCharterCommand(charter);\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        return this.post(\r\n            `${environment.executionServiceLink}/${encodeURIComponent(String(company))}/${this.chartersControllerUrl}`,\r\n            command);\r\n    }\r\n\r\n    public closeCharter(charterIds: number[], childFlag?: number, dataVersionId?: number): Observable<CharterBulkClosure[]> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        return this.http.post<CharterBulkClosure[]>(\r\n            `${environment.executionServiceLink}/${encodeURIComponent(String(company))}/${this.chartersControllerUrl}`\r\n            + `/${encodeURIComponent(String(charterIds.toString()))}/close`,\r\n            null);\r\n    }\r\n\r\n    public openCharter(charterIds: number[], childFlag?: number, dataVersionId?: number): Observable<boolean> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        return this.http.post<any>(\r\n            `${environment.executionServiceLink}/${encodeURIComponent(String(company))}/${this.chartersControllerUrl}`\r\n            + `/${encodeURIComponent(String(charterIds.toString()))}/open`,\r\n            null,\r\n            {\r\n                observe: 'response',\r\n            }).pipe(\r\n                map((resp) => resp.ok));\r\n    }\r\n\r\n    public updateCharter(charter: Charter, isDeassignSectionRequest: boolean): Observable<void> {\r\n        const command = this.mapToUpdateCharterCommand(charter, isDeassignSectionRequest);\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        return this.patch(\r\n            `${environment.executionServiceLink}/${encodeURIComponent(String(company))}`\r\n            + `/${this.chartersControllerUrl}/${encodeURIComponent(String(charter.charterId))}`,\r\n            command);\r\n    }\r\n\r\n    public getCharterByRef(charterRef: string): Observable<Charter> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        return this.get<Charter>(\r\n            `${environment.executionServiceLink}/${encodeURIComponent(String(company))}`\r\n            + `/${this.chartersControllerUrl}/${encodeURIComponent(charterRef)}`);\r\n    }\r\n\r\n    public checkCharterExistance(charterRef: string): Observable<HttpResponse<any>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        return this.http.head(\r\n            `${environment.executionServiceLink}/${encodeURIComponent(String(company))}/`\r\n            + `${this.chartersControllerUrl}/${encodeURIComponent(charterRef)}`,\r\n            {\r\n                observe: 'response',\r\n            });\r\n    }\r\n\r\n    public getCharterById(charterId: number): Observable<Charter> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        return this.get<Charter>(\r\n            `${environment.executionServiceLink}/${encodeURIComponent(String(company))}`\r\n            + `/${this.chartersControllerUrl}/${encodeURIComponent(String(charterId))}`);\r\n    }\r\n\r\n    public getCharterBySectionId(sectionId: number): Observable<Charter> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        return this.get<Charter>(\r\n            `${environment.executionServiceLink}/${encodeURIComponent(String(company))}`\r\n            + `/${this.chartersControllerUrl}/chartersbysection/${encodeURIComponent(String(sectionId))}`);\r\n    }\r\n\r\n    public findChartersByReference(reference: string): Observable<ApiPaginatedCollection<Charter>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        options.headers = this.defaultHttpHeaders;\r\n\r\n        let queryParameters = new HttpParams();\r\n        if (reference !== undefined && reference !== null) {\r\n            queryParameters = queryParameters.set('charterRef', reference as any);\r\n        }\r\n        options.params = queryParameters;\r\n\r\n        return this.get<ApiPaginatedCollection<Charter>>(\r\n            `${environment.executionServiceLink}/${encodeURIComponent(String(company))}/${this.chartersControllerUrl}`,\r\n            options);\r\n    }\r\n\r\n    getAllCharterManagers(): Observable<ApiCollection<User>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        return this.get<ApiCollection<User>>(\r\n            `${environment.executionServiceLink}/${encodeURIComponent(String(company))}/${this.charterManagerControllerUrl}`,\r\n        );\r\n    }\r\n\r\n    public assignSectionsToCharter(charterId: number, sectionTrafficList: SectionTraffic[]): Observable<Charter> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        const request: AssignSectionsRequest = new AssignSectionsRequest();\r\n        request.charterId = charterId;\r\n        request.sectionsTraffic = sectionTrafficList;\r\n\r\n        return this.http.post<Charter>(\r\n            `${environment.executionServiceLink}/${encodeURIComponent(String(company))}`\r\n            + `/${this.chartersControllerUrl}/${encodeURIComponent(String(charterId))}/sections`,\r\n            request);\r\n    }\r\n\r\n    public getSectionsToBeAssignToCharter(reference: string = null): Observable<ApiPaginatedCollection<AssignedSection>> {\r\n\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        let queryParameters = new HttpParams();\r\n        if (reference !== undefined && reference !== null) {\r\n            queryParameters = queryParameters.set('contractLabel', reference);\r\n        }\r\n        options.params = queryParameters;\r\n\r\n        return this.http.get<ApiPaginatedCollection<AssignedSection>>(\r\n            `${environment.executionServiceLink}/${encodeURIComponent(String(company))}`\r\n            + `/${this.chartersControllerUrl}/sectionstoassign`,\r\n            options);\r\n    }\r\n\r\n    public getSectionsAssignedToCharter(charterId: number): Observable<ApiPaginatedCollection<AssignedSection>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        return this.http.get<ApiPaginatedCollection<AssignedSection>>(\r\n            `${environment.executionServiceLink}/${encodeURIComponent(String(company))}`\r\n            + `/${this.chartersControllerUrl}/${encodeURIComponent(String(charterId))}/sections`);\r\n    }\r\n\r\n    public removeSectionFromCharter(charterId: number, sectionsId: number[]): Observable<Charter> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        const command = this.mapToRemoveAssignedSectionsCommand(charterId, sectionsId);\r\n\r\n        return this.http.post<Charter>(\r\n            `${environment.executionServiceLink}/${encodeURIComponent(String(company))}`\r\n            + `/${this.chartersControllerUrl}/${encodeURIComponent(String(charterId))}/sections/deassignsection`,\r\n            command);\r\n    }\r\n\r\n    public reAssignSectionToCharter(charter: Charter, newCharter: Charter): Observable<Charter> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        const command = this.mapToReAssignSectionsCommand(charter, newCharter);\r\n\r\n        return this.http.post<Charter>(\r\n            `${environment.executionServiceLink}/${encodeURIComponent(String(company))}`\r\n            + `/${this.chartersControllerUrl}/${encodeURIComponent(String(charter.charterId))}/sections/reassignsection`,\r\n            command);\r\n    }\r\n\r\n    public deleteCharter(charterId: number): Observable<boolean> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        return this.http.delete<any>(\r\n            `${environment.executionServiceLink}/${encodeURIComponent(String(company))}`\r\n            + `/${this.chartersControllerUrl}/${encodeURIComponent(String(charterId))}`,\r\n            {\r\n                observe: 'response',\r\n            }).pipe(map((resp) => resp.ok));\r\n    }\r\n\r\n    public deallocateContract(sectionId: number, reInstateTrafficDetails: any, dataVersionId?: number): Observable<boolean> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        const request = {\r\n            sectionId,\r\n            reInstateTrafficDetails,\r\n            dataVersionId,\r\n        };\r\n\r\n        return this.http.post(\r\n            `${environment.executionServiceLink}`\r\n            + `/${encodeURIComponent(String(company))}/${this.allocationControllerUrl}`\r\n            + `/deallocate/`,\r\n            request,\r\n            {\r\n                headers: this.defaultHttpHeaders,\r\n                observe: 'response',\r\n            }).pipe(map((resp) => resp.ok));\r\n    }\r\n\r\n    public deallocateBulkContract(deAllocateBulkSectionCommand: BulkDeallocateSectionCommand): Observable<boolean> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        const request = deAllocateBulkSectionCommand;\r\n        return this.http.post(\r\n            `${environment.executionServiceLink}`\r\n            + `/${encodeURIComponent(String(company))}/${this.allocationControllerUrl}`\r\n            + `/bulkdeallocate/`,\r\n            request,\r\n            {\r\n                headers: this.defaultHttpHeaders,\r\n                observe: 'response',\r\n            }).pipe(map((resp) => resp.ok));\r\n    }\r\n\r\n    public updatePostingStatus(transactionDocuemntId: number, postingStatus: number): Observable<void> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        const action = `${encodeURIComponent(String(company))}/${\r\n            this.invoiceControllerUrl}/updatepostingstatus`;\r\n        const command = this.mapToInvoiceMarkingPotingStatusCommand(transactionDocuemntId, postingStatus);\r\n\r\n        return this.post(environment.executionServiceLink + '/' + action, command);\r\n    }\r\n\r\n    public createInvoice(invoice: InvoiceRecord): Observable<InvoiceRecord> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        const action = `${encodeURIComponent(String(company))}/${\r\n            this.invoiceControllerUrl}/`;\r\n\r\n        return this.post(environment.executionServiceLink + '/' + action, invoice);\r\n    }\r\n\r\n    public findUnpaidInvoices(searchCriteria: string): Observable<ApiPaginatedCollection<FindUnpaidInvoicesResult>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        options.headers = this.defaultHttpHeaders;\r\n\r\n        let queryParameters = new HttpParams();\r\n        if (searchCriteria !== undefined && searchCriteria !== null) {\r\n            queryParameters = queryParameters.set('searchCriteria', searchCriteria as any);\r\n        }\r\n        options.params = queryParameters;\r\n\r\n        return this.http.get<ApiPaginatedCollection<FindUnpaidInvoicesResult>>(\r\n            `${environment.executionServiceLink}/${encodeURIComponent(String(company))}/invoices/unpaid/`,\r\n            options);\r\n    }\r\n\r\n    public allocateSections(allocatedSection: AllocateSection[]): Observable<void> {\r\n        const command = this.mapToAssignedSectionsAllocationCommand(allocatedSection);\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        const action = `/${encodeURIComponent(String(company))}/${this.allocationControllerUrl}/allocateSectionList/`;\r\n        return this.post(environment.executionServiceLink + action, command);\r\n    }\r\n\r\n    private mapToCreateCharterCommand(charter: Charter): CreateCharterCommand {\r\n        const command = new CreateCharterCommand();\r\n        command.charterId = charter.charterId;\r\n        command.vesselId = charter.vesselId;\r\n        command.description = charter.description;\r\n        command.departureDate = charter.departureDate;\r\n        command.dischargeLocation = charter.dischargeLocationCode;\r\n        command.loadingLocation = charter.loadingLocationCode;\r\n        command.reference = charter.charterCode;\r\n        command.transportType = charter.transportTypeCode;\r\n        command.arrivalDate = charter.arrivalDate;\r\n        command.memo = charter.memo;\r\n        command.charterManagerId = charter.charterManagerId;\r\n        command.blRef = charter.blRef;\r\n        command.blDate = charter.blDate;\r\n        command.weightUnitId = charter.weightUnitId;\r\n        command.currency = charter.currency;\r\n        command.departmentId = charter.departmentId;\r\n        return command;\r\n    }\r\n    private mapToUpdateCharterCommand(charter: Charter, isDeassignSectionRequest: boolean): UpdateCharterCommand {\r\n        const command = new UpdateCharterCommand();\r\n        command.charterId = charter.charterId;\r\n        command.vesselId = charter.vesselId;\r\n        command.description = charter.description;\r\n        command.departureDate = charter.departureDate;\r\n        command.dischargeLocation = charter.dischargeLocationCode;\r\n        command.loadingLocation = charter.loadingLocationCode;\r\n        command.reference = charter.charterCode;\r\n        command.transportType = charter.transportTypeCode;\r\n        command.arrivalDate = charter.arrivalDate;\r\n        command.memo = charter.memo;\r\n        command.charterManagerId = charter.charterManagerId;\r\n        command.blRef = charter.blRef;\r\n        command.blDate = charter.blDate;\r\n        command.weightUnitId = charter.weightUnitId;\r\n        command.currency = charter.currency;\r\n        command.departmentId = charter.departmentId;\r\n        command.isDeassignSectionRequest = isDeassignSectionRequest;\r\n        command.marketSector = charter.marketSector;\r\n        command.sectionsAssigned = this.mapAssignedContractsCommand(charter.assignedSections);\r\n        return command;\r\n    }\r\n\r\n    private mapToRemoveAssignedSectionsCommand(charterId: number, sectionIds: number[]): RemoveAssignedSectionsCommand {\r\n        const command = new RemoveAssignedSectionsCommand();\r\n        command.charterId = charterId;\r\n        command.sectionIds = sectionIds;\r\n        return command;\r\n    }\r\n\r\n    private mapToReAssignSectionsCommand(charter: Charter, newCharter: Charter): ReAssignSectionsCommand {\r\n        const command = new ReAssignSectionsCommand();\r\n        command.newCharterId = newCharter.charterId;\r\n        command.newCharterVesselCode = newCharter.vesselCode;\r\n        command.charterId = charter.charterId;\r\n        command.sectionsAssigned = this.mapAssignedContractsCommand(charter.assignedSections);\r\n\r\n        return command;\r\n    }\r\n\r\n    private mapToAssignedSectionsAllocationCommand(allocateSections: AllocateSection[]): AllocateSectionListCommand {\r\n        const command = new AllocateSectionListCommand();\r\n        command.allocateSections = allocateSections;\r\n        return command;\r\n    }\r\n\r\n    mapAssignedContractsCommand(assignedSections: AssignedSection[]) {\r\n        return assignedSections.map((p) => ({\r\n            contractType: p.contractType,\r\n            blDate: p.blDate,\r\n            sectionId: p.sectionId,\r\n            contractLabel: p.contractLabel,\r\n            buyerCode: p.buyerCode,\r\n            sellerCode: p.sellerCode,\r\n            counterparty: p.counterparty,\r\n            quantity: p.quantity,\r\n            weightUnitId: p.weightUnitId,\r\n            commodityId: p.commodityId,\r\n            allocatedTo: p.allocatedTo,\r\n            sectionAllocated: p.sectionAllocated,\r\n            price: p.price,\r\n            priceUnitId: p.priceUnitId,\r\n            currency: p.currency,\r\n            charterRef: p.charterRef,\r\n            assignedCharterReference: p.assignedCharterReference,\r\n            assignmentDate: p.assignmentDate,\r\n            vessel: p.vessel,\r\n            groupNumber: p.groupNumber,\r\n            portOrigin: p.portOrigin,\r\n            marketSector: p.marketSector,\r\n            portDestination: p.portDestination,\r\n            blRef: p.blRef,\r\n            invoiceRef: p.invoiceRef,\r\n            invoicingStatus: p.invoicingStatus,\r\n            pricingMethodId: p.pricingMethodId,\r\n            contractStatusCode: p.contractStatusCode,\r\n            modifiedDateTime: p.modifiedDateTime,\r\n            amenmodifiedBydedBy: p.modifiedBy,\r\n            paymentTermCode: p.paymentTermCode,\r\n            shipmentPeriod: p.shipmentPeriod,\r\n            departmentId: p.departmentId,\r\n            createdDateTime: p.createdDateTime,\r\n            modifiedBy: p.modifiedBy,\r\n            removeSectionTrafficInfo: p.removeSectionTrafficInfo,\r\n            contractBlDate: p.contractBlDate,\r\n            allocatedSectionId: p.allocatedSectionId,\r\n            allocatedDateTime: p.allocatedDateTime,\r\n            amendedBy: p.amendedBy,\r\n            amendedOn: p.amendedOn,\r\n            arbitrationCode: p.arbitrationCode,\r\n            arbitrationDescription: p.arbitrationDescription,\r\n            buyerDescription: p.buyerDescription,\r\n            commodity1: p.commodity1,\r\n            commodity2: p.commodity2,\r\n            commodity3: p.commodity3,\r\n            commodity4: p.commodity4,\r\n            commodity5: p.commodity5,\r\n            commodityDescription: p.commodityDescription,\r\n            companyId: p.companyId,\r\n            contractIssuedOn: p.contractIssuedOn,\r\n            contractQuantity: p.contractQuantity,\r\n            contractTermCode: p.contractTermCode,\r\n            contractTermDescription: p.contractTermDescription,\r\n            contractTermLocationPortCode: p.contractTermLocationPortCode,\r\n            contractTermLocationDescription: p.contractTermLocationDescription,\r\n            contractValue: p.contractValue,\r\n            counterpartyRef: p.counterpartyRef,\r\n            contractDate: p.contractDate,\r\n            createdBy: p.createdBy,\r\n            cropYear: p.cropYear,\r\n            currencyDescription: p.currencyDescription,\r\n            deliveryPeriodStart: p.deliveryPeriodStart,\r\n            deliveryPeriodEnd: p.deliveryPeriodEnd,\r\n            departmentCode: p.departmentCode,\r\n            departmentDescription: p.departmentDescription,\r\n            groupingNumber: p.groupingNumber,\r\n            displayContractType: p.displayContractType,\r\n            invoiceValue: p.invoiceValue,\r\n            displayInvoicingStatus: p.displayInvoicingStatus,\r\n            mainInvoiceReference: p.mainInvoiceReference,\r\n            mainInvoiceDate: p.mainInvoiceDate,\r\n            memo: p.memo,\r\n            otherReference: p.otherReference,\r\n            parentContractLabel: p.parentContractLabel,\r\n            paymentDate: p.paymentDate,\r\n            paymentTermDescription: p.paymentTermDescription,\r\n            percentageInvoiced: p.percentageInvoiced,\r\n            periodType: p.periodType,\r\n            physicalContractCode: p.physicalContractCode,\r\n            portOfOrigin: p.portOfOrigin,\r\n            portOfOriginDescription: p.portOfOriginDescription,\r\n            portOfDestination: p.portOfDestination,\r\n            portOfDestinationDescription: p.portOfDestinationDescription,\r\n            positionMonth: p.positionMonth,\r\n            positionType: p.positionType,\r\n            originalQuantity: p.originalQuantity,\r\n            priceCode: p.priceCode,\r\n            priceUnitDescription: p.priceUnitDescription,\r\n            quantityCodeInvoiced: p.quantityCodeInvoiced,\r\n            quantityInvoiced: p.quantityInvoiced,\r\n            weightUnitCode: p.weightUnitCode,\r\n            sellerDescription: p.sellerDescription,\r\n            traderDisplayName: p.traderDisplayName,\r\n            vesselName: p.vesselName,\r\n            weightUnitDescription: p.weightUnitDescription,\r\n            allocatedToSectionId: p.allocatedToSectionId,\r\n            principalCommodity: p.principalCommodity,\r\n            part2: p.part2,\r\n            part3: p.part3,\r\n            WeightCode: p.WeightCode,\r\n        }));\r\n    }\r\n\r\n    // this call is used to updated section traffic details from traffic tab .\r\n    updateSectionTraffic(sectionTraffic: SectionTraffic) {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        return this.patch(\r\n            `${environment.executionServiceLink}/${encodeURIComponent(String(company))}/${this.chartersControllerUrl}`,\r\n            sectionTraffic);\r\n    }\r\n\r\n    // This method will return all allocation warning messages.\r\n    getWarningMessages(sectionId: number, allocatedSectionId: number): Observable<ApiCollection<AllocationMessage>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        return this.get<ApiCollection<AllocationMessage>>(\r\n            `${environment.executionServiceLink}/${encodeURIComponent(String(company))}`\r\n            + `/${this.allocationControllerUrl}/getwarningmessages/${encodeURIComponent(String(sectionId))}`\r\n            + `/${encodeURIComponent(String(allocatedSectionId))}`,\r\n\r\n        );\r\n    }\r\n\r\n    search(request: ListAndSearchRequest): Observable<ApiPaginatedCollection<InvoiceSearchResult>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        return this.post<ApiPaginatedCollection<InvoiceSearchResult>>(\r\n            `${environment.executionServiceLink}/${encodeURIComponent(String(company))}/${this.invoiceControllerUrl}/search`,\r\n            request);\r\n    }\r\n\r\n    searchContractForCommercialPurchaseInvoice(request: ListAndSearchRequest): Observable<ApiPaginatedCollection<InvoiceSearchResult>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        return this.post<ApiPaginatedCollection<InvoiceSearchResult>>(\r\n            `${environment.executionServiceLink}/${encodeURIComponent(String(company))}/${this.invoiceControllerUrl}` +\r\n            `/contractstopurchaseinvoice/search`,\r\n            request);\r\n    }\r\n\r\n\r\n    searchContractForCommercialSaleInvoice(request: ListAndSearchRequest): Observable<ApiPaginatedCollection<InvoiceSearchResult>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        return this.post<ApiPaginatedCollection<InvoiceSearchResult>>(\r\n            `${environment.executionServiceLink}/${encodeURIComponent(String(company))}/${this.invoiceControllerUrl}` +\r\n            `/contractstosaleinvoice/search`,\r\n            request);\r\n    }\r\n\r\n    public getInvoiceById(invoiceId: number): Observable<InvoiceSummaryRecord> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        return this.get<InvoiceSummaryRecord>(\r\n            `${environment.executionServiceLink}/${encodeURIComponent(String(company))}`\r\n            + `/${this.invoiceControllerUrl}/${encodeURIComponent(String(invoiceId))}`);\r\n    }\r\n\r\n    // get all cash List\r\n    getCashList(costDirectionId: number): Observable<ApiPaginatedCollection<CashSummary>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        options.headers = this.defaultHttpHeaders;\r\n\r\n        let queryParameters = new HttpParams();\r\n        if (costDirectionId !== undefined && costDirectionId !== null) {\r\n            queryParameters = queryParameters.set('costDirectionId', costDirectionId as any);\r\n        }\r\n        options.params = queryParameters;\r\n\r\n        return this.get<ApiPaginatedCollection<CashSummary>>(\r\n            `${environment.executionServiceLink}/${encodeURIComponent(String(company))}/${this.cashControllerUrl}`,\r\n            options);\r\n    }\r\n\r\n    // create cash\r\n    public createCash(cash: CashRecord): Observable<CashRecord> {\r\n        // create cash is basically unmaintainable as code execution is hard to follow and the same variables are used in many screens.\r\n        // To fix issue with JL Lines, here we override de cash object passing in parameter the correct values,\r\n        // and we avoid touching the code of the screens\r\n\r\n        const finalCashRecord = { ...cash };\r\n        finalCashRecord.documentMatchings.forEach((document) => {\r\n            document.amountToBePaid = Math.abs(document.amountToBePaid) * Math.sign(document.amount);\r\n        });\r\n\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        return this.post<CashRecord>(\r\n            `${environment.executionServiceLink}/${encodeURIComponent(String(company))}/${this.cashControllerUrl}/`, finalCashRecord);\r\n    }\r\n\r\n    public getCashSetupDetails(): Observable<CashSetup> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        return this.get<CashSetup>(\r\n            `${environment.executionServiceLink}/${encodeURIComponent(String(company))}`\r\n            + `/${this.cashControllerUrl}/cashsetup`);\r\n    }\r\n\r\n    public getInterfaceSetupDetails(interfaceTypeId: number): Observable<InterfaceSetup> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        let queryParameters = new HttpParams();\r\n\r\n        queryParameters = queryParameters.set('interfaceTypeId', interfaceTypeId as any);\r\n\r\n        options.params = queryParameters;\r\n        return this.get<InterfaceSetup>(\r\n            `${environment.executionServiceLink}/${encodeURIComponent(String(company))}`\r\n            + `/${this.invoiceControllerUrl}/interfacesetup`, options);\r\n    }\r\n\r\n    public getInvoiceSetupByCompany(): Observable<InvoiceSetupResult> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        return this.get<InvoiceSetupResult>(\r\n            `${environment.executionServiceLink}/${encodeURIComponent(String(company))}`\r\n            + `/${this.invoiceControllerUrl}/setup`);\r\n    }\r\n\r\n    // get invoice details for cash matching\r\n    getInvoiceToMatch(counterpartyId: string, department: number, currency: string, isEdit: boolean\r\n        , matchFlagId: number, documentReference: string): Observable<ApiCollection<CashMatching>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        let queryParameters = new HttpParams();\r\n\r\n        queryParameters = queryParameters.set('counterpartyId', counterpartyId.toString());\r\n        if (department !== undefined && department !== null) {\r\n            queryParameters = queryParameters.set('department', department as any);\r\n        }\r\n        queryParameters = queryParameters.set('currency', currency.toString());\r\n        queryParameters = queryParameters.set('isEdit', isEdit ? 'true' : 'false');\r\n        if (matchFlagId !== undefined && matchFlagId !== null) {\r\n            queryParameters = queryParameters.set('matchFlagId', matchFlagId as any);\r\n        }\r\n        if (documentReference !== undefined && documentReference !== null) {\r\n            queryParameters = queryParameters.set('documentReference', documentReference as any);\r\n        }\r\n\r\n        options.params = queryParameters;\r\n\r\n        return this.get<ApiCollection<CashMatching>>(\r\n            `${environment.executionServiceLink}/${encodeURIComponent(String(company))}`\r\n            + `/${this.cashControllerUrl}/getinvoiceforcashmatching`,\r\n            options);\r\n    }\r\n    getInvoiceToMatchByDocumentReference(docReference: string): Observable<ApiCollection<CashMatching>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        let queryParameters = new HttpParams();\r\n\r\n        queryParameters = queryParameters.set('docReference', docReference.toString());\r\n\r\n        options.params = queryParameters;\r\n\r\n        return this.get<ApiCollection<CashMatching>>(\r\n            `${environment.executionServiceLink}/${encodeURIComponent(String(company))}`\r\n            + `/${this.cashControllerUrl}/getinvoicebydocumentreference`,\r\n            options);\r\n    }\r\n\r\n    getForeignExchangeRateByCurrency(currencyCodeFrom: string, currencyCodeTo: string): Observable<CashMatching> {\r\n        const company = this.companyManager.getCurrentCompanyId();\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        options.headers = this.defaultHttpHeaders;\r\n        let queryParameters = new HttpParams();\r\n        queryParameters = queryParameters.set('currencyCodeFrom', currencyCodeFrom);\r\n        queryParameters = queryParameters.set('currencyCodeTo', currencyCodeTo);\r\n\r\n        options.params = queryParameters;\r\n        return this.get<CashMatching>(`${environment.executionServiceLink}/${encodeURIComponent(String(company))}`\r\n            + `/${this.cashControllerUrl}/getfxrateforcash`,\r\n            options);\r\n    }\r\n\r\n    // get invoice details by section\r\n    public getInvoiceDetailsBySection(sectionId: number, childFlag?: number, dataVersionId?: number): Observable<ApiPaginatedCollection<InvoiceMarkingSearchResult>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        options.headers = this.defaultHttpHeaders;\r\n        let queryParameters = new HttpParams();\r\n        queryParameters = childFlag ? queryParameters.set('childFlag', childFlag.toString()) : queryParameters.set('childFlag', '0');\r\n\r\n        // queryParameters = queryParameters.set('childFlag', childFlag.toString());\r\n\r\n        if (dataVersionId) {\r\n            queryParameters = queryParameters.set('dataVersionId', dataVersionId.toString());\r\n        }\r\n\r\n        options.params = queryParameters;\r\n        return this.get<ApiPaginatedCollection<InvoiceMarkingSearchResult>>(\r\n\r\n            `${environment.executionServiceLink}/${encodeURIComponent(String(company))}`\r\n            + `/${this.invoiceControllerUrl}/DetailsBySection/${encodeURIComponent(String(sectionId))}`, options);\r\n    }\r\n\r\n    getInvoiceMarkingDetailsByCompanyAndSectionId(sectionId: number, dataVersionId?: number) {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        options.headers = this.defaultHttpHeaders;\r\n        let queryParameters = new HttpParams();\r\n        if (dataVersionId) {\r\n            queryParameters = queryParameters.set('dataVersionId', dataVersionId.toString());\r\n        }\r\n        options.params = queryParameters;\r\n\r\n        return this.get<InvoiceMarkingDetails>(\r\n            `${environment.executionServiceLink}/${encodeURIComponent(String(company))}/${this.invoiceControllerUrl}`\r\n            + `/InvoiceMarkingDetails/${encodeURIComponent(String(sectionId))}`,\r\n            options);\r\n    }\r\n\r\n    // get invoice details by section\r\n    public getInvoiceCostBySection(sectionId: number, dataVersionId?: number): Observable<ApiPaginatedCollection<InvoiceMarkingSearchResult>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        options.headers = this.defaultHttpHeaders;\r\n        let queryParameters = new HttpParams();\r\n        if (dataVersionId) {\r\n            queryParameters = queryParameters.set('dataVersionId', dataVersionId.toString());\r\n        }\r\n        options.params = queryParameters;\r\n\r\n        return this.get<ApiPaginatedCollection<InvoiceMarkingSearchResult>>(\r\n            `${environment.executionServiceLink}/${encodeURIComponent(String(company))}`\r\n            + `/${this.invoiceControllerUrl}/InvoiceCostBySection/${encodeURIComponent(String(sectionId))}`, options);\r\n\r\n    }\r\n\r\n    // get invoice details by cost\r\n    public getInvoiceDetailsByCost(costId: number): Observable<ApiPaginatedCollection<InvoiceMarkingSearchResult>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        return this.get<ApiPaginatedCollection<InvoiceMarkingSearchResult>>(\r\n\r\n            `${environment.executionServiceLink}/${encodeURIComponent(String(company))}`\r\n            + `/${this.invoiceControllerUrl}/invoiceMarkingCost/${encodeURIComponent(String(costId))}`);\r\n\r\n    }\r\n\r\n    private mapToInvoiceMarkingPotingStatusCommand(\r\n        transactionDocumentId: number, postingStatusId: number): InvoiceMarkingPostingStatusCommand {\r\n        const command = new InvoiceMarkingPostingStatusCommand();\r\n        command.transactionDocumentId = transactionDocumentId;\r\n        command.postingStatusId = postingStatusId;\r\n        return command;\r\n    }\r\n\r\n    private mapToInvoiceMarkingCommand(sectionId: number, invoices: InvoiceMarkings[], invoiceStatusId?: number, dataVersionId?: number,\r\n        splitAction: boolean = false): InvoiceMarkingListCommand {\r\n        const command = new InvoiceMarkingListCommand();\r\n        command.sectionId = sectionId;\r\n        command.invoices = invoices;\r\n        command.invoiceStatusId = invoiceStatusId;\r\n        command.splitAction = splitAction;\r\n        command.dataVersionId = dataVersionId;\r\n        return command;\r\n    }\r\n\r\n    // update invoice marking details\r\n    public updateInvoiceMarkingDetails(sectionId: number, invoiceMarking: InvoiceMarkings[],\r\n        invoiceStatusId: number, dataVersionId?: number,\r\n        splitAction: boolean = false) {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        const command = this.mapToInvoiceMarkingCommand(sectionId, invoiceMarking, invoiceStatusId, dataVersionId, splitAction);\r\n        return this.patch<InvoiceMarkings[]>(\r\n            `${environment.executionServiceLink}/${encodeURIComponent(String(company))}/${this.invoiceControllerUrl}`, command);\r\n    }\r\n\r\n    // update invoice marking percent lines.\r\n    public updateInvoiceMarkingLines(invoiceMarkingLines: InvoiceMarkingPercentLines[], dataVersionId?: number) {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        const command = this.mapToInvoiceMarkingPercentLinesCommand(invoiceMarkingLines, dataVersionId);\r\n        return this.post<InvoiceMarkings[]>(\r\n            `${environment.executionServiceLink}/${encodeURIComponent(String(company))}/${this.invoiceControllerUrl}`\r\n            + `/invoicemarkinglines`,\r\n            command);\r\n    }\r\n\r\n    public getCashByCashId(cashId: number): Observable<CashRecord> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        return this.get<CashRecord>(\r\n            `${environment.executionServiceLink}/${encodeURIComponent(String(company))}`\r\n            + `/${this.cashControllerUrl}/${encodeURIComponent(String(cashId))}`);\r\n    }\r\n\r\n    // update cash\r\n    public updateCash(cash: CashRecord): Observable<CashRecord> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        const finalCashRecord = { ...cash };\r\n        finalCashRecord.documentMatchings.forEach((document) => {\r\n            document.amountToBePaid = Math.abs(document.amountToBePaid) * Math.sign(document.amount);\r\n        });\r\n\r\n        return this.patch<CashRecord>(\r\n            `${environment.executionServiceLink}/${encodeURIComponent(String(company))}`\r\n            + `/${this.cashControllerUrl}/${encodeURIComponent(String(cash.cashId))}`,\r\n            finalCashRecord);\r\n    }\r\n\r\n    // get invoice marking for cost\r\n    public getInvoiceMarkingsForCost(costId: number, dataVersionId?: number):\r\n        Observable<ApiPaginatedCollection<InvoiceMarkingSearchResult>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        options.headers = this.defaultHttpHeaders;\r\n        let queryParameters = new HttpParams();\r\n        if (dataVersionId) {\r\n            queryParameters = queryParameters.set('dataVersionId', dataVersionId.toString());\r\n        }\r\n        options.params = queryParameters;\r\n\r\n        return this.get<ApiPaginatedCollection<InvoiceMarkingSearchResult>>(\r\n            `${environment.executionServiceLink}/${encodeURIComponent(String(company))}`\r\n            + `/${this.invoiceControllerUrl}/invoiceMarkingCost/${encodeURIComponent(String(costId))}`,\r\n            options);\r\n    }\r\n\r\n    public insertInvoiceMarkingCostDetails(invoiceMarking: InvoiceMarkings[]) {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        const command = this.mapToInvoiceMarkingCommand(null, invoiceMarking);\r\n        return this.post<InvoiceMarkings[]>(\r\n            `${environment.executionServiceLink}/${encodeURIComponent(String(company))}/${this.invoiceControllerUrl}`\r\n            + `/insertInvoiceMarkingCost`,\r\n            command);\r\n    }\r\n\r\n    // delete invoice marking\r\n\r\n    deleteInvoiceMarking(invoiceMarkingId: number) {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        return this.http.delete<any>(\r\n            `${environment.executionServiceLink}/${encodeURIComponent(String(company))}`\r\n            + `/${this.invoiceControllerUrl}/deleteInvoiceMarking/${encodeURIComponent(String(invoiceMarkingId))}`,\r\n            {\r\n                observe: 'response',\r\n            }).pipe(map((resp) => resp.ok));\r\n    }\r\n\r\n    // get washout contracts for invoicing\r\n    getWashoutContractsToInvoice(): Observable<ApiCollection<ContractsToWashoutInvoice>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n\r\n        return this.get<ApiCollection<ContractsToWashoutInvoice>>(\r\n            `${environment.executionServiceLink}/${encodeURIComponent(String(company))}`\r\n            + `/${this.invoiceControllerUrl}/getwashoutcontracts`,\r\n            options);\r\n    }\r\n\r\n    searchWashoutContractsToInvoice(request: ListAndSearchRequest): Observable<ApiPaginatedCollection<ContractsToWashoutInvoice>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        return this.post<ApiPaginatedCollection<ContractsToWashoutInvoice>>(\r\n            `${environment.executionServiceLink}/${encodeURIComponent(String(company))}/${this.invoiceControllerUrl}`\r\n            + `/washoutcontracts/search`,\r\n            request);\r\n    }\r\n\r\n    // get document reference id for search implementaion in cash\r\n    public getDocumentReferenceList(): Observable<ApiCollection<InvoiceForCashMatching>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        return this.get<ApiCollection<InvoiceForCashMatching>>(\r\n            `${environment.executionServiceLink}/${encodeURIComponent(String(company))}`\r\n            + `/${this.cashControllerUrl}/getdocumentreferencelist`);\r\n    }\r\n\r\n    public deleteCash(cashId: number) {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        return this.http.delete<any>(\r\n            `${environment.executionServiceLink}/${encodeURIComponent(String(company))}`\r\n            + `/${this.cashControllerUrl}/${encodeURIComponent(String(cashId))}`,\r\n            {\r\n                observe: 'response',\r\n            }).pipe(map((resp) => resp.ok));\r\n    }\r\n\r\n    public getInvoicesToReverse(): Observable<ApiPaginatedCollection<InvoiceReversalSearchResult>> {\r\n        {\r\n            const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n            return this.get<ApiPaginatedCollection<InvoiceReversalSearchResult>>(\r\n\r\n                `${environment.executionServiceLink}/${encodeURIComponent(String(company))}`\r\n                + `/${this.invoiceControllerUrl}/InvoicesForReversal`);\r\n        }\r\n    }\r\n\r\n    public searchInvoicesToReverse(request: ListAndSearchRequest): Observable<ApiPaginatedCollection<InvoiceReversalSearchResult>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        return this.post<ApiPaginatedCollection<InvoiceReversalSearchResult>>(\r\n            `${environment.executionServiceLink}/${encodeURIComponent(String(company))}/${this.invoiceControllerUrl}`\r\n            + `/invoicereversal/search`,\r\n            request);\r\n    }\r\n\r\n    public checkExternalInvoiceReferenceExists(externalInvoiceRef: string) {\r\n        {\r\n            const company: string = this.companyManager.getCurrentCompanyId();\r\n            const apiUrl = `${encodeURIComponent(String(company))}/${this.invoiceControllerUrl}`;\r\n\r\n            return this.http\r\n                .head(`${environment.executionServiceLink}/${apiUrl}/` + externalInvoiceRef, {\r\n                    headers: this.defaultHttpHeaders,\r\n                    observe: 'response',\r\n                })\r\n                .pipe(map((resp) => resp.status === 200));\r\n        }\r\n    }\r\n\r\n    private mapToManualJournalCommand(manualJournal: ManualJournalDocument): ManualJournalCommand {\r\n        const command = new ManualJournalCommand();\r\n        command.manualJournal = manualJournal;\r\n        return command;\r\n    }\r\n\r\n    // get document reference id for search implementaion in create match flag\r\n    // will handle both create and delete match flag\r\n    public getDocumentReferenceValues(matchType: number): Observable<ApiCollection<DocumentMatching>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        let queryParameters = new HttpParams();\r\n        queryParameters = queryParameters.set('matchType', matchType.toString());\r\n        options.params = queryParameters;\r\n        return this.get<ApiCollection<DocumentMatching>>(\r\n            `${environment.executionServiceLink}/${encodeURIComponent(String(company))}`\r\n            + `/${this.manualDocumentMatchingControllerUrl}/getdocumentreferencelist`, options);\r\n    }\r\n    // to get the document details corresponding to the document reference\r\n    getDocumentToMatchByDocumentReference(docReference: string): Observable<ApiCollection<DocumentMatching>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        let queryParameters = new HttpParams();\r\n        queryParameters = queryParameters.set('docReference', docReference.toString());\r\n        options.params = queryParameters;\r\n        return this.get<ApiCollection<DocumentMatching>>(\r\n            `${environment.executionServiceLink}/${encodeURIComponent(String(company))}`\r\n            + `/${this.manualDocumentMatchingControllerUrl}/getdocumentbydocumentreference`,\r\n            options);\r\n    }\r\n    // get all the documents for document matching\r\n    getDocumentsToMatch(counterpartyId: string, department: number, currency: string, isEdit: boolean\r\n        , matchFlagId: number): Observable<ApiCollection<DocumentMatching>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        let queryParameters = new HttpParams();\r\n\r\n        queryParameters = queryParameters.set('counterpartyId', counterpartyId.toString());\r\n        if (department !== undefined && department !== null) {\r\n            queryParameters = queryParameters.set('department', department as any);\r\n        }\r\n        queryParameters = queryParameters.set('currency', currency.toString());\r\n        queryParameters = queryParameters.set('isEdit', isEdit ? 'true' : 'false');\r\n        if (matchFlagId !== undefined && matchFlagId !== null) {\r\n            queryParameters = queryParameters.set('matchFlagId', matchFlagId as any);\r\n        }\r\n\r\n        options.params = queryParameters;\r\n\r\n        return this.get<ApiCollection<DocumentMatching>>(\r\n            `${environment.executionServiceLink}/${encodeURIComponent(String(company))}`\r\n            + `/${this.manualDocumentMatchingControllerUrl}/getdocumentsformatching`,\r\n            options);\r\n    }\r\n    public getMatchFlag(): Observable<ApiCollection<DocumentMatching>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        return this.get<ApiCollection<DocumentMatching>>(\r\n            `${environment.executionServiceLink}/${encodeURIComponent(String(company))}`\r\n            + `/${this.manualDocumentMatchingControllerUrl}/getmatchflaglist`);\r\n    }\r\n    // get the list of documents corresponding to match flag\r\n    getDocumentToUnmatchByMatchFlag(matchFlagCode: string): Observable<ApiCollection<DocumentMatching>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        let queryParameters = new HttpParams();\r\n        queryParameters = queryParameters.set('matchFlagCode', matchFlagCode.toString());\r\n        options.params = queryParameters;\r\n        return this.get<ApiCollection<DocumentMatching>>(\r\n            `${environment.executionServiceLink}/${encodeURIComponent(String(company))}`\r\n            + `/${this.manualDocumentMatchingControllerUrl}/getdocumentbymatchflag`,\r\n            options);\r\n    }\r\n    // get all the documents for document matching\r\n    getDocumentToUnmatch(counterpartyId: string, department: number, currency: string, documentReference: string, matchFlagCode: string):\r\n        Observable<ApiCollection<DocumentMatching>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        let queryParameters = new HttpParams();\r\n\r\n        queryParameters = queryParameters.set('counterpartyId', counterpartyId.toString());\r\n        if (department !== undefined && department !== null) {\r\n            queryParameters = queryParameters.set('department', department as any);\r\n        }\r\n        queryParameters = queryParameters.set('currency', currency.toString());\r\n        if (documentReference !== undefined && documentReference !== null) {\r\n            queryParameters = queryParameters.set('documentReference', documentReference as any);\r\n        }\r\n        if (matchFlagCode !== undefined && matchFlagCode !== null) {\r\n            queryParameters = queryParameters.set('matchFlagCode', matchFlagCode as any);\r\n        }\r\n        options.params = queryParameters;\r\n\r\n        return this.get<ApiCollection<DocumentMatching>>(\r\n            `${environment.executionServiceLink}/${encodeURIComponent(String(company))}`\r\n            + `/${this.manualDocumentMatchingControllerUrl}/getdocumentsforunmatch`,\r\n            options);\r\n    }\r\n    // get the document list for unmatch\r\n    getDocumentToUnMatchbyDocumentReference(docReference: string): Observable<ApiCollection<DocumentMatching>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        let queryParameters = new HttpParams();\r\n\r\n        queryParameters = queryParameters.set('docReference', docReference.toString());\r\n\r\n        options.params = queryParameters;\r\n\r\n        return this.get<ApiCollection<DocumentMatching>>(\r\n            `${environment.executionServiceLink}/${encodeURIComponent(String(company))}`\r\n            + `/${this.manualDocumentMatchingControllerUrl}/getdocumenttounmatchbydocumentreference`,\r\n            options);\r\n    }\r\n    // Create match flag\r\n    public createMatchFlag(documents: DocumentMatchingRecord): Observable<DocumentMatchingRecord> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        return this.post<DocumentMatchingRecord>(\r\n            `${environment.executionServiceLink}/${encodeURIComponent(String(company))}`\r\n            + `/${this.manualDocumentMatchingControllerUrl}/creatematch`,\r\n            documents);\r\n    }\r\n    // delete match flag\r\n    public deleteMatchFlag(documents: DocumentMatchingRecord): Observable<DocumentMatchingRecord> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        return this.post<DocumentMatchingRecord>(\r\n            `${environment.executionServiceLink}/${encodeURIComponent(String(company))}`\r\n            + `/${this.manualDocumentMatchingControllerUrl}/deletematch`,\r\n            documents);\r\n    }\r\n    public updateDocumentMatching(manualDocumentMatching: DocumentMatchingRecord): Observable<DocumentMatchingRecord> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        return this.patch<DocumentMatchingRecord>(\r\n            `${environment.executionServiceLink}/${encodeURIComponent(String(company))}`\r\n            + `/${this.manualDocumentMatchingControllerUrl}/${encodeURIComponent(String(manualDocumentMatching.matchFlagId))}`,\r\n            manualDocumentMatching);\r\n    }\r\n\r\n    public GetPossibleAllocationByCharterAsync(charterId: number): Observable<ApiPaginatedCollection<AllocatedTradeSearchResult>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        return this.http.get<ApiPaginatedCollection<AllocatedTradeSearchResult>>(\r\n            `${environment.executionServiceLink}/${encodeURIComponent(String(company))}`\r\n            + `/${this.allocationControllerUrl}/getPossibleAllocation/${encodeURIComponent(String(charterId))}`);\r\n    }\r\n    public GetPossibleDeallocationByCharterAsync(charterId: number): Observable<ApiPaginatedCollection<AllocatedTradeSearchResult>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        return this.http.get<ApiPaginatedCollection<AllocatedTradeSearchResult>>(\r\n            `${environment.executionServiceLink}/${encodeURIComponent(String(company))}`\r\n            + `/${this.allocationControllerUrl}/getPossiblDeallocation/${encodeURIComponent(String(charterId))}`);\r\n    }\r\n\r\n    public SaveMonthEndTemporaryAdjustment(monthEndTemporaryAdjustmentListCommand: MonthEndTemporaryAdjustmentListCommand,\r\n    ):\r\n        Observable<MonthEndTAResponse> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        const action = `/${encodeURIComponent(String(company))}/${this.monthEndTemporaryAdjustmentControllerUrl}/saveMonthEnd/`;\r\n        return this.post<MonthEndTAResponse>(environment.executionServiceLink + action, monthEndTemporaryAdjustmentListCommand);\r\n    }\r\n\r\n    public SaveFxDealMonthEndTemporaryAdjustment(fxDealMonthEndTemporaryAdjustmentListCommand: FXDealMonthEndTemporaryAdjustmentListCommand,\r\n    ):\r\n        Observable<FxDealMonthEndTAResponse> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        const action = `/${encodeURIComponent(String(company))}/${this.monthEndTemporaryAdjustmentControllerUrl}/saveFxDealMonthEnd/`;\r\n        return this.post<FxDealMonthEndTAResponse>(environment.executionServiceLink + action, fxDealMonthEndTemporaryAdjustmentListCommand);\r\n    }\r\n\r\n    public GenerateYearEndProcessPostingReport(year: YearEndProcessCommand,\r\n    ):\r\n        Observable<YearEndProcessReportResponse> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        const action = `/${encodeURIComponent(String(company))}/${this.yearEndProcessControllerUrl}/generateposting/`;\r\n        return this.post<YearEndProcessReportResponse>(environment.executionServiceLink + action, year);\r\n    }\r\n\r\n    public GetYearEndProcessLines(year: number): Observable<ApiPaginatedCollection<YearEndProcess>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        return this.get<ApiPaginatedCollection<YearEndProcess>>(\r\n            `${environment.executionServiceLink}/${encodeURIComponent(String(company))}`\r\n            + `/${this.yearEndProcessControllerUrl}/displayPnLClearance/${encodeURIComponent(String(year))}`);\r\n    }\r\n\r\n    // list and search for Cash List\r\n    searchCashPaymentList(request: ListAndSearchRequest): Observable<ApiPaginatedCollection<CashSummary>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        return this.post<ApiPaginatedCollection<CashSummary>>(\r\n            `${environment.executionServiceLink}/${encodeURIComponent(String(company))}/${this.cashControllerUrl}/search`,\r\n            request);\r\n    }\r\n    searchCashReceiptList(request: ListAndSearchRequest): Observable<ApiPaginatedCollection<CashSummary>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        return this.post<ApiPaginatedCollection<CashSummary>>(\r\n            `${environment.executionServiceLink}/${encodeURIComponent(String(company))}/${this.cashControllerUrl}/searchReceipt`,\r\n            request);\r\n    }\r\n    getAssignedSectionsForCharterList(charterIds: number[]): Observable<CharterBulkClosure[]> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        return this.http.get<CharterBulkClosure[]>(\r\n            `${environment.executionServiceLink}/${encodeURIComponent(String(company))}` +\r\n            `/${this.chartersControllerUrl}/${encodeURIComponent(String(charterIds))}/charterAssignedSections`);\r\n    }\r\n\r\n    private mapToInvoiceMarkingPercentLinesCommand(invoicesMarkingLines: InvoiceMarkingPercentLines[], dataVersionId: number): InvoiceMarkingPercentLinesCommand {\r\n        const command = new InvoiceMarkingPercentLinesCommand();\r\n        command.invoiceMarkingPercentLines = invoicesMarkingLines;\r\n        command.dataVersionId = dataVersionId;\r\n        return command;\r\n    }\r\n\r\n}\r\n","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { CompanyManagerService } from '../../../core/services/company-manager.service';\r\nimport { FlagInfo } from '../../dtos/flag-info';\r\nimport { HttpBaseService } from './http-base.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class FeatureFlagService extends HttpBaseService {\r\n    private maxTimeCache = 1000; // ms\r\n    private responseCached;\r\n    private lastRefresh: Date;\r\n\r\n    private company: string = null;\r\n\r\n    constructor(protected http: HttpClient, private companyManager: CompanyManagerService) {\r\n        super(http);\r\n    }\r\n\r\n    public getFlagInfo(flagName: string): Observable<FlagInfo> {\r\n        this.company = this.companyManager.getCurrentCompanyId();\r\n\r\n        this.lastRefresh = this.lastRefresh ? this.lastRefresh : new Date(Date.now());\r\n        const isExpired = this.lastRefresh.getMilliseconds() + this.maxTimeCache < Date.now();\r\n\r\n        if (isExpired) {\r\n            this.responseCached = this.http\r\n                .get<FlagInfo>(\r\n                    `${environment.configurationServiceLink}/${encodeURIComponent(String(this.company))}/featureflags/${flagName}`,\r\n                )\r\n                .pipe(\r\n                    (res) => res,\r\n                    catchError(this.handleError),\r\n                );\r\n            this.lastRefresh = new Date(Date.now());\r\n        }\r\n        return this.responseCached;\r\n    }\r\n\r\n    private handleError(error: HttpErrorResponse) {\r\n        if (error.error instanceof ErrorEvent) {\r\n            // A client-side or network error occurred. Handle it accordingly.\r\n            console.error('An error occurred:', error.error.message);\r\n        } else {\r\n            // The backend returned an unsuccessful response code.\r\n            // The response body may contain clues as to what went wrong,\r\n            console.error(`Backend returned code ${error.status}, ` + `body was: ${error.error}`);\r\n        }\r\n        // return an observable with a user-facing error message\r\n        return throwError('Something bad happened; please try again later.');\r\n    }\r\n}\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { ForeignExchangeRate } from '../../entities/foreign-exchange/foreign-exchange-rate.entity';\r\nimport { FxRateConvertResult } from '../../entities/foreign-exchange/fxrate-convert-result.entity';\r\nimport { HttpRequestOptions } from '../../entities/http-services/http-request-options.entity';\r\nimport { ManualImportWarningErrorMsg } from '../../entities/manualImport-warning-error-msg.entity';\r\nimport { ManualImportReport } from '../../entities/manualImportReport.entity';\r\nimport { ForeignExchangeRateCreationMode } from '../../enums/foreign-exchange-rate-creationmode.enum';\r\nimport { ForeignExchangeRateViewMode } from '../../enums/foreign-exchange-rate-viewmode.enum';\r\nimport { ApiCollection } from '../common/models';\r\nimport { ForeignExchangeRateDto } from '../foreign-exchange/dtos/foreign-exchange-rate';\r\nimport { HttpBaseService } from './http-base.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class ForeignExchangeService extends HttpBaseService {\r\n\r\n    private readonly fxrateControllerUrl = 'fxrates';\r\n\r\n    constructor(\r\n        protected http: HttpClient) {\r\n        super(http);\r\n    }\r\n\r\n    getForeignExchangeRates(fxRateDate: Date, viewMode: ForeignExchangeRateViewMode, inactiveCurrencies: boolean): Observable<ApiCollection<ForeignExchangeRate>> {\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        options.headers = this.defaultHttpHeaders;\r\n\r\n        let queryParameters = new HttpParams();\r\n        if (fxRateDate) {\r\n            queryParameters = queryParameters.set('fxRateDate', fxRateDate.toISOString());\r\n        }\r\n        if (viewMode) {\r\n            queryParameters = queryParameters.set('viewMode', viewMode);\r\n        }\r\n        queryParameters = queryParameters.set('inactiveCurrencies', inactiveCurrencies ? 'true' : 'false');\r\n        options.params = queryParameters;\r\n\r\n        const fxRates = this.get<ApiCollection<ForeignExchangeRate>>(`${environment.masterDataServiceLink}/fxrates`, options);\r\n        return fxRates;\r\n    }\r\n\r\n    importForeignExchangeRates(fxRates: ForeignExchangeRate[]) {\r\n        const fxRateDtos = fxRates.map((f) => {\r\n            const foreignExchangeRateDto: ForeignExchangeRateDto = {\r\n                currencyCode: f.currencyCode,\r\n                date: f.date,\r\n                rate: f.rate,\r\n                fwdMonth1: f.fwdMonth1,\r\n                fwdMonth2: f.fwdMonth2,\r\n                fwdMonth3: f.fwdMonth3,\r\n                fwdMonth6: f.fwdMonth6,\r\n                fwdYear1: f.fwdYear1,\r\n                fwdYear2: f.fwdYear2,\r\n                creationModeId: f.creationMode === ForeignExchangeRateCreationMode[ForeignExchangeRateCreationMode.Manual]\r\n                    ? ForeignExchangeRateCreationMode.Manual : 0,\r\n            };\r\n            return foreignExchangeRateDto;\r\n        });\r\n\r\n        return this.post(`${environment.masterDataServiceLink}/fxrates`, fxRateDtos);\r\n    }\r\n\r\n    convert(currencyCodeFrom: string, currencyCodeTo: string, value: string, fxRateDate?: Date): Observable<FxRateConvertResult> {\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        options.headers = this.defaultHttpHeaders;\r\n\r\n        let queryParameters = new HttpParams();\r\n        queryParameters = queryParameters.set('currencyCodeFrom', currencyCodeFrom);\r\n        queryParameters = queryParameters.set('currencyCodeTo', currencyCodeTo);\r\n        queryParameters = queryParameters.set('value', value);\r\n        if (fxRateDate) {\r\n            queryParameters = queryParameters.set('fxRateDate', fxRateDate.toISOString());\r\n        }\r\n\r\n        options.params = queryParameters;\r\n\r\n        const convertResult = this.get<FxRateConvertResult>(`${environment.masterDataServiceLink}/fxrates/convert`, options);\r\n        return convertResult;\r\n    }\r\n\r\n    getForeignExchangeRate(fxRateDate: Date, currencyCode: string): Observable<ForeignExchangeRate> {\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        options.headers = this.defaultHttpHeaders;\r\n\r\n        let queryParameters = new HttpParams();\r\n        queryParameters = queryParameters.set('fxRateDate', fxRateDate.toISOString());\r\n        queryParameters = queryParameters.set('currencyCode', currencyCode);\r\n\r\n        options.params = queryParameters;\r\n\r\n        const fxRates = this.get<ForeignExchangeRate>(`${environment.masterDataServiceLink}/fxrates/foreignexchangerate`, options);\r\n        return fxRates;\r\n    }\r\n\r\n    fileUpload(file: File): Observable<ManualImportReport> {\r\n        const formData = new FormData();\r\n        formData.append('file', file, file.name);\r\n\r\n        return this.post(`${environment.masterDataServiceLink}/${this.fxrateControllerUrl}` + '/fileupload', formData);\r\n    }\r\n\r\n    confirmImport(importId: string) {\r\n        return this.\r\n            post(`${environment.masterDataServiceLink}/${this.fxrateControllerUrl}` + '/fileupload/' + `${importId}` + '/confirm', null);\r\n    }\r\n\r\n    cancelImport(importId: string) {\r\n        return this.\r\n            post(`${environment.masterDataServiceLink}/${this.fxrateControllerUrl}` + '/fileupload/' + `${importId}` + '/cancel', null);\r\n    }\r\n}\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { CompanyManagerService } from '../../../core/services/company-manager.service';\r\nimport { ItemConfigurationProperties } from '../../entities/form-configuration.entity';\r\nimport { HttpRequestOptions } from '../../entities/http-services/http-request-options.entity';\r\nimport * as formConfiguration from '../../mocks/mock-form-configuration';\r\nimport { ApiCollection } from '../common/models';\r\nimport { HttpBaseService } from './http-base.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class FormConfigurationService extends HttpBaseService {\r\n    private readonly physicalControllerUrl = 'physicalcontracts';\r\n    private readonly ManualJournalControllerUrl = 'ManualJournal';\r\n\r\n    constructor(\r\n        protected httpClient: HttpClient,\r\n        private companyManager: CompanyManagerService,\r\n    ) {\r\n        super(httpClient);\r\n    }\r\n\r\n    public getFormConfiguration(\r\n        formId: string,\r\n    ): Observable<ApiCollection<ItemConfigurationProperties>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        options.headers = this.defaultHttpHeaders;\r\n\r\n        let queryParameters = new HttpParams();\r\n        if (formId !== undefined && formId !== null) {\r\n            queryParameters = queryParameters.set('formId', formId as any);\r\n        }\r\n        options.params = queryParameters;\r\n\r\n        // For time being its calling trading service to get the configuration,\r\n        // but it should call another API to make the calls generic for all the forms(Screens)\r\n        return this.getMandatoryFieldsConfiguration(formId);\r\n    }\r\n\r\n    public getFieldsConfiguration(\r\n        fieldIds: string[],\r\n    ): Observable<ApiCollection<ItemConfigurationProperties>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        options.headers = this.defaultHttpHeaders;\r\n\r\n        return this.generateStaticConfiguration();\r\n    }\r\n\r\n    public getMandatoryFieldsConfiguration(formId: string): Observable<ApiCollection<ItemConfigurationProperties>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        return this.get<ApiCollection<ItemConfigurationProperties>>(\r\n            `${environment.tradeServiceLink}/${encodeURIComponent(String(company))}`\r\n            + `/${this.physicalControllerUrl}/${encodeURIComponent(String(formId))}/getMandatoryFieldsConfiguration`);\r\n    }\r\n\r\n    public getMandatoryFieldsConfigurationForFinancial(): Observable<ApiCollection<ItemConfigurationProperties>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        return this.get<ApiCollection<ItemConfigurationProperties>>(\r\n            `${environment.executionServiceLink}/${encodeURIComponent(String(company))}`\r\n            + `/${this.ManualJournalControllerUrl}/getMandatoryFieldsConfiguration`);\r\n    }\r\n\r\n    generateStaticConfiguration(): Observable<\r\n        ApiCollection<ItemConfigurationProperties>\r\n    > {\r\n        let configuration = [];\r\n        configuration = configuration.concat(\r\n            formConfiguration.headerFields,\r\n            formConfiguration.commodityFields,\r\n            formConfiguration.counterpartiesFields,\r\n            formConfiguration.quantityFields,\r\n            formConfiguration.priceFields,\r\n            formConfiguration.termsFields,\r\n            formConfiguration.locationFields,\r\n            formConfiguration.shipmentPeriodFields,\r\n            formConfiguration.memorandumFields,\r\n        );\r\n\r\n        const config: ApiCollection<ItemConfigurationProperties> = {\r\n            value: configuration,\r\n        };\r\n\r\n        return of(config);\r\n    }\r\n}\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport * as moment from 'moment';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { CompanyManagerService } from '../../../core/services/company-manager.service';\r\nimport { FreezeSearchForCompany } from '../../entities/freeze-search-for-company.entity';\r\nimport { Freeze } from '../../entities/freeze.entity';\r\nimport { FreezeType } from '../../enums/freeze-type.enum';\r\nimport { ApiPaginatedCollection } from '../common/models';\r\nimport { CreateFreezeCommand } from '../freeze/dtos/create-freeze-command';\r\nimport { HttpRequestOptions } from './../../entities/http-services/http-request-options.entity';\r\nimport { HttpBaseService } from './http-base.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class FreezeService extends HttpBaseService {\r\n\r\n    private readonly freezeControllerUrl = 'Freezes';\r\n\r\n    constructor(\r\n        protected httpClient: HttpClient,\r\n        private companyManager: CompanyManagerService,\r\n    ) {\r\n        super(httpClient);\r\n    }\r\n\r\n    public getFreezeList(\r\n        dateFrom: Date = null,\r\n        dateTo: Date = null,\r\n        freezeType: FreezeType = null,\r\n    ): Observable<ApiPaginatedCollection<Freeze>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        let queryParameters = new HttpParams();\r\n        if (dateFrom) {\r\n            queryParameters = queryParameters.set('dateFrom', dateFrom.toISOString());\r\n        }\r\n        if (dateTo) {\r\n            queryParameters = queryParameters.set('dateTo', dateTo.toISOString());\r\n        }\r\n        if (freezeType) {\r\n            queryParameters = queryParameters.set('dataVersionTypeId', freezeType.toString());\r\n        }\r\n        options.params = queryParameters;\r\n\r\n        return this.get<ApiPaginatedCollection<Freeze>>(\r\n            `${environment.freezeServiceLink}/${encodeURIComponent(company)}/${this.freezeControllerUrl}`, options);\r\n    }\r\n\r\n    public getFreezeByDataVersionId(dataVersionId: number): Observable<Freeze> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        return this.get<Freeze>(\r\n            // tslint:disable-next-line:max-line-length\r\n            `${environment.freezeServiceLink}/${encodeURIComponent(company)}/${this.freezeControllerUrl}/${encodeURIComponent(String(dataVersionId))}`);\r\n    }\r\n\r\n    public checkFreezeExists(dataVersionType: FreezeType, freezeDate: Date): Observable<boolean> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        const apiUrl = `${encodeURIComponent(String(company))}/${this.freezeControllerUrl}`;\r\n        return this.http.head(\r\n            `${environment.freezeServiceLink}/${apiUrl}/${Number(dataVersionType)}` +\r\n            `/${freezeDate.toUTCString()}`,\r\n            {\r\n                headers: this.defaultHttpHeaders,\r\n                observe: 'response',\r\n            })\r\n            .pipe(map((resp) => resp.status === 200));\r\n    }\r\n\r\n    public createFreeze(dataVersionTypeId: FreezeType, freezeDate: Date): Observable<any> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        const request: CreateFreezeCommand = {\r\n            company,\r\n            dataVersionTypeId,\r\n            freezeDate,\r\n        };\r\n\r\n        return this.post<any>(\r\n            `${environment.freezeServiceLink}/${encodeURIComponent(company)}/${this.freezeControllerUrl}`, request);\r\n    }\r\n\r\n    public deleteFreeze(dataVersionId: number) {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        return this.delete(\r\n            // tslint:disable-next-line:max-line-length\r\n            `${environment.freezeServiceLink}/${encodeURIComponent(company)}/${this.freezeControllerUrl}/${encodeURIComponent(String(dataVersionId))}`);\r\n    }\r\n\r\n    public recalculateFreeze(dataVersionId: number, recalculateAccEntries: boolean = true) {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        let queryParameters = new HttpParams();\r\n        queryParameters = queryParameters.set('recalculateAccEntries', recalculateAccEntries.toString());\r\n        options.params = queryParameters;\r\n\r\n        return this.post(\r\n            `${environment.freezeServiceLink}/${encodeURIComponent(company)}/` +\r\n            `${this.freezeControllerUrl}/${encodeURIComponent(String(dataVersionId))}/recalculate`,\r\n            null, options);\r\n    }\r\n\r\n    public toFormattedDate(dataVersionTypeId: FreezeType, date: Date) {\r\n        const momentToFormat: moment.Moment = moment(date);\r\n\r\n        switch (dataVersionTypeId) {\r\n            case FreezeType.Monthly:\r\n                return momentToFormat.format('MMM YYYY').toUpperCase();\r\n            case FreezeType.Daily:\r\n                return momentToFormat.format('DD MMM YYYY').toUpperCase();\r\n            case FreezeType.Current:\r\n                return 'CURRENT';\r\n            default:\r\n                return '';\r\n        }\r\n    }\r\n\r\n    public checkFreezeForSelectedDatabase(companyList: string[], dataVersionTypeId: FreezeType, freezeDate: Date,\r\n        comparisonDataVersionTypeId: FreezeType, comparisonDbDate: Date): Observable<FreezeSearchForCompany> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        let queryParameters = new HttpParams();\r\n        if (companyList) {\r\n            queryParameters = queryParameters.set('companyList', companyList.toString());\r\n        }\r\n        if (dataVersionTypeId) {\r\n            queryParameters = queryParameters.set('dataVersionTypeId', (freezeDate['dataVersionId'] !== -1) ?\r\n                dataVersionTypeId.toString() : '');\r\n        }\r\n        if (freezeDate) {\r\n            queryParameters = queryParameters.set('freezeDate', (freezeDate['dataVersionId'] !== -1) ?\r\n                freezeDate['freezeDate'].toString() : '');\r\n        }\r\n        if (comparisonDataVersionTypeId) {\r\n            queryParameters = queryParameters.set('comparisonDataVersionTypeId', comparisonDataVersionTypeId.toString());\r\n        }\r\n        if (comparisonDbDate) {\r\n            queryParameters = queryParameters.set('comparisonDbDate', comparisonDbDate['freezeDate'].toString());\r\n        }\r\n        options.params = queryParameters;\r\n\r\n        return this.get<FreezeSearchForCompany>(\r\n            `${environment.freezeServiceLink}/${encodeURIComponent(company)}/` +\r\n            `${this.freezeControllerUrl}/checkFreezeForMultipleCompanies`,\r\n            options);\r\n    }\r\n\r\n    public getFreezeForSelectedCompany(companyList: string[], dataVersionTypeId: FreezeType, freezeDate: Date): Observable<Freeze> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        let queryParameters = new HttpParams();\r\n        if (companyList) {\r\n            queryParameters = queryParameters.set('companyList', companyList.toString());\r\n        }\r\n        if (dataVersionTypeId) {\r\n            queryParameters = queryParameters.set('dataVersionTypeId', (freezeDate['dataVersionId'] !== -1) ?\r\n                dataVersionTypeId.toString() : '');\r\n        }\r\n        if (freezeDate) {\r\n            queryParameters = queryParameters.set('freezeDate', (freezeDate['dataVersionId'] !== -1) ?\r\n                freezeDate['actualfreezeDate'].toString() : '');\r\n        }\r\n        options.params = queryParameters;\r\n        return this.get<Freeze>(\r\n            `${environment.freezeServiceLink}/${encodeURIComponent(company)}/` +\r\n            `${this.freezeControllerUrl}/getFreezesForSelectedCompanies`,\r\n            options);\r\n    }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { CompanyManagerService } from '../../../core/services/company-manager.service';\r\nimport { ListAndSearchUserFilterSetDto } from '../../dtos/list-and-search/user-filter-set-dto.dto';\r\nimport { UserGridViewDto } from '../../dtos/user-grid-view-dto.dto';\r\nimport { GridConfigurationProperties } from '../../entities/grid-configuration.entity';\r\nimport { HttpRequestOptions } from '../../entities/http-services/http-request-options.entity';\r\nimport { ApiCollection } from '../common/models';\r\nimport { ColumnException } from './../../entities/column-exception.entity';\r\nimport { UtilService } from './../util.service';\r\nimport { HttpBaseService } from './http-base.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class GridConfigurationService extends HttpBaseService {\r\n    private readonly FilterSetsControllerUrl = 'filtersets';\r\n    private readonly GridViewsControllerUrl = 'gridviews';\r\n    private readonly sectionsControllerUrl = 'sections';\r\n\r\n    // Please add the field names as exceptions to this collection.\r\n    // Exceptions can be overwritten on company level.\r\n    private columnExeptionsDummyData: { [gridCode: string]: ColumnException[] } = {\r\n        priceCodesMasterData: [\r\n            {\r\n                fieldName: 'IsDeactivated', // The field id will need to be changed to camelCase like it has been done for gridConfiguration\r\n            },\r\n        ],\r\n    };\r\n\r\n    private gridUrls: Map<string, string> = new Map<string, string>();\r\n\r\n    constructor(\r\n        protected httpClient: HttpClient,\r\n        private companyManager: CompanyManagerService,\r\n        protected utilService: UtilService,\r\n    ) {\r\n        super(httpClient);\r\n        this.initializeGridMap();\r\n    }\r\n\r\n    public getGridConfiguration(\r\n        gridId: string,\r\n    ): Observable<GridConfigurationProperties> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        return this.get<GridConfigurationProperties>(\r\n            `${environment.configurationServiceLink}/${encodeURIComponent(company)}/grids`\r\n            + '/' + encodeURIComponent(gridId));\r\n    }\r\n\r\n    // -- FilterSets\r\n    getUserFilterSets(gridCode: string): Observable<ApiCollection<ListAndSearchUserFilterSetDto>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        options.headers = this.defaultHttpHeaders;\r\n\r\n        const filterSets\r\n            = this.get<ApiCollection<ListAndSearchUserFilterSetDto>>(\r\n                `${environment.configurationServiceLink}/${encodeURIComponent(String(company))}`\r\n                + `/grids/${encodeURIComponent(String(gridCode))}/myfiltersets`,\r\n            );\r\n        return filterSets;\r\n    }\r\n\r\n    getUserFilterSetById(gridCode: string, filterSetId: number): Observable<ListAndSearchUserFilterSetDto> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        options.headers = this.defaultHttpHeaders;\r\n\r\n        const filters\r\n            = this.get<ListAndSearchUserFilterSetDto>(\r\n                `${environment.configurationServiceLink}/${encodeURIComponent(String(company))}`\r\n                + `/grids/${encodeURIComponent(String(gridCode))}/myfiltersets/${encodeURIComponent(String(filterSetId))}`,\r\n            );\r\n        return filters;\r\n    }\r\n\r\n    createUserFilterSet(gridCode: string, filterSet: ListAndSearchUserFilterSetDto): Observable<number> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        options.headers = this.defaultHttpHeaders;\r\n\r\n        const filters\r\n            = this.post<number>(\r\n                `${environment.configurationServiceLink}/${encodeURIComponent(String(company))}`\r\n                + `/grids/${encodeURIComponent(String(gridCode))}/myfiltersets`,\r\n                filterSet,\r\n            );\r\n        return filters;\r\n    }\r\n\r\n    updateUserFilterSet(gridCode: string, filterSet: ListAndSearchUserFilterSetDto): Observable<number> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        options.headers = this.defaultHttpHeaders;\r\n\r\n        const filters\r\n            = this.patch<number>(\r\n                `${environment.configurationServiceLink}/${encodeURIComponent(String(company))}`\r\n                + `/grids/${encodeURIComponent(String(gridCode))}/myfiltersets/${encodeURIComponent(String(filterSet.filterSetId))}`,\r\n                filterSet,\r\n            );\r\n        return filters;\r\n    }\r\n\r\n    deleteUserFilterSet(gridCode: string, filterSetId: number) {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        options.headers = this.defaultHttpHeaders;\r\n\r\n        const filters\r\n            = this.delete(\r\n                `${environment.configurationServiceLink}/${encodeURIComponent(String(company))}`\r\n                + `/grids/${encodeURIComponent(String(gridCode))}/myfiltersets/${encodeURIComponent(String(filterSetId))}`,\r\n            );\r\n        return filters;\r\n    }\r\n\r\n    setFavoriteUserFilterSet(gridCode: string, filterSetId: number) {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        options.headers = this.defaultHttpHeaders;\r\n\r\n        const filters\r\n            = this.post(\r\n                `${environment.configurationServiceLink}/${encodeURIComponent(String(company))}`\r\n                + `/grids/${encodeURIComponent(String(gridCode))}/favoritefiltersets/${encodeURIComponent(String(filterSetId))}`,\r\n                null,\r\n            );\r\n        return filters;\r\n    }\r\n\r\n    // -- GridViews\r\n    getUserGridViews(gridCode: string): Observable<ApiCollection<UserGridViewDto>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        options.headers = this.defaultHttpHeaders;\r\n\r\n        const gridViews\r\n            = this.get<ApiCollection<UserGridViewDto>>(\r\n                `${environment.configurationServiceLink}/${encodeURIComponent(String(company))}`\r\n                + `/grids/${encodeURIComponent(String(gridCode))}/mygridviews`,\r\n            );\r\n        return gridViews;\r\n    }\r\n\r\n    getUserGridViewsById(gridCode: string, filterSetId: number): Observable<UserGridViewDto> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        options.headers = this.defaultHttpHeaders;\r\n\r\n        const gridViews\r\n            = this.get<UserGridViewDto>(\r\n                `${environment.configurationServiceLink}/${encodeURIComponent(String(company))}`\r\n                + `/grids/${encodeURIComponent(String(gridCode))}/mygridviews/${encodeURIComponent(String(filterSetId))}`,\r\n            );\r\n        return gridViews;\r\n    }\r\n\r\n    createUserGridViews(gridCode: string, gridViews: UserGridViewDto): Observable<number> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        options.headers = this.defaultHttpHeaders;\r\n\r\n        return this.post<number>(\r\n            `${environment.configurationServiceLink}/${encodeURIComponent(String(company))}`\r\n            + `/grids/${encodeURIComponent(String(gridCode))}/mygridviews`,\r\n            gridViews,\r\n        );\r\n    }\r\n\r\n    updateUserGridViews(gridCode: string, gridViews: UserGridViewDto): Observable<number> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        options.headers = this.defaultHttpHeaders;\r\n\r\n        return this.patch<number>(\r\n            `${environment.configurationServiceLink}/${encodeURIComponent(String(company))}`\r\n            + `/grids/${encodeURIComponent(String(gridCode))}/mygridviews/${encodeURIComponent(String(gridViews.gridViewId))}`,\r\n            gridViews,\r\n        );\r\n    }\r\n\r\n    deleteUserGridViews(gridCode: string, gridViewsId: number) {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        options.headers = this.defaultHttpHeaders;\r\n\r\n        return this.delete(\r\n            `${environment.configurationServiceLink}/${encodeURIComponent(String(company))}`\r\n            + `/grids/${encodeURIComponent(String(gridCode))}/mygridviews/${encodeURIComponent(String(gridViewsId))}`,\r\n        );\r\n    }\r\n\r\n    setFavoriteUserGridViews(gridCode: string, gridView: UserGridViewDto) {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        options.headers = this.defaultHttpHeaders;\r\n\r\n        return this.post(\r\n            `${environment.configurationServiceLink}/${encodeURIComponent(String(company))}`\r\n            + `/grids/${encodeURIComponent(String(gridCode))}/favoritegridviews`,\r\n            gridView,\r\n        );\r\n    }\r\n\r\n    isGridViewNameExists(gridViewName: string, gridCode: string) {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        return this.http\r\n            .head(`${environment.configurationServiceLink}/${encodeURIComponent(String(company))}`\r\n                + `/grids/${encodeURIComponent(String(gridCode))}/mygridviews/`\r\n                + `${encodeURIComponent(String(gridViewName))}`,\r\n                  {\r\n                    headers: this.defaultHttpHeaders,\r\n                    observe: 'response',\r\n                })\r\n            .pipe(map((resp) => resp.status === 200));\r\n    }\r\n\r\n    getColumnExceptions(gridCode: string): Observable<ColumnException[]> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        options.headers = this.defaultHttpHeaders;\r\n\r\n        if (this.columnExeptionsDummyData[gridCode]) {\r\n            return of(this.columnExeptionsDummyData[gridCode]\r\n                .map((columnException: ColumnException) => {\r\n                    columnException.fieldName = this.utilService.convertToCamelCase(columnException.fieldName);\r\n                    return columnException;\r\n                }));\r\n        }\r\n        return of([]);\r\n        // const columnExceptions\r\n        //     = this.get<ApiCollection<ListAndSearchUserFilterSetDto>>(\r\n        //         `${environment.configurationServiceLink}/${encodeURIComponent(String(company))}`\r\n        //         + `/grids/${encodeURIComponent(String(gridCode))}/columnexceptions`,\r\n        //     );\r\n        // return columnExceptions;\r\n    }\r\n\r\n    getUrlByGridCode(gridCode: string): string {\r\n        return this.gridUrls.get(gridCode);\r\n    }\r\n\r\n    private initializeGridMap() {\r\n        const company = this.companyManager.getCurrentCompany();\r\n        this.gridUrls.set(\r\n            'tradeList',\r\n            `${environment.tradeServiceLink}/${encodeURIComponent(String(company))}/${this.sectionsControllerUrl}/search/export`);\r\n    }\r\n}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from '../../../../../node_modules/rxjs';\r\nimport { HttpRequestOptions } from '../../entities/http-services/http-request-options.entity';\r\n\r\nexport abstract class HttpBaseService {\r\n\r\n    defaultHttpHeaders: HttpHeaders = new HttpHeaders();\r\n    defaultHttpObserve: string;\r\n    defaultHttpResponseType: string;\r\n\r\n    defaultHttpOptions: HttpRequestOptions;\r\n    constructor(protected http: HttpClient) {\r\n        this.defaultHttpHeaders.set('Accept', 'application/json');\r\n        this.defaultHttpObserve = 'body';\r\n        this.defaultHttpResponseType = 'json';\r\n\r\n        this.defaultHttpOptions = new HttpRequestOptions();\r\n        this.defaultHttpOptions.headers = this.defaultHttpHeaders;\r\n        this.defaultHttpOptions.observe = this.defaultHttpObserve;\r\n        this.defaultHttpOptions.responseType = this.defaultHttpResponseType;\r\n    }\r\n\r\n    protected get<T>(endpointUrl: string, options: HttpRequestOptions = null): Observable<T> {\r\n        let httpOptions = this.defaultHttpOptions;\r\n        if (options) {\r\n            httpOptions = options;\r\n            if (!options.headers) {\r\n                httpOptions.headers = this.defaultHttpHeaders;\r\n            }\r\n            if (!options.observe) {\r\n                httpOptions.observe = this.defaultHttpObserve;\r\n            }\r\n            if (!options.responseType) {\r\n                httpOptions.responseType = this.defaultHttpResponseType;\r\n            }\r\n        }\r\n        return this.http.get<T>(endpointUrl, httpOptions);\r\n    }\r\n\r\n    protected post<T>(endpointUrl: string, postBody: any, options: HttpRequestOptions = null): Observable<T> {\r\n        let httpOptions = this.defaultHttpOptions;\r\n        if (options) {\r\n            httpOptions = options;\r\n            if (!options.params) {\r\n                httpOptions.headers = this.defaultHttpHeaders;\r\n            }\r\n        }\r\n        return this.http.post<T>(endpointUrl, postBody, httpOptions);\r\n    }\r\n\r\n    protected put<T>(endpointUrl: string, putBody: any, options: HttpRequestOptions = null): Observable<T> {\r\n        let httpOptions = this.defaultHttpOptions;\r\n        if (options) {\r\n            httpOptions = options;\r\n            if (!options.params) {\r\n                httpOptions.headers = this.defaultHttpHeaders;\r\n            }\r\n        }\r\n        return this.http.put<T>(endpointUrl, putBody, httpOptions);\r\n    }\r\n\r\n    protected head<T>(endpointUrl: string, options: HttpRequestOptions = null): Observable<T> {\r\n        let httpOptions = this.defaultHttpOptions;\r\n        if (options) {\r\n            httpOptions = options;\r\n            if (!options.params) {\r\n                httpOptions.headers = this.defaultHttpHeaders;\r\n            }\r\n        }\r\n        return this.http.put<T>(endpointUrl, httpOptions);\r\n    }\r\n\r\n    protected patch<T>(endpointUrl: string, patchBody: any, options: HttpRequestOptions = null): Observable<T> {\r\n        let httpOptions = this.defaultHttpOptions;\r\n        if (options) {\r\n            httpOptions = options;\r\n            if (!options.params) {\r\n                httpOptions.headers = this.defaultHttpHeaders;\r\n            }\r\n        }\r\n        return this.http.patch<T>(endpointUrl, patchBody, httpOptions);\r\n    }\r\n\r\n    protected delete<T>(endpointUrl: string, options: HttpRequestOptions = null): Observable<T> {\r\n        let httpOptions = this.defaultHttpOptions;\r\n        if (options) {\r\n            httpOptions = options;\r\n            if (!options.params) {\r\n                httpOptions.headers = this.defaultHttpHeaders;\r\n            }\r\n        }\r\n        return this.http.delete<T>(endpointUrl, httpOptions);\r\n    }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport * as moment from 'moment';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { CompanyManagerService } from '../../../core/services/company-manager.service';\r\nimport { IsLocked } from '../../entities/is-locked.entity';\r\nimport { LockFunctionalContext } from '../../entities/lock-functional-context.entity';\r\nimport { LockResourceInformation } from '../../entities/lock-resource-information.entity';\r\nimport { Lock } from '../../entities/lock.entity';\r\nimport { SectionReference } from '../../entities/section-reference.entity';\r\nimport { ApiPaginatedCollection } from '../common/models';\r\nimport { DeleteLocksCommand } from '../lock/dtos/delete-locks-command';\r\nimport { LockResourceCommand } from '../lock/dtos/lock-resource-command';\r\nimport { RefreshLockOwnershipCommand } from '../lock/dtos/refresh-lock-ownership-command';\r\nimport { UnlockResourceCommand } from '../lock/dtos/unlock-resource-command';\r\nimport { WebStorageService } from '../web-storage.service';\r\nimport { HttpBaseService } from './http-base.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class LockService extends HttpBaseService {\r\n\r\n    private readonly lockControllerUrl = 'Locks';\r\n    public cleanSessionLocksSubject = new Subject();\r\n\r\n    constructor(\r\n        protected httpClient: HttpClient,\r\n        private companyManager: CompanyManagerService,\r\n        private storageService: WebStorageService,\r\n    ) {\r\n        super(httpClient);\r\n        this.cleanSessionLocksSubject.subscribe(() => {\r\n            this.cleanSessionLocks();\r\n        });\r\n    }\r\n\r\n    private getBrowserTabId(): string {\r\n        const browserTabIdKey = 'browserTabIdKey';\r\n        if (!this.storageService.isInStorage(browserTabIdKey)) {\r\n            this.storageService.saveToStorage(browserTabIdKey, Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15));\r\n        }\r\n        return this.storageService.loadFromStorage(browserTabIdKey).toString();\r\n    }\r\n\r\n    public isLockedContract(sectionId: number): Observable<IsLocked> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        const applicationSessionId: string = this.getBrowserTabId();\r\n        return this.get<IsLocked>(`${environment.lockServiceLink}/${encodeURIComponent(company)}/${this.lockControllerUrl}/islocked/${sectionId}/applicationSessionId/${applicationSessionId}/resourceType/Contract`);\r\n    }\r\n\r\n    public async isLockedContractAsync(sectionId: number): Promise<IsLocked> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        const applicationSessionId: string = this.getBrowserTabId();\r\n        return this.get<IsLocked>(`${environment.lockServiceLink}/${encodeURIComponent(company)}/${this.lockControllerUrl}/islocked/${sectionId}/applicationSessionId/${applicationSessionId}/resourceType/Contract`).toPromise();\r\n    }\r\n\r\n    public isLockedInvoice(invoiceId: number): Observable<IsLocked> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        const applicationSessionId: string = this.getBrowserTabId();\r\n        return this.get<IsLocked>(`${environment.lockServiceLink}/${encodeURIComponent(company)}/${this.lockControllerUrl}/islocked/${invoiceId}/applicationSessionId/${applicationSessionId}/resourceType/Invoice`);\r\n    }\r\n\r\n    public isLockedCharter(sectionId: number): Observable<IsLocked> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        const applicationSessionId: string = this.getBrowserTabId();\r\n        return this.get<IsLocked>(`${environment.lockServiceLink}/${encodeURIComponent(company)}/${this.lockControllerUrl}/islocked/${sectionId}/applicationSessionId/${applicationSessionId}/resourceType/Charter`);\r\n    }\r\n\r\n    public isLockedFxDeal(fxDealId: number): Observable<IsLocked> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        const applicationSessionId: string = this.getBrowserTabId();\r\n        return this.get<IsLocked>(`${environment.lockServiceLink}/${encodeURIComponent(company)}/${this.lockControllerUrl}/islocked/${fxDealId}/applicationSessionId/${applicationSessionId}/resourceType/FxDeal`);\r\n    }\r\n\r\n    public isLockedUserAccount(userId: number): Observable<IsLocked> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        const applicationSessionId: string = this.getBrowserTabId();\r\n        return this.get<IsLocked>(`${environment.lockServiceLink}/${encodeURIComponent(company)}/${this.lockControllerUrl}/islocked/${userId}/applicationSessionId/${applicationSessionId}/resourceType/User Account`);\r\n    }\r\n\r\n    public isLockedUserProfile(profileId: number): Observable<IsLocked> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        const applicationSessionId: string = this.getBrowserTabId();\r\n        return this.get<IsLocked>(`${environment.lockServiceLink}/${encodeURIComponent(company)}/${this.lockControllerUrl}/islocked/${profileId}/applicationSessionId/${applicationSessionId}/resourceType/User Profile`);\r\n    }\r\n\r\n    public isLockedCostMatrix(costMatrixId: number): Observable<IsLocked> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        const applicationSessionId: string = this.getBrowserTabId();\r\n        return this.get<IsLocked>(`${environment.lockServiceLink}/${encodeURIComponent(company)}/${this.lockControllerUrl}/islocked/${costMatrixId}/applicationSessionId/${applicationSessionId}/resourceType/Cost Matrix`);\r\n    }\r\n\r\n    public isLockedCashDocument(cashId: number): Observable<IsLocked> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        const applicationSessionId: string = this.getBrowserTabId();\r\n        return this.get<IsLocked>(`${environment.lockServiceLink}/${encodeURIComponent(company)}/${this.lockControllerUrl}/islocked/${cashId}/applicationSessionId/${applicationSessionId}/resourceType/Cash Document`);\r\n    }\r\n\r\n    public isLockedAccountingDocument(accountingId: number): Observable<IsLocked> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        const applicationSessionId: string = this.getBrowserTabId();\r\n        return this.get<IsLocked>(`${environment.lockServiceLink}/${encodeURIComponent(company)}/${this.lockControllerUrl}/islocked/${accountingId}/applicationSessionId/${applicationSessionId}/resourceType/Accounting Document`);\r\n    }\r\n\r\n    public getLockList(): Observable<ApiPaginatedCollection<Lock>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        return this.get<ApiPaginatedCollection<Lock>>(\r\n            `${environment.lockServiceLink}/${encodeURIComponent(company)}/${this.lockControllerUrl}`);\r\n    }\r\n\r\n    public lockContract(sectionId: number, functionalContext: LockFunctionalContext) {\r\n        return this.lockResource(sectionId, functionalContext, 'Contract');\r\n    }\r\n\r\n    public lockInvoice(invoiceId: number, functionalContext: LockFunctionalContext) {\r\n        return this.lockResource(invoiceId, functionalContext, 'Invoice');\r\n    }\r\n\r\n    public lockCharter(charterId: number, functionalContext: LockFunctionalContext) {\r\n        return this.lockResource(charterId, functionalContext, 'Charter');\r\n    }\r\n\r\n    public lockFxDeal(fxDealId: number, functionalContext: LockFunctionalContext) {\r\n        return this.lockResource(fxDealId, functionalContext, 'FxDeal');\r\n    }\r\n\r\n    public lockAccountingDocument(charterId: number, functionalContext: LockFunctionalContext) {\r\n        return this.lockResource(charterId, functionalContext, 'Accounting Document');\r\n    }\r\n\r\n    public lockUserAccount(userId: number, functionalContext: LockFunctionalContext) {\r\n        return this.lockResource(userId, functionalContext, 'User Account');\r\n    }\r\n\r\n    public lockUserProfile(profileId: number, functionalContext: LockFunctionalContext) {\r\n        return this.lockResource(profileId, functionalContext, 'User Profile');\r\n    }\r\n\r\n    public lockCostMatrix(costMatrixId: number, functionalContext: LockFunctionalContext) {\r\n        return this.lockResource(costMatrixId, functionalContext, 'Cost Matrix');\r\n    }\r\n\r\n    public lockCashDocument(cashId: number, functionalContext: LockFunctionalContext) {\r\n        return this.lockResource(cashId, functionalContext, 'Cash Document');\r\n    }\r\n\r\n    private lockResource(resourceId: number, functionalContext: LockFunctionalContext, resourceType: string) {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        const request = new LockResourceCommand();\r\n        request.company = company;\r\n        request.functionalContext = functionalContext;\r\n        request.resourceId = resourceId;\r\n        request.resourceType = resourceType;\r\n        request.applicationSessionId = this.getBrowserTabId();\r\n\r\n        return this.post(`${environment.lockServiceLink}/${encodeURIComponent(company)}/${this.lockControllerUrl}`, request);\r\n    }\r\n\r\n    public unlockContract(sectionId: number, functionalContext: LockFunctionalContext) {\r\n        return this.unlockResource(sectionId, functionalContext, 'Contract');\r\n    }\r\n\r\n    public unlockCharter(charterId: number, functionalContext: LockFunctionalContext) {\r\n        return this.unlockResource(charterId, functionalContext, 'Charter');\r\n    }\r\n\r\n    public unlockUserAccount(userId: number, functionalContext: LockFunctionalContext) {\r\n        return this.unlockResource(userId, functionalContext, 'User Account');\r\n    }\r\n\r\n    public unlockUserProfile(profileId: number, functionalContext: LockFunctionalContext) {\r\n        return this.unlockResource(profileId, functionalContext, 'User Profile');\r\n    }\r\n\r\n    public unlockCostMatrix(costMatrixId: number, functionalContext: LockFunctionalContext) {\r\n        return this.unlockResource(costMatrixId, functionalContext, 'Cost Matrix');\r\n    }\r\n\r\n    public unlockCashDocument(cashId: number, functionalContext: LockFunctionalContext) {\r\n        return this.unlockResource(cashId, functionalContext, 'Cash Document');\r\n    }\r\n\r\n    public unlockInvoice(cashId: number, functionalContext: LockFunctionalContext) {\r\n        return this.unlockResource(cashId, functionalContext, 'Invoice');\r\n    }\r\n\r\n    public unlockAccountingDocument(accountingId: number, functionalContext: LockFunctionalContext) {\r\n        return this.unlockResource(accountingId, functionalContext, 'Accounting Document');\r\n    }\r\n\r\n    private unlockResource(resourceId: number, functionalContext: LockFunctionalContext, resourceType: string) {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        const request = new UnlockResourceCommand();\r\n        request.company = company;\r\n        request.functionalContext = functionalContext;\r\n        request.resourceId = resourceId;\r\n        request.applicationSessionId = this.getBrowserTabId();\r\n        request.resourceType = resourceType;\r\n\r\n        return this.post(`${environment.lockServiceLink}/${encodeURIComponent(company)}/${this.lockControllerUrl}/unlock`, request);\r\n    }\r\n\r\n    public deleteLocks(ids: number[]) {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        const request = new DeleteLocksCommand();\r\n        request.lockIds = ids;\r\n\r\n        return this.post(`${environment.lockServiceLink}/${encodeURIComponent(company)}/${this.lockControllerUrl}/delete`, request);\r\n    }\r\n\r\n    public refreshLockOwnership(resourcesInformation: LockResourceInformation[]): Observable<void> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        const request = new RefreshLockOwnershipCommand();\r\n        request.applicationSessionId = this.getBrowserTabId();\r\n        request.company = company.toString();\r\n        request.resourcesInformation = new Array<LockResourceInformation>();\r\n        resourcesInformation.forEach((resource) => {\r\n            const resourceInformation = new LockResourceInformation();\r\n            resourceInformation.resourceType = resource.resourceType;\r\n            resourceInformation.resourceId = resource.resourceId;\r\n            resourceInformation.resourceCode = resource.resourceCode;\r\n\r\n            request.resourcesInformation.push(resourceInformation);\r\n        });\r\n\r\n        return this.post(`${environment.lockServiceLink}/${encodeURIComponent(company)}/${this.lockControllerUrl}/refresh`, request);\r\n    }\r\n\r\n    public validateContractOperation(functionalContext: LockFunctionalContext, resourceId: number, allocatedReference: SectionReference): Observable<string> {\r\n        let allocatedSectionId: number = 0;\r\n        if (allocatedReference != null && allocatedReference.sectionId != null && allocatedReference.sectionId != undefined && allocatedReference.sectionId != 0) {\r\n            allocatedSectionId = allocatedReference.sectionId;\r\n        }\r\n        return this.isLockedContract(allocatedSectionId).pipe(\r\n            map((isLocked) => {\r\n                if (isLocked.isLocked) {\r\n                    return `The contract cannot be saved as the allocated contract ${allocatedReference.contractLabel} is locked.`;\r\n                }\r\n                return null;\r\n            }));\r\n    }\r\n\r\n    public cleanSessionLocks(): Observable<boolean> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        const applicationSessionId = this.getBrowserTabId();\r\n        return this.delete(`${environment.lockServiceLink}/${encodeURIComponent(company)}/${this.lockControllerUrl}/cleansession/${encodeURIComponent(applicationSessionId)}`)\r\n            .pipe(map(() => true));\r\n    }\r\n}\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { forkJoin as observableForkJoin, Observable, of, of as observableOf } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { CompanyManagerService } from '../../../core/services/company-manager.service';\r\nimport { AddressType } from '../../entities/address-type.entity';\r\nimport { BulkCounterparty } from '../../entities/bulkedit-counterparty.entity';\r\nimport { Commodity } from '../../entities/commodity.entity';\r\nimport { CompanyActivation } from '../../entities/company-activation.entity';\r\nimport { CompanyBankAccounts } from '../../entities/company-bankaccounts.entity';\r\nimport { ContractTerm } from '../../entities/contract-term.entity';\r\nimport { CostPriceCode } from '../../entities/cost-price-code.entity';\r\nimport { CostType } from '../../entities/cost-type.entity';\r\nimport { CounterpartyBankAccounts } from '../../entities/counterparty-bankaccounts.entity';\r\nimport { CounterpartyTradeStatus } from '../../entities/counterparty-trade-status.entity';\r\nimport { Counterparty } from '../../entities/counterparty.entity';\r\nimport { Department } from '../../entities/department.entity';\r\nimport { PhysicalDocumentType } from '../../entities/document-type.entity';\r\nimport { EnumEntity } from '../../entities/enum-entity.entity';\r\nimport { HttpRequestOptions } from '../../entities/http-services/http-request-options.entity';\r\nimport { PagingOptions } from '../../entities/http-services/paging-options';\r\nimport { InvoiceStatus } from '../../entities/invoice-status.entity';\r\nimport { MasterDataDeletionResult } from '../../entities/masterdata-deletion-result.entity';\r\nimport { MasterDataProps } from '../../entities/masterdata-props.entity';\r\nimport { MasterData } from '../../entities/masterdata.entity';\r\nimport { PaymentTerm } from '../../entities/payment-term.entity';\r\nimport { Port } from '../../entities/port.entity';\r\nimport { PositionMonthType } from '../../entities/position-month-type.entity';\r\nimport { PricingOptions } from '../../entities/pricing-options.entity';\r\nimport { ProfitCenter } from '../../entities/profit-center.entity';\r\nimport { RateType } from '../../entities/rate-type.entity';\r\nimport { ToleranceType } from '../../entities/tolerance-type.entity';\r\nimport { TraderMasterData } from '../../entities/trader-masterdata.entity';\r\nimport { MdmCategoryAccountTypeMapping } from '../../mdmCategory-account-mapping-entity';\r\nimport { ApiCollection, ApiPaginatedCollection } from '../common/models';\r\nimport { CommoditySearchTerm } from '../masterdata/dtos/commodity-search-term';\r\nimport { CompanyAssignment } from './../../entities/company-assignment.entity';\r\nimport { TriStateCheckboxStatus } from './../../enums/tri-state-checkbox-status.enum';\r\nimport { ActivateMasterdataCommand } from './../execution/dtos/activate-masterdata-command';\r\nimport { AssignMasterdataCommand } from './../execution/dtos/assign-masterdata-command';\r\nimport { HttpBaseService } from './http-base.service';\r\n\r\n@Injectable()\r\nexport class MasterdataService extends HttpBaseService {\r\n    company = 'defaultValue';\r\n    masterData: MasterData;\r\n    private readonly counterpartiesController = 'counterparties';\r\n    private readonly commoditiesController = 'commodities';\r\n    private readonly CounterPartyBankAccountController = 'counterpartyBankAccounts';\r\n    private readonly PaymentTermsController = 'paymentTerms';\r\n    private readonly PortsController = 'ports';\r\n    private readonly DepartmentsController = 'departments';\r\n    private readonly costTypesController = 'costTypes';\r\n    private readonly CompanyBankAccountController = 'companyBankAccounts';\r\n    private readonly ProfitCentersController = 'profitCenters';\r\n    private readonly ShippingStatusController = 'shippingTypes';\r\n    private readonly ContractTermsController = 'contractTerms';\r\n    private readonly ContractTypesController = 'contractTypes';\r\n    private readonly CounterpartyController = 'counterparty';\r\n\r\n    traders: TraderMasterData[] = [\r\n        { traderCode: 'ATRCTRL1-TST', traderDescription: 'ATRCTRL1-TST - Controller User 1' },\r\n        { traderCode: 'ATRCTRL2-TST', traderDescription: 'ATRCTRL2-TST - Controller User 2' },\r\n        { traderCode: 'ATRCTRL3-TST', traderDescription: 'ATRCTRL3-TST - Controller User 3' },\r\n        { traderCode: 'ATREXEC1-TST', traderDescription: 'ATREXEC1-TST - Execution User 1' },\r\n        { traderCode: 'ATREXEC2-TST', traderDescription: 'ATREXEC2-TST - Execution User 2' },\r\n        { traderCode: 'ATREXEC3-TST', traderDescription: 'ATREXEC3-TST - Execution User 3' },\r\n        { traderCode: 'ATRPREAC1-TST', traderDescription: 'ATRPREAC1-TST - Pre-Accounting User 1' },\r\n        { traderCode: 'ATRPREAC2-TST', traderDescription: 'ATRPREAC2-TST - Pre-Accounting User 2' },\r\n        { traderCode: 'ATRPREAC3-TST', traderDescription: 'ATRPREAC3-TST - Pre-Accounting User 3' },\r\n        { traderCode: 'ATRTRADE1-TST', traderDescription: 'ATRTRADE1-TST - Trade User 1' },\r\n        { traderCode: 'ATRTRADE2-TST', traderDescription: 'ATRTRADE2-TST - Trade User 2' },\r\n        { traderCode: 'ATRTRADE3-TST', traderDescription: 'ATRTRADE3-TST - Trade User 3' },\r\n    ];\r\n\r\n    PositionMonthTypes: PositionMonthType[] = [\r\n        { value: 'START+3', positionMonthTypeCode: { type: 0, month: 3 }, positionMonthTypeDescription: 'Start + 3' },\r\n        { value: 'START+2', positionMonthTypeCode: { type: 0, month: 2 }, positionMonthTypeDescription: 'Start + 2' },\r\n        { value: 'START+1', positionMonthTypeCode: { type: 0, month: 1 }, positionMonthTypeDescription: 'Start + 1' },\r\n        { value: 'START', positionMonthTypeCode: { type: 0, month: 0 }, positionMonthTypeDescription: 'Start' },\r\n        { value: 'START-1', positionMonthTypeCode: { type: 0, month: -1 }, positionMonthTypeDescription: 'Start - 1' },\r\n        { value: 'START-2', positionMonthTypeCode: { type: 0, month: -2 }, positionMonthTypeDescription: 'Start - 2' },\r\n        { value: 'START-3', positionMonthTypeCode: { type: 0, month: -3 }, positionMonthTypeDescription: 'Start - 3' },\r\n        { value: 'END+1', positionMonthTypeCode: { type: 1, month: 1 }, positionMonthTypeDescription: 'End + 1' },\r\n        { value: 'END+2', positionMonthTypeCode: { type: 1, month: 2 }, positionMonthTypeDescription: 'End + 2' },\r\n        { value: 'END+3', positionMonthTypeCode: { type: 1, month: 3 }, positionMonthTypeDescription: 'End + 3' },\r\n        { value: 'END', positionMonthTypeCode: { type: 1, month: 0 }, positionMonthTypeDescription: 'End' },\r\n        { value: 'END-1', positionMonthTypeCode: { type: 1, month: -1 }, positionMonthTypeDescription: 'End - 1' },\r\n        { value: 'END-2', positionMonthTypeCode: { type: 1, month: -2 }, positionMonthTypeDescription: 'End - 2' },\r\n        { value: 'END-3', positionMonthTypeCode: { type: 1, month: -3 }, positionMonthTypeDescription: 'End - 3' },\r\n    ];\r\n\r\n    toleranceTypes: ToleranceType[] = [\r\n        { toleranceTypeCode: 1, toleranceTypeDescription: 'More/Less' },\r\n        { toleranceTypeCode: 0, toleranceTypeDescription: 'No Tolerance' },\r\n    ];\r\n\r\n    rateTypes: RateType[] = [{ code: '0', description: 'Lump Sum' }, { code: '1', description: 'Rate' }];\r\n\r\n    pricingOptions: PricingOptions[] = [\r\n        { code: '1', description: 'Outright Average' },\r\n        { code: '2', description: 'Outright Actual Price Per Split' },\r\n        { code: '3', description: 'Group by commodity & Price' },\r\n    ];\r\n\r\n    invoiceStatus: InvoiceStatus[] = [\r\n        { code: '1', description: 'Uninvoiced' },\r\n        { code: '2', description: 'Final Invoice Required' },\r\n        { code: '3', description: 'Finalized' },\r\n    ];\r\n\r\n    costPriceCodes: CostPriceCode[] = [{ code: '0', description: 'N/A' }, { code: '1', description: 'PMT' }];\r\n\r\n    documentTypes: PhysicalDocumentType[] = [\r\n        { physicalDocumentTypeId: 1, physicalDocumentTypeLabel: 'Purchase Invoice' },\r\n        { physicalDocumentTypeId: 2, physicalDocumentTypeLabel: 'Sales Invoice' },\r\n        { physicalDocumentTypeId: 3, physicalDocumentTypeLabel: 'Credit Note' },\r\n        { physicalDocumentTypeId: 4, physicalDocumentTypeLabel: 'Debit Note' },\r\n        { physicalDocumentTypeId: 5, physicalDocumentTypeLabel: 'Cash Pay' },\r\n        { physicalDocumentTypeId: 6, physicalDocumentTypeLabel: 'Cash Receipt' },\r\n        { physicalDocumentTypeId: 7, physicalDocumentTypeLabel: 'Temporary Adjustment' },\r\n    ];\r\n\r\n    booleanValues: EnumEntity[] = [{ enumEntityId: 0, enumEntityValue: 'False' }, { enumEntityId: 1, enumEntityValue: 'True' }];\r\n\r\n    masterDataWithoutCompany: string[] = [MasterDataProps.CommodityTypes];\r\n\r\n    constructor(protected http: HttpClient, private companyManager: CompanyManagerService) {\r\n        super(http);\r\n        this.initializeMasterData();\r\n    }\r\n\r\n    getMasterData(list: string[], company: string = null, withoutCompany = false): Observable<MasterData> {\r\n        const observableList: Array<Observable<ApiCollection<any>>> = [];\r\n        const filteredList: string[] = [];\r\n        let currentCompany: string = company;\r\n        if (!company) {\r\n            currentCompany = this.companyManager.getCurrentCompanyId();\r\n        }\r\n        if (currentCompany) {\r\n            if (currentCompany !== this.company) {\r\n                this.company = currentCompany;\r\n                this.initializeMasterData();\r\n            }\r\n\r\n            if (list) {\r\n                for (let i = 0; i < list.length; i++) {\r\n                    if (this.masterData[list[i]]) {\r\n                        if (this.masterData[list[i]].length === 0) {\r\n                            filteredList.push(list[i]);\r\n                            observableList.push(\r\n                                withoutCompany\r\n                                    ? this.get<ApiCollection<any>>(\r\n                                        `${environment.masterDataServiceLink}` + '/' + encodeURIComponent(list[i]),\r\n                                    )\r\n                                    : this.get<ApiCollection<any>>(\r\n                                        `${environment.masterDataServiceLink}/${encodeURIComponent(String(this.company))}` +\r\n                                        '/' +\r\n                                        encodeURIComponent(list[i]),\r\n                                    ),\r\n                            );\r\n                        }\r\n                    } else {\r\n                        console.log('The master data ' + list[i] + ' was not found');\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (observableList.length > 0) {\r\n            return observableForkJoin(observableList).pipe(\r\n                map((result) => {\r\n                    for (let i = 0; i < filteredList.length; i++) {\r\n                        this.masterData[filteredList[i]] = result[i].value;\r\n                    }\r\n                    return this.masterData;\r\n                }),\r\n            );\r\n        } else {\r\n            return observableOf(this.masterData);\r\n        }\r\n    }\r\n\r\n    getFullMasterData(masterDataName: string,\r\n        company: string = null,\r\n        globalView: boolean,\r\n        code?: string,\r\n        description?: string): Observable<MasterData> {\r\n        if (!company) {\r\n            company = this.companyManager.getCurrentCompanyId();\r\n        }\r\n        if (masterDataName) {\r\n            if (!this.masterData[masterDataName]) {\r\n                console.log('The master data ' + masterDataName + ' was not found');\r\n            } else {\r\n                const options: HttpRequestOptions = new HttpRequestOptions();\r\n                let path = `${environment.masterDataServiceLink}/`;\r\n\r\n                if (!this.masterDataWithoutCompany.includes(masterDataName)) {\r\n                    path += `${encodeURIComponent(String(this.company))}/`;\r\n                }\r\n\r\n                let queryParameters = new HttpParams();\r\n                queryParameters = queryParameters.set('includeDeactivated', 'true');\r\n\r\n                if (globalView) {\r\n                    queryParameters = queryParameters.set('viewMode', 'Global');\r\n                }\r\n\r\n                if (code) {\r\n                    queryParameters = queryParameters.set('code', code);\r\n                }\r\n                if (description) {\r\n                    queryParameters = queryParameters.set('description', description);\r\n                }\r\n\r\n                options.params = queryParameters;\r\n\r\n                const query = this.get<ApiCollection<any>>(path + encodeURIComponent(masterDataName), options);\r\n                return query.pipe(\r\n                    map((result) => {\r\n                        const masterData = new MasterData();\r\n                        masterData[masterDataName] = result.value;\r\n                        return masterData;\r\n                    }),\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    updateMasterData(masterData: MasterData, masterDataName: string, globalView: boolean, company: string = null) {\r\n        if (!company) {\r\n            company = this.companyManager.getCurrentCompanyId();\r\n        }\r\n        if (masterDataName) {\r\n            if (!masterData[masterDataName]) {\r\n                console.error('The master data ' + masterDataName + ' was not found');\r\n            } else {\r\n                const path = this.getAPIPath(masterDataName, company);\r\n                const request: any = {\r\n                    masterDataList: masterData[masterDataName],\r\n                };\r\n\r\n                let uri = path + encodeURIComponent(masterDataName);\r\n\r\n                if (globalView) {\r\n                    uri += '/global';\r\n                }\r\n\r\n                return this.patch(uri, request);\r\n            }\r\n        }\r\n    }\r\n\r\n    createMasterData(masterData: MasterData, masterDataName: string, company: string = null) {\r\n        if (!company) {\r\n            company = this.companyManager.getCurrentCompanyId();\r\n        }\r\n        if (masterDataName) {\r\n            if (!masterData[masterDataName]) {\r\n                console.log('The master data ' + masterDataName + ' was not found');\r\n            } else {\r\n                const path = this.getAPIPath(masterDataName, company);\r\n                const request: any = {\r\n                    masterDataList: masterData[masterDataName],\r\n                };\r\n\r\n                const uri = `${path}${encodeURIComponent(masterDataName)}/global`;\r\n                return this.post(uri, request);\r\n            }\r\n        }\r\n    }\r\n\r\n    deleteMasterData(masterDataIds: number[], masterDataName: string, company: string = null):\r\n        Observable<ApiCollection<MasterDataDeletionResult>> {\r\n        if (!company) {\r\n            company = this.companyManager.getCurrentCompanyId();\r\n        }\r\n        if (masterDataName) {\r\n            if (!this.masterData[masterDataName]) {\r\n                console.log('The master data ' + masterDataName + ' was not found');\r\n            } else {\r\n                const path = this.getAPIPath(masterDataName, company);\r\n                const body: any = {\r\n                    masterDataList: masterDataIds,\r\n                };\r\n\r\n                return this.post(path + encodeURIComponent(masterDataName) + '/delete', body);\r\n            }\r\n        }\r\n        return of(null);\r\n    }\r\n\r\n    getAPIPath(masterDataName: string, company: string = null) {\r\n        let path = `${environment.masterDataServiceLink}/`;\r\n\r\n        if (!this.masterDataWithoutCompany.includes(masterDataName)) {\r\n            path += `${encodeURIComponent(String(company))}/`;\r\n        }\r\n\r\n        return path;\r\n    }\r\n\r\n    concatMasterdataWitoutCompany(masterDataToConcat: MasterData) {\r\n        this.masterData.fxRates = masterDataToConcat.fxRates;\r\n    }\r\n\r\n    initializeMasterData() {\r\n        this.masterData = new MasterData();\r\n        this.masterData.traders = this.traders;\r\n        this.masterData.positionMonthTypes = this.PositionMonthTypes;\r\n        this.masterData.toleranceTypes = this.toleranceTypes;\r\n        this.masterData.rateTypes = this.rateTypes;\r\n        this.masterData.costPriceCodes = this.costPriceCodes;\r\n        this.masterData.documentTypes = this.documentTypes;\r\n        this.masterData.pricingOptions = this.pricingOptions;\r\n        this.masterData.invoiceStatus = this.invoiceStatus;\r\n        this.masterData.booleanValues = this.booleanValues;\r\n    }\r\n\r\n    getMasterDataAssignments(masterDataName: string, masterDataIds: number[], company: string = null): Observable<CompanyAssignment[]> {\r\n        if (!company) {\r\n            company = this.companyManager.getCurrentCompanyId();\r\n        }\r\n        if (masterDataName) {\r\n            const path = this.getAPIPath(masterDataName, company);\r\n            const request: any = {\r\n                masterDataList: masterDataIds,\r\n            };\r\n\r\n            return this.post(path + encodeURIComponent(masterDataName) + '/assignments', request).pipe(\r\n                map((result: any) => result.value as CompanyAssignment[]),\r\n            );\r\n        }\r\n    }\r\n\r\n    getMasterDataActivated(masterDataName: string, masterDataIds: number[], company: string = null): Observable<CompanyActivation[]> {\r\n        if (!company) {\r\n            company = this.companyManager.getCurrentCompanyId();\r\n        }\r\n        if (masterDataName) {\r\n            const path = this.getAPIPath(masterDataName, company);\r\n            const request: any = {\r\n                masterDataList: masterDataIds,\r\n            };\r\n\r\n            return this.post(path + encodeURIComponent(masterDataName) + '/activations', request).pipe(\r\n                map((result: any) => result.value as CompanyActivation[]),\r\n            );\r\n        }\r\n    }\r\n\r\n    assignMasterData(masterDataName: string, companyAssignments: CompanyAssignment[], masterdataIds: number[], company: string = null) {\r\n        if (!company) {\r\n            company = this.companyManager.getCurrentCompanyId();\r\n        }\r\n        if (masterDataName) {\r\n            const path = this.getAPIPath(masterDataName, company);\r\n            const request: any = this.mapToAssignMasterdataCommand(companyAssignments, masterdataIds);\r\n\r\n            return this.post(path + encodeURIComponent(masterDataName) + '/assign', request);\r\n        }\r\n    }\r\n\r\n    activateMasterData(masterDataName: string, companyActivations: CompanyActivation[], masterdataIds: number[], company: string = null) {\r\n        if (!company) {\r\n            company = this.companyManager.getCurrentCompanyId();\r\n        }\r\n        if (masterDataName) {\r\n            const path = this.getAPIPath(masterDataName, company);\r\n            const request: any = this.mapToActivateMasterdataCommand(companyActivations, masterdataIds);\r\n\r\n            return this.post(path + encodeURIComponent(masterDataName) + '/activate', request);\r\n        }\r\n    }\r\n\r\n    mapToAssignMasterdataCommand(companyAssignments: CompanyAssignment[], masterdataIds: number[]): AssignMasterdataCommand {\r\n        const command: AssignMasterdataCommand = {\r\n            masterdataList: masterdataIds,\r\n            assignedCompanies: companyAssignments.filter((assignment) => assignment.assignmentState === TriStateCheckboxStatus.All)\r\n                .map((assignment) => assignment.companyId),\r\n            deassignedCompanies: companyAssignments.filter((assignment) => assignment.assignmentState === TriStateCheckboxStatus.None)\r\n                .map((assignment) => assignment.companyId),\r\n        };\r\n        return command;\r\n    }\r\n\r\n    mapToActivateMasterdataCommand(companyActivations: CompanyActivation[], masterdataIds: number[]): ActivateMasterdataCommand {\r\n        const command: ActivateMasterdataCommand = {\r\n            masterdataList: masterdataIds,\r\n            activatedCompanies: companyActivations.filter((activation) => activation.activationState === TriStateCheckboxStatus.None)\r\n                .map((activation) => activation.companyId),\r\n            deactivatedCompanies: companyActivations.filter((activation) => activation.activationState === TriStateCheckboxStatus.All)\r\n                .map((activation) => activation.companyId),\r\n        };\r\n        return command;\r\n    }\r\n\r\n    getCounterparties(counterpartyCode: string, pagingOptions: PagingOptions): Observable<ApiPaginatedCollection<Counterparty>> {\r\n        const company = this.companyManager.getCurrentCompanyId();\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        options.headers = this.defaultHttpHeaders;\r\n        let queryParameters = new HttpParams();\r\n\r\n        if (counterpartyCode) {\r\n            queryParameters = queryParameters.set('counterpartyCode', counterpartyCode);\r\n        }\r\n        if (pagingOptions.offset) {\r\n            queryParameters = queryParameters.set('offset', String(pagingOptions.offset));\r\n        }\r\n        if (pagingOptions.limit) {\r\n            queryParameters = queryParameters.set('limit', String(pagingOptions.limit));\r\n        }\r\n\r\n        options.params = queryParameters;\r\n        return this.get<ApiPaginatedCollection<Counterparty>>(\r\n            `${environment.masterDataServiceLink}/${encodeURIComponent(String(company))}/` + `${this.counterpartiesController}`,\r\n            options,\r\n        );\r\n    }\r\n\r\n    getCounterpartyById(counterpartyId): Observable<ApiPaginatedCollection<Counterparty>> {\r\n        const company = this.companyManager.getCurrentCompanyId();\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        options.headers = this.defaultHttpHeaders;\r\n\r\n        return this.get<ApiPaginatedCollection<Counterparty>>(\r\n            `${environment.masterDataServiceLink}/${encodeURIComponent(String(company))}/` +\r\n            `${this.counterpartiesController}/${encodeURIComponent(String(counterpartyId))}`,\r\n            options,\r\n        );\r\n    }\r\n\r\n    getMdmCategoryAccountTypeMapping(): Observable<ApiPaginatedCollection<MdmCategoryAccountTypeMapping>> {\r\n        const company = this.companyManager.getCurrentCompanyId();\r\n\r\n        return this.get<ApiPaginatedCollection<MdmCategoryAccountTypeMapping>>(\r\n            `${environment.masterDataServiceLink}/${encodeURIComponent(String(company))}/` + `${this.counterpartiesController}/mapping`,\r\n        );\r\n    }\r\n\r\n    getAddressType(): Observable<ApiPaginatedCollection<AddressType>> {\r\n        const company = this.companyManager.getCurrentCompanyId();\r\n\r\n        return this.get<ApiPaginatedCollection<AddressType>>(\r\n            `${environment.masterDataServiceLink}/${encodeURIComponent(String(company))}/` + `${this.counterpartiesController}/addressType`,\r\n        );\r\n    }\r\n\r\n    getCounterpartyTradeStatus(): Observable<ApiPaginatedCollection<CounterpartyTradeStatus>> {\r\n        const company = this.companyManager.getCurrentCompanyId();\r\n\r\n        return this.get<ApiPaginatedCollection<CounterpartyTradeStatus>>(\r\n            `${environment.masterDataServiceLink}/${encodeURIComponent(String(company))}/` +\r\n            `${this.counterpartiesController}/counterpartyTradeStatus`,\r\n        );\r\n    }\r\n\r\n    bulkUpdateCounterparty(bulkCounterparty: BulkCounterparty) {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        return this.post(\r\n            `${environment.masterDataServiceLink}/${encodeURIComponent(String(company))}` +\r\n            `/${this.counterpartiesController}/bulkupdatecounterparties`,\r\n            bulkCounterparty,\r\n        );\r\n    }\r\n\r\n    addOrUpdateCounterparty(counterparty: Counterparty) {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        return this.post(\r\n            `${environment.masterDataServiceLink}/${encodeURIComponent(String(company))}` + `/${this.counterpartiesController}`,\r\n            counterparty,\r\n        );\r\n    }\r\n\r\n    getPaymentTerms(paymentTermsCode: string, pagingOptions: PagingOptions): Observable<ApiPaginatedCollection<PaymentTerm>> {\r\n        const company = this.companyManager.getCurrentCompanyId();\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        options.headers = this.defaultHttpHeaders;\r\n        let queryParameters = new HttpParams();\r\n\r\n        if (paymentTermsCode) {\r\n            queryParameters = queryParameters.set('paymentTermCode', paymentTermsCode);\r\n        }\r\n        if (pagingOptions.offset) {\r\n            queryParameters = queryParameters.set('offset', String(pagingOptions.offset));\r\n        }\r\n        if (pagingOptions.limit) {\r\n            queryParameters = queryParameters.set('limit', String(pagingOptions.limit));\r\n        }\r\n\r\n        options.params = queryParameters;\r\n        return this.get<ApiPaginatedCollection<PaymentTerm>>(\r\n            `${environment.masterDataServiceLink}/${encodeURIComponent(String(company))}/` +\r\n            `${this.PaymentTermsController}`,\r\n            options);\r\n    }\r\n\r\n    getPorts(Ports: string, pagingOptions: PagingOptions): Observable<ApiPaginatedCollection<Port>> {\r\n        const company = this.companyManager.getCurrentCompanyId();\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        options.headers = this.defaultHttpHeaders;\r\n        let queryParameters = new HttpParams();\r\n\r\n        if (Ports) {\r\n            queryParameters = queryParameters.set('portCode', Ports);\r\n        }\r\n        if (pagingOptions.offset) {\r\n            queryParameters = queryParameters.set('offset', String(pagingOptions.offset));\r\n        }\r\n        if (pagingOptions.limit) {\r\n            queryParameters = queryParameters.set('limit', String(pagingOptions.limit));\r\n        }\r\n\r\n        options.params = queryParameters;\r\n        return this.get<ApiPaginatedCollection<Port>>(\r\n            `${environment.masterDataServiceLink}/${encodeURIComponent(String(company))}/` +\r\n            `${this.PortsController}`,\r\n            options);\r\n\r\n    }\r\n\r\n    getDepartments(departmentCode: string, pagingOptions: PagingOptions): Observable<ApiPaginatedCollection<Department>> {\r\n        const company = this.companyManager.getCurrentCompanyId();\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        options.headers = this.defaultHttpHeaders;\r\n        let queryParameters = new HttpParams();\r\n\r\n        if (departmentCode) {\r\n            queryParameters = queryParameters.set('departmentCode', departmentCode);\r\n        }\r\n        if (pagingOptions.offset) {\r\n            queryParameters = queryParameters.set('offset', String(pagingOptions.offset));\r\n        }\r\n        if (pagingOptions.limit) {\r\n            queryParameters = queryParameters.set('limit', String(pagingOptions.limit));\r\n        }\r\n\r\n        options.params = queryParameters;\r\n        return this.get<ApiPaginatedCollection<Department>>(\r\n            `${environment.masterDataServiceLink}/${encodeURIComponent(String(company))}/` + `${this.DepartmentsController}`,\r\n            options,\r\n        );\r\n    }\r\n\r\n    getCommodities(commoditySearchTerm: CommoditySearchTerm, pagingOptions: PagingOptions): Observable<ApiPaginatedCollection<Commodity>> {\r\n        const company = this.companyManager.getCurrentCompanyId();\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        options.headers = this.defaultHttpHeaders;\r\n        let queryParameters = new HttpParams();\r\n\r\n        if (commoditySearchTerm.principalCommodity) {\r\n            queryParameters = queryParameters.set('principalCommodity', commoditySearchTerm.principalCommodity);\r\n        }\r\n        if (commoditySearchTerm.commodityOrigin) {\r\n            queryParameters = queryParameters.set('commodityOrigin', commoditySearchTerm.commodityOrigin);\r\n        }\r\n        if (commoditySearchTerm.commodityGrade) {\r\n            queryParameters = queryParameters.set('commodityGrade', commoditySearchTerm.commodityGrade);\r\n        }\r\n        if (commoditySearchTerm.commodityLvl4) {\r\n            queryParameters = queryParameters.set('commodityLvl4', commoditySearchTerm.commodityLvl4);\r\n        }\r\n        if (commoditySearchTerm.commodityLvl5) {\r\n            queryParameters = queryParameters.set('commodityLvl5', commoditySearchTerm.commodityLvl5);\r\n        }\r\n        if (pagingOptions.offset) {\r\n            queryParameters = queryParameters.set('offset', String(pagingOptions.offset));\r\n        }\r\n        if (pagingOptions.limit) {\r\n            queryParameters = queryParameters.set('limit', String(pagingOptions.limit));\r\n        }\r\n\r\n        options.params = queryParameters;\r\n        return this.get<ApiPaginatedCollection<Commodity>>(\r\n            `${environment.masterDataServiceLink}/${encodeURIComponent(String(company))}/` + `${this.commoditiesController}`,\r\n            options,\r\n        );\r\n    }\r\n\r\n    getCounterPartyBankAccounts(counterparty: number, currency: string): Observable<ApiCollection<CounterpartyBankAccounts>> {\r\n        const company = this.companyManager.getCurrentCompanyId();\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        options.headers = this.defaultHttpHeaders;\r\n        let queryParameters = new HttpParams();\r\n        queryParameters = queryParameters.set('counterparty', counterparty.toString());\r\n        queryParameters = queryParameters.set('currency', currency);\r\n        options.params = queryParameters;\r\n        return this.get<ApiCollection<CounterpartyBankAccounts>>(\r\n            `${environment.masterDataServiceLink}/${encodeURIComponent(String(company))}/` + `${this.CounterPartyBankAccountController}`,\r\n            options,\r\n        );\r\n    }\r\n\r\n    getSpecificMasterdata(masterdata: string, company: string, force: boolean = false): Observable<any[]> {\r\n        if (!force && this.masterData[masterdata].length > 0) {\r\n            return of(this.masterData[masterdata]);\r\n        } else {\r\n            return this.get<ApiCollection<any>>(\r\n                `${environment.masterDataServiceLink}/${encodeURIComponent(String(company))}` + '/' + encodeURIComponent(masterdata),\r\n            ).pipe(\r\n                map((data) => {\r\n                    return data.value;\r\n                }),\r\n            );\r\n        }\r\n    }\r\n\r\n    getCostTypes(costTypeCode: string, pagingOptions: PagingOptions): Observable<ApiPaginatedCollection<CostType>> {\r\n        const company = this.companyManager.getCurrentCompanyId();\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        options.headers = this.defaultHttpHeaders;\r\n        let queryParameters = new HttpParams();\r\n\r\n        if (costTypeCode) {\r\n            queryParameters = queryParameters.set('costTypeCode', costTypeCode);\r\n        }\r\n        if (pagingOptions.offset) {\r\n            queryParameters = queryParameters.set('offset', String(pagingOptions.offset));\r\n        }\r\n        if (pagingOptions.limit) {\r\n            queryParameters = queryParameters.set('limit', String(pagingOptions.limit));\r\n        }\r\n\r\n        options.params = queryParameters;\r\n        return this.get<ApiPaginatedCollection<CostType>>(\r\n            `${environment.masterDataServiceLink}/${encodeURIComponent(String(company))}/` + `${this.costTypesController}`,\r\n            options,\r\n        );\r\n    }\r\n\r\n    getCompanyBankAccounts(currency: string): Observable<ApiCollection<CompanyBankAccounts>> {\r\n        const company = this.companyManager.getCurrentCompanyId();\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        options.headers = this.defaultHttpHeaders;\r\n        let queryParameters = new HttpParams();\r\n        queryParameters = queryParameters.set('currency', currency);\r\n        options.params = queryParameters;\r\n        return this.get<ApiCollection<CompanyBankAccounts>>(\r\n            `${environment.masterDataServiceLink}/${encodeURIComponent(String(company))}/` + `${this.CompanyBankAccountController}`,\r\n            options,\r\n        );\r\n    }\r\n\r\n    getDepartmentsByCompanyId(companyId: string): Observable<ApiPaginatedCollection<Department>> {\r\n        const company = this.companyManager.getCurrentCompanyId();\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        options.headers = this.defaultHttpHeaders;\r\n        return this.get<ApiPaginatedCollection<Department>>(\r\n            `${environment.masterDataServiceLink}/${encodeURIComponent(String(company))}/` + `${this.DepartmentsController}`,\r\n            options,\r\n        );\r\n    }\r\n\r\n    getDepartmentsByCompanyIdInterco(companyId: string): Observable<ApiPaginatedCollection<Department>> {\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        options.headers = this.defaultHttpHeaders;\r\n        return this.get<ApiPaginatedCollection<Department>>(\r\n            `${environment.masterDataServiceLink}/${encodeURIComponent(String(companyId))}/` + `${this.DepartmentsController}`,\r\n            options,\r\n        );\r\n    }\r\n\r\n    getDepartmentsForSelectedCompanyId(\r\n        departmentCode: string,\r\n        pagingOptions: PagingOptions,\r\n        selectedCompanies: string[],\r\n    ): Observable<ApiPaginatedCollection<Department>> {\r\n        const company = this.companyManager.getCurrentCompanyId();\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        options.headers = this.defaultHttpHeaders;\r\n        let queryParameters = new HttpParams();\r\n        queryParameters = queryParameters.set('selectedCompanies', selectedCompanies.toString());\r\n\r\n        if (departmentCode) {\r\n            queryParameters = queryParameters.set('departmentCode', departmentCode);\r\n        }\r\n        if (pagingOptions) {\r\n            if (pagingOptions.offset) {\r\n                queryParameters = queryParameters.set('offset', String(pagingOptions.offset));\r\n            }\r\n            if (pagingOptions.limit) {\r\n                queryParameters = queryParameters.set('limit', String(pagingOptions.limit));\r\n            }\r\n        }\r\n        options.params = queryParameters;\r\n\r\n        return this.get<ApiPaginatedCollection<Department>>(\r\n            `${environment.masterDataServiceLink}/${encodeURIComponent(String(company))}/` + `${this.DepartmentsController}`,\r\n            options,\r\n        );\r\n    }\r\n\r\n    getProfitCenterForSelectedCompanyId(selectedCompanies: string[]): Observable<ApiCollection<ProfitCenter>> {\r\n        const company = this.companyManager.getCurrentCompanyId();\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        options.headers = this.defaultHttpHeaders;\r\n        let queryParameters = new HttpParams();\r\n        queryParameters = queryParameters.set('selectedCompanies', selectedCompanies.toString());\r\n\r\n        options.params = queryParameters;\r\n\r\n        return this.get<ApiCollection<ProfitCenter>>(\r\n            `${environment.masterDataServiceLink}/${encodeURIComponent(String(company))}/` + `${this.ProfitCentersController}`,\r\n            options,\r\n        );\r\n    }\r\n\r\n    getContractTerms(): Observable<ApiCollection<ContractTerm>> {\r\n        const company = this.companyManager.getCurrentCompanyId();\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        options.headers = this.defaultHttpHeaders;\r\n\r\n        return this.get<ApiCollection<ContractTerm>>(\r\n            `${environment.masterDataServiceLink}/${encodeURIComponent(String(company))}/` + `${this.ContractTermsController}`,\r\n            options,\r\n        );\r\n    }\r\n\r\n    getContractTypes(): Observable<ApiCollection<EnumEntity>> {\r\n        const company = this.companyManager.getCurrentCompanyId();\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        options.headers = this.defaultHttpHeaders;\r\n\r\n        return this.get<ApiCollection<EnumEntity>>(\r\n            `${environment.masterDataServiceLink}/${encodeURIComponent(String(company))}/` + `${this.ContractTypesController}`,\r\n            options,\r\n        );\r\n    }\r\n}\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { CompanyManagerService } from '../../../core/services/company-manager.service';\r\nimport { AccountingDocumentStatusToDeletedCommand } from '../../entities/accounting-document-status-deleted.entity';\r\nimport { AccountingSetup } from '../../entities/accounting-setup.entity';\r\nimport { HttpRequestOptions } from '../../entities/http-services/http-request-options.entity';\r\nimport { PostingManagement } from '../../entities/posting-management.entity';\r\nimport { StartStopPostingProcessCommand } from '../../entities/posting-process-start-stop.entity';\r\nimport { ReversalAccountingDocument } from '../../entities/reversal-accounting-document.entity';\r\nimport { TransactionDetail } from '../../entities/transaction-detail.entity';\r\nimport { PostingManagementDisplayView } from '../../models/posting-management-display-view';\r\nimport { ApiCollection, ApiPaginatedCollection } from '../common/models';\r\nimport { DocumentMatching } from '../execution/dtos/document-matching';\r\nimport { AccountingDocumentStatusCommand } from '../preaccounting/dtos/accounting-document-status-command';\r\nimport { AccountingDocumentStatusDtoCommand } from '../preaccounting/dtos/accounting-document-status-dto-command';\r\nimport { CreateAccountingDocumentCommand } from '../preaccounting/dtos/create-accounting-document-command';\r\nimport { DocumentMatchingRecord } from '../preaccounting/dtos/document-matching-record';\r\nimport { HttpBaseService } from './http-base.service';\r\nimport { ProcessMessage } from '../../../hidden/entities/process-message.entity';\r\nimport { ProcessStatus } from '../../entities/process-status.entity';\r\nimport { DateConverterService } from '../date-converter.service';\r\nimport { ListAndSearchRequest } from '../../entities/list-and-search/list-and-search-request.entity';\r\nimport { ListAndSearchFilter } from '../../entities/list-and-search/list-and-search-filter.entity';\r\nimport { ListAndSearchFilterDto } from '../../dtos/list-and-search/list-and-search-filter-dto.dto';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class PreaccountingService extends HttpBaseService {\r\n    private readonly accountingDocumentControllerUrl = 'accountingdocuments';\r\n    private readonly accountingSetUpControllerUrl = 'accountingsetup';\r\n    constructor(protected http: HttpClient,\r\n        private companyManager: CompanyManagerService,\r\n        private dateConverter: DateConverterService) {\r\n        super(http);\r\n    }\r\n\r\n    public authorizeForPosting(lstPostingManagement: PostingManagementDisplayView[]): Observable<void> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        const action = `${encodeURIComponent(String(company))}/${\r\n            this.accountingDocumentControllerUrl}/authorizeforposting`;\r\n        const command = this.mapToAuthorizeForPostingCommand(lstPostingManagement);\r\n        return this.post(environment.preAccountingServiceLink + '/' + action, command);\r\n    }\r\n\r\n    private mapToCreateAccoutingDocumentCommand(documentID: number): CreateAccountingDocumentCommand {\r\n        const command = new CreateAccountingDocumentCommand();\r\n        command.docId = documentID;\r\n        return command;\r\n    }\r\n\r\n    private mapToUpdateAccountingDocumentStatusCommand(): AccountingDocumentStatusDtoCommand {\r\n        const command = new AccountingDocumentStatusDtoCommand();\r\n        const accountingDocuments: AccountingDocumentStatusCommand[] = [];\r\n        command.accountingDocuments = accountingDocuments;\r\n        return command;\r\n    }\r\n\r\n    private mapToAuthorizeForPostingCommand(lstPostingManagement: PostingManagementDisplayView[]): AccountingDocumentStatusDtoCommand {\r\n        const command = new AccountingDocumentStatusDtoCommand();\r\n        const accountingDocument: AccountingDocumentStatusCommand[] = [];\r\n        lstPostingManagement.forEach((element) => {\r\n            const object = new AccountingDocumentStatusCommand();\r\n            object.accountingId = element.accountingId;\r\n            object.statusId = element.statusId;\r\n            accountingDocument.push(object);\r\n        });\r\n        command.accountingDocuments = accountingDocument;\r\n        return command;\r\n    }\r\n\r\n    getAccountingDocForPosting(request: ListAndSearchRequest): Observable<ApiPaginatedCollection<PostingManagement>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        return this.post<ApiPaginatedCollection<PostingManagement>>(\r\n            `${environment.preAccountingServiceLink}/${encodeURIComponent(String(company))}/${this.accountingDocumentControllerUrl}` +\r\n            `/postingManagement`,\r\n            request);\r\n    }\r\n\r\n    getAllPostingManagement(filters: ListAndSearchFilter[],\r\n        offset?: number,\r\n        limit?: number): Observable<ApiPaginatedCollection<any>> {\r\n\r\n        const filtersForColumns: ListAndSearchFilterDto[] = filters.map((filter) => {\r\n            return new ListAndSearchFilterDto(filter);\r\n        });\r\n\r\n        const request: ListAndSearchRequest = {\r\n            clauses: { clauses: filtersForColumns },\r\n            offset,\r\n            limit,\r\n        };\r\n\r\n        const list = this.getAccountingDocForPosting(request)\r\n            .pipe(\r\n                map((data) => {\r\n                    return data;\r\n                }),\r\n            );\r\n\r\n        return list;\r\n    }\r\n\r\n    public getAccoutingDocumentData(accountingId: number): Observable<ApiPaginatedCollection<PostingManagement>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        return this.http.get<ApiPaginatedCollection<PostingManagement>>(\r\n            `${environment.preAccountingServiceLink}/${encodeURIComponent(String(company))}`\r\n            + `/${this.accountingDocumentControllerUrl}/${encodeURIComponent(String(accountingId))}`);\r\n    }\r\n\r\n    getAccoutingDocumentDataList(request: ListAndSearchRequest): Observable<ApiPaginatedCollection<any>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        return this.post<ApiPaginatedCollection<any>>(\r\n            `${environment.preAccountingServiceLink}/${encodeURIComponent(String(company))}/${this.accountingDocumentControllerUrl}/accountingDocumentData`,\r\n            request);\r\n    }\r\n\r\n    getAccoutingLinesData(request: ListAndSearchRequest): Observable<ApiPaginatedCollection<any>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        return this.post<ApiPaginatedCollection<any>>(\r\n            `${environment.preAccountingServiceLink}/${encodeURIComponent(String(company))}/${this.accountingDocumentControllerUrl}/accountingLinesData`,\r\n            request);\r\n    }\r\n\r\n    public getAccoutingLinesAllData(accountingId: number): Observable<ApiPaginatedCollection<ReversalAccountingDocument>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        return this.http.get<ApiPaginatedCollection<ReversalAccountingDocument>>(\r\n            `${environment.preAccountingServiceLink}/${encodeURIComponent(String(company))}`\r\n            + `/${this.accountingDocumentControllerUrl}/accountingLinesAllData/${encodeURIComponent(String(accountingId))}`);\r\n    }\r\n\r\n    public getAccoutingDocumentAllData(docRefId: number): Observable<ApiPaginatedCollection<PostingManagement>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        return this.http.get<ApiPaginatedCollection<PostingManagement>>(\r\n            `${environment.preAccountingServiceLink}/${encodeURIComponent(String(company))}`\r\n            + `/${this.accountingDocumentControllerUrl}/accoutingDocData/${encodeURIComponent(String(docRefId))}`);\r\n    }\r\n\r\n    public getTransactionDetail(accountingId: number): Observable<ApiPaginatedCollection<TransactionDetail>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        return this.http.get<ApiPaginatedCollection<TransactionDetail>>(\r\n            `${environment.preAccountingServiceLink}/${encodeURIComponent(String(company))}`\r\n            + `/${this.accountingDocumentControllerUrl}/transactionDetail/${encodeURIComponent(String(accountingId))}`);\r\n    }\r\n\r\n    updateAccoutingDocuments(accountingDocument: PostingManagement, isAuthorizedControlenabled: boolean) {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        const action = `${encodeURIComponent(String(company))}/${this.accountingDocumentControllerUrl}/${isAuthorizedControlenabled}/updateaccountingdocument/`;\r\n\r\n        return this.post(environment.preAccountingServiceLink + '/' + action, accountingDocument);\r\n    }\r\n\r\n    public deleteAccountingDocument(accountingDocumentStatusToDeleted: AccountingDocumentStatusToDeletedCommand): Observable<void> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        const action = `${encodeURIComponent(String(company))}/${\r\n            this.accountingDocumentControllerUrl}/statustodeleted`;\r\n\r\n        return this.post(environment.preAccountingServiceLink + '/' + action, accountingDocumentStatusToDeleted);\r\n    }\r\n\r\n    public startStopPostingProcess(isActive: boolean): Observable<boolean> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        const command = new StartStopPostingProcessCommand();\r\n        command.isActive = isActive;\r\n        const action = `${encodeURIComponent(String(company))}/${this.accountingDocumentControllerUrl}/startstopposting/`;\r\n        return this.post(environment.preAccountingServiceLink + '/' + action, command);\r\n    }\r\n\r\n    public GetTADocmentDetails(dataVersionId: number, reportType: number): Observable<boolean> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        let queryParameters = new HttpParams();\r\n\r\n        if (dataVersionId !== undefined && dataVersionId !== null) {\r\n            queryParameters = queryParameters.set('dataVersionId', dataVersionId as any);\r\n        }\r\n        if (reportType !== undefined && reportType !== null) {\r\n            queryParameters = queryParameters.set('reportType', reportType as any);\r\n        }\r\n        options.params = queryParameters;\r\n        return this.http.get<boolean>(\r\n            `${environment.preAccountingServiceLink}/${encodeURIComponent(String(company))}`\r\n            + `/${this.accountingSetUpControllerUrl}/GetTADocDetail/`,\r\n            options);\r\n    }\r\n    public getAccountingSetupDetails() {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        return this.http.get<AccountingSetup>(\r\n            `${environment.preAccountingServiceLink}/${encodeURIComponent(String(company))}`\r\n            + `/${this.accountingSetUpControllerUrl}`);\r\n    }\r\n    updateAccountingSetupDetails(accountingSetup: AccountingSetup) {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        const action = `${encodeURIComponent(String(company))}/${\r\n            this.accountingSetUpControllerUrl}/`;\r\n\r\n        return this.post(environment.preAccountingServiceLink + '/' + action, accountingSetup);\r\n    }\r\n    public getPostingProcessStatus(): Observable<boolean> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        const action = `${encodeURIComponent(String(company))}/${this.accountingDocumentControllerUrl}/postingactivestatus/`;\r\n        return this.get(environment.preAccountingServiceLink + '/' + action);\r\n    }\r\n\r\n    // get all the documents for document matching\r\n    getDocumentsToMatch(counterpartyId: string, department: number, currency: string, isEdit: boolean\r\n        , matchFlagId: number): Observable<ApiCollection<DocumentMatching>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        let queryParameters = new HttpParams();\r\n\r\n        queryParameters = queryParameters.set('counterpartyId', counterpartyId.toString());\r\n        if (department !== undefined && department !== null) {\r\n            queryParameters = queryParameters.set('department', department as any);\r\n        }\r\n        queryParameters = queryParameters.set('currency', currency.toString());\r\n        queryParameters = queryParameters.set('isEdit', isEdit ? 'true' : 'false');\r\n        if (matchFlagId !== undefined && matchFlagId !== null) {\r\n            queryParameters = queryParameters.set('matchFlagId', matchFlagId as any);\r\n        }\r\n\r\n        options.params = queryParameters;\r\n\r\n        return this.get<ApiCollection<DocumentMatching>>(\r\n            `${environment.preAccountingServiceLink}/${encodeURIComponent(String(company))}`\r\n            + `/${this.accountingDocumentControllerUrl}/getdocumentsformatching`,\r\n            options);\r\n    }\r\n\r\n    // Create match flag\r\n    public createMatchFlag(documents: DocumentMatchingRecord): Observable<DocumentMatchingRecord> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        return this.post<DocumentMatchingRecord>(\r\n            `${environment.executionServiceLink}/\r\n            ${encodeURIComponent(String(company))}/${this.accountingDocumentControllerUrl}/`, documents);\r\n    }\r\n\r\n    getErrorMessages(processNameList: string[], statusList: number[], dateBegin: Date, dateEnd: Date, userName: string): Observable<ProcessMessage[]> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        let queryParameters = new HttpParams();\r\n\r\n        queryParameters = queryParameters.set('company', company);\r\n        queryParameters = queryParameters.set('statusList', statusList.toString());\r\n        queryParameters = queryParameters.set('processNameList', processNameList as any);\r\n\r\n        if (dateBegin) {\r\n            queryParameters = queryParameters.set(\r\n                'dateBegin',\r\n                this.dateConverter.dateToStringConverter(dateBegin));\r\n        }\r\n        if (dateEnd) {\r\n            queryParameters = queryParameters.set(\r\n                'dateEnd',\r\n                this.dateConverter.dateToStringConverter(dateEnd));\r\n        }\r\n        queryParameters = queryParameters.set('userName', userName);\r\n        options.params = queryParameters;\r\n\r\n        return this.get<ProcessMessage[]>(\r\n            `${environment.preAccountingServiceLink}/${encodeURIComponent(String(company))}/${this.accountingDocumentControllerUrl}/getErrorMessages`, options);\r\n    }\r\n\r\n    updateProcessRetry(messageId: number) {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        const action = `/${encodeURIComponent(String(company))}/${this.accountingDocumentControllerUrl}/${messageId}`;\r\n\r\n        return this.patch(environment.preAccountingServiceLink + action, options);\r\n\r\n    }\r\n}\r\n","import { HttpClient, HttpParams, HttpResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { CompanyManagerService } from '../../../core/services/company-manager.service';\r\nimport { PhysicalFixedPricedContract } from '../../../trading/entities/physical-fixed-priced-contract.entity';\r\nimport { TagField } from '../../../trading/entities/tag-field';\r\nimport { TradeMergeMessage } from '../../../trading/entities/trade-merge-message.entity';\r\nimport { TradeFavoriteDetail } from '../../../trading/entities/tradeFavoriteDetail.entity';\r\nimport { AllocatedTradeSearchResult } from '../../dtos/allocated-trade';\r\nimport { ChildSectionsSearchResult } from '../../dtos/chilesection-search-result';\r\nimport { FxDealSearchResult } from '../../dtos/fxDeal-search-result';\r\nimport { ListAndSearchFilterDto } from '../../dtos/list-and-search/list-and-search-filter-dto.dto';\r\nimport { SectionSearchResult } from '../../dtos/section-search-result';\r\nimport { TradeReportResult } from '../../dtos/trade-report-result';\r\nimport { Bulkapproval } from '../../entities/bulk-approval.entity';\r\nimport { BulkCost } from '../../entities/bulk-edit-cost.entity';\r\nimport { CancelSectionStatusCommand } from '../../entities/cancel-section-command.entity';\r\nimport { ChildSectionsCostsToAdjust } from '../../entities/child-sections-costs-to-adjust.entity';\r\nimport { ContractFamilyToTradeMerge } from '../../entities/contract-family-to-trade-merge.entity';\r\nimport { Cost } from '../../entities/cost.entity';\r\nimport { Counterparty } from '../../entities/counterparty.entity';\r\nimport { FixPricedSection } from '../../entities/fix-priced-section.entity';\r\nimport { FuturesOptionsPricedSection } from '../../entities/futures-options-priced-section.entity';\r\nimport { FxDealGenerateEndOfMonth } from '../../entities/fx-deal-generate-end-of-month.entity';\r\nimport { FxDealCreateResponse } from '../../entities/fxdeal-create-response.entity';\r\nimport { FxDealDetail } from '../../entities/fxdeal-detail.entity';\r\nimport { HttpRequestOptions } from '../../entities/http-services/http-request-options.entity';\r\nimport { IntercoValidation } from '../../entities/interco-validation.entity';\r\nimport { ListAndSearchFilter } from '../../entities/list-and-search/list-and-search-filter.entity';\r\nimport { ListAndSearchRequest } from '../../entities/list-and-search/list-and-search-request.entity';\r\nimport { MergeAllowedForContracts } from '../../entities/merge-allowed-for-contract.entity';\r\nimport { MergeContracts } from '../../entities/merge-contracts.entity';\r\nimport { OverviewGenerateEndOfMonth } from '../../entities/overview-generate-end-of-month.entity';\r\nimport { ParentCostsToAdjust } from '../../entities/parent-costs-to-adjust.entity';\r\nimport { PhysicalTradeBulkEdit } from '../../entities/physical-trade-bulk-edit';\r\nimport { Section } from '../../entities/section.entity';\r\nimport { Tag } from '../../entities/tag.entity';\r\nimport { TradeConfiguration } from '../../entities/trade-configuration-entity';\r\nimport { Trade } from '../../entities/trade.entity';\r\nimport { Trader } from '../../entities/trader.entity';\r\nimport { User } from '../../entities/user.entity';\r\nimport { PricingMethods } from '../../enums/pricing-method.enum';\r\nimport { SectionTypes } from '../../enums/section-type.enum';\r\nimport { ApiCollection, ApiPaginatedCollection } from '../common/models';\r\nimport { DateConverterService } from '../date-converter.service';\r\nimport { ChildSectionsToSplit } from '../execution/dtos/child-sections-to-split';\r\nimport { ChildTradeForSection } from '../trading/dtos/ChildTradesForSection';\r\nimport { ContractsForBulkFunctions } from '../trading/dtos/contracts-for-bulk-functions';\r\nimport { Costmatrix } from '../trading/dtos/costmatrix';\r\nimport { SaveBulkCostsCommand } from '../trading/dtos/save-bulk-cost-command';\r\nimport { SaveTradeMergeCommand } from '../trading/dtos/save-trade-merge-command';\r\nimport { BulkSplitCreationDetails, SplitCreationDetails, SplitCreationResult, TrancheSplitCreationResult } from '../trading/dtos/section';\r\nimport { TradeFavourite } from '../trading/dtos/tradeFavourite';\r\nimport { TradeFieldsForBulkEdit } from '../trading/dtos/tradeFieldsForBulkEdit';\r\nimport { TradeImageField } from '../trading/dtos/tradeImageField';\r\nimport { HttpBaseService } from './http-base.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class TradingService extends HttpBaseService {\r\n    private readonly tradersControllerUrl = 'Traders';\r\n    private readonly sectionsControllerUrl = 'sections';\r\n    private readonly physicalControllerUrl = 'physicalcontracts';\r\n    private readonly costmatricesControllerUrl = 'costmatrices';\r\n    private readonly fxDealsControllerUrl = 'fxDeals';\r\n    private readonly sectionsMergeControllerUrl = 'sectionsmerge';\r\n    private readonly TagFieldsControllerUrl = 'tagfields';\r\n\r\n    constructor(http: HttpClient, private dateConverter: DateConverterService, private companyManager: CompanyManagerService) {\r\n        super(http);\r\n    }\r\n\r\n    getAll(): Observable<ApiPaginatedCollection<SectionSearchResult>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        return this.get<ApiPaginatedCollection<SectionSearchResult>>(\r\n            `${environment.tradeServiceLink}/${encodeURIComponent(String(company))}/${this.sectionsControllerUrl}`,\r\n        );\r\n    }\r\n\r\n    getTradesForAllocation(request: ListAndSearchRequest): Observable<ApiPaginatedCollection<AllocatedTradeSearchResult>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        return this.post<ApiPaginatedCollection<AllocatedTradeSearchResult>>(\r\n            `${environment.tradeServiceLink}/${encodeURIComponent(String(company))}/${this.physicalControllerUrl}/Allocate`,\r\n            request);\r\n    }\r\n\r\n    searchContractsToAllocate(filters: ListAndSearchFilter[],\r\n        offset?: number,\r\n        limit?: number): Observable<any> {\r\n\r\n        const filtersForColumns: ListAndSearchFilterDto[] = filters.map((filter) => {\r\n            return new ListAndSearchFilterDto(filter);\r\n        });\r\n\r\n        const request: ListAndSearchRequest = {\r\n            clauses: { clauses: filtersForColumns },\r\n            offset,\r\n            limit,\r\n        };\r\n\r\n        const list = this.getTradesForAllocation(request)\r\n            .pipe(\r\n                map((data) => {\r\n                    return data.value;\r\n                }),\r\n            );\r\n\r\n        return list;\r\n    }\r\n\r\n    getTradeCostList(\r\n        reportType: number,\r\n        tabType: number,\r\n        dataVersionId: number,\r\n    ): Observable<ApiPaginatedCollection<OverviewGenerateEndOfMonth>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        let queryParameters = new HttpParams();\r\n        if (tabType) {\r\n            queryParameters = queryParameters.set('tabType', tabType.toString());\r\n        }\r\n        if (dataVersionId) {\r\n            queryParameters = queryParameters.set('dataVersionId', dataVersionId.toString());\r\n        }\r\n        if (reportType) {\r\n            queryParameters = queryParameters.set('reportType', reportType.toString());\r\n        }\r\n        options.params = queryParameters;\r\n        return this.get<ApiPaginatedCollection<OverviewGenerateEndOfMonth>>(\r\n            `${environment.tradeServiceLink}/${encodeURIComponent(String(company))}/${this.sectionsControllerUrl}/summary`,\r\n            options,\r\n        );\r\n    }\r\n\r\n    getCostMatrixId(costMatrixId: number): Observable<Costmatrix> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        return this.get<Costmatrix>(\r\n            `${environment.tradeServiceLink}/${encodeURIComponent(String(company))}/${this.costmatricesControllerUrl}` +\r\n                `/${encodeURIComponent(String(costMatrixId))}` +\r\n                `/costmatrixlistedit`,\r\n        );\r\n    }\r\n\r\n    // get the contacts for bulk edit\r\n    searchContractsForBulkEdit(filters: ListAndSearchFilter[], offset?: number, limit?: number): Observable<any> {\r\n        const filtersForColumns: ListAndSearchFilterDto[] = filters.map((filter) => {\r\n            return new ListAndSearchFilterDto(filter);\r\n        });\r\n\r\n        const dataversionId = filters.find((f) => f.fieldName === 'DataVersionId');\r\n\r\n        const request: ListAndSearchRequest = {\r\n            clauses: { clauses: filtersForColumns },\r\n            offset,\r\n            limit,\r\n            dataVersionId: dataversionId ? Number(dataversionId.predicate.value1) : null,\r\n        };\r\n\r\n        const list = this.search(request).pipe(\r\n            map((data) => {\r\n                return data.value;\r\n            }),\r\n        );\r\n\r\n        return list;\r\n    }\r\n\r\n    getSection(\r\n        sectionId: number,\r\n        pricingMethod: PricingMethods,\r\n        dataVersionId?: number,\r\n    ): Observable<FixPricedSection | FuturesOptionsPricedSection> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        let queryParameters = new HttpParams();\r\n        if (dataVersionId) {\r\n            queryParameters = queryParameters.set('dataVersionId', dataVersionId.toString());\r\n        }\r\n        options.params = queryParameters;\r\n\r\n        const apiUrl: string =\r\n            `${environment.tradeServiceLink}/${encodeURIComponent(String(company))}/${this.sectionsControllerUrl}` +\r\n            '/' +\r\n            `${encodeURIComponent(String(sectionId))}`;\r\n\r\n        switch (pricingMethod) {\r\n            case PricingMethods.Priced:\r\n                return this.get<FixPricedSection>(apiUrl, options);\r\n\r\n            case PricingMethods.FnO:\r\n                return this.get<FuturesOptionsPricedSection>(apiUrl, options);\r\n\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n\r\n    checkContractReferenceExists(contractRef: string, dataVersionId?: number) {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        let queryParameters = new HttpParams();\r\n        if (dataVersionId) {\r\n            queryParameters = queryParameters.set('dataVersionId', dataVersionId.toString());\r\n        }\r\n\r\n        const apiUrl = `${encodeURIComponent(String(company))}/${this.physicalControllerUrl}`;\r\n        return this.http\r\n            .head(`${environment.tradeServiceLink}/${apiUrl}/` + contractRef, {\r\n                headers: this.defaultHttpHeaders,\r\n                observe: 'response',\r\n                params: queryParameters,\r\n            })\r\n            .pipe(map((resp) => resp.status === 200));\r\n    }\r\n\r\n    createPhysicalFixedPricedContract(contract: PhysicalFixedPricedContract) {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        const action = `${encodeURIComponent(String(company))}/${this.physicalControllerUrl}/`;\r\n\r\n        return this.post(environment.tradeServiceLink + '/' + action, contract);\r\n    }\r\n\r\n    updatePhysicalContract(physicalContractId: number, physicalContract: PhysicalFixedPricedContract, isSplitCreated: boolean = false) {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        physicalContract.isSplitCreated = isSplitCreated;\r\n        const action = `/${encodeURIComponent(String(company))}/${this.physicalControllerUrl}/${physicalContractId}`;\r\n\r\n        return this.patch(environment.tradeServiceLink + action, physicalContract);\r\n    }\r\n\r\n    public PhysicalTradeBulkEdit(physicalTradeBulkEdit: PhysicalTradeBulkEdit) {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        return this.patch(\r\n            `${environment.tradeServiceLink}/${encodeURIComponent(String(company))}` +\r\n                `/${this.physicalControllerUrl}/physicaltradebulkedit`,\r\n            physicalTradeBulkEdit,\r\n        );\r\n    }\r\n\r\n    createSplitForContract(\r\n        sectionIds: number[],\r\n        quantity: number,\r\n        dataVersionId?: number,\r\n        contractedValues?: string[],\r\n    ): Observable<TrancheSplitCreationResult[]> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        const splitDetails = new SplitCreationDetails();\r\n        splitDetails.sectionIds = sectionIds;\r\n        splitDetails.quantity = quantity;\r\n        splitDetails.contractedValues = contractedValues;\r\n        splitDetails.dataVersionId = dataVersionId;\r\n        const action = `/${encodeURIComponent(String(company))}/${this.physicalControllerUrl}/splitcontract`;\r\n        return this.post<TrancheSplitCreationResult[]>(environment.tradeServiceLink + action, splitDetails);\r\n    }\r\n\r\n    createBulkSplitForContract(\r\n        sectionId: number,\r\n        quantities: number[],\r\n        dataVersionId?: number,\r\n        contractedValues?: string[],\r\n    ): Observable<TrancheSplitCreationResult[]> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        const splitDetails = new BulkSplitCreationDetails();\r\n        splitDetails.sectionId = sectionId;\r\n        splitDetails.quantity = quantities;\r\n        splitDetails.contractedValues = contractedValues;\r\n        splitDetails.dataVersionId = dataVersionId;\r\n        const action = `/${encodeURIComponent(String(company))}/${this.physicalControllerUrl}/bulksplitcontract`;\r\n        return this.post<TrancheSplitCreationResult[]>(environment.tradeServiceLink + action, splitDetails);\r\n    }\r\n\r\n    deleteCost(costId: number, sectionId: number, dataVersionId: number) {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        let queryParameters = new HttpParams();\r\n        if (dataVersionId) {\r\n            queryParameters = queryParameters.set('dataVersionId', dataVersionId.toString());\r\n        }\r\n\r\n        return this.http\r\n            .delete<any>(\r\n                `${environment.tradeServiceLink}/${encodeURIComponent(String(company))}` +\r\n                    `/${this.sectionsControllerUrl}/${encodeURIComponent(String(sectionId))}/costs/${encodeURIComponent(String(costId))}`,\r\n                {\r\n                    params: queryParameters,\r\n                    observe: 'response',\r\n                },\r\n            )\r\n            .pipe(map((resp) => resp.ok));\r\n    }\r\n\r\n    deleteMultipleCost(costId: number[], sectionId: number, dataVersionId: number) {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        const request = { costIds: costId, dataVersionId };\r\n\r\n        return this.http\r\n            .post<any>(\r\n                `${environment.tradeServiceLink}/${encodeURIComponent(String(company))}` +\r\n                    `/${this.sectionsControllerUrl}/${encodeURIComponent(String(sectionId))}/costs/delete`,\r\n                request,\r\n                {\r\n                    observe: 'response',\r\n                },\r\n            )\r\n            .pipe(map((resp) => resp.ok));\r\n    }\r\n\r\n    getAllCosts(sectionId: number, dataVersionId: number): Observable<ApiCollection<Cost>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        let queryParameters = new HttpParams();\r\n        if (dataVersionId) {\r\n            queryParameters = queryParameters.set('dataVersionId', dataVersionId.toString());\r\n        }\r\n        options.params = queryParameters;\r\n\r\n        return this.get<ApiCollection<Cost>>(\r\n            `${environment.tradeServiceLink}/${encodeURIComponent(String(company))}` +\r\n                `/${this.sectionsControllerUrl}/${encodeURIComponent(String(sectionId))}/costs`,\r\n            options,\r\n        );\r\n    }\r\n\r\n    createTrancheSplit(section: Section, sectionType: number): Observable<TrancheSplitCreationResult[]> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        const trancheAction = `${encodeURIComponent(String(company))}/${this.physicalControllerUrl}/tranche/`;\r\n        const splitAction = `${encodeURIComponent(String(company))}/${this.physicalControllerUrl}/split/`;\r\n        const action = sectionType === SectionTypes.Tranche ? trancheAction : splitAction;\r\n\r\n        return this.post<TrancheSplitCreationResult[]>(environment.tradeServiceLink + '/' + action, section);\r\n    }\r\n\r\n    createSplit(section: Section): Observable<SplitCreationResult[]> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        const action = `${encodeURIComponent(String(company))}/${this.physicalControllerUrl}/split/`;\r\n\r\n        return this.post<SplitCreationResult[]>(environment.tradeServiceLink + '/' + action, section);\r\n    }\r\n\r\n    splitCostsForSection(sectionOriginId: number, childSections: ChildSectionsToSplit[]) {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        const request = {\r\n            sectionOriginId,\r\n            childSections,\r\n            company,\r\n        };\r\n\r\n        return this.http\r\n            .post<any>(\r\n                `${environment.tradeServiceLink}/${encodeURIComponent(String(company))}/${this.sectionsControllerUrl}` +\r\n                    `/${encodeURIComponent(String(sectionOriginId))}/costs/split`,\r\n                request,\r\n                {\r\n                    observe: 'response',\r\n                },\r\n            )\r\n            .pipe(map((resp) => resp.ok));\r\n    }\r\n\r\n    public approveSection(sectionId: number): Observable<boolean> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        const request = {\r\n            sectionId,\r\n        };\r\n\r\n        return this.http\r\n            .post<any>(\r\n                `${environment.tradeServiceLink}/${encodeURIComponent(String(company))}/${this.sectionsControllerUrl}` +\r\n                    `/${encodeURIComponent(String(sectionId))}/approve`,\r\n                request,\r\n                {\r\n                    observe: 'response',\r\n                },\r\n            )\r\n            .pipe(map((resp) => resp.ok));\r\n    }\r\n\r\n    public unapproveSection(sectionId: number): Observable<boolean> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        return this.http\r\n            .post<any>(\r\n                `${environment.tradeServiceLink}/${encodeURIComponent(String(company))}/${this.sectionsControllerUrl}` +\r\n                    `/${encodeURIComponent(String(sectionId))}/unapprove`,\r\n                null,\r\n                {\r\n                    observe: 'response',\r\n                },\r\n            )\r\n            .pipe(map((resp) => resp.ok));\r\n    }\r\n\r\n    public deleteSection(sectionId: number): Observable<boolean> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        return this.http\r\n            .post<any>(\r\n                `${environment.tradeServiceLink}/${encodeURIComponent(String(company))}/${this.sectionsControllerUrl}` +\r\n                    `/${encodeURIComponent(String(sectionId))}/delete`,\r\n                null,\r\n                {\r\n                    observe: 'response',\r\n                },\r\n            )\r\n            .pipe(map((resp) => resp.ok));\r\n    }\r\n\r\n    public closeSection(sectionIds: number[], childFlag?: number, dataVersionId?: number): Observable<boolean> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        const request = { dataVersionId };\r\n\r\n        return this.http\r\n            .post<any>(\r\n                `${environment.tradeServiceLink}/${encodeURIComponent(String(company))}/${this.sectionsControllerUrl}` +\r\n                    `/${encodeURIComponent(String(sectionIds.toString()))}/close`,\r\n                request,\r\n                {\r\n                    observe: 'response',\r\n                },\r\n            )\r\n            .pipe(map((resp) => resp.ok));\r\n    }\r\n\r\n    public getAssigedSectionDetailsToCloseCharter(sectionIds: number[]): Observable<any> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        return this.get<any>(\r\n            `${environment.tradeServiceLink}/${encodeURIComponent(String(company))}/${this.sectionsControllerUrl}` +\r\n                `/${encodeURIComponent(String(sectionIds.toString()))}/closesectiondetails`,\r\n        );\r\n    }\r\n\r\n    public cancelSection(sectionIds: number[], cancellationDate: Date, childFlag?: number, dataVersionId?: number): Observable<boolean> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        const cancelSectionDetail = new CancelSectionStatusCommand();\r\n        cancelSectionDetail.blDate = cancellationDate;\r\n        cancelSectionDetail.sectionIds = sectionIds;\r\n\r\n        return this.http\r\n            .post<any>(\r\n                `${environment.tradeServiceLink}/${encodeURIComponent(String(company))}/${this.sectionsControllerUrl}` + `/cancel`,\r\n                cancelSectionDetail,\r\n                {\r\n                    observe: 'response',\r\n                },\r\n            )\r\n            .pipe(map((resp) => resp.ok));\r\n    }\r\n\r\n    public reverseCancelSection(sectionId: number, childFlag?: number, dataVersionId?: number): Observable<boolean> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        return this.http\r\n            .post<any>(\r\n                `${environment.tradeServiceLink}/${encodeURIComponent(String(company))}/${this.sectionsControllerUrl}` +\r\n                    `/${encodeURIComponent(String(sectionId.toString()))}/reversecancel`,\r\n                null,\r\n                {\r\n                    observe: 'response',\r\n                },\r\n            )\r\n            .pipe(map((resp) => resp.ok));\r\n    }\r\n\r\n    public reOpenSection(sectionIds: number[], dataVersionId?: number): Observable<boolean> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        const request = { dataVersionId };\r\n\r\n        return this.http\r\n            .post<any>(\r\n                `${environment.tradeServiceLink}/${encodeURIComponent(String(company))}/${this.sectionsControllerUrl}` +\r\n                    `/${encodeURIComponent(String(sectionIds))}/open`,\r\n                request,\r\n                {\r\n                    observe: 'response',\r\n                },\r\n            )\r\n            .pipe(map((resp) => resp.ok));\r\n    }\r\n\r\n    private correctTrade(tr: Trade<FixPricedSection>): Trade<FixPricedSection> {\r\n        const trade: Trade<FixPricedSection> = tr;\r\n        // -- Correcting Date Format\r\n        if (trade.contractDate) {\r\n            const contractDate = new Date(trade.contractDate as any);\r\n            trade.contractDate = contractDate;\r\n        }\r\n\r\n        if (trade.lastModifiedDate) {\r\n            const lastModifiedDate = new Date(trade.lastModifiedDate as any);\r\n            trade.lastModifiedDate = lastModifiedDate;\r\n        }\r\n\r\n        if (trade.creationDate) {\r\n            const creationDate = new Date(trade.creationDate as any);\r\n            trade.creationDate = creationDate;\r\n        }\r\n\r\n        if (trade.blDate) {\r\n            const blDate = new Date(trade.blDate as any);\r\n            trade.blDate = blDate;\r\n        }\r\n\r\n        // -- Correcting Tolerance for display\r\n        trade.toleranceValue = trade.toleranceValue * 100;\r\n        return trade;\r\n    }\r\n\r\n    private transformData(data: Array<Trade<FixPricedSection>>): Array<Trade<FixPricedSection>> {\r\n        data.forEach((d) => {\r\n            this.correctTrade(d);\r\n        });\r\n        return data;\r\n    }\r\n\r\n    getAllTraders(): Observable<ApiCollection<Trader>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        return this.get<ApiCollection<Trader>>(\r\n            `${environment.tradeServiceLink}/${encodeURIComponent(String(company))}/${this.tradersControllerUrl}`,\r\n        );\r\n    }\r\n\r\n    findTradersByName(name: string): Observable<ApiCollection<Trader>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        let queryParameters = new HttpParams();\r\n        if (name) {\r\n            queryParameters = queryParameters.set('name', name);\r\n        }\r\n        options.params = queryParameters;\r\n\r\n        return this.get<ApiCollection<Trader>>(\r\n            `${environment.tradeServiceLink}/${encodeURIComponent(String(company))}/${this.tradersControllerUrl}`,\r\n            options,\r\n        );\r\n    }\r\n\r\n    getCostmatricesByCompanyId(company: string): Observable<ApiPaginatedCollection<Costmatrix>> {\r\n        return this.get<ApiPaginatedCollection<Costmatrix>>(\r\n            `${environment.tradeServiceLink}/${encodeURIComponent(String(company))}/${this.costmatricesControllerUrl}`,\r\n        );\r\n    }\r\n\r\n    searchCostMatrixListWithBestMatch(request: Tag[]): Observable<ApiPaginatedCollection<Costmatrix>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        return this.post<ApiPaginatedCollection<Costmatrix>>(\r\n            `${environment.tradeServiceLink}/${encodeURIComponent(String(company))}/${\r\n                this.costmatricesControllerUrl\r\n            }/include-bestmatch`,\r\n            request,\r\n        );\r\n    }\r\n\r\n    getCostmatricesListByCostmatrixId(costMatrixId: number): Observable<Costmatrix> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        return this.get<Costmatrix>(\r\n            `${environment.tradeServiceLink}/${encodeURIComponent(String(company))}/${this.costmatricesControllerUrl}` +\r\n                `/${encodeURIComponent(String(costMatrixId))}`,\r\n        );\r\n    }\r\n\r\n    GetCostMatricesListWithTags(costMatrixId: number): Observable<any> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        return this.get<any>(\r\n            `${environment.tradeServiceLink}/${encodeURIComponent(String(company))}/${this.costmatricesControllerUrl}` +\r\n                `/tags?costMatrixIds=${encodeURIComponent(String(costMatrixId))}`,\r\n        );\r\n    }\r\n\r\n    GetBulkCostMatricesListWithTags(ids: string): Observable<any> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        const filter = `${environment.tradeServiceLink}/${encodeURIComponent(String(company))}/${this.costmatricesControllerUrl}` +\r\n        `/tags?costMatrixIds=${ids}`;\r\n        return this.get<any>(filter);\r\n    }\r\n\r\n    search(request: ListAndSearchRequest): Observable<ApiPaginatedCollection<SectionSearchResult>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        return this.post<ApiPaginatedCollection<SectionSearchResult>>(\r\n            `${environment.tradeServiceLink}/${encodeURIComponent(String(company))}/${this.sectionsControllerUrl}/search`,\r\n            request,\r\n        );\r\n    }\r\n\r\n    bankBrokerContextualSearch(request: ListAndSearchRequest): Observable<ApiPaginatedCollection<Counterparty>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        return this.post<ApiPaginatedCollection<Counterparty>>(\r\n            `${environment.tradeServiceLink}/${encodeURIComponent(String(company))}/${\r\n                this.fxDealsControllerUrl\r\n            }/bankBrokerContextualSearch`,\r\n            request,\r\n        );\r\n    }\r\n\r\n    createFxDeal(fxDetail: FxDealDetail): Observable<FxDealDetail> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        const action = `${encodeURIComponent(String(company))}/${this.fxDealsControllerUrl}`;\r\n\r\n        return this.post(environment.tradeServiceLink + '/' + action, fxDetail);\r\n    }\r\n\r\n    reverseFxDeal(fxDealId: number): Observable<FxDealCreateResponse[]> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        return this.post(\r\n            `${environment.tradeServiceLink}/${encodeURIComponent(String(company))}/${this.fxDealsControllerUrl}` +\r\n                `/${encodeURIComponent(String(fxDealId))}/reverse`,\r\n            null,\r\n        );\r\n    }\r\n\r\n    settleFxDeal(fxDealId: number): Observable<FxDealCreateResponse[]> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        return this.post(\r\n            `${environment.tradeServiceLink}/${encodeURIComponent(String(company))}/${this.fxDealsControllerUrl}` +\r\n                `/${encodeURIComponent(String(fxDealId))}/settle`,\r\n            null,\r\n        );\r\n    }\r\n\r\n    updateFxDeal(fxDealId: number, fxDetail: FxDealDetail): Observable<FxDealDetail> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        const action = `${encodeURIComponent(String(company))}/${this.fxDealsControllerUrl}/${fxDealId}`;\r\n\r\n        return this.patch(environment.tradeServiceLink + '/' + action, fxDetail);\r\n    }\r\n\r\n    getTradeReportData(request: ListAndSearchRequest): Observable<ApiPaginatedCollection<TradeReportResult>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        return this.post<ApiPaginatedCollection<TradeReportResult>>(\r\n            `${environment.tradeServiceLink}/${encodeURIComponent(String(company))}/${this.sectionsControllerUrl}/getTradeReportData`,\r\n            request,\r\n        );\r\n    }\r\n\r\n    public createCostmatrix(costmatrix: Costmatrix): Observable<Costmatrix> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        const action = `${encodeURIComponent(String(company))}/${this.costmatricesControllerUrl}/`;\r\n\r\n        return this.post(environment.tradeServiceLink + '/' + action, costmatrix);\r\n    }\r\n\r\n    public createCostMatrixWithParameters(costmatrix: Costmatrix): Observable<Costmatrix> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        const action = `${encodeURIComponent(String(company))}/${this.costmatricesControllerUrl}/include-parameters`;\r\n\r\n        return this.post(environment.tradeServiceLink + '/' + action, costmatrix);\r\n    }\r\n\r\n    public updateCostmatrix(costmatrix: Costmatrix): Observable<Costmatrix> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        const action = `${encodeURIComponent(String(company))}/${this.costmatricesControllerUrl}/${encodeURIComponent(\r\n            String(costmatrix.costMatrixId),\r\n        )}`;\r\n\r\n        return this.patch(environment.tradeServiceLink + '/' + action, costmatrix);\r\n    }\r\n\r\n    public updateCostmatrixWithParameters(costmatrix: Costmatrix): Observable<Costmatrix> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        const action = `${encodeURIComponent(String(company))}/${this.costmatricesControllerUrl}/${encodeURIComponent(\r\n            String(costmatrix.costMatrixId),\r\n        )}`;\r\n\r\n        return this.post(environment.tradeServiceLink + '/' + action, costmatrix);\r\n    }\r\n\r\n    public deleteCostMatrix(costMatrixId: number) {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        return this.http\r\n            .delete<any>(\r\n                `${environment.tradeServiceLink}/${encodeURIComponent(String(company))}` +\r\n                    `/${this.costmatricesControllerUrl}/${encodeURIComponent(String(costMatrixId))}`,\r\n                {\r\n                    observe: 'response',\r\n                },\r\n            )\r\n            .pipe(map((resp) => resp.ok));\r\n    }\r\n\r\n    public deleteCostMatrixLine(costMatrixId: number, costMatrixLineId: number) {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        return this.http\r\n            .delete<any>(\r\n                `${environment.tradeServiceLink}/${encodeURIComponent(String(company))}` +\r\n                    `/${this.costmatricesControllerUrl}/${encodeURIComponent(String(costMatrixId))}/${encodeURIComponent(\r\n                        String(costMatrixLineId),\r\n                    )}`,\r\n                {\r\n                    observe: 'response',\r\n                },\r\n            )\r\n            .pipe(map((resp) => resp.ok));\r\n    }\r\n\r\n    public checkCostMatrixNameExists(name: string) {\r\n        {\r\n            const company: string = this.companyManager.getCurrentCompanyId();\r\n            const apiUrl = `${encodeURIComponent(String(company))}/${this.costmatricesControllerUrl}`;\r\n\r\n            return this.http\r\n                .head(`${environment.tradeServiceLink}/${apiUrl}/` + name, {\r\n                    headers: this.defaultHttpHeaders,\r\n                    observe: 'response',\r\n                })\r\n                .pipe(map((resp) => resp.status === 200));\r\n        }\r\n    }\r\n\r\n    public getTradeImageFieldsByCompany(): Observable<ApiCollection<TradeImageField>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        return this.get<ApiCollection<TradeImageField>>(\r\n            `${environment.tradeServiceLink}/${encodeURIComponent(String(company))}` + `/${this.sectionsControllerUrl}/imageField`,\r\n        );\r\n    }\r\n\r\n    getTradeChildSections(request: ListAndSearchRequest): Observable<ApiCollection<ChildSectionsSearchResult>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        return this.post<ApiCollection<ChildSectionsSearchResult>>(\r\n            `${environment.tradeServiceLink}/${encodeURIComponent(String(company))}/` +\r\n                `${this.sectionsControllerUrl}/getTradeChildSections`,\r\n            request,\r\n        );\r\n    }\r\n\r\n    getChildSections(sectionId: number, dataVersionId?: number): Observable<ChildSectionsSearchResult[]> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        let queryParameters = new HttpParams();\r\n        if (dataVersionId) {\r\n            queryParameters = queryParameters.set('dataVersionId', dataVersionId.toString());\r\n        }\r\n        options.params = queryParameters;\r\n\r\n        return this.get<ApiCollection<ChildSectionsSearchResult>>(\r\n            `${environment.tradeServiceLink}/${encodeURIComponent(String(company))}/` + `${this.sectionsControllerUrl}/${sectionId}/childs`,\r\n            options,\r\n        ).pipe(map((data: ApiCollection<ChildSectionsSearchResult>) => data.value));\r\n    }\r\n\r\n    public getTradeConfigurationDetails(): Observable<TradeConfiguration> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        return this.get<TradeConfiguration>(\r\n            `${environment.tradeServiceLink}/${encodeURIComponent(String(company))}` + `/${this.sectionsControllerUrl}/tradeConfiguration`,\r\n        );\r\n    }\r\n\r\n    createTradeFavorite(tradeFavorite: TradeFavoriteDetail) {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        const action = `${encodeURIComponent(String(company))}/${this.sectionsControllerUrl}/createtradefavorite/`;\r\n        return this.post(environment.tradeServiceLink + '/' + action, tradeFavorite);\r\n    }\r\n\r\n    checkTradeFavoriteNameExists(tradeFavoriteName: string) {\r\n        {\r\n            const company: string = this.companyManager.getCurrentCompanyId();\r\n            const apiUrl = `${encodeURIComponent(String(company))}/${this.sectionsControllerUrl}`;\r\n\r\n            return this.http\r\n                .head(`${environment.tradeServiceLink}/${apiUrl}/` + tradeFavoriteName, {\r\n                    headers: this.defaultHttpHeaders,\r\n                    observe: 'response',\r\n                })\r\n                .pipe(map((resp) => resp.status === 200));\r\n        }\r\n    }\r\n\r\n    // get Trades for bulk edit\r\n    getTradesForBulkEdit(selectedSectionIds: number[]): Observable<ApiCollection<ContractsForBulkFunctions>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        let queryParameters = new HttpParams();\r\n\r\n        queryParameters = queryParameters.set('selectedSectionIds', selectedSectionIds.toString());\r\n\r\n        options.params = queryParameters;\r\n        return this.get<ApiCollection<ContractsForBulkFunctions>>(\r\n            `${environment.tradeServiceLink}/${encodeURIComponent(String(company))}` + `/${this.sectionsControllerUrl}/tradebulkedit`,\r\n            options,\r\n        );\r\n    }\r\n\r\n    // get Trades for bulk closure\r\n    getTradesForBulkClosure(selectedSectionIds: number[]): Observable<ApiCollection<ContractsForBulkFunctions>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        let queryParameters = new HttpParams();\r\n\r\n        queryParameters = queryParameters.set('selectedSectionIds', selectedSectionIds.toString());\r\n\r\n        options.params = queryParameters;\r\n        return this.get<ApiCollection<ContractsForBulkFunctions>>(\r\n            `${environment.tradeServiceLink}/${encodeURIComponent(String(company))}` + `/${this.sectionsControllerUrl}/tradebulkclosure`,\r\n            options,\r\n        );\r\n    }\r\n\r\n    public bulkApproveSave(sectionIDList: number[]): Observable<boolean> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        const bulkapprovaldetails = new Bulkapproval();\r\n        bulkapprovaldetails.companyId = company;\r\n        bulkapprovaldetails.sectionIds = sectionIDList;\r\n\r\n        const action = `/${encodeURIComponent(String(company))}/${this.sectionsControllerUrl}/bulkapprovaloftrades`;\r\n\r\n        return this.http.post<any>(environment.tradeServiceLink + action, bulkapprovaldetails);\r\n    }\r\n\r\n    deleteFavorite(favoriteId: number) {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        return this.http\r\n            .delete<any>(\r\n                `${environment.tradeServiceLink}/${encodeURIComponent(String(company))}` +\r\n                    `/${this.sectionsControllerUrl}/${encodeURIComponent(String(favoriteId))}`,\r\n                {\r\n                    observe: 'response',\r\n                },\r\n            )\r\n            .pipe(map((resp) => resp.ok));\r\n    }\r\n\r\n    getFavoritesByUserId(): Observable<ApiPaginatedCollection<TradeFavourite>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        return this.get<ApiPaginatedCollection<TradeFavourite>>(\r\n            `${environment.tradeServiceLink}/${encodeURIComponent(String(company))}/${this.sectionsControllerUrl}/favoriteSummaries`,\r\n        );\r\n    }\r\n\r\n    getTradeFavoriteById(tradeFavoriteId: number): Observable<Section> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        return this.get<Section>(\r\n            `${environment.tradeServiceLink}/${encodeURIComponent(String(company))}` +\r\n                `/${this.sectionsControllerUrl}/getTradeFavoriteById/${encodeURIComponent(String(tradeFavoriteId))}`,\r\n        );\r\n    }\r\n\r\n    getChildTradesForSection(sectionId: number): Observable<ApiCollection<ChildTradeForSection>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        return this.http.get<ApiCollection<ChildTradeForSection>>(\r\n            `${environment.tradeServiceLink}/${encodeURIComponent(String(company))}` +\r\n                `/${this.sectionsControllerUrl}/${encodeURIComponent(String(sectionId))}/getChildTradesForSection`,\r\n        );\r\n    }\r\n\r\n    getTradeFieldsForBulkEdit(): Observable<ApiCollection<TradeFieldsForBulkEdit>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        const queryParameters = new HttpParams();\r\n\r\n        options.params = queryParameters;\r\n\r\n        return this.get<ApiCollection<TradeFieldsForBulkEdit>>(\r\n            `${environment.tradeServiceLink}/${encodeURIComponent(String(company))}` +\r\n                `/${this.sectionsControllerUrl}/gettradefieldsforbulkedit`,\r\n            options,\r\n        );\r\n    }\r\n\r\n    getCostForSelectedContracts(sectionIds: number[]): Observable<ApiCollection<BulkCost>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        let queryParameters = new HttpParams();\r\n\r\n        queryParameters = queryParameters.set('sectionIds', sectionIds.toString());\r\n\r\n        options.params = queryParameters;\r\n\r\n        return this.get<ApiCollection<BulkCost>>(\r\n            `${environment.tradeServiceLink}/${encodeURIComponent(String(company))}` +\r\n                `/${this.sectionsControllerUrl}/getcostsforcontracts`,\r\n            options,\r\n        );\r\n    }\r\n\r\n    saveBulkCost(bulkCosts: BulkCost[]): Observable<ApiCollection<BulkCost>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        const command = this.mapToSaveBulkCostsCommand(bulkCosts);\r\n        const action = `/${encodeURIComponent(String(company))}/${this.sectionsControllerUrl}/addupdateordeletecostsinbulk`;\r\n\r\n        return this.http.post<ApiCollection<BulkCost>>(environment.tradeServiceLink + action, command);\r\n    }\r\n\r\n    validateIntercoFields(intercoValidation: IntercoValidation): Observable<IntercoValidation> {\r\n        const obj: any = { intercoValidation };\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        const action = `/${encodeURIComponent(String(company))}/${this.physicalControllerUrl}/validateIntercoFields`;\r\n        return this.post<IntercoValidation>(environment.tradeServiceLink + action, obj);\r\n    }\r\n\r\n    createManualInterco(intercoModel: any): Observable<boolean> {\r\n        const companyId: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        const action = `/${encodeURIComponent(String(companyId))}/${this.physicalControllerUrl}/\r\n            ${intercoModel.sectionId}/createManualInterco`;\r\n        return this.post<any>(environment.tradeServiceLink + action, intercoModel);\r\n    }\r\n\r\n    private mapToSaveBulkCostsCommand(costs: BulkCost[]): SaveBulkCostsCommand {\r\n        const command = new SaveBulkCostsCommand();\r\n        command.costs = costs;\r\n        return command;\r\n    }\r\n\r\n    getParentCostsToAdjust(sectionId: number, dataVersionId: number): Observable<ApiCollection<ParentCostsToAdjust>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        let queryParameters = new HttpParams();\r\n        if (dataVersionId) {\r\n            queryParameters = queryParameters.set('dataVersionId', dataVersionId.toString());\r\n        }\r\n        options.params = queryParameters;\r\n\r\n        return this.get<ApiCollection<ParentCostsToAdjust>>(\r\n            `${environment.tradeServiceLink}/${encodeURIComponent(String(company))}` +\r\n                `/${this.sectionsControllerUrl}/${encodeURIComponent(String(sectionId))}/parentcoststoadjust`,\r\n            options,\r\n        );\r\n    }\r\n\r\n    getChildSectionsCostsToAdjust(sectionId: number, dataVersionId: number): Observable<ApiCollection<ChildSectionsCostsToAdjust>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        let queryParameters = new HttpParams();\r\n        if (dataVersionId) {\r\n            queryParameters = queryParameters.set('dataVersionId', dataVersionId.toString());\r\n        }\r\n        options.params = queryParameters;\r\n\r\n        return this.get<ApiCollection<ChildSectionsCostsToAdjust>>(\r\n            `${environment.tradeServiceLink}/${encodeURIComponent(String(company))}` +\r\n                `/${this.sectionsControllerUrl}/${encodeURIComponent(String(sectionId))}/childsectioncoststoadjust`,\r\n            options,\r\n        );\r\n    }\r\n\r\n    fxDealSearch(request: ListAndSearchRequest): Observable<ApiPaginatedCollection<FxDealSearchResult>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        return this.post<ApiPaginatedCollection<FxDealSearchResult>>(\r\n            `${environment.tradeServiceLink}/${encodeURIComponent(String(company))}/${this.fxDealsControllerUrl}/search`,\r\n            request,\r\n        );\r\n    }\r\n\r\n    getContextualDataForContractMerge(sectionId: number, dataVersionId?: number): Observable<MergeAllowedForContracts> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        let queryParameters = new HttpParams();\r\n        if (dataVersionId) {\r\n            queryParameters = queryParameters.set('dataVersionId', dataVersionId.toString());\r\n        }\r\n        options.params = queryParameters;\r\n        return this.get<MergeAllowedForContracts>(\r\n            `${environment.tradeServiceLink}/${encodeURIComponent(String(company))}` +\r\n                `/${this.sectionsMergeControllerUrl}/contextualdataforcontractmerge/${encodeURIComponent(String(sectionId))}`,\r\n            options,\r\n        );\r\n    }\r\n\r\n    getfxDealById(fxDealById: number): Observable<FxDealDetail> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        return this.get<FxDealDetail>(\r\n            `${environment.tradeServiceLink}/${encodeURIComponent(String(company))}` +\r\n                `/${this.fxDealsControllerUrl}/${encodeURIComponent(String(fxDealById))}`,\r\n        );\r\n    }\r\n\r\n    deleteFxDeal(fxDealById: number) {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        return this.delete(\r\n            `${environment.tradeServiceLink}/${encodeURIComponent(String(company))}` +\r\n                `/${this.fxDealsControllerUrl}/${encodeURIComponent(String(fxDealById))}`,\r\n        );\r\n    }\r\n\r\n    getContractFamilyOfSectionToMerge(sectionId: number, dataVersionId?: number): Observable<ApiCollection<ContractFamilyToTradeMerge>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        let queryParameters = new HttpParams();\r\n        if (dataVersionId) {\r\n            queryParameters = queryParameters.set('dataVersionId', dataVersionId.toString());\r\n        }\r\n        options.params = queryParameters;\r\n\r\n        return this.get<ApiCollection<ContractFamilyToTradeMerge>>(\r\n            `${environment.tradeServiceLink}/${encodeURIComponent(String(company))}` +\r\n                `/${this.sectionsMergeControllerUrl}/getcontractfamilyformerge/${encodeURIComponent(String(sectionId))}`,\r\n            options,\r\n        );\r\n    }\r\n\r\n    getSectionIdsForSelectedContractsToMerge(sectionIds: number[], dataVersionId?: number): Observable<ApiCollection<TradeMergeMessage>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        let queryParameters = new HttpParams();\r\n        queryParameters = queryParameters.set('sectionIds', sectionIds.toString());\r\n        if (dataVersionId) {\r\n            queryParameters.append('dataVersionId', dataVersionId.toString());\r\n        }\r\n        options.params = queryParameters;\r\n\r\n        return this.get<ApiCollection<TradeMergeMessage>>(\r\n            `${environment.tradeServiceLink}/${encodeURIComponent(String(company))}`\r\n            + `/${this.sectionsMergeControllerUrl}/contextualdataforselectedcontractmerge/`,\r\n            options);\r\n    }\r\n\r\n    saveContractsToTradeMerge(tradeMerge: MergeContracts[], dataVersionId: number): Observable<boolean> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        const command = this.mapToSaveMergeContractsCommand(tradeMerge, dataVersionId);\r\n        const action = `/${encodeURIComponent(String(company))}/${this.sectionsMergeControllerUrl}/mergecontracts`;\r\n\r\n        return this.http\r\n            .post(environment.tradeServiceLink + action, command, {\r\n                observe: 'response',\r\n            })\r\n            .pipe(map((resp) => resp.ok));\r\n    }\r\n\r\n    getFxDealForMonthEnd(dataVersionId: number): Observable<ApiPaginatedCollection<FxDealGenerateEndOfMonth>> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        let queryParameters = new HttpParams();\r\n        if (dataVersionId) {\r\n            queryParameters = queryParameters.set('dataVersionId', dataVersionId.toString());\r\n        }\r\n        options.params = queryParameters;\r\n        return this.get<ApiPaginatedCollection<FxDealGenerateEndOfMonth>>(\r\n            `${environment.tradeServiceLink}/${encodeURIComponent(String(company))}/${this.sectionsControllerUrl}/fxEndOfMonthData`,\r\n            options,\r\n        );\r\n    }\r\n\r\n    private mapToSaveMergeContractsCommand(contractToMerge: MergeContracts[], dataVersionId): SaveTradeMergeCommand {\r\n        const command = new SaveTradeMergeCommand();\r\n        command.mergeContracts = contractToMerge;\r\n        command.dataVersionId = dataVersionId;\r\n        return command;\r\n    }\r\n\r\n    getTagFields(): Observable<TagField[]> {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n\r\n        return this.get<TagField[]>(\r\n            `${environment.tradeServiceLink}/${encodeURIComponent(String(company))}/${this.TagFieldsControllerUrl}`,\r\n        );\r\n    }\r\n}\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { CompanyPrivileges } from '../../entities/company-privileges.entity';\r\nimport { DirectoryUser } from '../../entities/directory-user.entity';\r\nimport { HttpRequestOptions } from '../../entities/http-services/http-request-options.entity';\r\nimport { Privilege } from '../../entities/privilege.entity';\r\nimport { Profile } from '../../entities/profile.entity';\r\nimport { UserAccountList } from '../../entities/user-account.entity';\r\nimport { UserPermission } from '../../entities/user-permission.entity';\r\nimport { UserProfileList } from '../../entities/user-profile.entity';\r\nimport { User } from '../../entities/user.entity';\r\nimport { ApiCollection, ApiPaginatedCollection } from '../common/models';\r\nimport { CreateProfileCommand, CreateProfilePrivilege, UpdateProfileCommand, UpdateProfilePrivilege } from '../user-identity/dtos/profile';\r\nimport { CreateUserCommand, UpdateUserCommand } from '../user-identity/dtos/user';\r\nimport { HttpBaseService } from './http-base.service';\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class UserIdentityService extends HttpBaseService {\r\n    private readonly userControllerUrl = 'users';\r\n\r\n    constructor(protected http: HttpClient) {\r\n        super(http);\r\n    }\r\n\r\n    // -- Privileges and Profiles\r\n\r\n    getAllPrivileges(): Observable<ApiCollection<Privilege>> {\r\n        const res = this.get<ApiCollection<Privilege>>(`${environment.userIdentityServiceLink}/privileges`);\r\n        return res;\r\n    }\r\n\r\n    getMyPrivileges(company?: string): Observable<ApiCollection<CompanyPrivileges>> {\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        options.headers = this.defaultHttpHeaders;\r\n\r\n        let queryParameters = new HttpParams();\r\n        if (company) {\r\n            queryParameters = queryParameters.set('company', company);\r\n        }\r\n        options.params = queryParameters;\r\n        return this.get<ApiCollection<CompanyPrivileges>>(\r\n            `${environment.userIdentityServiceLink}/users/me/privileges`,\r\n            options);\r\n    }\r\n\r\n    getAllProfiles(): Observable<ApiCollection<Profile>> {\r\n        return this.get<ApiCollection<Profile>>(`${environment.userIdentityServiceLink}/profiles`);\r\n    }\r\n\r\n    getMyUserProfile() {\r\n        return this.get<User>(`${environment.userIdentityServiceLink}/users/me`);\r\n    }\r\n    getProfileByCompanyId(companyId?: string): Observable<ApiCollection<UserProfileList>> {\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        options.headers = this.defaultHttpHeaders;\r\n\r\n        let queryParameters = new HttpParams();\r\n        if (companyId) {\r\n            queryParameters = queryParameters.set('companyId', companyId);\r\n        }\r\n        options.params = queryParameters;\r\n        return this.get<ApiCollection<UserProfileList>>(`${environment.userIdentityServiceLink}/profiles/getprofilebycompanyId`, options);\r\n    }\r\n\r\n    getProfile(profileId: number): Observable<Profile> {\r\n        return this.get<Profile>(`${environment.userIdentityServiceLink}/profiles/${encodeURIComponent(String(profileId))}`);\r\n    }\r\n\r\n    saveProfile(profile: Profile) {\r\n        const createProfileRequest: CreateProfileCommand = {\r\n            name: profile.name,\r\n            description: profile.description,\r\n            privileges: profile.privileges.map((p) => {\r\n                const profilePrivileges: CreateProfilePrivilege = {\r\n                    privilegeId: p.privilegeId,\r\n                    permission: p.permission,\r\n                };\r\n                return profilePrivileges;\r\n            }),\r\n        };\r\n        return this.post(`${environment.userIdentityServiceLink}/profiles`, createProfileRequest);\r\n    }\r\n\r\n    updateProfile(profile: Profile) {\r\n        const updateProfileRequest: UpdateProfileCommand = {\r\n            id: profile.profileId,\r\n            name: profile.name,\r\n            description: profile.description,\r\n            privileges: profile.privileges.map((p) => {\r\n                const profilePrivileges: UpdateProfilePrivilege = {\r\n                    privilegeId: p.privilegeId,\r\n                    permission: p.permission,\r\n                };\r\n                return profilePrivileges;\r\n            }),\r\n        };\r\n        return this.patch(\r\n            `${environment.userIdentityServiceLink}/profiles/${encodeURIComponent(String(profile.profileId))}`,\r\n            updateProfileRequest);\r\n    }\r\n\r\n    deleteProfile(profileId: number) {\r\n        return this.delete(`${environment.userIdentityServiceLink}/profiles/${encodeURIComponent(String(profileId))}`);\r\n    }\r\n\r\n    // -- User\r\n    getAllUsers(): Observable<ApiCollection<User>> {\r\n        return this.get<ApiCollection<User>>(`${environment.userIdentityServiceLink}/users`);\r\n    }\r\n    getUsersByProfileId(profileIds: number[], companyId?: string): Observable<ApiCollection<UserAccountList>> {\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        let queryParameters = new HttpParams();\r\n        if (companyId) {\r\n            queryParameters = queryParameters.set('companyId', companyId);\r\n        }\r\n        queryParameters = queryParameters.set('profileIds', (profileIds.toString()));\r\n        options.params = queryParameters;\r\n        return this.get<ApiCollection<UserAccountList>>(\r\n            `${environment.userIdentityServiceLink}/users/getusersbyprofileId`,\r\n            options);\r\n    }\r\n    getUserByUpn(upn: string): Observable<User> {\r\n        return this.get<User>(`${environment.userIdentityServiceLink}/users/${encodeURIComponent(upn)}`);\r\n    }\r\n\r\n    getUserById(userId: number, includeDeletedUsers = false): Observable<User> {\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        options.headers = this.defaultHttpHeaders;\r\n        let queryParameters = new HttpParams();\r\n        if (includeDeletedUsers) {\r\n            queryParameters = queryParameters.set('includeDeletedUsers', includeDeletedUsers.toString());\r\n        }\r\n        options.params = queryParameters;\r\n        return this.get<User>(`${environment.userIdentityServiceLink}/users/${String(userId)}`, options);\r\n    }\r\n\r\n    searchUserByName(name: string): Observable<ApiCollection<User>> {\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        options.headers = this.defaultHttpHeaders;\r\n        let queryParameters = new HttpParams();\r\n        if (name !== undefined && name !== null) {\r\n            queryParameters = queryParameters.set('name', name);\r\n        }\r\n        options.params = queryParameters;\r\n        return this.get<ApiCollection<User>>(`${environment.userIdentityServiceLink}/users`, options);\r\n    }\r\n\r\n    createUser(user: User) {\r\n        const command = this.mapToCreateUserCommand(user);\r\n\r\n        return this.post(`${environment.userIdentityServiceLink}/${this.userControllerUrl}`, command);\r\n    }\r\n\r\n    updateUser(user: User) {\r\n        const command = this.mapToUpdateUserCommand(user);\r\n        return this.patch(`${environment.userIdentityServiceLink}/${this.userControllerUrl}/${String(user.userId)}`, command);\r\n    }\r\n\r\n    deleteUser(userId: number) {\r\n        return this.delete<User>(`${environment.userIdentityServiceLink}/${this.userControllerUrl}/${String(userId)}`);\r\n    }\r\n\r\n    getDirectoryUsers(searchTerm: string): Observable<ApiPaginatedCollection<DirectoryUser>> {\r\n        const options: HttpRequestOptions = new HttpRequestOptions();\r\n        options.headers = this.defaultHttpHeaders;\r\n\r\n        let queryParameters = new HttpParams();\r\n        if (searchTerm !== undefined && searchTerm !== null) {\r\n            queryParameters = queryParameters.set('searchTerm', searchTerm);\r\n        }\r\n        options.params = queryParameters;\r\n        return this.get<ApiPaginatedCollection<DirectoryUser>>(\r\n            `${environment.userIdentityServiceLink}/directory/users`,\r\n            options);\r\n    }\r\n\r\n    getDirectoryUserById(userId: string): Observable<DirectoryUser> {\r\n        return this.get<DirectoryUser>(`${environment.userIdentityServiceLink}/directory/users/${encodeURIComponent(userId)}`);\r\n    }\r\n\r\n    setMyLastConnectionDateTime() {\r\n        return this.post(`${environment.userIdentityServiceLink}/users/me/lastconnectiondatetime`, null);\r\n    }\r\n\r\n    private mapToCreateUserCommand(user: User): CreateUserCommand {\r\n        const command = new CreateUserCommand();\r\n        command.favoriteLanguage = user.favoriteLanguage;\r\n        command.userPrincipalName = user.userPrincipalName;\r\n        command.azureObjectIdentifier = user.azureObjectIdentifier;\r\n        command.permissions = this.mapPermissionToUserCommandPermission(user.permissions);\r\n        return command;\r\n    }\r\n\r\n    private mapToUpdateUserCommand(user: User): UpdateUserCommand {\r\n        const command = new UpdateUserCommand();\r\n        command.favoriteLanguage = user.favoriteLanguage;\r\n        command.isDisabled = user.isDisabled;\r\n        command.permissions = this.mapPermissionToUserCommandPermission(user.permissions);\r\n        return command;\r\n    }\r\n\r\n    private mapPermissionToUserCommandPermission(permissions: UserPermission[]) {\r\n        return permissions.map((p) => ({\r\n            companyId: p.companyId,\r\n            profileId: p.profileId,\r\n            isTrader: p.isTrader,\r\n            isCharterManager: p.isCharterManager,\r\n            allDepartments: p.allDepartments,\r\n            departments: p.departments.map((d) => ({ departmentId: d.departmentId })),\r\n        }));\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { ListAndSearchFilterDto } from '../../dtos/list-and-search/list-and-search-filter-dto.dto';\r\nimport { DataLoader } from '../../entities/list-and-search/list-and-search-data-loader.entity';\r\nimport { ListAndSearchFilter } from '../../entities/list-and-search/list-and-search-filter.entity';\r\nimport { ListAndSearchRequest } from '../../entities/list-and-search/list-and-search-request.entity';\r\n// import { TradePartialDisplayView } from '../../models/trade-partial-display-view';\r\nimport { AccountingDocumentService } from '../http-services/accounting-document.service';\r\nimport { ApiPaginatedCollection } from '../common/models';\r\n@Injectable()\r\nexport class AccountingEntriesDataLoader implements DataLoader {\r\n\r\n    includeDocumentMatchingInformation = false;\r\n\r\n    constructor(private accountingDocumentService: AccountingDocumentService) { }\r\n\r\n    getData(filters: ListAndSearchFilter[],\r\n        dataVersionId?: number,\r\n        offset?: number,\r\n        limit?: number): Observable<ApiPaginatedCollection<any>> {\r\n\r\n        const filtersForColumns: ListAndSearchFilterDto[] = filters.map((filter) => {\r\n            return new ListAndSearchFilterDto(filter);\r\n        });\r\n\r\n        const request: ListAndSearchRequest = {\r\n            clauses: { clauses: filtersForColumns },\r\n            offset,\r\n            limit,\r\n            additionalParameters: this.includeDocumentMatchingInformation,\r\n        };\r\n\r\n        const list = this.accountingDocumentService.search(request)\r\n            .pipe(\r\n                map((data) => {\r\n                    return data;\r\n                }),\r\n            );\r\n\r\n        return list;\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { ListAndSearchFilterDto } from '../../dtos/list-and-search/list-and-search-filter-dto.dto';\r\nimport { DataLoader } from '../../entities/list-and-search/list-and-search-data-loader.entity';\r\nimport { ListAndSearchFilter } from '../../entities/list-and-search/list-and-search-filter.entity';\r\nimport { ListAndSearchRequest } from '../../entities/list-and-search/list-and-search-request.entity';\r\nimport { AccountingDocumentService } from '../http-services/accounting-document.service';\r\nimport { ApiPaginatedCollection } from '../common/models';\r\n\r\n@Injectable()\r\nexport class ClientReportDataLoader implements DataLoader {\r\n\r\n    constructor(private accountingDocumentService: AccountingDocumentService) {\r\n    }\r\n\r\n    getData(filters: ListAndSearchFilter[],\r\n        dataVersionId?: number,\r\n        offset?: number,\r\n        limit?: number,\r\n        additionalParameters?: any): Observable<ApiPaginatedCollection<any>> {\r\n\r\n        const filtersForColumns: ListAndSearchFilterDto[] = filters.map((filter) => {\r\n            return new ListAndSearchFilterDto(filter);\r\n        });\r\n\r\n        const request: ListAndSearchRequest = {\r\n            clauses: { clauses: filtersForColumns },\r\n            offset,\r\n            limit,\r\n            additionalParameters,\r\n        };\r\n        const list = this.accountingDocumentService.searchClientReport(request)\r\n            .pipe(\r\n                map((data) => {\r\n                    return data;\r\n                }),\r\n            );\r\n\r\n        return list;\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { ListAndSearchFilterDto } from '../../dtos/list-and-search/list-and-search-filter-dto.dto';\r\nimport { DataLoader } from '../../entities/list-and-search/list-and-search-data-loader.entity';\r\nimport { ListAndSearchFilter } from '../../entities/list-and-search/list-and-search-filter.entity';\r\nimport { ListAndSearchRequest } from '../../entities/list-and-search/list-and-search-request.entity';\r\nimport { DocumentService } from './../http-services/document.service';\r\nimport { ApiPaginatedCollection } from '../common/models';\r\n\r\n@Injectable()\r\nexport class DocumentDataLoader implements DataLoader {\r\n\r\n    constructor(private documentService: DocumentService) { }\r\n\r\n    getData(filters: ListAndSearchFilter[],\r\n        offset?: number,\r\n        limit?: number): Observable<ApiPaginatedCollection<any>> {\r\n\r\n        const filtersForColumns: ListAndSearchFilterDto[] = filters.map((filter) => {\r\n            return new ListAndSearchFilterDto(filter);\r\n        });\r\n\r\n        const request: ListAndSearchRequest = {\r\n            clauses: { clauses: filtersForColumns },\r\n            offset,\r\n            limit,\r\n        };\r\n\r\n        const list = this.documentService.search(request)\r\n            .pipe(\r\n                map((data) => {\r\n                    return data;\r\n                }),\r\n            );\r\n\r\n        return list;\r\n    }\r\n}\r\n","import { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { ListAndSearchExport } from '../../../entities/list-and-search/export/list-and-search-export.entity';\r\nimport { ListAndSearchFilter } from '../../../entities/list-and-search/list-and-search-filter.entity';\r\nimport { HttpBaseService } from '../../http-services/http-base.service';\r\nimport { UtilService } from '../../util.service';\r\n\r\nexport abstract class ListAndSearchExportBase extends HttpBaseService implements ListAndSearchExport {\r\n\r\n    constructor(\r\n        protected httpClient: HttpClient,\r\n        protected utilService: UtilService,\r\n        protected window: Window) {\r\n        super(httpClient);\r\n    }\r\n\r\n    abstract sendExportRequest(\r\n        gridCode: string,\r\n        filters: ListAndSearchFilter[],\r\n        dataVersionId?: number,\r\n        gridViewId?: number): Observable<HttpResponse<Blob>>;\r\n\r\n    export(\r\n        gridCode: string,\r\n        filters: ListAndSearchFilter[],\r\n        dataVersionId?: number,\r\n        gridViewId?: number): void {\r\n        this.sendExportRequest(gridCode, filters, dataVersionId, gridViewId)\r\n            .subscribe((file: HttpResponse<Blob>) => {\r\n                this.downloadFile(file);\r\n            });\r\n    }\r\n\r\n    private downloadFile(response: HttpResponse<Blob>) {\r\n        const newBlob = new Blob([response.body],\r\n            { type: 'application/vnd.openxmlformats-officedocument.wordprocessingml.document' });\r\n        const data = this.window.URL.createObjectURL(newBlob);\r\n        const link = document.createElement('a');\r\n        link.href = data;\r\n        link.download = this.utilService.getFileNameFromContentDisposition(response);\r\n        link.click();\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { ExecutionService } from '../../../shared/services/http-services/execution.service';\r\nimport { ListAndSearchFilterDto } from '../../dtos/list-and-search/list-and-search-filter-dto.dto';\r\nimport { DataLoader } from '../../entities/list-and-search/list-and-search-data-loader.entity';\r\nimport { ListAndSearchFilter } from '../../entities/list-and-search/list-and-search-filter.entity';\r\nimport { ListAndSearchRequest } from '../../entities/list-and-search/list-and-search-request.entity';\r\nimport { ApiPaginatedCollection } from '../common/models';\r\n\r\n@Injectable()\r\nexport class InvoiceDataLoader implements DataLoader {\r\n\r\n    constructor(private executionService: ExecutionService) { }\r\n\r\n    getData(filters: ListAndSearchFilter[],\r\n        dataVersionId?: number,\r\n        offset?: number,\r\n        limit?: number): Observable<ApiPaginatedCollection<any>> {\r\n\r\n        const filtersForColumns: ListAndSearchFilterDto[] = filters.map((filter) => {\r\n            return new ListAndSearchFilterDto(filter);\r\n        });\r\n\r\n        const request: ListAndSearchRequest = {\r\n            clauses: { clauses: filtersForColumns },\r\n            offset,\r\n            limit,\r\n        };\r\n        // has to replace with execution search service call\r\n        const list = this.executionService.search(request)\r\n            .pipe(\r\n                map((data) => {\r\n                    return data;\r\n                }),\r\n            );\r\n\r\n        return list;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { ListAndSearchFilterDto } from '../../dtos/list-and-search/list-and-search-filter-dto.dto';\r\nimport { DataLoader } from '../../entities/list-and-search/list-and-search-data-loader.entity';\r\nimport { ListAndSearchFilter } from '../../entities/list-and-search/list-and-search-filter.entity';\r\nimport { ListAndSearchRequest } from '../../entities/list-and-search/list-and-search-request.entity';\r\nimport { AccountingDocumentService } from '../http-services/accounting-document.service';\r\nimport { ApiPaginatedCollection } from '../common/models';\r\n\r\n@Injectable()\r\nexport class NominalReportDataLoader implements DataLoader {\r\n\r\n    constructor(private accountingDocumentService: AccountingDocumentService) {\r\n    }\r\n\r\n    getData(filters: ListAndSearchFilter[],\r\n        dataVersionId?: number,\r\n        offset?: number,\r\n        limit?: number,\r\n        additionalParameters?: any): Observable<ApiPaginatedCollection<any>> {\r\n\r\n        const filtersForColumns: ListAndSearchFilterDto[] = filters.map((filter) => {\r\n            return new ListAndSearchFilterDto(filter);\r\n        });\r\n\r\n        const request: ListAndSearchRequest = {\r\n            clauses: { clauses: filtersForColumns },\r\n            offset,\r\n            limit,\r\n            additionalParameters,\r\n        };\r\n        const list = this.accountingDocumentService.searchNominalReport(request)\r\n            .pipe(\r\n                map((data) => {\r\n                    return data;\r\n                }),\r\n            );\r\n\r\n        return list;\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { ListAndSearchFilterDto } from '../../dtos/list-and-search/list-and-search-filter-dto.dto';\r\nimport { DataLoader } from '../../entities/list-and-search/list-and-search-data-loader.entity';\r\nimport { ListAndSearchFilter } from '../../entities/list-and-search/list-and-search-filter.entity';\r\nimport { ListAndSearchRequest } from '../../entities/list-and-search/list-and-search-request.entity';\r\nimport { ApiPaginatedCollection } from '../common/models';\r\n// import { TradePartialDisplayView } from '../../models/trade-partial-display-view';\r\nimport { TradingService } from '../http-services/trading.service';\r\nimport { SectionSearchResult } from './../../dtos/section-search-result';\r\n\r\n@Injectable()\r\nexport class TradeDataLoader implements DataLoader {\r\n    constructor(private tradingService: TradingService) { }\r\n\r\n    getData(filters: ListAndSearchFilter[],\r\n        dataVersionId?: number,\r\n        offset?: number,\r\n        limit?: number): Observable<ApiPaginatedCollection<any>> {\r\n\r\n        const filtersForColumns: ListAndSearchFilterDto[] = filters.map((filter) => {\r\n            return new ListAndSearchFilterDto(filter);\r\n        });\r\n\r\n        const request: ListAndSearchRequest = {\r\n            clauses: { clauses: filtersForColumns },\r\n            offset,\r\n            limit,\r\n            dataVersionId,\r\n        };\r\n\r\n        const list = this.tradingService.search(request)\r\n            .pipe(\r\n                map((data) => {\r\n                    return data;\r\n                }),\r\n            );\r\n\r\n        return list;\r\n    }\r\n}\r\n","\r\nexport class DeleteLocksCommand\r\n{\r\n    lockIds: number[];\r\n}\r\n","import { LockFunctionalContext } from '../../../entities/lock-functional-context.entity';\r\n\r\nexport class LockResourceCommand {\r\n    company: string;\r\n    functionalContext: LockFunctionalContext;\r\n    resourceId: number;\r\n    applicationSessionId: string;\r\n    resourceType: string;\r\n}\r\n","import { LockResourceInformation } from '../../../entities/lock-resource-information.entity';\r\n\r\nexport class RefreshLockOwnershipCommand {\r\n    company: string;    \r\n    applicationSessionId: string;\r\n    resourcesInformation: LockResourceInformation[];\r\n}\r\n\r\n","import { LockFunctionalContext } from '../../../entities/lock-functional-context.entity';\r\n\r\nexport class UnlockResourceCommand {\r\n    company: string;\r\n    functionalContext: LockFunctionalContext;\r\n    resourceId: number;\r\n    applicationSessionId: string;\r\n    resourceType: string;\r\n}\r\n","export class CommoditySearchTerm {\r\n    principalCommodity: string;\r\n    commodityOrigin: string;\r\n    commodityGrade: string;\r\n    commodityLvl4: string;\r\n    commodityLvl5: string;\r\n}\r\n","export class AccountingDocumentStatusCommand {\r\n    accountingId: number;\r\n    statusId: number;\r\n}\r\n","import { AccountingDocumentStatusCommand } from './accounting-document-status-command';\r\n\r\nexport class AccountingDocumentStatusDtoCommand {\r\n\r\n    accountingDocuments: AccountingDocumentStatusCommand[];\r\n}","export class CreateAccountingDocumentCommand {\r\n    docId: number;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { forkJoin, Observable, of as observableOf, Subject, throwError } from 'rxjs';\r\nimport { catchError, finalize, map, mergeMap } from 'rxjs/operators';\r\nimport { environment } from '../../../environments/environment';\r\nimport { AuthorizationService } from '../../core/services/authorization.service';\r\nimport { AtlasConfiguration } from '../entities/atlas-configuration.entity';\r\nimport { DiscoveryService } from './discovery.service';\r\nimport { ConfigurationService } from './http-services/configuration.service';\r\nimport { UserIdentityService } from './http-services/user-identity.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class SecurityService {\r\n    // observable that is fired when settings are loaded from server\r\n    private settingsLoadedSource = new Subject();\r\n    private userLoadedSource = new Subject();\r\n    private authorizationLoadedSource = new Subject();\r\n\r\n    settingsLoaded$ = this.settingsLoadedSource.asObservable();\r\n    userLoaded$ = this.userLoadedSource.asObservable();\r\n    authorizationLoaded$ = this.authorizationLoadedSource.asObservable();\r\n    isReady = false;\r\n\r\n    constructor(private authorizationService: AuthorizationService,\r\n        private discoveryService: DiscoveryService,\r\n        private userIdentityService: UserIdentityService,\r\n        private userConfigurationService: ConfigurationService) {\r\n    }\r\n\r\n    load() {\r\n        return this.discoveryService.getConfiguration()\r\n            .pipe(\r\n                mergeMap((config: AtlasConfiguration) => {\r\n                    this.initializeEnvironment(config);\r\n                    return forkJoin([this.userIdentityService.getMyUserProfile(), this.userIdentityService.getMyPrivileges()]);\r\n                }),\r\n                catchError((error) => {\r\n                    if (error.status === 404) {\r\n                        error.status = 401;\r\n                    } else if (error.status === 403) {\r\n                        Object.defineProperty(error, 'displayAtlasErrorPage', {\r\n                            value: true,\r\n                            writable: false,\r\n                        });\r\n                    }\r\n\r\n                    this.authorizationService.denyUser();\r\n                    return throwError(error);\r\n                }),\r\n                mergeMap(([user, privileges]) => {\r\n                    this.authorizationService.user = user;\r\n                    this.authorizationService.authorizeUser();\r\n                    this.authorizationService.addNewCompanyPrivileges(privileges.value);\r\n                    return this.authorizationService.initializeCompanies(user);\r\n                }),\r\n                catchError((error) => {\r\n                    if (error.status === 404) {\r\n                        error.status = 401;\r\n                    } else if (error.status === 403) {\r\n                        Object.defineProperty(error, 'displayAtlasErrorPage', {\r\n                            value: true,\r\n                            writable: false,\r\n                        });\r\n                    }\r\n\r\n                    this.authorizationService.denyUser();\r\n                    return throwError(error);\r\n                }),\r\n                finalize(() => {\r\n                    this.authorizationService.authorizationLoaded();\r\n                }))\r\n            .subscribe(\r\n                () => {\r\n                    this.isReady = true;\r\n                    this.settingsLoadedSource.next();\r\n                    this.userLoadedSource.next();\r\n                    this.authorizationLoadedSource.next();\r\n                });\r\n    }\r\n\r\n    private initializeEnvironment(configuration: AtlasConfiguration) {\r\n        environment.tradeServiceLink = configuration.endpoints.trading;\r\n        environment.masterDataServiceLink = configuration.endpoints.masterData;\r\n        environment.executionServiceLink = configuration.endpoints.execution;\r\n        environment.controllingServiceLink = configuration.endpoints.controlling;\r\n        environment.documentServiceLink = configuration.endpoints.document;\r\n        environment.userIdentityServiceLink = configuration.endpoints.userIdentity;\r\n        environment.preAccountingServiceLink = configuration.endpoints.preAccounting;\r\n        environment.applicationInsights = configuration.applicationInsights;\r\n        environment.tokenConfiguration = configuration.tokenConfiguration;\r\n        environment.configurationServiceLink = configuration.endpoints.configuration;\r\n        environment.freezeServiceLink = configuration.endpoints.freeze;\r\n        environment.reportingServiceLink = configuration.endpoints.reporting;\r\n        environment.reportServerLink = configuration.endpoints.reportServer;\r\n        environment.accountingInterfaceServiceLink = configuration.endpoints.accountingInterface;\r\n        environment.interfaceServiceLink = configuration.endpoints.interface;\r\n        environment.auditServiceLink = configuration.endpoints.audit;\r\n\r\n        environment.environmentType = configuration.environmentType;\r\n        environment.environmentName = configuration.environmentName;\r\n        environment.version = configuration.version;\r\n        environment.friendlyName = configuration.friendlyName;\r\n        environment.lockServiceLink = configuration.endpoints.lock;\r\n    }\r\n\r\n    isSecurityReady(): Observable<boolean> {\r\n        if (this.isReady) {\r\n            return observableOf(true);\r\n        }\r\n\r\n        return this.settingsLoaded$.pipe(\r\n            mergeMap(() => {\r\n                return this.userLoaded$;\r\n            }),\r\n            mergeMap(() => {\r\n                return this.authorizationLoaded$;\r\n            }),\r\n            map(() => {\r\n                return true;\r\n            }));\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class SnackbarService {\r\n\r\n    constructor(\r\n        private snackBar: MatSnackBar,\r\n        private router: Router,\r\n    ) { }\r\n    snackBarDurationInSeconds = 10;\r\n    informationSnackBarDurationInSeconds = 4;\r\n    errorSnackBarDurationInSeconds = 4;\r\n    public throwErrorSnackBar(text: string, persist = false) {\r\n        const snackBarRef = this.snackBar.open(text, 'X', {\r\n            duration: persist ? null : this.errorSnackBarDurationInSeconds * 1000,\r\n            verticalPosition: 'top',\r\n        });\r\n        snackBarRef.onAction().subscribe(() => {\r\n            snackBarRef.dismiss();\r\n        });\r\n    }\r\n\r\n    public informationSnackBar(text: string, persist: boolean = false) {\r\n        const snackBarRef = this.snackBar.open(text, 'X', {\r\n            duration: persist ? null : this.informationSnackBarDurationInSeconds * 1000,\r\n            verticalPosition: 'top',\r\n        });\r\n        snackBarRef.onAction().subscribe(() => {\r\n            snackBarRef.dismiss();\r\n        });\r\n    }\r\n\r\n    public informationAndCopySnackBar(text: string, copyText: string) {\r\n        const snackBarRef = this.snackBar.open(text, 'COPY', {\r\n            duration: this.snackBarDurationInSeconds * 1000,\r\n            verticalPosition: 'top',\r\n        });\r\n        snackBarRef.onAction().subscribe(() => {\r\n            this.copyText(copyText);\r\n            snackBarRef.dismiss();\r\n        });\r\n    }\r\n\r\n    copyText(val: string) {\r\n        const selBox = document.createElement('textarea');\r\n        selBox.value = val;\r\n        document.body.appendChild(selBox);\r\n        selBox.select();\r\n        document.execCommand('copy');\r\n        document.body.removeChild(selBox);\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { CompanyManagerService } from '../../core/services/company-manager.service';\r\nimport { Charter } from '../entities/charter.entity';\r\nimport { SectionReference } from '../entities/section-reference.entity';\r\nimport { SectionTraffic } from '../entities/section-traffic.entity';\r\nimport { Section } from '../entities/section.entity';\r\nimport { SectionTypes } from '../enums/section-type.enum';\r\nimport { AssignedSectionView } from '../models/assigned-section-display-view';\r\nimport { TrancheSplitView } from '../models/tranche-split-display-view';\r\nimport { ChildSectionsSearchResult } from '../dtos/chilesection-search-result';\r\nimport { AllocateSectionCommand } from './execution/dtos/allocate-section-command';\r\nimport { ExecutionService } from './http-services/execution.service';\r\nimport { TradingService } from './http-services/trading.service';\r\nimport { SnackbarService } from './snackbar.service';\r\nimport { TrancheSplitCreationResult } from './trading/dtos/section';\r\nimport { ContractInvoiceType } from '../enums/contract-invoice-type.enum';\r\n@Injectable()\r\nexport class SplitCreateAndAllocateService {\r\n\r\n    messageOnAllocation: string = '';\r\n    referenceGroupNumber: string = '';\r\n    washoutRequired: boolean = false;\r\n\r\n    constructor(private executionService: ExecutionService,\r\n        protected snackbarService: SnackbarService,\r\n        protected tradingService: TradingService,\r\n        protected router: Router,\r\n        protected companyManager: CompanyManagerService) { }\r\n\r\n    async createSplitOfAssignedSections(sectionsToSplitAndAssign: AssignedSectionView[], charterId: number = null, isWashoutRequired?: boolean): Promise<boolean> {\r\n        let repeateSectionArray: number[] = [];\r\n        // Loop through sections to split\r\n        // For each section, wait for iteration to be over before moving to the next one\r\n        this.washoutRequired = isWashoutRequired;\r\n        const createSplitOfAssignedSectionsPromises: Array<Promise<boolean>> = sectionsToSplitAndAssign\r\n            .map((section) => this.createSplitOfAssignedSection(section, charterId, repeateSectionArray));\r\n        return Promise.all(createSplitOfAssignedSectionsPromises).then(() => {\r\n            return true;\r\n        });\r\n    }\r\n\r\n    async createSplitOfAssignedSection(assignedSection: AssignedSectionView, charterId: number = null, repeateSectionArray: number[]): Promise<boolean> {\r\n        // Get section\r\n        return this.tradingService.getSection(assignedSection.sectionId, 0)\r\n            .toPromise()\r\n            .then((assignedSectionData: Section) => {\r\n                // Get children\r\n                return this.tradingService.getChildSections(assignedSection.sectionId).toPromise()\r\n                    .then((childSections: ChildSectionsSearchResult[]) => {\r\n                        assignedSectionData.childSections = childSections.map((childSectionResult) => {\r\n                            const childSection = new Section();\r\n                            childSection.setSectionFromChildSectionsSearchResult(\r\n                                childSectionResult, assignedSection.sectionId);\r\n                            return childSection;\r\n                        });\r\n                        let isSplitRequired: boolean = false;\r\n                        // Define the call to save the split of the section\r\n                        const saveSplitPromises: Array<Promise<TrancheSplitCreationResult>> = [];\r\n                        if (assignedSectionData.quantity !== assignedSection.quantity) {\r\n                            isSplitRequired = true;\r\n\r\n                            saveSplitPromises.push(this.createAndSaveSplitWhenAssigningCharter(\r\n                                assignedSectionData, assignedSection.quantity, childSections, repeateSectionArray));\r\n                        }\r\n\r\n                        // If section is allocated, allocated section sould be splitted and assigned to charter too\r\n                        let allocatedContractSectionId: number;\r\n                        const allocation: SectionReference = {\r\n                            contractLabel: null,\r\n                            sectionId: null,\r\n                            invoicingStatusId: null,\r\n                            sectionNumberId: null,\r\n                            sectionTypeId: null,\r\n                        };\r\n                        Object.assign(allocation, assignedSectionData.allocatedTo);\r\n                        if (assignedSection.allocatedSectionId) {\r\n                            allocation.sectionId = assignedSection.allocatedSectionId;\r\n                        }\r\n                        if (allocation.sectionId) {\r\n                            allocatedContractSectionId = allocation.sectionId;\r\n                            // Get allocated section\r\n                            return this.tradingService.getSection(allocatedContractSectionId, 0)\r\n                                .toPromise()\r\n                                .then((allocatedSection) => {\r\n                                    const sectionTrafficList: SectionTraffic[] = [];\r\n                                    // get allocated section Children\r\n                                    return this.tradingService.getChildSections(allocatedContractSectionId)\r\n                                        .toPromise()\r\n                                        .then((allocatedChildSections: ChildSectionsSearchResult[]) => {\r\n                                            allocatedSection.childSections = allocatedChildSections.map((childSectionResult) => {\r\n                                                const childSection = new Section();\r\n                                                childSection.setSectionFromChildSectionsSearchResult(\r\n                                                    childSectionResult, allocatedContractSectionId);\r\n                                                return childSection;\r\n                                            });\r\n                                            if (allocatedSection.quantity !== assignedSection.quantity) {\r\n                                                // Define the call to save the split of the allocated section\r\n                                                saveSplitPromises.push(\r\n                                                    this.createAndSaveSplitWhenAssigningCharter(\r\n                                                        allocatedSection, assignedSection.quantity, allocatedChildSections, repeateSectionArray));\r\n                                                if (isSplitRequired) {\r\n                                                    // Call the save functions and handle result (including allocation)\r\n                                                    return this.handleSavePromises(saveSplitPromises, charterId, assignedSection, true);\r\n                                                } else {\r\n                                                    const sectionTraffic = this.getSectionTraffic(\r\n                                                        assignedSectionData.sectionId,\r\n                                                        assignedSection.blDate,\r\n                                                        assignedSection.blRef,\r\n                                                        assignedSection.vessel,\r\n                                                        assignedSection.portDestination,\r\n                                                        assignedSection.portOrigin);\r\n                                                    sectionTrafficList.push(sectionTraffic);\r\n                                                    return this.handleSavePromises(\r\n                                                        saveSplitPromises, charterId,\r\n                                                        assignedSection, true, sectionTrafficList);\r\n                                                }\r\n                                            } else {\r\n                                                if (isSplitRequired) {\r\n                                                    const sectionTraffic = this.getSectionTraffic(\r\n                                                        allocatedSection.sectionId,\r\n                                                        assignedSection.blDate,\r\n                                                        assignedSection.blRef,\r\n                                                        assignedSection.vessel,\r\n                                                        assignedSection.portDestination,\r\n                                                        assignedSection.portOrigin);\r\n                                                    sectionTrafficList.push(sectionTraffic);\r\n                                                    // Call the save functions and handle result (including allocation)\r\n                                                    return this.handleSavePromises(\r\n                                                        saveSplitPromises, charterId,\r\n                                                        assignedSection, true, sectionTrafficList);\r\n                                                } else {\r\n                                                    const sectionTrafficForAllocated = this.getSectionTraffic(\r\n                                                        allocatedSection.sectionId, assignedSection.blDate,\r\n                                                        assignedSection.blRef, assignedSection.vessel,\r\n                                                        assignedSection.portDestination, assignedSection.portOrigin);\r\n                                                    sectionTrafficList.push(sectionTrafficForAllocated);\r\n                                                    const sectionTraffic = this.getSectionTraffic(\r\n                                                        assignedSectionData.sectionId, assignedSection.blDate,\r\n                                                        assignedSection.blRef, assignedSection.vessel,\r\n                                                        assignedSection.portDestination, assignedSection.portOrigin);\r\n                                                    sectionTrafficList.push(sectionTraffic);\r\n                                                    // Call the save functions and handle result (including allocation)\r\n                                                    return this.handleSavePromises(\r\n                                                        saveSplitPromises, charterId,\r\n                                                        assignedSection, true, sectionTrafficList);\r\n                                                }\r\n                                            }\r\n                                        });\r\n                                });\r\n                        } else {\r\n                            const sectionTrafficList: SectionTraffic[] = [];\r\n                            if (isSplitRequired) {\r\n                                return this.handleSavePromises(saveSplitPromises, charterId, assignedSection, false);\r\n                            } else {\r\n                                const sectionTraffic = this.getSectionTraffic(\r\n                                    assignedSectionData.sectionId, assignedSection.blDate, assignedSection.blRef, assignedSection.vessel,\r\n                                    assignedSection.portDestination, assignedSection.portOrigin);\r\n                                sectionTrafficList.push(sectionTraffic);\r\n                                // Call the save functions and handle result\r\n                                return this.handleSavePromises(saveSplitPromises, charterId, assignedSection, false, sectionTrafficList);\r\n                            }\r\n                        }\r\n                    });\r\n            });\r\n    }\r\n\r\n    async handleSavePromises(\r\n        saveSplitPromises: Array<Promise<TrancheSplitCreationResult>>,\r\n        charterId: number,\r\n        assignedSection: AssignedSectionView,\r\n        shouldAllocate: boolean,\r\n        sectionTrafficList: SectionTraffic[] = []): Promise<boolean> {\r\n\r\n        return Promise.all(saveSplitPromises)\r\n            .then(\r\n                (splitsCreated: TrancheSplitView[]) => {\r\n                    // get the ids of the splits created\r\n                    const sectionTrafficListForAllocated: SectionTraffic[] = [];\r\n\r\n                    splitsCreated.forEach((split) => {\r\n                        const sectionTraffic = this.getSectionTraffic(\r\n                            split.sectionId, assignedSection.blDate, assignedSection.blRef,\r\n                            assignedSection.vessel, assignedSection.portDestination, assignedSection.portOrigin);\r\n                        sectionTrafficListForAllocated.push(sectionTraffic);\r\n                    });\r\n                    if (sectionTrafficList.length > 0) {\r\n                        sectionTrafficList.forEach((sectionId) => sectionTrafficListForAllocated.push(sectionId));\r\n                    }\r\n\r\n                    const assignAndAllocate: Array<Promise<(Charter | any)>> = [];\r\n\r\n                    // Define the call to assign the splits to the charter\r\n                    assignAndAllocate.push(this.assignCharterToSections(sectionTrafficListForAllocated, charterId));\r\n\r\n                    if (shouldAllocate) {\r\n\r\n                        const splitsToAllocate: TrancheSplitCreationResult[] = [];\r\n                        splitsCreated.forEach((newSplits) => splitsToAllocate.push(new TrancheSplitCreationResult(newSplits.sectionId, newSplits.contractLabel)));\r\n                        if (sectionTrafficList.length > 0) {\r\n                            sectionTrafficList.forEach((sectionTraffic) => splitsToAllocate.push(\r\n                                new TrancheSplitCreationResult(sectionTraffic.sectionId)));\r\n                        }\r\n                        // Define the call to allocate the splits together\r\n                        assignAndAllocate.push(this.allocateSections(splitsToAllocate, assignedSection.quantity));\r\n                    }\r\n\r\n                    // Check everything is completed\r\n                    return Promise.all(assignAndAllocate).then((results) => {\r\n\r\n                        return true;\r\n                    });\r\n                });\r\n    }\r\n\r\n    private async allocateSections(allocateSectionResult: TrancheSplitCreationResult[],\r\n        quantity: number) {\r\n\r\n        if (allocateSectionResult.length !== 2) {\r\n            throw new Error('Something went wrong when allocating splits');\r\n        }\r\n\r\n        const allocateSection: AllocateSectionCommand = new AllocateSectionCommand();\r\n        allocateSection.sectionId = allocateSectionResult[0].sectionId;\r\n        allocateSection.allocatedSectionId = allocateSectionResult[1].sectionId;\r\n        allocateSection.quantity = quantity;\r\n        allocateSection.shippingType = 1;\r\n        if (this.washoutRequired) {\r\n            allocateSection.contractInvoiceTypeId = ContractInvoiceType.Washout;\r\n        }\r\n\r\n        return this.executionService.allocate(allocateSection).toPromise().then((groupNumber: number) => {\r\n            this.messageOnAllocation = this.messageOnAllocation + `the trade  ${allocateSectionResult[0].contractLabel}\r\n            has been properly allocated to ${allocateSectionResult[1].contractLabel} with the number ${groupNumber.toString()} `;\r\n            this.referenceGroupNumber = groupNumber.toString();\r\n            return true;\r\n        });\r\n    }\r\n\r\n    assignCharterToSections(sectionTrafficList: SectionTraffic[], charterId: number): Promise<Charter> {\r\n        if (!charterId) {\r\n            throw new Error('Charter not defined');\r\n        }\r\n        return this.executionService.assignSectionsToCharter(charterId, sectionTrafficList)\r\n            .toPromise().then((charter: Charter) => {\r\n                return charter;\r\n            });\r\n    }\r\n\r\n    async createAndSaveSplitWhenAssigningCharter(\r\n        section: Section, quantity: number,\r\n        childSections: ChildSectionsSearchResult[], repeateSectionArray: number[]): Promise<TrancheSplitCreationResult> {\r\n        section.childSections.push(this.getNewChildSectionAfterAssignToCharter(section, quantity, childSections, repeateSectionArray));\r\n        return this.saveCreatedSectionSplit(section, quantity);\r\n    }\r\n\r\n    async saveCreatedSectionSplit(createdSectionSplit: Section, quantity: number): Promise<TrancheSplitCreationResult> {\r\n        var start = new Date().getTime();\r\n\r\n        for (var i = 0; i < 1e7; i++) {\r\n            if ((new Date().getTime() - start) > 500) {\r\n                break;\r\n            }\r\n        }\r\n        return this.tradingService.createTrancheSplit(createdSectionSplit, SectionTypes.Split).toPromise()\r\n            .then((splitCreated: TrancheSplitCreationResult[]) => {\r\n                if (splitCreated.length !== 1) {\r\n                    if (splitCreated.length === 0) {\r\n                        throw new Error('No split created for section');\r\n                    } else {\r\n                        throw new Error('Too many splits created');\r\n                    }\r\n                }\r\n                return splitCreated[0];\r\n            });\r\n    }\r\n\r\n    removeAllocation(section: Section): Section {\r\n        section.sectionId = null;\r\n        section.allocatedToId = null;\r\n        section.allocatedTo = null;\r\n        section.allocationDate = null;\r\n        return section;\r\n    }\r\n\r\n    getNewChildSectionAfterAssignToCharter(section: Section, quantity: number,\r\n        physicalContractSections: ChildSectionsSearchResult[], repeateSectionArray: number[]): Section {\r\n\r\n        const childSectionSplit2: TrancheSplitView = new TrancheSplitView(section, quantity);\r\n\r\n        let childSectionSplit: Section = new Section();\r\n        Object.assign(childSectionSplit, section);\r\n        Object.assign(childSectionSplit.childSections, section.childSections);\r\n        childSectionSplit.childSections = [];\r\n        childSectionSplit.quantity = quantity;\r\n        childSectionSplit = this.removeAllocation(childSectionSplit);\r\n        childSectionSplit.sectionTypeId = SectionTypes.Split;\r\n        childSectionSplit.sectionOriginId = section.sectionId;\r\n        childSectionSplit.sectionId = 0;\r\n        childSectionSplit.contractedValue = (section.price * quantity).toString();\r\n\r\n        repeateSectionArray.push(childSectionSplit.contractId);\r\n\r\n        const physicalContractId: string = section.contractLabel.split('.')[0];\r\n        let childSectionNumberId: string;\r\n        const sectionNumberId = this.findLatestContractLabelForSplit(section, physicalContractSections);\r\n        childSectionNumberId = this.generateSectionNumberForSplit(sectionNumberId);\r\n\r\n        let loopCount = repeateSectionArray.filter(contractId => contractId == childSectionSplit.contractId).length;\r\n\r\n\r\n        if (loopCount > 1) {\r\n            for (let index = 1; index < loopCount; index++) {\r\n                childSectionNumberId = this.generateSectionNumberForSplit(childSectionNumberId);\r\n            }\r\n        }\r\n\r\n        if (childSectionNumberId.length === 0) {\r\n            throw new Error('Could not generate contract reference');\r\n        }\r\n\r\n        childSectionSplit.contractLabel = physicalContractId + '.' + childSectionNumberId;\r\n        childSectionSplit.sectionNumber = childSectionNumberId;\r\n        childSectionSplit.originalQuantity = childSectionSplit.quantity;\r\n\r\n        return childSectionSplit;\r\n    }\r\n\r\n    findLatestContractLabelForSplit(section: Section, childSections: ChildSectionsSearchResult[]): string {\r\n        let filterSplitsInTranche: ChildSectionsSearchResult[];\r\n        const findFirstChar = section.sectionNumber.charAt(0);\r\n        filterSplitsInTranche = childSections.filter((childSection) => {\r\n            const sectionNumber = childSection.contractLabel.split('.')[1];\r\n            return sectionNumber.charAt(0) === findFirstChar;\r\n        });\r\n\r\n        let contractLabels = [section.contractLabel];\r\n        contractLabels = contractLabels.concat(filterSplitsInTranche.map((child) => child.contractLabel));\r\n\r\n        const orderedTranche = contractLabels.sort((contractLabel1, contractLabel2) => {\r\n            if (contractLabel1 > contractLabel2) { return 1; } else { return -1; }\r\n        });\r\n        return orderedTranche[orderedTranche.length - 1].split('.')[1];\r\n    }\r\n\r\n    findLatestContractLabelForTranche(section: Section, childSections: ChildSectionsSearchResult[]) {\r\n        let contractLabels = [section.contractLabel];\r\n        contractLabels = contractLabels.concat(childSections.map((child) => child.contractLabel));\r\n\r\n        const orderedTranche = contractLabels.sort((contractLabel1, contractLabel2) => {\r\n            if (contractLabel1 > contractLabel2) { return 1; } else { return -1; }\r\n        });\r\n        return orderedTranche[orderedTranche.length - 1].split('.')[1];\r\n    }\r\n\r\n    private generateSectionNumberForSplit(latestSectionId: string): string {\r\n        const startIndex: number = 1;\r\n        const endIndex: number = 4;\r\n        const numberToGenerate: number = Number(latestSectionId.substring(startIndex, endIndex)) + 1;\r\n        let digitsToIncrement: string = numberToGenerate.toString();\r\n        digitsToIncrement = digitsToIncrement.padStart(endIndex - startIndex, '0');\r\n        return numberToGenerate > 999 ? '' : latestSectionId.charAt(0) + digitsToIncrement;\r\n    }\r\n\r\n    getSections(trancheSplitList: TrancheSplitView[]): Section[] {\r\n        let childSectionList: Section[];\r\n        childSectionList = [];\r\n        trancheSplitList.forEach((section) => {\r\n            const childSection: Section = this.getSection(section);\r\n            childSectionList.push(childSection);\r\n        });\r\n\r\n        return childSectionList;\r\n    }\r\n\r\n    getSection(section: TrancheSplitView): Section {\r\n        const childSection: Section = new Section();\r\n        childSection.contractType = section.contractType;\r\n        childSection.contractLabel = section.contractLabel;\r\n        childSection.contractId = section.contractId;\r\n        childSection.commodityId = section.commodityId;\r\n        childSection.sectionNumber = section.sectionNumber;\r\n        childSection.status = section.status;\r\n        childSection.firstApprovalDateTime = section.firstApprovalDateTime;\r\n        childSection.departmentId = section.departmentId;\r\n        childSection.buyerCode = section.buyerCode;\r\n        childSection.sellerCode = section.sellerCode;\r\n        childSection.counterpartyReference = section.counterpartyReference;\r\n        childSection.originalQuantity = section.originalQuantity;\r\n        childSection.quantity = section.quantity;\r\n        childSection.portOfOrigin = section.portOfOrigin;\r\n        childSection.portOfDestination = section.portOfDestination;\r\n        childSection.deliveryPeriodStartDate = section.deliveryPeriodStartDate;\r\n        childSection.deliveryPeriodEndDate = section.deliveryPeriodEndDate;\r\n        childSection.positionMonthType = section.positionMonthType;\r\n        childSection.positionMonthIndex = section.positionMonthIndex;\r\n        childSection.cropYear = section.cropYear;\r\n        childSection.packingCode = section.packingCode;\r\n        childSection.contractTerms = section.contractTerms;\r\n        childSection.contractTermsLocation = section.contractTermsLocation;\r\n        childSection.periodTypeId = section.periodTypeId;\r\n        childSection.arbitration = section.arbitration;\r\n        childSection.pricingMethod = section.pricingMethod;\r\n        childSection.paymentTerms = section.paymentTerms;\r\n        childSection.currencyCode = section.currency;\r\n        childSection.price = section.price;\r\n        childSection.blDate = section.blDate;\r\n        childSection.assignedCharterReference = section.assignedCharterReference;\r\n        childSection.charterAssignmentDate = section.charterAssignmentDate;\r\n        childSection.createdBy = section.createdBy;\r\n        childSection.creationDate = section.creationDate;\r\n        childSection.lastModifiedBy = section.lastModifiedBy;\r\n        childSection.lastModifiedDate = section.lastModifiedDate;\r\n        childSection.header = section.header;\r\n        childSection.sectionOriginId = section.sectionOriginId;\r\n        childSection.contractLabelOrigin = section.contractLabelOrigin;\r\n        childSection.premiumDiscountValue = section.premiumDiscountValue;\r\n        childSection.premiumDiscountCurrency = section.premiumDiscountCurrency;\r\n        childSection.premiumDiscountBasis = section.premiumDiscountBasis;\r\n        childSection.memorandum = section.memorandum;\r\n        childSection.contractedValue = section.contractedValue;\r\n        childSection.weightUnitId = section.weightUnitId;\r\n        childSection.priceUnitId = section.priceUnitId;\r\n        childSection.marketSectorId = section.marketSectorId;\r\n        childSection.sectionTypeId = section.sectionTypeId;\r\n        childSection.costs = section.costs;\r\n        return childSection;\r\n    }\r\n\r\n    getSectionTraffic(\r\n        sectionId: number, blDate: Date, blRef: string,\r\n        vessel: string, portDestination: string, portOfOrigin: string): SectionTraffic {\r\n\r\n        const sectionTraffic: SectionTraffic = new SectionTraffic();\r\n        sectionTraffic.sectionId = sectionId;\r\n        sectionTraffic.blDate = blDate;\r\n        sectionTraffic.blReference = blRef;\r\n        sectionTraffic.vesselCode = vessel;\r\n        sectionTraffic.portDestination = portDestination;\r\n        sectionTraffic.portOrigin = portOfOrigin;\r\n\r\n        return sectionTraffic;\r\n    }\r\n}\r\n","import { Injectable, OnDestroy } from '@angular/core';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { Router, NavigationStart } from '@angular/router';\r\nimport { environment } from '../../../environments/environment';\r\nimport { CompanyManagerService } from '../../core/services/company-manager.service';\r\n\r\n@Injectable()\r\nexport class TitleService implements OnDestroy {\r\n    \r\n    constructor(private title: Title,\r\n                private router: Router,\r\n                private companyManager: CompanyManagerService)\r\n    {\r\n\r\n        router.events.forEach((event) => {\r\n            if (event instanceof NavigationStart) {\r\n                this.clear();                \r\n            }\r\n        });\r\n    }\r\n\r\n    getDefaultTitle() {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        return environment.environmentType.toUpperCase() + ' ' + company.toUpperCase();\r\n    }\r\n\r\n    setTitle(newTitle: string) {\r\n        this.title.setTitle(this.getDefaultTitle() + ' - ' + newTitle);\r\n    }\r\n\r\n    clear() {\r\n        this.title.setTitle(this.getDefaultTitle())\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.clear();\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport * as _moment from 'moment';\r\nimport { CompanyManagerService } from '../../core/services/company-manager.service';\r\nimport { cropYearValidation } from '../../trading/Library/trading-businessrules';\r\nimport { Commodity } from '../entities/commodity.entity';\r\nimport { EnumEntity } from '../entities/enum-entity.entity';\r\nimport { TradePropertyPrivilege } from '../entities/trade-property-privilege.entity';\r\nimport { InvoiceStatus } from '../enums/invoice-status.enum';\r\nimport { isDateTwoBeforeDateOne } from '../validators/date-validators.validator';\r\nimport { SnackbarService } from './snackbar.service';\r\n\r\nconst moment = _moment;\r\n\r\n@Injectable()\r\n\r\nexport class TradeEditService {\r\n\r\n    constructor(private companyManager: CompanyManagerService,\r\n        private snackbarService: SnackbarService) { }\r\n\r\n    // Bulk edit privileges validation\r\n\r\n    public isGridEditableAfterInvoicing(params): boolean {\r\n        params.data.isInvoiced = false;\r\n        params.data.invoicingConditionErrorMessage = null;\r\n        if (params.data.invoicingStatusId === InvoiceStatus.NotInvoiced || params.data.invoicingStatusId === '') {\r\n            params.data.isInvoiced = false;\r\n            params.data.invoicingConditionErrorMessage = null;\r\n            return true;\r\n        } else {\r\n            params.data.isInvoiced = true;\r\n            params.data.invoicingConditionErrorMessage = 'Not Allowed to Edit: Trade is [Invoiced]';\r\n            return false;\r\n        }\r\n    }\r\n\r\n    public isTradeAChildTrade(params): boolean {\r\n        params.data.isChildTrade = (params.data.sectionOriginId) ? true : false;\r\n        return !params.data.isChildTrade;\r\n    }\r\n\r\n    public isGridCellEditable(params: any, privileges: TradePropertyPrivilege, lockedContracts: EnumEntity[]): boolean {\r\n        if (params.data.isCancelled) {\r\n            return false;\r\n        }\r\n        if (params.data.isClosed) {\r\n            return false;\r\n        }\r\n        if (lockedContracts) {\r\n            const lockedContract = lockedContracts.find((item) => item.enumEntityId === params.data.sectionId);\r\n            // selected contract is locked  by the user. So make grideditable to false;\r\n            if (lockedContract) {\r\n                return false;\r\n            }\r\n        }\r\n        if (params.context.componentParent.isSummaryView === false) {\r\n            if (params.colDef.colId === 'contractDate' || params.colDef.colId === 'userId') {\r\n                return this.isTradeAChildTrade(params);\r\n            }\r\n            if (params.colDef.colId === 'departmentId' || params.colDef.colId === 'departmentDescription') {\r\n                return this.isGridEditableAfterInvoicedorAllocated(params);\r\n            }\r\n            if (params.colDef.colId === 'buyerCounterpartyId' || params.colDef.colId === 'buyerDescription') {\r\n                if (!privileges.hasSuperTradePrivilege) {\r\n                    if (!privileges.buyerCodePrivilege) {\r\n                        params.data.buyerErrorMessage = 'Not Allowed to Edit Buyer';\r\n                        return false;\r\n                    } else\r\n                        if (params.data.contractType === 'Purchase') {\r\n                            if (params.data.invoicingStatusId !== InvoiceStatus.NotInvoiced) {\r\n                                return this.isGridEditableAfterInvoicing(params);\r\n                            } else {\r\n                                return this.isCounterpartyEditable(params);\r\n                            }\r\n                        } else {\r\n                            return true;\r\n                        }\r\n                } else {\r\n                    return true;\r\n                }\r\n            }\r\n            if (params.colDef.colId === 'sellerCounterpartyId' || params.colDef.colId === 'sellerDescription') {\r\n                if (!privileges.hasSuperTradePrivilege) {\r\n                    if (!privileges.sellerCodePrivilege) {\r\n                        params.data.sellerErrorMessage = 'Not Allowed to Edit Seller';\r\n                        return false;\r\n                    } else\r\n                        if (params.data.contractType === 'Sale') {\r\n                            if (params.data.invoicingStatusId !== InvoiceStatus.NotInvoiced) {\r\n                                return this.isGridEditableAfterInvoicing(params);\r\n                            } else {\r\n                                return this.isCounterpartyEditable(params);\r\n                            }\r\n                        } else { return true; }\r\n                } else {\r\n                    return true;\r\n                }\r\n            }\r\n            if (params.colDef.colId === 'counterpartyReference') {\r\n                if (!privileges.counterPartyPrivilege) {\r\n                    params.data.counterpartyErrorMessage = 'Not Allowed to Edit counterparty Reference';\r\n                    return false;\r\n                } else {\r\n                    params.data.counterpartyErrorMessage = null;\r\n                    return true;\r\n                }\r\n            }\r\n            if (params.colDef.colId === 'commodityId' || params.colDef.colId === 'commodity2'\r\n                || params.colDef.colId === 'commodity3' || params.colDef.colId === 'commodity4' || params.colDef.colId === 'commodity5') {\r\n                if (!privileges.hasSuperTradePrivilege) {\r\n                    if (!privileges.commodityPrivilege) {\r\n                        params.data.commodityErrorMessage = 'Not Allowed to Edit commodity';\r\n                        return false;\r\n                    } else {\r\n                        return this.isGridEditableAfterInvoicing(params);\r\n                    }\r\n                } else {\r\n                    return true;\r\n                }\r\n            }\r\n            if (params.colDef.colId === 'cropYear') {\r\n                if (!privileges.cropYearPrivilege) {\r\n                    params.data.cropYearErrorMessage = 'Not Allowed to Edit crop year';\r\n                    return false;\r\n                } else {\r\n                    params.data.cropYearErrorMessage = null;\r\n                    return true;\r\n                }\r\n            }\r\n            if (params.colDef.colId === 'contractTermId' || params.colDef.colId === 'contractTermDescription') {\r\n                if (!privileges.hasSuperTradePrivilege) {\r\n                    if (!privileges.contractTermsPrivilege) {\r\n                        params.data.contractTermsErrorMessage = 'Not Allowed to Edit Contract Terms';\r\n                        return false;\r\n                    } else {\r\n                        return this.isGridEditableAfterInvoicing(params);\r\n                    }\r\n                } else {\r\n                    return true;\r\n                }\r\n            }\r\n            if (params.colDef.colId === 'portTermId') {\r\n                if (!privileges.hasSuperTradePrivilege) {\r\n                    if (!privileges.portTermsPrivilege) {\r\n                        params.data.portTermsErrorMessage = 'Not Allowed to Edit Port Terms';\r\n                        return false;\r\n                    } else {\r\n                        return this.isGridEditableAfterInvoicing(params);\r\n                    }\r\n                } else {\r\n                    return true;\r\n                }\r\n            }\r\n            if (params.colDef.colId === 'arbitrationId' || params.colDef.colId === 'arbitrationDescription') {\r\n                if (!privileges.arbitrationPrivilege) {\r\n                    params.data.arbitrationErrorMessage = 'Not Allowed to Edit Arbitrations';\r\n                    return false;\r\n                } else {\r\n                    params.data.arbitrationErrorMessage = null;\r\n                    return true;\r\n                }\r\n            }\r\n            if (params.colDef.colId === 'currencyCode' || params.colDef.colId === 'currencyDescription') {\r\n                if (!privileges.hasSuperTradePrivilege) {\r\n                    if (!privileges.currencyPrivilege) {\r\n                        params.data.currencyErrorMessage = 'Not Allowed to Edit Currency Code';\r\n                        return false;\r\n                    } else {\r\n                        return this.isGridEditableAfterInvoicing(params);\r\n                    }\r\n                } else {\r\n                    return true;\r\n                }\r\n            }\r\n            if (params.colDef.colId === 'priceUnitId') {\r\n                if (!privileges.hasSuperTradePrivilege) {\r\n                    if (!privileges.priceCodePrivilege) {\r\n                        params.data.priceCodeErrorMessage = 'Not Allowed to Edit Price Code';\r\n                        return false;\r\n                    } else {\r\n                        return this.isGridEditableAfterInvoicing(params);\r\n                    }\r\n                } else {\r\n                    return true;\r\n                }\r\n            }\r\n            if (params.colDef.colId === 'contractPrice') {\r\n                if (!privileges.hasSuperTradePrivilege) {\r\n                    if (!privileges.contractPricePrivilege) {\r\n                        params.data.contractPriceErrorMessage = 'Not Allowed to Edit Contract Price';\r\n                        return false;\r\n                    } else {\r\n                        return this.isGridEditableAfterInvoicing(params);\r\n                    }\r\n                } else {\r\n                    return true;\r\n                }\r\n            }\r\n            if (params.colDef.colId === 'paymentTermsId') {\r\n                if (!privileges.paymentTermsPrivilege) {\r\n                    params.data.paymentTermsErrorMessage = 'Not Allowed to Edit Payment Terms';\r\n                    return false;\r\n                } else {\r\n                    params.data.paymentTermsErrorMessage = null;\r\n                    return true;\r\n                }\r\n            }\r\n            if (params.colDef.colId === 'periodTypeId') {\r\n                if (!privileges.hasSuperTradePrivilege) {\r\n                    if (!privileges.periodTypePrivilege) {\r\n                        params.data.periodTypeErrorMessage = 'Not Allowed to Edit Period Type';\r\n                        return false;\r\n                    } else {\r\n                        params.data.periodTypeErrorMessage = null;\r\n                        return true;\r\n                    }\r\n                } else {\r\n                    return true;\r\n                }\r\n            }\r\n            if (params.colDef.colId === 'deliveryPeriodStart') {\r\n                if (!privileges.fromDatePrivilege) {\r\n                    params.data.fromDateErrorMessage = 'Not Allowed to Edit Shipment From Date';\r\n                    return false;\r\n                } else {\r\n                    return this.isPeriodEditableBasedonBldate(params);\r\n                }\r\n            }\r\n            if (params.colDef.colId === 'deliveryPeriodEnd') {\r\n                if (!privileges.toDatePrivilege) {\r\n                    params.data.toDateErrorMessage = 'Not Allowed to Edit Shipment To Date';\r\n                    return false;\r\n                } else {\r\n                    return this.isPeriodEditableBasedonBldate(params);\r\n                }\r\n            }\r\n            if (params.colDef.colId === 'positionMonthType') {\r\n                if (!privileges.positionTypePrivilege) {\r\n                    params.data.positionTypeErrorMessage = 'Not Allowed to Edit Position Month Type';\r\n                    return false;\r\n                } else {\r\n                    params.data.positionTypeErrorMessage = null;\r\n                    return true;\r\n                }\r\n            }\r\n            if (params.colDef.colId === 'portOriginId') {\r\n                if (!privileges.portOfOriginPrivilege) {\r\n                    params.data.portOfOriginErrorMessage = 'Not Allowed to Edit Port of Origin';\r\n                    return false;\r\n                } else {\r\n                    params.data.portOfOriginErrorMessage = null;\r\n                    return true;\r\n                }\r\n            }\r\n            if (params.colDef.colId === 'portDestinationId') {\r\n                if (!privileges.portOfDestinationPrivilege) {\r\n                    params.data.portOfDestinationErrorMessage = 'Not Allowed to Edit Port of Destination';\r\n                    return false;\r\n                } else {\r\n                    params.data.portOfDestinationErrorMessage = null;\r\n                    return true;\r\n                }\r\n            }\r\n            if (params.colDef.colId === 'businessSectorId' || params.colDef.colId === 'businessSectorDescription') {\r\n                if (!privileges.businessSectorPrivilege) {\r\n                    params.data.businessSectorErrorMessage = 'Not Allowed to Edit Business Sector';\r\n                    return false;\r\n                } else {\r\n                    return this.isGridEditableAfterInvoicing(params);\r\n                }\r\n            }\r\n            if (params.colDef.colId === 'memorandum') {\r\n                if (!privileges.memoPrivilege) {\r\n                    params.data.memoErrorMessage = 'Not Allowed to Edit Internal Memorandum';\r\n                    return false;\r\n                } else {\r\n                    params.data.memoErrorMessage = null;\r\n                    return true;\r\n                }\r\n            }\r\n            if (params.colDef.colId === 'contractIssuedDate') {\r\n                if (!privileges.contractIssuedOnPrivilege) {\r\n                    params.data.contractIssuedErrorMessage = 'Not Allowed to Edit Contract issued Date';\r\n                    return false;\r\n                } else {\r\n                    params.data.contractIssuedErrorMessage = null;\r\n                    return true;\r\n                }\r\n            }\r\n            if (params.colDef.colId === 'vesselId') {\r\n                if (!privileges.vesselNamePrivilege) {\r\n                    params.data.vesselNameErrorMessage = 'Not Allowed to Edit Vessel';\r\n                    return false;\r\n                } else {\r\n                    params.data.vesselNameErrorMessage = null;\r\n                    return true;\r\n                }\r\n            }\r\n            if (params.colDef.colId === 'blDate') {\r\n                if (!privileges.blDatePrivilege) {\r\n                    params.data.blDateErrorMessage = 'Not Allowed to Edit BL Date';\r\n                    return false;\r\n                } else {\r\n                    return this.isBLDateCellEditable(params, privileges);\r\n                }\r\n\r\n            }\r\n            if (params.colDef.colId === 'blReference') {\r\n                if (!privileges.blReferencePrivilege) {\r\n                    params.data.blReferenceErrorMessage = 'Not Allowed to Edit BL Reference';\r\n                    return false;\r\n                } else {\r\n                    params.data.blReferenceErrorMessage = null;\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            if (params.colDef.colId === 'otherReference') {\r\n                if (!privileges.otherReferencePrivilege) {\r\n                    params.data.otherReferenceErrorMessage = 'Not Allowed to Edit Other Reference';\r\n                    return false;\r\n                } else {\r\n                    params.data.otherReferenceErrorMessage = null;\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            if (params.colDef.colId === 'premiumDiscountTypeId') {\r\n                if (!privileges.hasSuperTradePrivilege) {\r\n                    return this.isGridEditableAfterInvoicing(params);\r\n                } else {\r\n                    return true;\r\n                }\r\n            }\r\n            return true;\r\n        } else { return false; }\r\n    }\r\n\r\n    // BR implementation for commodity\r\n    public onCommodityValueChange(params: any, code: string, list: Commodity[]) {\r\n        const selectedCommodity = list.find(\r\n            (commodity) => commodity.commodityId === params.data.commodityId);\r\n        if (params.data.commodityId !== params.value) {\r\n            if (params.data.commodityId) {\r\n                params.node.setDataValue('commodity2', selectedCommodity.commodityOrigin);\r\n                params.node.setDataValue('commodity3', selectedCommodity.commodityGrade);\r\n                params.node.setDataValue('commodity4', selectedCommodity.commodityLvl4);\r\n                params.node.setDataValue('commodity5', selectedCommodity.commodityLvl5);\r\n                params.node.setDataValue('arbitrationCode', selectedCommodity.arbitrationCode);\r\n                params.node.setDataValue('currencyCode', selectedCommodity.currency);\r\n                params.node.setDataValue('priceUnitId', selectedCommodity.priceUnitId);\r\n                params.node.setDataValue('rowStatus', 'A');\r\n                params.data.commodityChange = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    // BR implementation for Crop Year\r\n    public isCropYearValid(params: any) {\r\n        let error = null;\r\n        let result = null;\r\n        let notValid = false;\r\n        params.data.cropYearValidationMessage = null;\r\n        params.data.validationError = false;\r\n        const cropYearFromat = new RegExp(/^([0-9]{4})(\\/([0-9]{4}))?$/);\r\n        const isformatValid = cropYearFromat.test(params.data.cropYear);\r\n        if (!isformatValid) {\r\n            error = { NotRegularFormat: true };\r\n            params.data.validationError = true;\r\n            params.data.cropYearValidationMessage = 'only YYYY or YYYY/YYYY format is allowed';\r\n        } else {\r\n            if (params.data.cropYear && params.data.contractDate && isformatValid) {\r\n                const reg = new RegExp(/[0-9]{4}/g);\r\n                const years = String(params.data.cropYear).match(reg);\r\n                const contractDate = moment(params.data.contractDate);\r\n                result = cropYearValidation(years, contractDate);\r\n            }\r\n            if (result < 1) {\r\n                params.data.validationError = true;\r\n                switch (result) {\r\n                    case 0:\r\n                        error = { isFirstYearGreater: true };\r\n                        notValid = true;\r\n                        params.data.cropYearValidationMessage\r\n                            = 'Second year entered after the “/” should always be “greater than” the first year entered before the “/”';\r\n                        break;\r\n                    case -1:\r\n                        error = { isYearOutOfRange: true };\r\n                        notValid = true;\r\n                        params.data.cropYearValidationMessage = 'Crop year should be within +/- 5 years from the contract date';\r\n                        break;\r\n                }\r\n            } else {\r\n                params.node.setDataValue('rowStatus', 'A');\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    // Validation for Date Range\r\n    public isDateInRange(value, start, stop) {\r\n        return value >= start && value <= stop;\r\n    }\r\n\r\n    isBLDateCellEditable(params: any, privileges: TradePropertyPrivilege): boolean {\r\n        params.data.isEditable = true;\r\n        params.data.blDateEditableMessage = null;\r\n        if (params.data.invoicingStatusId === '' && params.data.allocatedSectionId === '') {\r\n            return params.data.isEditable;\r\n        }\r\n        if (params.data.invoicingStatusId === InvoiceStatus.NotInvoiced) {\r\n            if (params.data.allocatedSectionId === null) {\r\n                if (params.data.contractType === 'Sale') {\r\n                    params.data.blDateEditableMessage = 'BL Date cannot be added to unallocated sale';\r\n                    params.data.isEditable = false;\r\n                } else {\r\n                    params.data.blDateEditableMessage = null;\r\n                    params.data.isEditable = true;\r\n                }\r\n            } else {\r\n                params.data.blDateEditableMessage = null;\r\n                params.data.isEditable = true;\r\n            }\r\n        } else {\r\n            if (privileges && !privileges.hasSuperTradePrivilege) {\r\n                params.data.blDateEditableMessage = 'Not Allowed to Edit: Trade is [Invoiced]';\r\n                params.data.isEditable = false;\r\n            } else {\r\n                return true;\r\n            }\r\n        }\r\n        return params.data.isEditable;\r\n    }\r\n\r\n    // BR implementation for BL date\r\n    public blDateValidation(params: any): boolean {\r\n        this.isBLDateCellEditable(params, null);\r\n        if (!params.data.isEditable) {\r\n            return params.data.blDateEditableMessage;\r\n        } else {\r\n            const companyDate = new Date(this.companyManager.getCurrentCompanyDate().toLocaleString().valueOf());\r\n            const contractDate = new Date(params.data.contractDate);\r\n            params.data.blDateValidationStyleChange = false;\r\n            params.data.blDateErrorMessage = null;\r\n            params.data.validationError = false;\r\n            if (params.data.blDate) {\r\n                const blDate = new Date(params.data.blDate);\r\n                const futureDate = isDateTwoBeforeDateOne(companyDate, blDate, true);\r\n                const beforeContractDate = isDateTwoBeforeDateOne(contractDate, params.data.blDate);\r\n                if (!futureDate) {\r\n                    params.data.blDateValidationStyleChange = true;\r\n                    params.data.validationError = true;\r\n                    params.data.blDateErrorMessage = 'BL Date cannot be in future';\r\n                } else if (beforeContractDate) {\r\n                    params.data.validationError = false;\r\n                    params.data.blDateValidationStyleChange = false;\r\n                    params.data.blDateErrorMessage = 'BL Date cannot be before contract date';\r\n                } else {\r\n                    params.data.blDateValidationStyleChange = false;\r\n                    params.data.blDateErrorMessage = null;\r\n                }\r\n            }\r\n\r\n            return params.data.blDateErrorMessage;\r\n        }\r\n    }\r\n\r\n    // BR implementation for Shipment Period\r\n    public shipmentPeriodValidation(params: any) {\r\n        const shipmentFromDate = new Date(params.data.deliveryPeriodStart);\r\n        const shipmentToDate = new Date(params.data.deliveryPeriodEnd);\r\n        params.data.shipmentPeriodValidationStyleChange = false;\r\n        params.data.toolTipMessage = null;\r\n        params.data.validationError = false;\r\n        const result = isDateTwoBeforeDateOne(shipmentToDate, shipmentFromDate, true);\r\n        params.data.shipmentPeriodValidationStyleChange = result;\r\n        params.data.validationError = !result;\r\n        return params.data.shipmentPeriodValidationStyleChange;\r\n    }\r\n\r\n    isPeriodEditableBasedonBldate(params): boolean {\r\n        params.data.isPeriodEditable = false;\r\n        params.data.periodEditableConditionErrorMessage = null;\r\n        if (params.data.blDate) {\r\n            params.data.isPeriodEditable = false;\r\n            params.data.periodEditableConditionErrorMessage = 'Not Allowed to Edit: Trade is having [BL Date]';\r\n        } else {\r\n            params.data.isPeriodEditable = true;\r\n            params.data.periodEditableConditionErrorMessage = null;\r\n        }\r\n        return params.data.isPeriodEditable;\r\n    }\r\n\r\n    // BR implementation for Shipment Period(From Date)\r\n    public ShipmentFromDateValidationMessage(params: any) {\r\n        this.shipmentPeriodValidation(params);\r\n        this.isPeriodEditableBasedonBldate(params);\r\n        if (!params.data.isPeriodEditable) {\r\n            return params.data.periodEditableConditionErrorMessage;\r\n        } else {\r\n            params.data.shipmentFromMessage = (!params.data.shipmentPeriodValidationStyleChange)\r\n                ? 'Cannot be After Period To' : null;\r\n            return params.data.shipmentFromMessage;\r\n        }\r\n    }\r\n\r\n    // BR implementation for Shipment Period(To Date)\r\n    public ShipmentToDateValidationMessage(params: any) {\r\n        this.shipmentPeriodValidation(params);\r\n        this.isPeriodEditableBasedonBldate(params);\r\n        if (!params.data.isPeriodEditable) {\r\n            return params.data.periodEditableConditionErrorMessage;\r\n        } else {\r\n            params.data.shipmentToMessage = (!params.data.shipmentPeriodValidationStyleChange)\r\n                ? 'Cannot be before Period From' : null;\r\n            return params.data.shipmentToMessage;\r\n        }\r\n    }\r\n\r\n    // Disable cell based on allocation and invoicing\r\n    isGridEditableAfterInvoicedorAllocated(params): boolean {\r\n        params.data.isInvoicedorAllocated = false;\r\n        params.data.invoicingAllocationConditionErrorMessage = null;\r\n        if (params.data.invoicingStatusId === '' && params.data.allocatedSectionId === '') {\r\n            return !params.data.isInvoicedorAllocated;\r\n        }\r\n        if (params.data.invoicingStatusId === InvoiceStatus.NotInvoiced) {\r\n            if (params.data.allocatedSectionId !== null) {\r\n                params.data.isInvoicedorAllocated = true;\r\n                params.data.invoicingAllocationConditionErrorMessage = 'Not Allowed to Edit: Trade is [Allocated]';\r\n            } else {\r\n                params.data.isInvoicedorAllocated = false;\r\n                params.data.invoicingAllocationConditionErrorMessage = null;\r\n            }\r\n        } else {\r\n            params.data.isInvoicedorAllocated = true;\r\n            params.data.invoicingAllocationConditionErrorMessage = 'Not Allowed to Edit: Trade is [Invoiced]';\r\n        }\r\n        return !params.data.isInvoicedorAllocated;\r\n    }\r\n\r\n    isCounterpartyEditable(params): boolean {\r\n        if (params.data.contractType === 'Purchase') {\r\n            params.data.isbuyerCounterpartyEditable = false;\r\n            params.data.isSellerCounterpartyEditable = true;\r\n            params.data.isbuyerCounterpartyErrorMessage = 'Not Allowed to Edit: Trade is having Contract Type [Purchase]';\r\n            return params.data.isbuyerCounterpartyEditable;\r\n        } else if (params.data.contractType === 'Sale') {\r\n            params.data.isSellerCounterpartyEditable = false;\r\n            params.data.isbuyerCounterpartyEditable = true;\r\n            params.data.issellerCounterpartyErrorMessage = 'Not Allowed to Edit: Trade is having Contract Type [Sale]';\r\n            return params.data.isSellerCounterpartyEditable;\r\n        }\r\n    }\r\n}\r\n","import { BulkCost } from '../../../../shared/entities/bulk-edit-cost.entity';\r\n\r\nexport class SaveBulkCostsCommand {\r\n    costs: BulkCost[];\r\n\r\n}\r\n","import { MergeContracts } from '../../../../shared/entities/merge-contracts.entity';\r\n\r\nexport class SaveTradeMergeCommand {\r\n    mergeContracts: MergeContracts[];\r\n    dataVersionId?: number;\r\n}\r\n","import { Cost } from '../../../entities/cost.entity';\r\n\r\nexport class UpdateSectionRequest<T> {\r\n    public section: T;\r\n    public trackChanges: SectionTrackChanges;\r\n    public isBLDateChanged = false;\r\n    public company: string;\r\n}\r\n\r\nexport class SectionTrackChanges {\r\n    public costsChanges: TrackChanges<Cost>;\r\n}\r\n\r\nexport class TrackChanges<T> {\r\n    public deletedIdentifiers: number[];\r\n    public modifiedItems: T[];\r\n    public addedItems: T[];\r\n}\r\n\r\nexport class SplitCreationResult {\r\n    contractLabel: string;\r\n    sectionId: number;\r\n    sectionOriginId: number;\r\n    costs: Cost[];\r\n    constructor(sectionId: number, contractLabel: string = '', costs: Cost[] = null) {\r\n        this.sectionId = sectionId;\r\n        this.contractLabel = contractLabel;\r\n        this.costs = costs;\r\n    }\r\n\r\n}\r\n\r\nexport class TrancheSplitCreationResult {\r\n    contractLabel: string;\r\n    sectionId: number;\r\n    costs: Cost[];\r\n    constructor(sectionId: number, contractLabel: string = '', costs: Cost[] = null) {\r\n        this.sectionId = sectionId;\r\n        this.contractLabel = contractLabel;\r\n        this.costs = costs;\r\n    }\r\n}\r\n\r\nexport class SplitCreationDetails {\r\n    sectionIds: number[];\r\n    contractedValues: string[];\r\n    quantity: number;\r\n    dataVersionId?: number;\r\n}\r\n\r\n\r\nexport class BulkSplitCreationDetails {\r\n    sectionId: number;\r\n    contractedValues: string[];\r\n    quantity: number[];\r\n    dataVersionId?: number;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport * as moment from 'moment';\r\nimport { from, Observable, of } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from '../../../environments/environment';\r\nimport { ExecutionService } from '../../shared/services/http-services/execution.service';\r\nimport { TradingService } from '../../shared/services/http-services/trading.service';\r\nimport { MasterDataProps } from '../entities/masterdata-props.entity';\r\nimport { FreezeType } from '../enums/freeze-type.enum';\r\nimport { Freeze } from './../entities/freeze.entity';\r\nimport { FreezeService } from './http-services/freeze.service';\r\nimport { PreaccountingService } from './http-services/preaccounting.service';\r\n\r\n@Injectable()\r\nexport class UiService {\r\n    constructor(private executionService: ExecutionService,\r\n        private preaccountingService: PreaccountingService,\r\n        private freezeService: FreezeService,\r\n        private tradingService: TradingService,\r\n    ) {\r\n    }\r\n\r\n    public getIconForPrivilegeLevel1(level: string) {\r\n        switch (level) {\r\n            case 'Home': {\r\n                return '<mat-icon matListIcon>home</mat-icon>';\r\n            }\r\n            case 'Trades': {\r\n                return '<mat-icon svgIcon=\"trades\" matListIcon></mat-icon>';\r\n            }\r\n            case 'Cash': {\r\n                return '<mat-icon matListIcon>account_balance_wallet</mat-icon>';\r\n            }\r\n            case 'Charters': {\r\n                return '<mat-icon matListIcon>directions_boat</mat-icon>';\r\n            }\r\n            case 'Invoices': {\r\n                return '<mat-icon matListIcon>description</mat-icon>';\r\n            }\r\n            case 'Documents': {\r\n                return '<mat-icon svgIcon=\"documents\" matListIcon></mat-icon>';\r\n            }\r\n            case 'Reports': {\r\n                return '<mat-icon matListIcon>bar_chart</mat-icon>';\r\n            }\r\n            case 'Administration': {\r\n                return '<mat-icon matListIcon>vpn_key</mat-icon>';\r\n            }\r\n            case 'Dashboards': {\r\n                return '<mat-icon matListIcon>dashboard</mat-icon>';\r\n            }\r\n            case 'Financials': {\r\n                return '<mat-icon matListIcon>account_balance</mat-icon>';\r\n            }\r\n            case 'MasterData': {\r\n                return '<mat-icon matListIcon>view_quilt</mat-icon>';\r\n            }\r\n            default: {\r\n                return '';\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    public dateFormatter(params) {\r\n        const momentToFormat: moment.Moment = moment(params.value);\r\n        const result = params.value ? momentToFormat.format('DD MMM YYYY').toUpperCase() : '';\r\n        return result;\r\n    }\r\n\r\n    public dateFormatterClient(params) {\r\n        const momentToFormat: moment.Moment = moment(params.value);\r\n        const result = params.value ? momentToFormat.format('DD/MM/YYYY').toUpperCase() : '';\r\n        return result;\r\n    }\r\n\r\n    public dateGetterForExport(params) {\r\n        if (!params.node.group) {\r\n            const value = params.data[params.colDef.colId];\r\n            const momentToFormat: moment.Moment = moment(value);\r\n            const result = value ? momentToFormat.format('DD/MM/YYYY').toUpperCase() : '';\r\n            if (result) {\r\n                if (result.indexOf('/') < 0) {\r\n                    return result;\r\n                } else {\r\n                    const split = result.split('/');\r\n                    return split[2] + '-' + split[1] + '-' + split[0];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    public contractDateGetterForExport(params) {\r\n        if (!params.node.group) {\r\n            const value = params.data[params.colDef.colId];\r\n            const momentToFormat: moment.Moment = moment(value);\r\n            const result = value ? momentToFormat.format('DD/MM/YYYY hh:mm:ss').toUpperCase() : '';\r\n            if (result) {\r\n                if (result.indexOf('/') < 0) {\r\n                    return result;\r\n                } else {\r\n                    const split = result.split(' ');\r\n                    const date = split[0].split('/');\r\n                    return date[2] + '-' + date[1] + '-' + date[0] + ' ' + split[1];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    public monthFormatter(params) {\r\n        const momentToFormat: moment.Moment = moment(params.value);\r\n        const result = params.value ? momentToFormat.format('MMM YYYY').toUpperCase() : '';\r\n        return result;\r\n    }\r\n\r\n    public monthGetterForExport(params) {\r\n        if (!params.node.group) {\r\n            const value = params.data[params.colDef.colId];\r\n            const momentToFormat: moment.Moment = moment(value);\r\n            const result = value ? momentToFormat.format('MMM YYYY').toUpperCase() : '';\r\n            return result;\r\n        }\r\n    }\r\n\r\n    public timeGetterForExport(params) {\r\n        if (!params.node.group) {\r\n            const value = params.data[params.colDef.colId];\r\n            const momentToFormat: moment.Moment = moment(value);\r\n            const result = value ? momentToFormat.format('hh:mm:ss').toUpperCase() : '';\r\n            return result;\r\n        }\r\n    }\r\n\r\n    public timeFormatter(params) {\r\n        if (params.value && params.value.toString().trim().length === 8) {\r\n            return params.value;\r\n        }\r\n        const momentToFormat: moment.Moment = moment(params.value);\r\n        const result = params.value ? momentToFormat.format('hh:mm:ss').toUpperCase() : '';\r\n        return result;\r\n    }\r\n\r\n    public getFormatterForType(gridType: string) {\r\n        if (gridType === 'date') {\r\n            return this.dateFormatter;\r\n        } else if (gridType === 'month') {\r\n            return this.monthFormatter;\r\n        } else if (gridType === 'time') {\r\n            return this.timeFormatter;\r\n        }\r\n    }\r\n\r\n    public getFormattterForTypeClientReport(gridType: string) {\r\n        if (gridType === 'date') {\r\n            return this.dateFormatterClient;\r\n        } else if (gridType === 'month') {\r\n            return this.monthFormatter;\r\n        } else if (gridType === 'time') {\r\n            return this.timeFormatter;\r\n        }\r\n    }\r\n\r\n    public getterForDateType(gridType: string) {\r\n        if (gridType === 'date') {\r\n            return this.dateGetterForExport;\r\n        } else if (gridType === 'month') {\r\n            return this.monthGetterForExport;\r\n        } else if (gridType === 'time') {\r\n            return this.timeGetterForExport;\r\n        }\r\n    }\r\n    public getterForCreatedDateType(gridType: string) {\r\n        if (gridType === 'date') {\r\n            return this.contractDateGetterForExport;\r\n        } else if (gridType === 'month') {\r\n            return this.monthGetterForExport;\r\n        } else if (gridType === 'time') {\r\n            return this.timeGetterForExport;\r\n        }\r\n    }\r\n\r\n    public numberFormatter(params): string {\r\n        if (!params.value) {\r\n            return '';\r\n        }\r\n        const number = params.value.toString();\r\n        const integer = number.split('.')[0];\r\n        const decimals = number.split('.')[1];\r\n        return new Intl.NumberFormat(\r\n            'en-US',\r\n            { maximumSignificantDigits: 21 })\r\n            .format(\r\n                Number(integer))\r\n            + (decimals ? '.' + number.split('.')[1] : '');\r\n    }\r\n\r\n    public getFilterTypeForGridType(filterType: string): string {\r\n        // To do : will have to use \"grid type\" when available\r\n        return 'agTextColumnFilter';\r\n    }\r\n\r\n    public getMainMenuItems(params) {\r\n        const itemsToExclude = ['separator', 'pinSubMenu', 'resetColumns'];\r\n        return params.defaultItems.filter((item) => itemsToExclude.indexOf(item) === -1);\r\n    }\r\n\r\n    public getEntityLabelIfExists(activeUrl: string, dataValue): Observable<string> {\r\n\r\n        if (activeUrl) {\r\n            if (activeUrl.toString().includes('cash/new/1')) {\r\n                return from(new Promise((resolve) => resolve('Payment')));\r\n            } else if (activeUrl.toString().includes('cash/new/2')) {\r\n                return from(new Promise((resolve) => resolve('Receipt')));\r\n            }\r\n            if (activeUrl.toString().includes('charter/details') || activeUrl.toString().includes('charter/assignment')) {\r\n                if (activeUrl.match(/[^\\/]+$/)) {\r\n                    const charterId = activeUrl.match(/[^\\/]+$/)[0].split(';')[0];\r\n                    return this.executionService.getCharterById(Number(charterId))\r\n                        .pipe(\r\n                            map((data) => {\r\n                                if (data) {\r\n                                    return data.charterCode;\r\n                                }\r\n                            }),\r\n                        );\r\n                }\r\n            }\r\n\r\n            if (activeUrl.toString().includes('transferCosts')) {\r\n                if (activeUrl.match(/[^\\/]+$/)) {\r\n                    const sectionId = activeUrl.match(/[^\\/]+$/)[0].split(';')[0];\r\n                    return this.tradingService.getSection(Number(sectionId), 0).pipe(\r\n                        map((trade) => {\r\n                            if (trade) {\r\n                                return trade.contractLabel + ' Costs ';\r\n                            }\r\n                        }));\r\n                }\r\n            }\r\n            if (activeUrl.toString().includes('tradeMerge')) {\r\n                if (activeUrl.match(/[^\\/]+$/)) {\r\n                    const sectionId = activeUrl.match(/[^\\/]+$/)[0].split(';')[0];\r\n                    return this.tradingService.getSection(Number(sectionId), 0).pipe(\r\n                        map((trade) => {\r\n                            if (trade) {\r\n                                return trade.contractLabel + ' Splits ';\r\n                            }\r\n                        }));\r\n                }\r\n            }\r\n            if (activeUrl.toString().includes('companies/copy')) {\r\n                if (activeUrl.match(/[^\\/]+$/)) {\r\n                    const companyId = activeUrl.match(/[^\\/]+$/)[0].split(';')[0];\r\n                    return from(new Promise((resolve) => resolve(companyId)));\r\n                }\r\n            }\r\n\r\n            if (activeUrl.toString().includes('financial/edit/document/') && !activeUrl.toString().includes('financial/edit/document/summary')) {\r\n                if (activeUrl.match(/[^\\/]+$/)) {\r\n                    const documentId = activeUrl.match(/[^\\/]+$/)[0].split(';')[0];\r\n                    if (documentId) {\r\n                        return this.preaccountingService.getAccoutingDocumentData(Number(documentId))\r\n                            .pipe(\r\n                                map((data) => {\r\n                                    if (data) {\r\n                                        return data.value[0].documentReference;\r\n                                    }\r\n                                }),\r\n                            );\r\n                    }\r\n                }\r\n\r\n            } else if (activeUrl.toString().includes('/snapshot/')) {\r\n                if (activeUrl.match(/\\/snapshot\\/([0-9]+)/) && activeUrl.match(/\\/snapshot\\/([0-9]+)/)[0]) {\r\n                    return this.freezeService.getFreezeByDataVersionId(Number(activeUrl.match(/\\/snapshot\\/([0-9]+)/)[0].slice(10)))\r\n                        .pipe(\r\n                            map((data: Freeze) => {\r\n                                if (data) {\r\n                                    return data.dataVersionTypeId === FreezeType.Monthly ?\r\n                                        this.monthFormatter({ value: data.freezeDate }) : this.dateFormatter({ value: data.freezeDate });\r\n                                }\r\n                            }),\r\n                        );\r\n                }\r\n            }\r\n        }\r\n        return of('');\r\n    }\r\n\r\n    public getStylesForEnvironments() {\r\n        let envType: string;\r\n        envType = environment.environmentType;\r\n        switch (envType) {\r\n            case 'DEV': {\r\n                return '-dev'; // pre-prod\r\n            }\r\n            case 'DEMO': {\r\n                return '-demo';\r\n            }\r\n            case 'UAT': {\r\n                return '-uat';\r\n            }\r\n            case 'TRAINING': {\r\n                return '-training';\r\n            }\r\n            case 'SUPPORT': {\r\n                return '-support';\r\n            }\r\n\r\n            default: {\r\n                return '-primary';\r\n            }\r\n        }\r\n    }\r\n\r\n    public startsWithVowel(text: string) {\r\n        if (!text) {\r\n            return false;\r\n        }\r\n        text = text.toLowerCase();\r\n        const startsWithVowel = (text.startsWith('a') || text.startsWith('e') || text.startsWith('i')\r\n            || text.startsWith('o') || text.startsWith('u') || text.startsWith('y'));\r\n        return startsWithVowel;\r\n    }\r\n\r\n    public getMasterDataFriendlyName(masterData: string) {\r\n        switch (masterData) {\r\n            case MasterDataProps.CommodityTypes: {\r\n                return 'Commodity Types';\r\n            }\r\n            case MasterDataProps.Countries: {\r\n                return 'Countries';\r\n            }\r\n            case MasterDataProps.Province: {\r\n                return 'Provinces';\r\n            }\r\n            case MasterDataProps.LdcRegion: {\r\n                return 'Regions';\r\n            }\r\n            case MasterDataProps.Arbitrations: {\r\n                return 'Arbitration Codes';\r\n            }\r\n            case MasterDataProps.BusinessSectors: {\r\n                return 'Business Sector';\r\n            }\r\n            case MasterDataProps.Commodities: {\r\n                return 'Commodity Codes';\r\n            }\r\n            case MasterDataProps.ContractTerms: {\r\n                return 'Contract Terms';\r\n            }\r\n            case MasterDataProps.PaymentTerms: {\r\n                return 'Payment Terms';\r\n            }\r\n            case MasterDataProps.Ports: {\r\n                return 'Port Codes';\r\n            }\r\n            case MasterDataProps.CostPriceCodes: {\r\n                return 'Price Codes';\r\n            }\r\n            case MasterDataProps.PriceUnits: {\r\n                return 'Price Units';\r\n            }\r\n            case MasterDataProps.ShippingTypes: {\r\n                return 'Shipping Types';\r\n            }\r\n            case MasterDataProps.TransportTypes: {\r\n                return 'Transport Types';\r\n            }\r\n            case MasterDataProps.Vessels: {\r\n                return 'Vessel Information';\r\n            }\r\n            case MasterDataProps.WeightUnits: {\r\n                return 'Weight Codes';\r\n            }\r\n            case MasterDataProps.CostTypes: {\r\n                return 'Cost Types';\r\n            }\r\n            case MasterDataProps.Departments: {\r\n                return 'Departments';\r\n            }\r\n            case MasterDataProps.NominalAccounts: {\r\n                return 'Nominal Account Ledger';\r\n            }\r\n            case MasterDataProps.ProfitCenters: {\r\n                return 'Profit Centers';\r\n            }\r\n            case MasterDataProps.Tax: {\r\n                return 'Tax Codes';\r\n            }\r\n            case MasterDataProps.PeriodTypes: {\r\n                return 'Period Types';\r\n            }\r\n            default: {\r\n                return '';\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class UrlManagementService {\r\n\r\n    constructor(private router: Router) { }\r\n\r\n    navigateToCompany(company: string, oldCompany: string) {\r\n        const values = this.router.url.split('/');\r\n\r\n        let newUrl: string = '/' + company;\r\n        if (values.length > 0 && values[1] !== oldCompany) {\r\n            newUrl += '/' + values[1];\r\n        }\r\n\r\n        for (let i = 2; i < values.length; i++) {\r\n            newUrl += '/' + values[i];\r\n        }\r\n        this.router.navigateByUrl(newUrl);\r\n    }\r\n\r\n    getCurrentCompanyId(): string {\r\n        const url: string = this.router.url;\r\n        return this.getCompanyFromUrl(url);\r\n    }\r\n\r\n    getCompanyFromUrl(url: string): string {\r\n        return url.split('/')[1];\r\n    }\r\n\r\n    resetToCompany(company: string) {\r\n        this.router.navigate(['/', company]);\r\n    }\r\n}\r\n","import { User } from \"../../../entities/user.entity\";\r\n\r\nexport class CreateUserCommand {\r\n    favoriteLanguage: string;\r\n\tuserPrincipalName: string;\r\n\tazureObjectIdentifier: string;\r\n\tpermissions: ManageUserPermissionCommand[];\r\n}\r\n\r\nexport interface ManageUserPermissionCommand {\r\n\tcompanyId: string;\r\n\tprofileId: number;\r\n}\r\n\r\nexport class UpdateUserCommand {\r\n    favoriteLanguage: string;\r\n\tisDisabled: boolean;\r\n\tpermissions: ManageUserPermissionCommand[];\r\n}\r\n","import { HttpResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\nimport * as moment from 'moment';\r\nimport { CompanyManagerService } from '../../core/services/company-manager.service';\r\n\r\n@Injectable()\r\nexport class UtilService {\r\n    constructor(protected companyManager: CompanyManagerService) { }\r\n\r\n    public compareFn: ((f1: any, f2: any) => boolean) | null = this\r\n        .compareByValue;\r\n\r\n    public compareDateFn(f1: any, f2: any) {\r\n        const f1Date: Date = new Date(f1);\r\n        const f2Date: Date = new Date(f2);\r\n        return (\r\n            f1Date.getMonth() === f2Date.getMonth() &&\r\n            f1Date.getFullYear() === f2Date.getFullYear()\r\n        );\r\n    }\r\n\r\n    public compareByValue(f1: any, f2: any) {\r\n        return f1 && f2 && f1.type === f2.type && f1.month === f2.month;\r\n    }\r\n\r\n    public filterDictByValue(\r\n        value: string,\r\n        list: any[],\r\n        propertyToCompare: string = 'value',\r\n    ) {\r\n        if (value) {\r\n            return list.filter(\r\n                (item) =>\r\n                    item[propertyToCompare]\r\n                        .toLowerCase()\r\n                        .indexOf(value.toLowerCase()) === 0,\r\n            );\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public filterCollectionByMultipleValues(list: any[], template: any): any {\r\n        if (template) {\r\n            return list.filter((item) => {\r\n                return Object.keys(template).some(\r\n                    (propertyName) =>\r\n                        item[propertyName]\r\n                            .toLowerCase()\r\n                            .indexOf(template[propertyName].toLowerCase()) === 0,\r\n                );\r\n            });\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public isNumber(o: number) {\r\n        return !isNaN(o - 0) && o !== null;\r\n    }\r\n\r\n    public date1BeforeDate2(date1: any, date2: any) {\r\n        return new Date(date2) > new Date(date1);\r\n    }\r\n\r\n    public isRequired(control: AbstractControl): boolean {\r\n        if (control.validator) {\r\n            // tslint:disable-next-line:no-object-literal-type-assertion\r\n            const validator = control.validator({} as AbstractControl);\r\n            if (validator && validator.required) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    public filterListforAutocomplete(\r\n        input: string,\r\n        list: any[],\r\n        propertiesToCompare: string[],\r\n        valueProperty?: string,\r\n    ) {\r\n\r\n        let filteredList = list;\r\n        if (input) {\r\n            filteredList = list.filter((item) => {\r\n                let isValid = false;\r\n                propertiesToCompare.forEach((prop) => {\r\n                    isValid = isValid\r\n                        || (item[prop] &&\r\n                            (\r\n                                (item[prop].toString().toLowerCase())\r\n                                    .startsWith(input.toString().toLowerCase())\r\n                                || (item[prop]).toString().startsWith(input[prop])\r\n                                || (item[prop].toString().toLowerCase()) === (input.toString().toLowerCase())\r\n                                || (item[prop]).toString() === (input[prop])\r\n                            )\r\n                        );\r\n                });\r\n                return isValid;\r\n            });\r\n            if (filteredList.length === 0 && valueProperty) {\r\n                const selectedValue = list.find((item) => item[valueProperty] === input);\r\n                if (selectedValue) {\r\n                    filteredList = [selectedValue];\r\n                }\r\n            }\r\n        }\r\n        return filteredList;\r\n    }\r\n\r\n    public filterListforAutocompleteWithTechnicalId(\r\n        input: string,\r\n        list: any[],\r\n        propertiesToCompare: string[],\r\n        propertyForId: string,\r\n    ) {\r\n\r\n        let filteredList = this.filterListforAutocomplete(input, list, propertiesToCompare);\r\n\r\n        filteredList = filteredList.concat(list.filter((item) => {\r\n            return item[propertyForId] === input;\r\n        }));\r\n\r\n        return filteredList;\r\n    }\r\n\r\n    public convertToCamelCase(field: string) {\r\n        let lastUpperCase = this.getLastUpperCase(field);\r\n        lastUpperCase = lastUpperCase <= 0 ? 1 : lastUpperCase;\r\n\r\n        return field.substring(0, lastUpperCase).toLowerCase() + field.substring(lastUpperCase);\r\n    }\r\n\r\n    public getLastUpperCase(word: string): number {\r\n        for (let i = 0; i < word.length; i++) {\r\n            if (word[i].match(/[A-Z]/) === null) {\r\n                return i - 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    // this function removes single error\r\n    public removeError(control: AbstractControl, error: string) {\r\n        const err = control.errors; // get control errors\r\n        if (err) {\r\n            delete err[error]; // delete your own error\r\n            if (!Object.keys(err).length) { // if no errors left\r\n                control.setErrors(null); // set control errors to null making it VALID\r\n            } else {\r\n                control.setErrors(err); // controls got other errors so set them back\r\n            }\r\n        }\r\n    }\r\n\r\n    public sameValue(firstFormControlName: string, secondFormControlName: string, allowEqual: boolean = true) {\r\n        return (abstractForm: FormGroup): { [key: string]: any } => {\r\n            const firstFormControl = abstractForm.get(firstFormControlName);\r\n            const secondFormControl = abstractForm.get(secondFormControlName);\r\n\r\n            if (firstFormControl && firstFormControl.value\r\n                && secondFormControl && secondFormControl.value) {\r\n                const res = (Number(firstFormControl.value) === Number(secondFormControl.value));\r\n                if (!res) {\r\n                    firstFormControl.setErrors({ checkValue: true });\r\n                    secondFormControl.setErrors({ checkValue: true });\r\n                    return { checkValue: true };\r\n                } else {\r\n                    this.removeError(firstFormControl, 'checkValue');\r\n                    this.removeError(secondFormControl, 'checkValue');\r\n                }\r\n\r\n            }\r\n            return null;\r\n        };\r\n    }\r\n\r\n    public isInSameMonthOrAfter(date: moment.Moment): boolean {\r\n        const now: moment.Moment = this.companyManager.getCurrentCompanyDate();\r\n        return date.isSameOrAfter(now, 'month');\r\n    }\r\n\r\n    public updateFormGroupValidity(formGroup: FormGroup) {\r\n        if (formGroup.controls) {\r\n            Object.keys(formGroup.controls).forEach((controlName) => {\r\n                const control = formGroup.controls[controlName] as FormGroup;\r\n                this.updateFormGroupValidity(control);\r\n            });\r\n        }\r\n        formGroup.updateValueAndValidity();\r\n        formGroup.markAsTouched();\r\n    }\r\n\r\n    public sortArrayAlphabetically(array: any[], propertyToCompare: string[]) {\r\n        if (array && propertyToCompare) {\r\n            array.sort((current, next) => {\r\n                propertyToCompare.forEach((property, index) => {\r\n                    if (current[property] < next[property]) { return -1; }\r\n                    if (current[property] > next[property]) { return 1; }\r\n                });\r\n\r\n                return 0;\r\n            });\r\n        }\r\n    }\r\n\r\n    public removeItemsFromArray(array: any[], itemsToRemove: any[], propertyToCompare?: string): void {\r\n        if (array && itemsToRemove) {\r\n            for (let i = array.length - 1; i >= 0; i--) {\r\n                for (let j = 0; j < itemsToRemove.length; j++) {\r\n                    const source = array[i];\r\n                    const itemToRemove = itemsToRemove[j];\r\n\r\n                    if (source &&\r\n                        itemToRemove &&\r\n                        source.hasOwnProperty(propertyToCompare) &&\r\n                        itemToRemove.hasOwnProperty(propertyToCompare) &&\r\n                        ((propertyToCompare &&\r\n                            (source[propertyToCompare] === itemToRemove[propertyToCompare]))\r\n                            ||\r\n                            (!propertyToCompare &&\r\n                                (source === itemToRemove)))) {\r\n                        array.splice(i, 1);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public getFileNameFromContentDisposition<T>(response: HttpResponse<T>): string {\r\n        const contentDisposition = response.headers.get('Content-Disposition') || '';\r\n        const matches = /filename=([^;]+)/ig.exec(contentDisposition);\r\n        const fileName = (matches[1] || 'document').trim().replace(/\"/g, '');\r\n        return fileName;\r\n    }\r\n}\r\n\r\n// this code has been copied from the security service\r\nexport function nameof<T>(key: keyof T, instance?: T): keyof T {\r\n    return key;\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class WebStorageService {\r\n\r\n    constructor() { }\r\n\r\n    saveToStorage(key: string, data: any): void {\r\n        if (data) {\r\n            sessionStorage.setItem(key, JSON.stringify(data));\r\n        }\r\n    }\r\n\r\n    loadFromStorage(key: string): any {\r\n        const config = sessionStorage.getItem(key);\r\n        return JSON.parse(config);\r\n    }\r\n\r\n    isInStorage(key: string): boolean {\r\n        if (key) {\r\n            return sessionStorage.getItem(key) !== null;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    updateStorage(key: string, data: any): void {\r\n        if (data) {\r\n            sessionStorage.setItem(key, JSON.stringify(data));\r\n        }\r\n    }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { CUSTOM_ELEMENTS_SCHEMA, ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from '@angular/material';\r\nimport { MomentDateAdapter } from '@angular/material-moment-adapter';\r\nimport { RouterModule } from '@angular/router';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { AgGridModule } from 'ag-grid-angular';\r\nimport { TextMaskModule } from 'angular2-text-mask';\r\nimport { AgContextualMenuComponent } from './components/ag-contextual-menu/ag-contextual-menu.component';\r\nimport { AgGridAccrualNumberComponent } from './components/ag-grid-accrual-number/ag-grid-accrual-number.component';\r\nimport { AgGridCheckboxComponent } from './components/ag-grid-checkbox/ag-grid-checkbox.component';\r\nimport { AgGridCopyIconComponent } from './components/ag-grid-copy-icon/ag-grid-copy-icon.component';\r\nimport { AgGridHyperlinkForAccountentriesComponent } from './components/ag-grid-hyperlink-for-accountentries/ag-grid-hyperlink-for-accountentries.component';\r\nimport { AgGridHyperlinkForTradechildsectionsComponent } from './components/ag-grid-hyperlink-for-tradechildsections/ag-grid-hyperlink-for-tradechildsections.component';\r\nimport { AgGridHyperlinkComponent } from './components/ag-grid-hyperlink/ag-grid-hyperlink.component';\r\nimport { AgGridListAndSearchPicklistFieldComponent } from './components/ag-grid-list-and-search-picklist-field/ag-grid-list-and-search-picklist-field.component';\r\nimport { AgGridSelectComponent } from './components/ag-grid-select/ag-grid-select.component';\r\nimport { AgGridUserPreferencesComponent } from './components/ag-grid-user-preferences/ag-grid-user-preferences.component';\r\nimport { GridViewSaveDialogComponent } from './components/ag-grid-user-preferences/grid-view-save-dialog/grid-view-save-dialog.component';\r\nimport { AgGridMultipleAutocompleteDepartmentComponent } from './components/ag-grid/ag-grid-multiple-autocomplete-department/ag-grid-multiple-autocomplete-department.component';\r\nimport { AgGridMultipleAutocompleteComponent } from './components/ag-grid/ag-grid-multiple-autocomplete/ag-grid-multiple-autocomplete.component';\r\nimport { AgGridAutocompleteComponent } from './components/ag-grid/autocomplete/ag-grid-autocomplete.component';\r\nimport { AgGridCheckboxTriStateComponent } from './components/ag-grid/checkbox-tri-state/ag-grid-checkbox-tri-state.component';\r\nimport { AgGridContextualSearchComponent } from './components/ag-grid/contextual-search/ag-grid-contextual-search.component';\r\nimport { ApiCollectionAutocompleteDropdownComponent } from './components/api-collection-autocomplete-dropdown/api-collection-autocomplete-dropdown.component';\r\nimport { AutocompleteDropdownComponent } from './components/autocomplete-dropdown/autocomplete-dropdown.component';\r\nimport { BaseFormComponent } from './components/base-form-component/base-form-component.component';\r\nimport { CellEditorDatePickerComponent } from './components/cell-editor-date-picker/cell-editor-date-picker.component';\r\nimport { CellEditorMonthDatePickerComponent } from './components/cell-editor-month-date-picker/cell-editor-month-date-picker.component';\r\nimport { CellEditorAtlasNumericComponent } from './components/cell-editor-numeric/cell-editor-atlas-numeric/cell-editor-atlas-numeric.component';\r\nimport { CellEditorNumericComponent } from './components/cell-editor-numeric/cell-editor-numeric.component';\r\nimport { CellEditorSelectComponent } from './components/cell-editor-select/cell-editor-select.component';\r\nimport { CellEditorYearPickerComponent } from './components/cell-editor-year-picker/cell-editor-year-picker.component';\r\nimport { ChipListComponent } from './components/chip-list/chip-list.component';\r\nimport { CommodityInputComponent } from './components/commodity-input/commodity-input.component';\r\nimport { CompanyPickerComponent } from './components/company-picker/company-picker.component';\r\nimport { ConfirmationDialogComponent } from './components/confirmation-dialog/confirmation-dialog.component';\r\nimport { ContextualSearchBaseLightBoxComponent } from './components/contextual-search/base-light-box/contextual-search-base-light-box.component';\r\nimport { ContextualSearchUserPreferencesLightBoxComponent } from './components/contextual-search/base-light-box/contextual-search-user-preferences-light-box/contextual-search-user-preferences-light-box.component';\r\nimport { ContextualSearchMultipleSelectLightBoxComponent } from './components/contextual-search/multiple-select-light-box/contextual-search-multiple-select-light-box.component';\r\nimport { ContractStatusLabelComponent } from './components/contract-status-label/contract-status-label.component';\r\nimport { DateLabelComponent } from './components/date-label/date-label.component';\r\nimport { DocumentGenerationConfirmationDialogBoxComponent } from './components/document-generation-confirmation-dialog-box/document-generation-confirmation-dialog-box.component';\r\nimport { EmptyStateComponent } from './components/empty-state/empty-state.component';\r\nimport { ErrorPageComponent } from './components/error-page/error-page.component';\r\nimport { FavouritesListDisplayComponent } from './components/favourites-list-display/favourites-list-display.component';\r\nimport { FileUploadDialogBoxComponent } from './components/file-upload-dialog-box/file-upload-dialog-box.component';\r\nimport { FilterSetDisplayComponent } from './components/filter-set-display/filter-set-display.component';\r\nimport { FilterSetEditDialogComponent } from './components/filter-set-display/filter-set-edit-dialog/filter-set-edit-dialog.component';\r\nimport { FilterSetEditorComponent } from './components/filter-set-editor/filter-set-editor.component';\r\nimport { FloatingActionButtonComponent } from './components/floating-action-button/floating-action-button.component';\r\nimport { DatePickerComponent } from './components/form-components/date-picker/date-picker.component';\r\nimport { MonthDatePickerComponent } from './components/form-components/date-picker/month-date-picker/month-date-picker.component';\r\nimport { YearPickerComponent } from './components/form-components/date-picker/year-picker/year-picker.component';\r\nimport { DropdownSelectListComponent } from './components/form-components/dropdown-select-list/dropdown-select-list.component';\r\nimport { DropdownSelectComponent } from './components/form-components/dropdown-select/dropdown-select.component';\r\nimport { FormComponentBaseComponent } from './components/form-components/form-component-base/form-component-base.component';\r\nimport { FormInputComponent } from './components/form-components/form-input/form-input.component';\r\nimport { FormToggleComponent } from './components/form-components/form-toggle/form-toggle.component';\r\nimport { MasterdataInputComponent } from './components/form-components/masterdata/masterdata-input/masterdata-input.component';\r\nimport { MasterdataUserPreferencesInputComponent } from './components/form-components/masterdata/masterdata-input/masterdata-user-preferences-input/masterdata-user-preferences-input.component';\r\nimport { ContextualSearchMultipleAutocompleteSelectComponent } from './components/form-components/multiple-autocomplete-dropdown/contextual-search/contextual-search-multiple-autocomplete-select.component';\r\nimport { GenericReportViewerComponent } from './components/generic-report-viewer/generic-report-viewer.component';\r\nimport { EnlargedGridDialogComponent } from './components/grid-enlargement/enlarged-grid-dialog/enlarged-grid-dialog.component';\r\nimport { GridEnlargementComponent } from './components/grid-enlargement/grid-enlargement.component';\r\nimport { InformationBannerComponent } from './components/information-banner/information-banner.component';\r\nimport { ListAndSearchContextualMenuComponent } from './components/list-and-search/list-and-search-contextual-menu.component';\r\nimport { ListAndSearchComponent } from './components/list-and-search/list-and-search.component';\r\nimport { LockIntervalComponent } from './components/lock-interval/lock-interval.component';\r\nimport { MultipleAutocompleteDropdownComponent } from './components/multiple-autocomplete-dropdown/multiple-autocomplete-dropdown.component';\r\nimport { ParamsListComponent } from './components/params-list/params-list.component';\r\nimport { ParamsSidenavSelectorComponent } from './components/params-sidenav-selector/params-sidenav-selector.component';\r\nimport { PicklistComponent } from './components/picklist/picklist.component';\r\nimport { PrivilegeLevel1IconComponent } from './components/privilege-level1-icon/privilege-level1-icon.component';\r\nimport { RowSelectionButton } from './components/row-selection-button/row-selection-button.component';\r\nimport { SelectMultipleAutocompleteComponent } from './components/select-multiple-autocomplete/select-multiple-autocomplete.component';\r\nimport { SideNavComponent } from './components/side-nav/side-nav.component';\r\nimport { SSRSReportViewerComponent } from './components/ssrs-report-viewer/ssrsreport-viewer.component';\r\nimport { SumColumntotalComponent } from './components/sum-columntotal/sum-columntotal.component';\r\nimport { TopNavComponent } from './components/top-nav/top-nav.component';\r\nimport { UserAvatarComponent } from './components/user-avatar/user-avatar.component';\r\nimport { VesselContextualSearchComponent } from './components/vessel-contextual-search/vessel-contextual-search.component';\r\nimport { WarningBannerComponent } from './components/warning-banner/warning-banner.component';\r\nimport { FeatureFlagDirective } from './directives/app-flag.directive';\r\nimport { AuthorizedDirective } from './directives/authorization.directive';\r\nimport { DatepickerLocaldateDirective } from './directives/datepicker-localdate.directive';\r\nimport { HighlightDirective } from './directives/mattoolbar-backgroundcolor.directive';\r\nimport { NumberDecimalsDirective } from './directives/number-decimals.directive';\r\nimport { SignNumberDirective } from './directives/sign-number.directive';\r\nimport { SpecialCharacterDirective } from './directives/special-character.directive';\r\nimport { ListAndSearchDatePredicatePresetProvider } from './entities/list-and-search/providers/list-and-search-date-predicate-preset-provider.entity';\r\nimport { ListAndSearchNumericPredicatePresetProvider } from './entities/list-and-search/providers/list-and-search-numeric-predicate-preset-provider.entity';\r\nimport { ListAndSearchPicklistPredicatePresetProvider } from './entities/list-and-search/providers/list-and-search-picklist-predicate-preset-provider.entity';\r\nimport { ListAndSearchTextPredicatePresetProvider } from './entities/list-and-search/providers/list-and-search-text-predicate-preset-provider.entity';\r\nimport { SecurityGuard } from './guards/security.guard';\r\nimport { MaterialModule } from './material.module';\r\nimport { FormatDatePipe } from './pipes/format-date-pipe.pipe';\r\nimport { UserInitialsPipePipe } from './pipes/user-initials-pipe.pipe';\r\nimport { CompanyDateResolver } from './resolvers/company-date.resolver';\r\nimport { FormConfigurationResolver } from './resolvers/form-configuration.resolver';\r\nimport { MasterDataResolver } from './resolvers/masterdata.resolver';\r\nimport { AgGridService } from './services/ag-grid.service';\r\nimport { AutocompleteService } from './services/autocomplete.service';\r\nimport { CookiesService } from './services/cookies.service';\r\nimport { DateConverterService } from './services/date-converter.service';\r\nimport { DocumentPopupService } from './services/document-popup.service';\r\nimport { FilterProviderService } from './services/filter-provider.service';\r\nimport { FilterService } from './services/filter-service.service';\r\nimport { FormConfigurationProviderService } from './services/form-configuration-provider.service';\r\nimport { GridConfigurationProviderService } from './services/grid-configuration-provider.service';\r\nimport { ControllingService } from './services/http-services/controlling.service';\r\nimport { ExecutionService } from './services/http-services/execution.service';\r\nimport { ForeignExchangeService } from './services/http-services/foreign-exchange.service';\r\nimport { FormConfigurationService } from './services/http-services/form-configuration.service';\r\nimport { MasterdataService } from './services/http-services/masterdata.service';\r\nimport { PreaccountingService } from './services/http-services/preaccounting.service';\r\nimport { TradingService } from './services/http-services/trading.service';\r\nimport { UserIdentityService } from './services/http-services/user-identity.service';\r\nimport { AccountingEntriesDataLoader } from './services/list-and-search/accountingEntries-data-loader';\r\nimport { ClientReportDataLoader } from './services/list-and-search/clientReport-data-loader';\r\nimport { DocumentDataLoader } from './services/list-and-search/document-data-loader';\r\nimport { InvoiceDataLoader } from './services/list-and-search/invoice-data-loader';\r\nimport { NominalReportDataLoader } from './services/list-and-search/nominalReport-data-loader';\r\nimport { TradeDataLoader } from './services/list-and-search/trade-data-loader';\r\nimport { SecurityService } from './services/security.service';\r\nimport { SnackbarService } from './services/snackbar.service';\r\nimport { SplitCreateAndAllocateService } from './services/split-create-and-allocate.service';\r\nimport { TitleService } from './services/title.service';\r\nimport { TradeEditService } from './services/trade-edit.service';\r\nimport { UiService } from './services/ui.service';\r\nimport { UrlManagementService } from './services/url-management.service';\r\nimport { UtilService } from './services/util.service';\r\n\r\nexport const ATLAS_DATE_FORMATS = {\r\n    parse: {\r\n        dateInput: 'DD/MM/YYYY',\r\n    },\r\n    display: {\r\n        dateInput: 'DD/MM/YYYY',\r\n        monthYearLabel: 'MMM YYYY',\r\n        dateA11yLabel: 'DD/MM/YYYY',\r\n        monthYearA11yLabel: 'MMM YYYY',\r\n    },\r\n};\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        MaterialModule,\r\n        FormsModule,\r\n        RouterModule,\r\n        TextMaskModule,\r\n        AgGridModule.withComponents([]),\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n    ],\r\n    exports: [\r\n        SideNavComponent,\r\n        TopNavComponent,\r\n        DateLabelComponent,\r\n        ContractStatusLabelComponent,\r\n        DatepickerLocaldateDirective,\r\n        HighlightDirective,\r\n        SignNumberDirective,\r\n        AuthorizedDirective,\r\n        NumberDecimalsDirective,\r\n        FeatureFlagDirective,\r\n        AutocompleteDropdownComponent,\r\n        ConfirmationDialogComponent,\r\n        CellEditorDatePickerComponent,\r\n        CellEditorMonthDatePickerComponent,\r\n        CellEditorYearPickerComponent,\r\n        CellEditorSelectComponent,\r\n        CellEditorNumericComponent,\r\n        CellEditorAtlasNumericComponent,\r\n        CompanyPickerComponent,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        UserAvatarComponent,\r\n        RowSelectionButton,\r\n        FormInputComponent,\r\n        DatePickerComponent,\r\n        MonthDatePickerComponent,\r\n        FormToggleComponent,\r\n        DropdownSelectComponent,\r\n        DropdownSelectListComponent,\r\n        MasterdataInputComponent,\r\n        MasterdataUserPreferencesInputComponent,\r\n        ApiCollectionAutocompleteDropdownComponent,\r\n        UserInitialsPipePipe,\r\n        FormatDatePipe,\r\n        SelectMultipleAutocompleteComponent,\r\n        SpecialCharacterDirective,\r\n        ListAndSearchComponent,\r\n        ChipListComponent,\r\n        FilterSetDisplayComponent,\r\n        FilterSetEditorComponent,\r\n        AgGridUserPreferencesComponent,\r\n        AgGridCopyIconComponent,\r\n        AgGridListAndSearchPicklistFieldComponent,\r\n        CommodityInputComponent,\r\n        VesselContextualSearchComponent,\r\n        EmptyStateComponent,\r\n        SSRSReportViewerComponent,\r\n        SumColumntotalComponent,\r\n        PicklistComponent,\r\n        PrivilegeLevel1IconComponent,\r\n        InformationBannerComponent,\r\n        LockIntervalComponent,\r\n        WarningBannerComponent,\r\n        GridViewSaveDialogComponent,\r\n        FileUploadDialogBoxComponent,\r\n        FavouritesListDisplayComponent,\r\n        MultipleAutocompleteDropdownComponent,\r\n        ContextualSearchMultipleAutocompleteSelectComponent,\r\n        ParamsListComponent,\r\n        ParamsSidenavSelectorComponent,\r\n        FloatingActionButtonComponent,\r\n        GridEnlargementComponent,\r\n        EnlargedGridDialogComponent,\r\n        TranslateModule,\r\n        YearPickerComponent,\r\n        GenericReportViewerComponent,\r\n    ],\r\n    declarations: [\r\n        SideNavComponent,\r\n        TopNavComponent,\r\n        DateLabelComponent,\r\n        ContractStatusLabelComponent,\r\n        DatepickerLocaldateDirective,\r\n        HighlightDirective,\r\n        SignNumberDirective,\r\n        AuthorizedDirective,\r\n        NumberDecimalsDirective,\r\n        FeatureFlagDirective,\r\n        AutocompleteDropdownComponent,\r\n        ConfirmationDialogComponent,\r\n        CellEditorDatePickerComponent,\r\n        CellEditorMonthDatePickerComponent,\r\n        CellEditorYearPickerComponent,\r\n        CellEditorSelectComponent,\r\n        CellEditorNumericComponent,\r\n        CellEditorAtlasNumericComponent,\r\n        CompanyPickerComponent,\r\n        ErrorPageComponent,\r\n        UserAvatarComponent,\r\n        AgContextualMenuComponent,\r\n        RowSelectionButton,\r\n        FormComponentBaseComponent,\r\n        FormInputComponent,\r\n        DatePickerComponent,\r\n        MonthDatePickerComponent,\r\n        FormToggleComponent,\r\n        DropdownSelectComponent,\r\n        DropdownSelectListComponent,\r\n        ApiCollectionAutocompleteDropdownComponent,\r\n        UserInitialsPipePipe,\r\n        FormatDatePipe,\r\n        SelectMultipleAutocompleteComponent,\r\n        SpecialCharacterDirective,\r\n        AgGridCheckboxComponent,\r\n        AgGridSelectComponent,\r\n        AgGridHyperlinkComponent,\r\n        AgGridListAndSearchPicklistFieldComponent,\r\n        ContextualSearchBaseLightBoxComponent,\r\n        MasterdataInputComponent,\r\n        MasterdataUserPreferencesInputComponent,\r\n        BaseFormComponent,\r\n        ContextualSearchUserPreferencesLightBoxComponent,\r\n        MasterdataUserPreferencesInputComponent,\r\n        ListAndSearchComponent,\r\n        ListAndSearchContextualMenuComponent,\r\n        ChipListComponent,\r\n        FilterSetDisplayComponent,\r\n        FilterSetEditorComponent,\r\n        AgGridUserPreferencesComponent,\r\n        AgGridCopyIconComponent,\r\n        CommodityInputComponent,\r\n        VesselContextualSearchComponent,\r\n        EmptyStateComponent,\r\n        SSRSReportViewerComponent,\r\n        SumColumntotalComponent,\r\n        PicklistComponent,\r\n        FilterSetEditDialogComponent,\r\n        InformationBannerComponent,\r\n        DocumentGenerationConfirmationDialogBoxComponent,\r\n        AgGridContextualSearchComponent,\r\n        PrivilegeLevel1IconComponent,\r\n        AgGridAccrualNumberComponent,\r\n        LockIntervalComponent,\r\n        WarningBannerComponent,\r\n        AgGridHyperlinkForAccountentriesComponent,\r\n        GridViewSaveDialogComponent,\r\n        AgGridAutocompleteComponent,\r\n        FileUploadDialogBoxComponent,\r\n        FavouritesListDisplayComponent,\r\n        AgGridHyperlinkForTradechildsectionsComponent,\r\n        MultipleAutocompleteDropdownComponent,\r\n        AgGridMultipleAutocompleteComponent,\r\n        AgGridMultipleAutocompleteDepartmentComponent,\r\n        ContextualSearchMultipleSelectLightBoxComponent,\r\n        ContextualSearchMultipleAutocompleteSelectComponent,\r\n        ParamsListComponent,\r\n        ParamsSidenavSelectorComponent,\r\n        FloatingActionButtonComponent,\r\n        GridEnlargementComponent,\r\n        EnlargedGridDialogComponent,\r\n        YearPickerComponent,\r\n        GenericReportViewerComponent,\r\n        AgGridCheckboxTriStateComponent,\r\n    ],\r\n    providers: [\r\n        TradingService,\r\n        ExecutionService,\r\n        ControllingService,\r\n        PreaccountingService,\r\n        DateConverterService,\r\n        MasterDataResolver,\r\n        SecurityGuard,\r\n        UserIdentityService,\r\n        ForeignExchangeService,\r\n        UrlManagementService,\r\n        CookiesService,\r\n        TitleService,\r\n        SnackbarService,\r\n        UtilService,\r\n        UiService,\r\n        AutocompleteService,\r\n        FormConfigurationService,\r\n        FormConfigurationResolver,\r\n        CompanyDateResolver,\r\n        FormConfigurationProviderService,\r\n        GridConfigurationProviderService,\r\n        UserInitialsPipePipe,\r\n        FilterService,\r\n        FormatDatePipe,\r\n        TradeDataLoader,\r\n        AccountingEntriesDataLoader,\r\n        InvoiceDataLoader,\r\n        ListAndSearchTextPredicatePresetProvider,\r\n        ListAndSearchNumericPredicatePresetProvider,\r\n        ListAndSearchDatePredicatePresetProvider,\r\n        ListAndSearchPicklistPredicatePresetProvider,\r\n        FilterProviderService,\r\n        SplitCreateAndAllocateService,\r\n        InvoiceDataLoader,\r\n        DocumentDataLoader,\r\n        DocumentPopupService,\r\n        ClientReportDataLoader,\r\n        NominalReportDataLoader,\r\n        { provide: MAT_DATE_LOCALE, useValue: 'en' },\r\n        { provide: DateAdapter, useClass: MomentDateAdapter },\r\n        { provide: MAT_DATE_FORMATS, useValue: ATLAS_DATE_FORMATS },\r\n        AgGridService,\r\n        TradeEditService,\r\n    ],\r\n    entryComponents: [\r\n        CellEditorDatePickerComponent,\r\n        CellEditorMonthDatePickerComponent,\r\n        CellEditorYearPickerComponent,\r\n        CellEditorSelectComponent,\r\n        CellEditorNumericComponent,\r\n        CellEditorAtlasNumericComponent,\r\n        AgContextualMenuComponent,\r\n        RowSelectionButton,\r\n        ConfirmationDialogComponent,\r\n        ContextualSearchBaseLightBoxComponent,\r\n        ContextualSearchUserPreferencesLightBoxComponent,\r\n        AgGridCheckboxComponent,\r\n        AgGridSelectComponent,\r\n        AgGridCheckboxTriStateComponent,\r\n        AgGridHyperlinkForAccountentriesComponent,\r\n        AgGridHyperlinkComponent,\r\n        AgGridUserPreferencesComponent,\r\n        AgGridCopyIconComponent,\r\n        FilterSetEditDialogComponent,\r\n        ListAndSearchContextualMenuComponent,\r\n        DocumentGenerationConfirmationDialogBoxComponent,\r\n        AgGridContextualSearchComponent,\r\n        AgGridAccrualNumberComponent,\r\n        AgGridListAndSearchPicklistFieldComponent,\r\n        AgGridAutocompleteComponent,\r\n        GridViewSaveDialogComponent,\r\n        AgGridHyperlinkForTradechildsectionsComponent,\r\n        ContextualSearchMultipleAutocompleteSelectComponent,\r\n        ContextualSearchMultipleSelectLightBoxComponent,\r\n        EnlargedGridDialogComponent,\r\n        GenericReportViewerComponent,\r\n    ],\r\n    schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n})\r\nexport class SharedModule {\r\n    static forRoot(): ModuleWithProviders {\r\n        return {\r\n            ngModule: SharedModule,\r\n            providers: [SecurityService, MasterdataService],\r\n        };\r\n    }\r\n}\r\n","\r\nimport { ValidatorFn } from '@angular/forms/src/directives/validators';\r\nimport { AbstractControl } from '@angular/forms/src/model';\r\nimport * as _moment from 'moment';\r\nimport { Moment } from 'moment/moment';\r\nimport { AbstractControlService } from '../services/common/abstract-control.service';\r\nconst moment = _moment;\r\n\r\nexport function isBeforeDate(dateCompared: Moment, allowNull: boolean = false, onlyMonth: boolean = false): ValidatorFn {\r\n    return (control: AbstractControl): { [key: string]: any } => {\r\n        if (allowNull && (control.value == null || control.value === '')) { return null; }\r\n        const controlValue: Moment = moment(control.value);\r\n        const isBefore = onlyMonth ? controlValue.isBefore(dateCompared, 'month') : controlValue.isSameOrBefore(dateCompared);\r\n        return (isBefore) ? null : { isDateValid: true };\r\n    };\r\n}\r\n\r\nexport function dateInInterval(dateMin: Date, dateMax: Date, allowNull: boolean = true): ValidatorFn {\r\n    return (control: AbstractControl): { [key: string]: any } => {\r\n        return getErrorIfDateNotInInterval(control, dateMin, dateMax, allowNull);\r\n    };\r\n}\r\n\r\nexport function getErrorIfDateNotInInterval(control, dateMin: Date, dateMax: Date, allowNull: boolean = true) {\r\n    if (allowNull && !control.value) {\r\n        return { isDateValid: true };\r\n    } else if (!allowNull && !control.value) {\r\n        return null;\r\n    }\r\n    if (dateMin) {\r\n        dateMin.setHours(0, 0, 0, 0);\r\n    }\r\n    if (dateMax != null) {\r\n        dateMax.setHours(0, 0, 0, 0);\r\n    }\r\n    const momentMin: Moment = moment(dateMin);\r\n    const momentMax: Moment = moment(dateMax);\r\n\r\n    const isBefore = control.value.isBefore(momentMin);\r\n    if (isBefore) {\r\n        return { isDateValid: true };\r\n    }\r\n\r\n    const isAfter = control.value.isAfter(momentMax);\r\n    if (isAfter) {\r\n        return { isDateValid: true };\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport function invoiceDateValidation(invoiceDate: Date, maxDate: Moment): ValidatorFn {\r\n    return (control: AbstractControl): { [key: string]: any } => {\r\n        const invoiceMoment: Moment = moment(invoiceDate);\r\n        if (invoiceMoment.isBefore(maxDate.format('LL'))) {\r\n            return { isDateBeforeValid: true };\r\n        }\r\n    };\r\n}\r\n\r\nexport function agreementDateValidation(agreementDate: Moment, currentDate: Moment): ValidatorFn {\r\n    return (control: AbstractControl): { [key: string]: any } => {\r\n        if (agreementDate.isAfter(currentDate)) {\r\n            return { isDateAfterCurrentDateValid: true };\r\n        }\r\n    };\r\n}\r\n\r\nexport function documentDateValidation(invoiceDate: Date, maxDate: Moment): ValidatorFn {\r\n    return (control: AbstractControl): { [key: string]: any } => {\r\n        const invoiceMoment: Moment = moment(invoiceDate);\r\n        if (invoiceMoment.isBefore(maxDate.format('LL'))) {\r\n            return { isDateBeforeValid: true };\r\n        }\r\n        if (invoiceMoment.isAfter(moment())) {\r\n            return { isDateAfterValid: true };\r\n        }\r\n    };\r\n}\r\n\r\nexport function numberOfDaysValidation(referenceFormControlName: Date, dateComparedFormControlName: Date) {\r\n    if (referenceFormControlName && dateComparedFormControlName) {\r\n        const timeDiff = Math.abs((referenceFormControlName as Date).valueOf() - (dateComparedFormControlName as Date).valueOf());\r\n        const dayDifference = Math.ceil(timeDiff / (1000 * 3600 * 24));\r\n        return dayDifference;\r\n    }\r\n}\r\nexport function isDateTwoBeforeDateOne(dateOne: Date, dateTwo: Date, allowEqual: boolean = false) {\r\n    if (dateOne && dateTwo) {\r\n        const dateOneValue = new Date(dateOne).toDateString();\r\n        const dateTwoValue = new Date(dateTwo).toDateString();\r\n        let result = new Date(dateTwoValue) < new Date(dateOneValue) ? true : null;\r\n        if (!result && allowEqual) {\r\n            result = (dateOneValue === dateTwoValue);\r\n        }\r\n        return result;\r\n    }\r\n}\r\n\r\nexport function isAfterDate(contractDate: Moment): ValidatorFn {\r\n    return (control: AbstractControl): { [key: string]: any } => {\r\n        if (contractDate && control.value) {\r\n            const controlValue = new Date(new Date(control.value).toDateString());\r\n            const compareToValue = new Date(new Date(contractDate.toDate()).toDateString());\r\n            const isDateAfter = controlValue > compareToValue ? true : false;\r\n            if (isDateAfter) {\r\n                return { isDateAfterValid: true };\r\n            } else {\r\n                return null;\r\n            }\r\n        } else {\r\n            return null;\r\n        }\r\n    };\r\n}\r\n\r\nexport function isDateBeforeControlDate(contractDate: Moment): ValidatorFn {\r\n    return (control: AbstractControl): { [key: string]: any } => {\r\n        if (contractDate && control.value) {\r\n            const controlValue = new Date(new Date(control.value).toDateString());\r\n            const compareToValue = new Date(new Date(contractDate.toDate()).toDateString());\r\n            const isDateBeforeControl = controlValue < compareToValue ? true : false;\r\n            if (isDateBeforeControl) {\r\n                return { isBeforeDateValid: true };\r\n            } else {\r\n                return null;\r\n            }\r\n        } else {\r\n            return null;\r\n        }\r\n    };\r\n}\r\n\r\nexport function isValidDateForSql(): ValidatorFn {\r\n    return (control: AbstractControl): { [key: string]: any } => {\r\n        const controlValue: Moment = moment(control.value);\r\n        if (control.value !== undefined && control.value !== '') {\r\n            const oldestValidDate = new Date();\r\n            oldestValidDate.setFullYear(1753, 1, 1);\r\n            oldestValidDate.setHours(0, 0, 0);\r\n            const isDateBefore = controlValue.isBefore(moment(oldestValidDate));\r\n            if (isDateBefore) {\r\n                return { invalidDateForSql: true };\r\n            } else {\r\n                return null;\r\n            }\r\n        } else {\r\n            return null;\r\n        }\r\n    };\r\n}\r\n\r\nexport function dateTwoBeforeDateOne(dateOne: Date, dateTwo: Date, allowEqual: boolean = false): ValidatorFn {\r\n    return (control: AbstractControl): { [key: string]: any } => {\r\n        if (isDateTwoBeforeDateOne(dateOne, dateTwo, allowEqual)) {\r\n            return { isDateBeforeValid: true };\r\n        }\r\n    };\r\n}\r\n\r\nexport function isGreaterThanNinetyDays(referenceFormControlName: string, dateComparedFormControlName: string): ValidatorFn {\r\n    return (control: AbstractControl): { [key: string]: any } => {\r\n        const comparedDate = control.get(dateComparedFormControlName);\r\n        const reference = control.get(referenceFormControlName);\r\n        const numberOfDays = numberOfDaysValidation(reference.value as Date, comparedDate.value as Date);\r\n        if (numberOfDays > 90) {\r\n            AbstractControlService.addError(comparedDate, { key: 'isGreaterThanNinetyDays', value: true });\r\n            return { isGreaterThanNinetyDays: true };\r\n        } else {\r\n            AbstractControlService.removeError(comparedDate, { key: 'isGreaterThanNinetyDays', value: true });\r\n        }\r\n        return null;\r\n    };\r\n}\r\n","import { AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { UserGridViewDto } from '../dtos/user-grid-view-dto.dto';\r\nimport { GridConfigurationService } from '../services/http-services/grid-configuration.service';\r\n\r\nexport class GridViewNameValidator {\r\n    static createValidator(gridConfigurationService: GridConfigurationService, gridCode: string) {\r\n        return (control: AbstractControl): Promise<ValidationErrors | null> | Observable<ValidationErrors | null> => {\r\n            if (control.value) {\r\n                return gridConfigurationService.isGridViewNameExists(control.value, gridCode).pipe(\r\n                    map((res) => {\r\n                        return res ? { notUnique: true } : null;\r\n                    }),\r\n                );\r\n            }\r\n            return of(null);\r\n        };\r\n    }\r\n}\r\n\r\nexport function isGridViewSameNameExists(gridViewList: UserGridViewDto[], gridViewId: number, sharingEnabled: boolean): ValidatorFn {\r\n    return (control: AbstractControl): { [key: string]: any } => {\r\n        if (control.value) {\r\n            const gridViewWithSameName = gridViewList ?\r\n                gridViewList.find((gridView) =>\r\n                    gridView.name === control.value\r\n                    && gridView.gridViewId !== gridViewId\r\n                    && !gridView.isSharedWithAllUsers\r\n                    && !sharingEnabled) :\r\n                null;\r\n            return gridViewWithSameName ? { notUnique: true } : null;\r\n        }\r\n\r\n        return null;\r\n    };\r\n}\r\n","// tslint:disable-next-line:no-implicit-dependencies\r\nimport * as _moment from 'moment';\r\nimport { conformToMask } from 'text-mask-core';\r\nimport { AtlasNumber } from '../../shared/entities/atlas-number.entity';\r\nimport { CreditAgainstTypes } from '../../shared/enums/credit-against-type.enum';\r\nimport { DiscountBasis } from '../../shared/enums/discount-basis.enum';\r\nimport { DiscountTypes } from '../../shared/enums/discount-type.enum';\r\nimport { CustomNumberMask } from '../../shared/numberMask';\r\nconst moment = _moment;\r\nexport function getContractValue(discountPremium, currency: string, selectedDiscPrem,\r\n    discountPremiumType, weightCodeConversion: number, priceCodeConversion: number,\r\n    contractPriceDecimal: AtlasNumber, quantityDecimal: AtlasNumber, discountPremiumValue, isExpanded: boolean) {\r\n    const mask = CustomNumberMask(12, 10, true);\r\n    if (discountPremium !== undefined &&\r\n        currency !== discountPremium &&\r\n        selectedDiscPrem !== undefined) {\r\n        // discountPremiumValue exists\r\n\r\n        if ((discountPremium && selectedDiscPrem) != null) {\r\n            isExpanded = true;\r\n        }\r\n\r\n        let discountPremiumContractedPrice: number | AtlasNumber = 0;\r\n        const discountPremiumSign = ((discountPremium as DiscountTypes) === DiscountTypes.Discount ? -1 : 1);\r\n\r\n        // tslint:disable-next-line:prefer-conditional-expression\r\n        if ((discountPremium as DiscountBasis) === DiscountBasis.Rate) {\r\n            discountPremiumContractedPrice = discountPremiumValue * discountPremiumSign;\r\n        } else if ((discountPremiumType as DiscountBasis) === DiscountBasis.Percent) {\r\n            discountPremiumContractedPrice = contractPriceDecimal\r\n                .times((discountPremiumValue * discountPremiumSign / 100));\r\n        }\r\n\r\n        contractPriceDecimal = contractPriceDecimal.plus(discountPremiumContractedPrice);\r\n\r\n    }\r\n    // tslint:disable-next-line:no-shadowed-variable\r\n    const contractValue = contractPriceDecimal.times(quantityDecimal).times(\r\n        weightCodeConversion *\r\n        priceCodeConversion).toString();\r\n\r\n    const contractValueFormatted = conformToMask(contractValue, mask, { guide: false }).conformedValue;\r\n    return contractValueFormatted;\r\n}\r\n\r\nexport function getMaturityDate(creditAgainst, creditDays, companyDate, blDate, positionMonth, deliveryPeriodEnd) {\r\n    // tslint:disable-next-line:no-shadowed-variable\r\n    let maturityDate = companyDate;\r\n    switch (creditAgainst) {\r\n        case CreditAgainstTypes.CurrentDate:\r\n            maturityDate = companyDate;\r\n            break;\r\n        case CreditAgainstTypes.ArrivalDate:\r\n            maturityDate = deliveryPeriodEnd;\r\n            break;\r\n        // case CreditAgainstTypes.InvoiceDate:\r\n        // TODO:\r\n        // Has dependency on invoicing functionality\r\n        // break;\r\n        default:\r\n            // Need to call new Date(date) to avoid modifying the blDate when changing maturityDate\r\n            maturityDate = blDate ?\r\n                new Date(blDate) :\r\n                moment(positionMonth).endOf('month').toDate();\r\n            if (!blDate || !deliveryPeriodEnd) {\r\n                creditDays = 0;\r\n            }\r\n            break;\r\n    }\r\n\r\n    maturityDate.setDate(maturityDate.getDate() + creditDays);\r\n    return maturityDate;\r\n\r\n}\r\n\r\nexport function cropYearValidation(years, contractDate): number {\r\n    let result = 1;\r\n    if (years) {\r\n        if (years.length > 1) {\r\n            if (Number(years[1]) < Number(years[0])) {\r\n                result = 0;\r\n            }\r\n        }\r\n\r\n        years.forEach((year) => {\r\n            if (!isDateInRange(Number(year), contractDate.year() - 5, contractDate.year() + 5)) {\r\n                result = -1;\r\n            }\r\n        });\r\n    }\r\n    return result;\r\n}\r\nfunction isDateInRange(value, start, stop) {\r\n    return value >= start && value <= stop;\r\n}\r\n","export class SectionReference {\r\n    sectionId: number;\r\n    dataVersionId: number;\r\n    selectedTab: number = 0;\r\n\r\n    constructor(sectionId: number, dataVersionId: number, selectedTab: number = 0) {\r\n        this.sectionId = sectionId;\r\n        this.dataVersionId = dataVersionId;\r\n        this.selectedTab = selectedTab;\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport atlasTradingEn from '../../../assets/translations/trading/atlasTrading.en.json';\r\nimport { AtlasTranslationService } from '../../core/services/atlas-translation.service';\r\n\r\n@Injectable()\r\nexport class AtlasTradingTranslationResolver\r\n    implements Resolve<boolean> {\r\n    constructor(\r\n        private atlasTranslationService: AtlasTranslationService,\r\n    ) { }\r\n\r\n    resolve(\r\n        route: ActivatedRouteSnapshot,\r\n    ): Observable<boolean> {\r\n        return this.atlasTranslationService.loadTranslationFile('trading', atlasTradingEn);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Subject } from 'rxjs';\r\nimport { AuthorizationService } from '../../core/services/authorization.service';\r\nimport { CompanyManagerService } from '../../core/services/company-manager.service';\r\nimport { TradePropertyPrivilege } from '../../shared/entities/trade-property-privilege.entity';\r\nimport { PermissionLevels } from '../../shared/enums/permission-level.enum';\r\nimport { SecurityService } from '../../shared/services/security.service';\r\nimport { SectionReference } from '../entities/section-reference';\r\nimport { SectionTabIndex } from '../entities/section-tab-index';\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\n\r\nexport class TradeActionsService {\r\n    public newTradeSubject = new Subject();\r\n    public editSectionSubject = new Subject();\r\n    public displaySectionSubject = new Subject();\r\n    public newTradeInSnapshotSubject = new Subject();\r\n    public editSectionInSnapshotSubject = new Subject();\r\n    public displaySectionInSnapshotSubject = new Subject();\r\n    public displaySectionAfterEditSubject = new Subject();\r\n\r\n    public approveSectionSubject = new Subject();\r\n    public unApproveSectionSubject = new Subject();\r\n    public splitSectionSubject = new Subject();\r\n    public trancheSectionSubject = new Subject();\r\n    public deleteSectionSubject = new Subject();\r\n\r\n    public reOpenSectionSubject = new Subject();\r\n    public closeSectionSubject = new Subject();\r\n    public cancelSectionSubject = new Subject();\r\n\r\n    public allocateSectionSubject = new Subject();\r\n    public allocateSectionInSnapshotSubject = new Subject();\r\n    public deallocateSectionSubject = new Subject();\r\n\r\n    public contractAdviceSubject = new Subject();\r\n\r\n    public tradeImageSubject = new Subject();\r\n    public tradeEditImageSubject = new Subject();\r\n\r\n    public tradeGroupFunctionsSubject = new Subject();\r\n\r\n    public tradeSaveAsFavouriteSubject = new Subject();\r\n    public tradeSaveAsFavouriteEditSubject = new Subject();\r\n\r\n    public reverseCancelSectionSubject = new Subject();\r\n\r\n    constructor(private companyManager: CompanyManagerService,\r\n        private router: Router,\r\n        protected authorizationService: AuthorizationService,\r\n        protected securityService: SecurityService) {\r\n\r\n        // -- Basic\r\n\r\n        this.newTradeSubject.subscribe(() => {\r\n            this.router.navigate([this.companyManager.getCurrentCompanyId() + '/trades/capture']);\r\n        });\r\n\r\n        this.editSectionSubject.subscribe((sectionInformation: SectionTabIndex) => {\r\n            this.router.navigate(['/' + this.companyManager.getCurrentCompanyId() + '/trades/edit',\r\n            sectionInformation.sectionId, sectionInformation.tabIndex]);\r\n        });\r\n\r\n        this.displaySectionSubject.subscribe((sectionId: number) => {\r\n            this.router.navigate(['/' + this.companyManager.getCurrentCompanyId() + '/trades/display', sectionId]);\r\n        });\r\n\r\n        this.displaySectionAfterEditSubject.subscribe((sectionTabIndex: SectionTabIndex) => {\r\n            const sectionId = sectionTabIndex.sectionId;\r\n            const tabIndex = sectionTabIndex.tabIndex;\r\n            if (!sectionId || tabIndex < 0) { return; }\r\n            this.router.navigate(['/' + this.companyManager.getCurrentCompanyId() + '/trades/display', sectionId, tabIndex]);\r\n        });\r\n\r\n        // -- Snapshot\r\n\r\n        this.newTradeInSnapshotSubject.subscribe((dataVersionId: number) => {\r\n            if (!dataVersionId) { return; }\r\n            this.router.navigate(['/' + this.companyManager.getCurrentCompanyId() + '/trades/snapshot/'\r\n                + dataVersionId + '/capture']);\r\n        });\r\n\r\n        this.editSectionInSnapshotSubject.subscribe((data: SectionReference) => {\r\n            const sectionId = data.sectionId;\r\n            const dataVersionId = data.dataVersionId;\r\n\r\n            if (!sectionId || !dataVersionId) { return; }\r\n            this.router.navigate(['/' + this.companyManager.getCurrentCompanyId() + '/trades/snapshot/'\r\n                + dataVersionId + '/edit', sectionId, data.selectedTab]);\r\n        });\r\n\r\n        this.displaySectionInSnapshotSubject.subscribe((data: SectionReference) => {\r\n            const sectionId = data.sectionId;\r\n            const dataVersionId = data.dataVersionId;\r\n\r\n            if (!sectionId || !dataVersionId) { return; }\r\n            this.router.navigate(['/' + this.companyManager.getCurrentCompanyId() + '/trades/snapshot/'\r\n                + dataVersionId + '/display', sectionId]);\r\n        });\r\n\r\n        // -- Allocation\r\n\r\n        this.allocateSectionSubject.subscribe((sectionId: number) => {\r\n            this.router.navigate([this.companyManager.getCurrentCompanyId() + '/trades/allocateTrade', sectionId]);\r\n        });\r\n\r\n        this.allocateSectionInSnapshotSubject.subscribe((data: SectionReference) => {\r\n            const sectionId = data.sectionId;\r\n            const dataVersionId = data.dataVersionId;\r\n\r\n            this.router.navigate([this.companyManager.getCurrentCompanyId() + '/trades/snapshot/'\r\n                + dataVersionId + '/allocateTrade', sectionId]);\r\n        });\r\n\r\n        // -- Document Generation\r\n\r\n        this.contractAdviceSubject.subscribe((sectionId: number) => {\r\n            this.router.navigate(\r\n                ['/' + this.companyManager.getCurrentCompanyId() + '/execution/document/generation/contractadvice/'\r\n                    + sectionId],\r\n            );\r\n        });\r\n\r\n        // -- Trade Image Edit\r\n\r\n        this.tradeEditImageSubject.subscribe((sectionId: number) => {\r\n            this.router.navigate(\r\n                ['/' + this.companyManager.getCurrentCompanyId() + '/trades/display', sectionId],\r\n                {\r\n                    queryParams:\r\n                    {\r\n                        showTradeImage: true,\r\n                    },\r\n                    skipLocationChange: true,\r\n                });\r\n        });\r\n\r\n        // Edit For Trade Save As Favourite\r\n        this.tradeSaveAsFavouriteEditSubject.subscribe((sectionId: number) => {\r\n            this.router.navigate(\r\n                ['/' + this.companyManager.getCurrentCompanyId() + '/trades/display', sectionId],\r\n                {\r\n                    queryParams:\r\n                    {\r\n                        showSaveTradeAsFavourite: true,\r\n                    },\r\n                    skipLocationChange: true,\r\n                });\r\n        });\r\n\r\n        this.tradeGroupFunctionsSubject.subscribe(() => {\r\n            this.router.navigate([this.companyManager.getCurrentCompanyId() + '/trades/groupfunctions']);\r\n        });\r\n    }\r\n\r\n    public getTradePropertyPrivileges(): TradePropertyPrivilege {\r\n        const company: string = this.companyManager.getCurrentCompanyId();\r\n        const privilege: TradePropertyPrivilege = new TradePropertyPrivilege();\r\n        this.securityService.isSecurityReady().subscribe(() => {\r\n            privilege.hasSuperTradePrivilege = this.authorizationService.getPermissionLevel(\r\n                company, 'Trades', 'Physicals', 'SuperTradeEdition') > PermissionLevels.None;\r\n            privilege.invoicingStatusPrivilege = this.authorizationService.getPermissionLevel(\r\n                company, 'Invoices', 'InvoiceCreation', 'EditInvoicingMarkingStatus') > PermissionLevels.None;\r\n            if (this.authorizationService.isPrivilegeAllowed(company, 'Trades') &&\r\n                this.authorizationService.isPrivilegeAllowed(company, 'TrafficTab')) {\r\n                privilege.vesselNamePrivilege = this.authorizationService.isPrivilegeAllowed(company, 'VesselName');\r\n                privilege.blDatePrivilege = this.authorizationService.isPrivilegeAllowed(company, 'BlDate');\r\n                privilege.blReferencePrivilege = this.authorizationService.isPrivilegeAllowed(company, 'BlReference');\r\n            }\r\n\r\n            if (this.authorizationService.isPrivilegeAllowed(company, 'Trades') &&\r\n                this.authorizationService.isPrivilegeAllowed(company, 'MainTab')) {\r\n                privilege.buyerCodePrivilege = this.authorizationService.isPrivilegeAllowed(company, 'BuyerCode');\r\n                privilege.sellerCodePrivilege = this.authorizationService.isPrivilegeAllowed(company, 'SellerCode');\r\n                privilege.commodityPrivilege = this.authorizationService.isPrivilegeAllowed(company, 'Commodity');\r\n                privilege.counterPartyPrivilege = this.authorizationService.isPrivilegeAllowed(company, 'CounterPartyReference');\r\n                privilege.cropYearPrivilege = this.authorizationService.isPrivilegeAllowed(company, 'CropYear');\r\n                privilege.quantityCodePrivilege = this.authorizationService.isPrivilegeAllowed(company, 'QuantityCode');\r\n                privilege.quantityPrivilege = this.authorizationService.isPrivilegeAllowed(company, 'Quantity');\r\n                privilege.quantityContractedPrivilege =\r\n                    this.authorizationService.isPrivilegeAllowed(company, 'QuantityContracted');\r\n                privilege.contractTermsPrivilege = this.authorizationService.isPrivilegeAllowed(company, 'ContractTerms');\r\n                privilege.portTermsPrivilege = this.authorizationService.isPrivilegeAllowed(company, 'PortTerms');\r\n                privilege.arbitrationPrivilege = this.authorizationService.isPrivilegeAllowed(company, 'Arbitration');\r\n                privilege.currencyPrivilege = this.authorizationService.isPrivilegeAllowed(company, 'Currency');\r\n                privilege.priceCodePrivilege = this.authorizationService.isPrivilegeAllowed(company, 'PriceCode');\r\n                privilege.contractPricePrivilege = this.authorizationService.isPrivilegeAllowed(company, 'ContractPrice');\r\n                privilege.contractValuePrivilege = this.authorizationService.isPrivilegeAllowed(company, 'ContractValue');\r\n                privilege.paymentTermsPrivilege = this.authorizationService.isPrivilegeAllowed(company, 'PaymentTerms');\r\n                privilege.periodTypePrivilege = this.authorizationService.isPrivilegeAllowed(company, 'PeriodType');\r\n                privilege.fromDatePrivilege = this.authorizationService.isPrivilegeAllowed(company, 'FromDate');\r\n                privilege.toDatePrivilege = this.authorizationService.isPrivilegeAllowed(company, 'ToDate');\r\n                privilege.positionTypePrivilege = this.authorizationService.isPrivilegeAllowed(company, 'PositionType');\r\n                privilege.portOfOriginPrivilege = this.authorizationService.isPrivilegeAllowed(company, 'PortOfOrigin');\r\n                privilege.portOfDestinationPrivilege = this.authorizationService.isPrivilegeAllowed(company, 'PortOfDestination');\r\n                privilege.businessSectorPrivilege = this.authorizationService.isPrivilegeAllowed(company, 'MarketSector');\r\n                privilege.memoPrivilege = this.authorizationService.isPrivilegeAllowed(company, 'InternalMemorandum');\r\n            }\r\n            if (this.authorizationService.isPrivilegeAllowed(company, 'Trades') &&\r\n                this.authorizationService.isPrivilegeAllowed(company, 'StatusTab')) {\r\n                privilege.contractIssuedOnPrivilege = this.authorizationService.isPrivilegeAllowed(company, 'ContractIssuedOn');\r\n                privilege.otherReferencePrivilege = this.authorizationService.isPrivilegeAllowed(company, 'OtherReference');\r\n            }\r\n        });\r\n        return privilege;\r\n    }\r\n\r\n}\r\n","export const environment = {\r\n    production: false,\r\n    envName: 'dev',\r\n\r\n    version: '1.0.0',\r\n    friendlyName: 'Atlas',\r\n    environmentType: 'LOCAL',\r\n    environmentName: 'LOCAL',\r\n\r\n    discoveryServiceLink: 'http://localhost:7000/api/v1/discovery',\r\n    tradeServiceLink: 'http://localhost:7001/api/v1/Trade',\r\n    masterDataServiceLink: 'http://localhost:7003/api/v1/MasterData',\r\n    executionServiceLink: 'http://localhost:7001/api/v1/Execution',\r\n    controllingServiceLink: 'http://localhost:7004/api/v1/Controlling',\r\n    preAccountingServiceLink: 'http://localhost:7005/api/v1/PreAccounting',\r\n    userIdentityServiceLink: 'http://localhost:7006/api/v1/useridentity',\r\n    documentServiceLink: 'http://localhost:7007/api/v1/document',\r\n    configurationServiceLink: 'http://localhost:7008/api/v1/configuration',\r\n    freezeServiceLink: 'http://localhost:7009/api/v1/freeze',\r\n    reportingServiceLink: 'http://localhost:7010/api/v1/reporting',\r\n    lockServiceLink: 'http://localhost:7013/api/v1/lock',\r\n    reportServerLink: 'http://avacdm1tatrvmwf01.westeurope.cloudapp.azure.com/ReportServer',\r\n    accountingInterfaceServiceLink: 'http://localhost:7015/api/v1/AccountingInterface',\r\n    interfaceServiceLink: 'http://localhost:7016/api/v1/Interface',\r\n    auditServiceLink: 'http://localhost:7017/api/v1/Audit',\r\n    paymentRequestInterfaceServiceLink: 'http://localhost:7012/api/v1/paymentrequestinterface',\r\n\r\n    oAuth2: {\r\n        loginUrl: '',\r\n        clientId: '',\r\n        resource: '',\r\n        logoutUrl: '',\r\n        issuer: '',\r\n        scope: '',\r\n    },\r\n\r\n    applicationInsights: {\r\n        instrumentationKey: '',\r\n    },\r\n    tokenConfiguration: {\r\n        silentRefresh: true,\r\n    },\r\n};\r\n","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n    production: false,\r\n    envName: 'dev',\r\n\r\n    version: '',\r\n    friendlyName: '',\r\n    environmentType: '',\r\n    environmentName: 'local',\r\n\r\n    discoveryServiceLink: 'api/v1/discovery',\r\n    tradeServiceLink: '/api/v1/Trading',\r\n    masterDataServiceLink: '/api/v1/MasterData',\r\n    executionServiceLink: '/api/v1/Execution',\r\n    controllingServiceLink: '/api/v1/Controlling',\r\n    preAccountingServiceLink: '/api/v1/PreAccounting',\r\n    userIdentityServiceLink: '/api/v1/useridentity',\r\n    documentServiceLink: '/api/v1/document',\r\n    configurationServiceLink: '/api/v1/configuration',\r\n    freezeServiceLink: '/api/v1/freeze',\r\n    lockServiceLink: '/api/v1/lock',\r\n    reportingServiceLink: '/api/v1/reporting',\r\n    reportServerLink: 'http://avacdm1tatrvmwf01.westeurope.cloudapp.azure.com/ReportServer',\r\n    accountingInterfaceServiceLink: '/api/v1/accountinginterface',\r\n    interfaceServiceLink: '/api/v1/interface',\r\n    auditServiceLink: '/api/v1/audit',\r\n\r\n    oAuth2: {\r\n        loginUrl: '',\r\n        clientId: '',\r\n        resource: '',\r\n        logoutUrl: '',\r\n        issuer: '',\r\n        scope: '',\r\n    },\r\n    applicationInsights: {\r\n        instrumentationKey: '',\r\n    },\r\n    tokenConfiguration: {\r\n        silentRefresh: true,\r\n    },\r\n};\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport { LicenseManager } from 'ag-grid-enterprise';\r\nimport 'hammerjs';\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\n// tslint:disable-next-line:max-line-length\r\nLicenseManager.setLicenseKey('SHI_International_Corp_-_UK__on_behalf_of_Accenture_Finland_ATLAS_V2_1Devs21_November_2019__MTU3NDI5NDQwMDAwMA==54b64dae9075f37c2d9b85d560f38c98');\r\nif (environment.production) {\r\n    enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n","var map = {\n\t\"./af\": \"./node_modules/chart.js/node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/chart.js/node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/chart.js/node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/chart.js/node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/chart.js/node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/chart.js/node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/chart.js/node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/chart.js/node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/chart.js/node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/chart.js/node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/chart.js/node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/chart.js/node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/chart.js/node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/chart.js/node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/chart.js/node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/chart.js/node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/chart.js/node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/chart.js/node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/chart.js/node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/chart.js/node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/chart.js/node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/chart.js/node_modules/moment/locale/bg.js\",\n\t\"./bn\": \"./node_modules/chart.js/node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/chart.js/node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/chart.js/node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/chart.js/node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/chart.js/node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/chart.js/node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/chart.js/node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/chart.js/node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/chart.js/node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/chart.js/node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/chart.js/node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/chart.js/node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/chart.js/node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/chart.js/node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/chart.js/node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/chart.js/node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/chart.js/node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/chart.js/node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/chart.js/node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/chart.js/node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/chart.js/node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/chart.js/node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/chart.js/node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/chart.js/node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/chart.js/node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/chart.js/node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/chart.js/node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/chart.js/node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/chart.js/node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/chart.js/node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/chart.js/node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/chart.js/node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/chart.js/node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/chart.js/node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/chart.js/node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/chart.js/node_modules/moment/locale/en-ie.js\",\n\t\"./en-nz\": \"./node_modules/chart.js/node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/chart.js/node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/chart.js/node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/chart.js/node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/chart.js/node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/chart.js/node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/chart.js/node_modules/moment/locale/es-do.js\",\n\t\"./es.js\": \"./node_modules/chart.js/node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/chart.js/node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/chart.js/node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/chart.js/node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/chart.js/node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/chart.js/node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/chart.js/node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/chart.js/node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/chart.js/node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/chart.js/node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/chart.js/node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/chart.js/node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/chart.js/node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/chart.js/node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/chart.js/node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/chart.js/node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/chart.js/node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/chart.js/node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/chart.js/node_modules/moment/locale/fy.js\",\n\t\"./gd\": \"./node_modules/chart.js/node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/chart.js/node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/chart.js/node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/chart.js/node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/chart.js/node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/chart.js/node_modules/moment/locale/gom-latn.js\",\n\t\"./he\": \"./node_modules/chart.js/node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/chart.js/node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/chart.js/node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/chart.js/node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/chart.js/node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/chart.js/node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/chart.js/node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/chart.js/node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/chart.js/node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/chart.js/node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/chart.js/node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/chart.js/node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/chart.js/node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/chart.js/node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/chart.js/node_modules/moment/locale/it.js\",\n\t\"./it.js\": \"./node_modules/chart.js/node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/chart.js/node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/chart.js/node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/chart.js/node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/chart.js/node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/chart.js/node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/chart.js/node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/chart.js/node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/chart.js/node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/chart.js/node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/chart.js/node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/chart.js/node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/chart.js/node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/chart.js/node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/chart.js/node_modules/moment/locale/ko.js\",\n\t\"./ky\": \"./node_modules/chart.js/node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/chart.js/node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/chart.js/node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/chart.js/node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/chart.js/node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/chart.js/node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/chart.js/node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/chart.js/node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/chart.js/node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/chart.js/node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/chart.js/node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/chart.js/node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/chart.js/node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/chart.js/node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/chart.js/node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/chart.js/node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/chart.js/node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/chart.js/node_modules/moment/locale/ml.js\",\n\t\"./mr\": \"./node_modules/chart.js/node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/chart.js/node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/chart.js/node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/chart.js/node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/chart.js/node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/chart.js/node_modules/moment/locale/ms.js\",\n\t\"./my\": \"./node_modules/chart.js/node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/chart.js/node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/chart.js/node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/chart.js/node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/chart.js/node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/chart.js/node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/chart.js/node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/chart.js/node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/chart.js/node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/chart.js/node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/chart.js/node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/chart.js/node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/chart.js/node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/chart.js/node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/chart.js/node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/chart.js/node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/chart.js/node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/chart.js/node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/chart.js/node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/chart.js/node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/chart.js/node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/chart.js/node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/chart.js/node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/chart.js/node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/chart.js/node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/chart.js/node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/chart.js/node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/chart.js/node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/chart.js/node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/chart.js/node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/chart.js/node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/chart.js/node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/chart.js/node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/chart.js/node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/chart.js/node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/chart.js/node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/chart.js/node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/chart.js/node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/chart.js/node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/chart.js/node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/chart.js/node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/chart.js/node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/chart.js/node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/chart.js/node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/chart.js/node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/chart.js/node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/chart.js/node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/chart.js/node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/chart.js/node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/chart.js/node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/chart.js/node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/chart.js/node_modules/moment/locale/tet.js\",\n\t\"./th\": \"./node_modules/chart.js/node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/chart.js/node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/chart.js/node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/chart.js/node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/chart.js/node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/chart.js/node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/chart.js/node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/chart.js/node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/chart.js/node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/chart.js/node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/chart.js/node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/chart.js/node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/chart.js/node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/chart.js/node_modules/moment/locale/tzm.js\",\n\t\"./uk\": \"./node_modules/chart.js/node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/chart.js/node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/chart.js/node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/chart.js/node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/chart.js/node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/chart.js/node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/chart.js/node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/chart.js/node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/chart.js/node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/chart.js/node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/chart.js/node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/chart.js/node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/chart.js/node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/chart.js/node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/chart.js/node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/chart.js/node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/chart.js/node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/chart.js/node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/chart.js/node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/chart.js/node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\tvar module = __webpack_require__(id);\n\treturn module;\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/chart.js/node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","/*! Hammer.JS - v2.0.7 - 2016-04-22\n * http://hammerjs.github.io/\n *\n * Copyright (c) 2016 Jorik Tangelder;\n * Licensed under the MIT license */\n(function(window, document, exportName, undefined) {\n  'use strict';\n\nvar VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];\nvar TEST_ELEMENT = document.createElement('div');\n\nvar TYPE_FUNCTION = 'function';\n\nvar round = Math.round;\nvar abs = Math.abs;\nvar now = Date.now;\n\n/**\n * set a timeout with a given scope\n * @param {Function} fn\n * @param {Number} timeout\n * @param {Object} context\n * @returns {number}\n */\nfunction setTimeoutContext(fn, timeout, context) {\n    return setTimeout(bindFn(fn, context), timeout);\n}\n\n/**\n * if the argument is an array, we want to execute the fn on each entry\n * if it aint an array we don't want to do a thing.\n * this is used by all the methods that accept a single and array argument.\n * @param {*|Array} arg\n * @param {String} fn\n * @param {Object} [context]\n * @returns {Boolean}\n */\nfunction invokeArrayArg(arg, fn, context) {\n    if (Array.isArray(arg)) {\n        each(arg, context[fn], context);\n        return true;\n    }\n    return false;\n}\n\n/**\n * walk objects and arrays\n * @param {Object} obj\n * @param {Function} iterator\n * @param {Object} context\n */\nfunction each(obj, iterator, context) {\n    var i;\n\n    if (!obj) {\n        return;\n    }\n\n    if (obj.forEach) {\n        obj.forEach(iterator, context);\n    } else if (obj.length !== undefined) {\n        i = 0;\n        while (i < obj.length) {\n            iterator.call(context, obj[i], i, obj);\n            i++;\n        }\n    } else {\n        for (i in obj) {\n            obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);\n        }\n    }\n}\n\n/**\n * wrap a method with a deprecation warning and stack trace\n * @param {Function} method\n * @param {String} name\n * @param {String} message\n * @returns {Function} A new function wrapping the supplied method.\n */\nfunction deprecate(method, name, message) {\n    var deprecationMessage = 'DEPRECATED METHOD: ' + name + '\\n' + message + ' AT \\n';\n    return function() {\n        var e = new Error('get-stack-trace');\n        var stack = e && e.stack ? e.stack.replace(/^[^\\(]+?[\\n$]/gm, '')\n            .replace(/^\\s+at\\s+/gm, '')\n            .replace(/^Object.<anonymous>\\s*\\(/gm, '{anonymous}()@') : 'Unknown Stack Trace';\n\n        var log = window.console && (window.console.warn || window.console.log);\n        if (log) {\n            log.call(window.console, deprecationMessage, stack);\n        }\n        return method.apply(this, arguments);\n    };\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} target\n * @param {...Object} objects_to_assign\n * @returns {Object} target\n */\nvar assign;\nif (typeof Object.assign !== 'function') {\n    assign = function assign(target) {\n        if (target === undefined || target === null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        var output = Object(target);\n        for (var index = 1; index < arguments.length; index++) {\n            var source = arguments[index];\n            if (source !== undefined && source !== null) {\n                for (var nextKey in source) {\n                    if (source.hasOwnProperty(nextKey)) {\n                        output[nextKey] = source[nextKey];\n                    }\n                }\n            }\n        }\n        return output;\n    };\n} else {\n    assign = Object.assign;\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} dest\n * @param {Object} src\n * @param {Boolean} [merge=false]\n * @returns {Object} dest\n */\nvar extend = deprecate(function extend(dest, src, merge) {\n    var keys = Object.keys(src);\n    var i = 0;\n    while (i < keys.length) {\n        if (!merge || (merge && dest[keys[i]] === undefined)) {\n            dest[keys[i]] = src[keys[i]];\n        }\n        i++;\n    }\n    return dest;\n}, 'extend', 'Use `assign`.');\n\n/**\n * merge the values from src in the dest.\n * means that properties that exist in dest will not be overwritten by src\n * @param {Object} dest\n * @param {Object} src\n * @returns {Object} dest\n */\nvar merge = deprecate(function merge(dest, src) {\n    return extend(dest, src, true);\n}, 'merge', 'Use `assign`.');\n\n/**\n * simple class inheritance\n * @param {Function} child\n * @param {Function} base\n * @param {Object} [properties]\n */\nfunction inherit(child, base, properties) {\n    var baseP = base.prototype,\n        childP;\n\n    childP = child.prototype = Object.create(baseP);\n    childP.constructor = child;\n    childP._super = baseP;\n\n    if (properties) {\n        assign(childP, properties);\n    }\n}\n\n/**\n * simple function bind\n * @param {Function} fn\n * @param {Object} context\n * @returns {Function}\n */\nfunction bindFn(fn, context) {\n    return function boundFn() {\n        return fn.apply(context, arguments);\n    };\n}\n\n/**\n * let a boolean value also be a function that must return a boolean\n * this first item in args will be used as the context\n * @param {Boolean|Function} val\n * @param {Array} [args]\n * @returns {Boolean}\n */\nfunction boolOrFn(val, args) {\n    if (typeof val == TYPE_FUNCTION) {\n        return val.apply(args ? args[0] || undefined : undefined, args);\n    }\n    return val;\n}\n\n/**\n * use the val2 when val1 is undefined\n * @param {*} val1\n * @param {*} val2\n * @returns {*}\n */\nfunction ifUndefined(val1, val2) {\n    return (val1 === undefined) ? val2 : val1;\n}\n\n/**\n * addEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction addEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.addEventListener(type, handler, false);\n    });\n}\n\n/**\n * removeEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction removeEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.removeEventListener(type, handler, false);\n    });\n}\n\n/**\n * find if a node is in the given parent\n * @method hasParent\n * @param {HTMLElement} node\n * @param {HTMLElement} parent\n * @return {Boolean} found\n */\nfunction hasParent(node, parent) {\n    while (node) {\n        if (node == parent) {\n            return true;\n        }\n        node = node.parentNode;\n    }\n    return false;\n}\n\n/**\n * small indexOf wrapper\n * @param {String} str\n * @param {String} find\n * @returns {Boolean} found\n */\nfunction inStr(str, find) {\n    return str.indexOf(find) > -1;\n}\n\n/**\n * split string on whitespace\n * @param {String} str\n * @returns {Array} words\n */\nfunction splitStr(str) {\n    return str.trim().split(/\\s+/g);\n}\n\n/**\n * find if a array contains the object using indexOf or a simple polyFill\n * @param {Array} src\n * @param {String} find\n * @param {String} [findByKey]\n * @return {Boolean|Number} false when not found, or the index\n */\nfunction inArray(src, find, findByKey) {\n    if (src.indexOf && !findByKey) {\n        return src.indexOf(find);\n    } else {\n        var i = 0;\n        while (i < src.length) {\n            if ((findByKey && src[i][findByKey] == find) || (!findByKey && src[i] === find)) {\n                return i;\n            }\n            i++;\n        }\n        return -1;\n    }\n}\n\n/**\n * convert array-like objects to real arrays\n * @param {Object} obj\n * @returns {Array}\n */\nfunction toArray(obj) {\n    return Array.prototype.slice.call(obj, 0);\n}\n\n/**\n * unique array with objects based on a key (like 'id') or just by the array's value\n * @param {Array} src [{id:1},{id:2},{id:1}]\n * @param {String} [key]\n * @param {Boolean} [sort=False]\n * @returns {Array} [{id:1},{id:2}]\n */\nfunction uniqueArray(src, key, sort) {\n    var results = [];\n    var values = [];\n    var i = 0;\n\n    while (i < src.length) {\n        var val = key ? src[i][key] : src[i];\n        if (inArray(values, val) < 0) {\n            results.push(src[i]);\n        }\n        values[i] = val;\n        i++;\n    }\n\n    if (sort) {\n        if (!key) {\n            results = results.sort();\n        } else {\n            results = results.sort(function sortUniqueArray(a, b) {\n                return a[key] > b[key];\n            });\n        }\n    }\n\n    return results;\n}\n\n/**\n * get the prefixed property\n * @param {Object} obj\n * @param {String} property\n * @returns {String|Undefined} prefixed\n */\nfunction prefixed(obj, property) {\n    var prefix, prop;\n    var camelProp = property[0].toUpperCase() + property.slice(1);\n\n    var i = 0;\n    while (i < VENDOR_PREFIXES.length) {\n        prefix = VENDOR_PREFIXES[i];\n        prop = (prefix) ? prefix + camelProp : property;\n\n        if (prop in obj) {\n            return prop;\n        }\n        i++;\n    }\n    return undefined;\n}\n\n/**\n * get a unique id\n * @returns {number} uniqueId\n */\nvar _uniqueId = 1;\nfunction uniqueId() {\n    return _uniqueId++;\n}\n\n/**\n * get the window object of an element\n * @param {HTMLElement} element\n * @returns {DocumentView|Window}\n */\nfunction getWindowForElement(element) {\n    var doc = element.ownerDocument || element;\n    return (doc.defaultView || doc.parentWindow || window);\n}\n\nvar MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\n\nvar SUPPORT_TOUCH = ('ontouchstart' in window);\nvar SUPPORT_POINTER_EVENTS = prefixed(window, 'PointerEvent') !== undefined;\nvar SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);\n\nvar INPUT_TYPE_TOUCH = 'touch';\nvar INPUT_TYPE_PEN = 'pen';\nvar INPUT_TYPE_MOUSE = 'mouse';\nvar INPUT_TYPE_KINECT = 'kinect';\n\nvar COMPUTE_INTERVAL = 25;\n\nvar INPUT_START = 1;\nvar INPUT_MOVE = 2;\nvar INPUT_END = 4;\nvar INPUT_CANCEL = 8;\n\nvar DIRECTION_NONE = 1;\nvar DIRECTION_LEFT = 2;\nvar DIRECTION_RIGHT = 4;\nvar DIRECTION_UP = 8;\nvar DIRECTION_DOWN = 16;\n\nvar DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;\nvar DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;\nvar DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;\n\nvar PROPS_XY = ['x', 'y'];\nvar PROPS_CLIENT_XY = ['clientX', 'clientY'];\n\n/**\n * create new input type manager\n * @param {Manager} manager\n * @param {Function} callback\n * @returns {Input}\n * @constructor\n */\nfunction Input(manager, callback) {\n    var self = this;\n    this.manager = manager;\n    this.callback = callback;\n    this.element = manager.element;\n    this.target = manager.options.inputTarget;\n\n    // smaller wrapper around the handler, for the scope and the enabled state of the manager,\n    // so when disabled the input events are completely bypassed.\n    this.domHandler = function(ev) {\n        if (boolOrFn(manager.options.enable, [manager])) {\n            self.handler(ev);\n        }\n    };\n\n    this.init();\n\n}\n\nInput.prototype = {\n    /**\n     * should handle the inputEvent data and trigger the callback\n     * @virtual\n     */\n    handler: function() { },\n\n    /**\n     * bind the events\n     */\n    init: function() {\n        this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    },\n\n    /**\n     * unbind the events\n     */\n    destroy: function() {\n        this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    }\n};\n\n/**\n * create new input type manager\n * called by the Manager constructor\n * @param {Hammer} manager\n * @returns {Input}\n */\nfunction createInputInstance(manager) {\n    var Type;\n    var inputClass = manager.options.inputClass;\n\n    if (inputClass) {\n        Type = inputClass;\n    } else if (SUPPORT_POINTER_EVENTS) {\n        Type = PointerEventInput;\n    } else if (SUPPORT_ONLY_TOUCH) {\n        Type = TouchInput;\n    } else if (!SUPPORT_TOUCH) {\n        Type = MouseInput;\n    } else {\n        Type = TouchMouseInput;\n    }\n    return new (Type)(manager, inputHandler);\n}\n\n/**\n * handle input events\n * @param {Manager} manager\n * @param {String} eventType\n * @param {Object} input\n */\nfunction inputHandler(manager, eventType, input) {\n    var pointersLen = input.pointers.length;\n    var changedPointersLen = input.changedPointers.length;\n    var isFirst = (eventType & INPUT_START && (pointersLen - changedPointersLen === 0));\n    var isFinal = (eventType & (INPUT_END | INPUT_CANCEL) && (pointersLen - changedPointersLen === 0));\n\n    input.isFirst = !!isFirst;\n    input.isFinal = !!isFinal;\n\n    if (isFirst) {\n        manager.session = {};\n    }\n\n    // source event is the normalized value of the domEvents\n    // like 'touchstart, mouseup, pointerdown'\n    input.eventType = eventType;\n\n    // compute scale, rotation etc\n    computeInputData(manager, input);\n\n    // emit secret event\n    manager.emit('hammer.input', input);\n\n    manager.recognize(input);\n    manager.session.prevInput = input;\n}\n\n/**\n * extend the data with some usable properties like scale, rotate, velocity etc\n * @param {Object} manager\n * @param {Object} input\n */\nfunction computeInputData(manager, input) {\n    var session = manager.session;\n    var pointers = input.pointers;\n    var pointersLength = pointers.length;\n\n    // store the first input to calculate the distance and direction\n    if (!session.firstInput) {\n        session.firstInput = simpleCloneInputData(input);\n    }\n\n    // to compute scale and rotation we need to store the multiple touches\n    if (pointersLength > 1 && !session.firstMultiple) {\n        session.firstMultiple = simpleCloneInputData(input);\n    } else if (pointersLength === 1) {\n        session.firstMultiple = false;\n    }\n\n    var firstInput = session.firstInput;\n    var firstMultiple = session.firstMultiple;\n    var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;\n\n    var center = input.center = getCenter(pointers);\n    input.timeStamp = now();\n    input.deltaTime = input.timeStamp - firstInput.timeStamp;\n\n    input.angle = getAngle(offsetCenter, center);\n    input.distance = getDistance(offsetCenter, center);\n\n    computeDeltaXY(session, input);\n    input.offsetDirection = getDirection(input.deltaX, input.deltaY);\n\n    var overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);\n    input.overallVelocityX = overallVelocity.x;\n    input.overallVelocityY = overallVelocity.y;\n    input.overallVelocity = (abs(overallVelocity.x) > abs(overallVelocity.y)) ? overallVelocity.x : overallVelocity.y;\n\n    input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;\n    input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;\n\n    input.maxPointers = !session.prevInput ? input.pointers.length : ((input.pointers.length >\n        session.prevInput.maxPointers) ? input.pointers.length : session.prevInput.maxPointers);\n\n    computeIntervalInputData(session, input);\n\n    // find the correct target\n    var target = manager.element;\n    if (hasParent(input.srcEvent.target, target)) {\n        target = input.srcEvent.target;\n    }\n    input.target = target;\n}\n\nfunction computeDeltaXY(session, input) {\n    var center = input.center;\n    var offset = session.offsetDelta || {};\n    var prevDelta = session.prevDelta || {};\n    var prevInput = session.prevInput || {};\n\n    if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {\n        prevDelta = session.prevDelta = {\n            x: prevInput.deltaX || 0,\n            y: prevInput.deltaY || 0\n        };\n\n        offset = session.offsetDelta = {\n            x: center.x,\n            y: center.y\n        };\n    }\n\n    input.deltaX = prevDelta.x + (center.x - offset.x);\n    input.deltaY = prevDelta.y + (center.y - offset.y);\n}\n\n/**\n * velocity is calculated every x ms\n * @param {Object} session\n * @param {Object} input\n */\nfunction computeIntervalInputData(session, input) {\n    var last = session.lastInterval || input,\n        deltaTime = input.timeStamp - last.timeStamp,\n        velocity, velocityX, velocityY, direction;\n\n    if (input.eventType != INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {\n        var deltaX = input.deltaX - last.deltaX;\n        var deltaY = input.deltaY - last.deltaY;\n\n        var v = getVelocity(deltaTime, deltaX, deltaY);\n        velocityX = v.x;\n        velocityY = v.y;\n        velocity = (abs(v.x) > abs(v.y)) ? v.x : v.y;\n        direction = getDirection(deltaX, deltaY);\n\n        session.lastInterval = input;\n    } else {\n        // use latest velocity info if it doesn't overtake a minimum period\n        velocity = last.velocity;\n        velocityX = last.velocityX;\n        velocityY = last.velocityY;\n        direction = last.direction;\n    }\n\n    input.velocity = velocity;\n    input.velocityX = velocityX;\n    input.velocityY = velocityY;\n    input.direction = direction;\n}\n\n/**\n * create a simple clone from the input used for storage of firstInput and firstMultiple\n * @param {Object} input\n * @returns {Object} clonedInputData\n */\nfunction simpleCloneInputData(input) {\n    // make a simple copy of the pointers because we will get a reference if we don't\n    // we only need clientXY for the calculations\n    var pointers = [];\n    var i = 0;\n    while (i < input.pointers.length) {\n        pointers[i] = {\n            clientX: round(input.pointers[i].clientX),\n            clientY: round(input.pointers[i].clientY)\n        };\n        i++;\n    }\n\n    return {\n        timeStamp: now(),\n        pointers: pointers,\n        center: getCenter(pointers),\n        deltaX: input.deltaX,\n        deltaY: input.deltaY\n    };\n}\n\n/**\n * get the center of all the pointers\n * @param {Array} pointers\n * @return {Object} center contains `x` and `y` properties\n */\nfunction getCenter(pointers) {\n    var pointersLength = pointers.length;\n\n    // no need to loop when only one touch\n    if (pointersLength === 1) {\n        return {\n            x: round(pointers[0].clientX),\n            y: round(pointers[0].clientY)\n        };\n    }\n\n    var x = 0, y = 0, i = 0;\n    while (i < pointersLength) {\n        x += pointers[i].clientX;\n        y += pointers[i].clientY;\n        i++;\n    }\n\n    return {\n        x: round(x / pointersLength),\n        y: round(y / pointersLength)\n    };\n}\n\n/**\n * calculate the velocity between two points. unit is in px per ms.\n * @param {Number} deltaTime\n * @param {Number} x\n * @param {Number} y\n * @return {Object} velocity `x` and `y`\n */\nfunction getVelocity(deltaTime, x, y) {\n    return {\n        x: x / deltaTime || 0,\n        y: y / deltaTime || 0\n    };\n}\n\n/**\n * get the direction between two points\n * @param {Number} x\n * @param {Number} y\n * @return {Number} direction\n */\nfunction getDirection(x, y) {\n    if (x === y) {\n        return DIRECTION_NONE;\n    }\n\n    if (abs(x) >= abs(y)) {\n        return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n    }\n    return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n}\n\n/**\n * calculate the absolute distance between two points\n * @param {Object} p1 {x, y}\n * @param {Object} p2 {x, y}\n * @param {Array} [props] containing x and y keys\n * @return {Number} distance\n */\nfunction getDistance(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n\n    return Math.sqrt((x * x) + (y * y));\n}\n\n/**\n * calculate the angle between two coordinates\n * @param {Object} p1\n * @param {Object} p2\n * @param {Array} [props] containing x and y keys\n * @return {Number} angle\n */\nfunction getAngle(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n    return Math.atan2(y, x) * 180 / Math.PI;\n}\n\n/**\n * calculate the rotation degrees between two pointersets\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} rotation\n */\nfunction getRotation(start, end) {\n    return getAngle(end[1], end[0], PROPS_CLIENT_XY) + getAngle(start[1], start[0], PROPS_CLIENT_XY);\n}\n\n/**\n * calculate the scale factor between two pointersets\n * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} scale\n */\nfunction getScale(start, end) {\n    return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);\n}\n\nvar MOUSE_INPUT_MAP = {\n    mousedown: INPUT_START,\n    mousemove: INPUT_MOVE,\n    mouseup: INPUT_END\n};\n\nvar MOUSE_ELEMENT_EVENTS = 'mousedown';\nvar MOUSE_WINDOW_EVENTS = 'mousemove mouseup';\n\n/**\n * Mouse events input\n * @constructor\n * @extends Input\n */\nfunction MouseInput() {\n    this.evEl = MOUSE_ELEMENT_EVENTS;\n    this.evWin = MOUSE_WINDOW_EVENTS;\n\n    this.pressed = false; // mousedown state\n\n    Input.apply(this, arguments);\n}\n\ninherit(MouseInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function MEhandler(ev) {\n        var eventType = MOUSE_INPUT_MAP[ev.type];\n\n        // on start we want to have the left mouse button down\n        if (eventType & INPUT_START && ev.button === 0) {\n            this.pressed = true;\n        }\n\n        if (eventType & INPUT_MOVE && ev.which !== 1) {\n            eventType = INPUT_END;\n        }\n\n        // mouse must be down\n        if (!this.pressed) {\n            return;\n        }\n\n        if (eventType & INPUT_END) {\n            this.pressed = false;\n        }\n\n        this.callback(this.manager, eventType, {\n            pointers: [ev],\n            changedPointers: [ev],\n            pointerType: INPUT_TYPE_MOUSE,\n            srcEvent: ev\n        });\n    }\n});\n\nvar POINTER_INPUT_MAP = {\n    pointerdown: INPUT_START,\n    pointermove: INPUT_MOVE,\n    pointerup: INPUT_END,\n    pointercancel: INPUT_CANCEL,\n    pointerout: INPUT_CANCEL\n};\n\n// in IE10 the pointer types is defined as an enum\nvar IE10_POINTER_TYPE_ENUM = {\n    2: INPUT_TYPE_TOUCH,\n    3: INPUT_TYPE_PEN,\n    4: INPUT_TYPE_MOUSE,\n    5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816\n};\n\nvar POINTER_ELEMENT_EVENTS = 'pointerdown';\nvar POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';\n\n// IE10 has prefixed support, and case-sensitive\nif (window.MSPointerEvent && !window.PointerEvent) {\n    POINTER_ELEMENT_EVENTS = 'MSPointerDown';\n    POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';\n}\n\n/**\n * Pointer events input\n * @constructor\n * @extends Input\n */\nfunction PointerEventInput() {\n    this.evEl = POINTER_ELEMENT_EVENTS;\n    this.evWin = POINTER_WINDOW_EVENTS;\n\n    Input.apply(this, arguments);\n\n    this.store = (this.manager.session.pointerEvents = []);\n}\n\ninherit(PointerEventInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function PEhandler(ev) {\n        var store = this.store;\n        var removePointer = false;\n\n        var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');\n        var eventType = POINTER_INPUT_MAP[eventTypeNormalized];\n        var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;\n\n        var isTouch = (pointerType == INPUT_TYPE_TOUCH);\n\n        // get index of the event in the store\n        var storeIndex = inArray(store, ev.pointerId, 'pointerId');\n\n        // start and mouse must be down\n        if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {\n            if (storeIndex < 0) {\n                store.push(ev);\n                storeIndex = store.length - 1;\n            }\n        } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n            removePointer = true;\n        }\n\n        // it not found, so the pointer hasn't been down (so it's probably a hover)\n        if (storeIndex < 0) {\n            return;\n        }\n\n        // update the event in the store\n        store[storeIndex] = ev;\n\n        this.callback(this.manager, eventType, {\n            pointers: store,\n            changedPointers: [ev],\n            pointerType: pointerType,\n            srcEvent: ev\n        });\n\n        if (removePointer) {\n            // remove from the store\n            store.splice(storeIndex, 1);\n        }\n    }\n});\n\nvar SINGLE_TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';\nvar SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Touch events input\n * @constructor\n * @extends Input\n */\nfunction SingleTouchInput() {\n    this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;\n    this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;\n    this.started = false;\n\n    Input.apply(this, arguments);\n}\n\ninherit(SingleTouchInput, Input, {\n    handler: function TEhandler(ev) {\n        var type = SINGLE_TOUCH_INPUT_MAP[ev.type];\n\n        // should we handle the touch events?\n        if (type === INPUT_START) {\n            this.started = true;\n        }\n\n        if (!this.started) {\n            return;\n        }\n\n        var touches = normalizeSingleTouches.call(this, ev, type);\n\n        // when done, reset the started state\n        if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {\n            this.started = false;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction normalizeSingleTouches(ev, type) {\n    var all = toArray(ev.touches);\n    var changed = toArray(ev.changedTouches);\n\n    if (type & (INPUT_END | INPUT_CANCEL)) {\n        all = uniqueArray(all.concat(changed), 'identifier', true);\n    }\n\n    return [all, changed];\n}\n\nvar TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Multi-user touch events input\n * @constructor\n * @extends Input\n */\nfunction TouchInput() {\n    this.evTarget = TOUCH_TARGET_EVENTS;\n    this.targetIds = {};\n\n    Input.apply(this, arguments);\n}\n\ninherit(TouchInput, Input, {\n    handler: function MTEhandler(ev) {\n        var type = TOUCH_INPUT_MAP[ev.type];\n        var touches = getTouches.call(this, ev, type);\n        if (!touches) {\n            return;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction getTouches(ev, type) {\n    var allTouches = toArray(ev.touches);\n    var targetIds = this.targetIds;\n\n    // when there is only one touch, the process can be simplified\n    if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {\n        targetIds[allTouches[0].identifier] = true;\n        return [allTouches, allTouches];\n    }\n\n    var i,\n        targetTouches,\n        changedTouches = toArray(ev.changedTouches),\n        changedTargetTouches = [],\n        target = this.target;\n\n    // get target touches from touches\n    targetTouches = allTouches.filter(function(touch) {\n        return hasParent(touch.target, target);\n    });\n\n    // collect touches\n    if (type === INPUT_START) {\n        i = 0;\n        while (i < targetTouches.length) {\n            targetIds[targetTouches[i].identifier] = true;\n            i++;\n        }\n    }\n\n    // filter changed touches to only contain touches that exist in the collected target ids\n    i = 0;\n    while (i < changedTouches.length) {\n        if (targetIds[changedTouches[i].identifier]) {\n            changedTargetTouches.push(changedTouches[i]);\n        }\n\n        // cleanup removed touches\n        if (type & (INPUT_END | INPUT_CANCEL)) {\n            delete targetIds[changedTouches[i].identifier];\n        }\n        i++;\n    }\n\n    if (!changedTargetTouches.length) {\n        return;\n    }\n\n    return [\n        // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'\n        uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true),\n        changedTargetTouches\n    ];\n}\n\n/**\n * Combined touch and mouse input\n *\n * Touch has a higher priority then mouse, and while touching no mouse events are allowed.\n * This because touch devices also emit mouse events while doing a touch.\n *\n * @constructor\n * @extends Input\n */\n\nvar DEDUP_TIMEOUT = 2500;\nvar DEDUP_DISTANCE = 25;\n\nfunction TouchMouseInput() {\n    Input.apply(this, arguments);\n\n    var handler = bindFn(this.handler, this);\n    this.touch = new TouchInput(this.manager, handler);\n    this.mouse = new MouseInput(this.manager, handler);\n\n    this.primaryTouch = null;\n    this.lastTouches = [];\n}\n\ninherit(TouchMouseInput, Input, {\n    /**\n     * handle mouse and touch events\n     * @param {Hammer} manager\n     * @param {String} inputEvent\n     * @param {Object} inputData\n     */\n    handler: function TMEhandler(manager, inputEvent, inputData) {\n        var isTouch = (inputData.pointerType == INPUT_TYPE_TOUCH),\n            isMouse = (inputData.pointerType == INPUT_TYPE_MOUSE);\n\n        if (isMouse && inputData.sourceCapabilities && inputData.sourceCapabilities.firesTouchEvents) {\n            return;\n        }\n\n        // when we're in a touch event, record touches to  de-dupe synthetic mouse event\n        if (isTouch) {\n            recordTouches.call(this, inputEvent, inputData);\n        } else if (isMouse && isSyntheticEvent.call(this, inputData)) {\n            return;\n        }\n\n        this.callback(manager, inputEvent, inputData);\n    },\n\n    /**\n     * remove the event listeners\n     */\n    destroy: function destroy() {\n        this.touch.destroy();\n        this.mouse.destroy();\n    }\n});\n\nfunction recordTouches(eventType, eventData) {\n    if (eventType & INPUT_START) {\n        this.primaryTouch = eventData.changedPointers[0].identifier;\n        setLastTouch.call(this, eventData);\n    } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n        setLastTouch.call(this, eventData);\n    }\n}\n\nfunction setLastTouch(eventData) {\n    var touch = eventData.changedPointers[0];\n\n    if (touch.identifier === this.primaryTouch) {\n        var lastTouch = {x: touch.clientX, y: touch.clientY};\n        this.lastTouches.push(lastTouch);\n        var lts = this.lastTouches;\n        var removeLastTouch = function() {\n            var i = lts.indexOf(lastTouch);\n            if (i > -1) {\n                lts.splice(i, 1);\n            }\n        };\n        setTimeout(removeLastTouch, DEDUP_TIMEOUT);\n    }\n}\n\nfunction isSyntheticEvent(eventData) {\n    var x = eventData.srcEvent.clientX, y = eventData.srcEvent.clientY;\n    for (var i = 0; i < this.lastTouches.length; i++) {\n        var t = this.lastTouches[i];\n        var dx = Math.abs(x - t.x), dy = Math.abs(y - t.y);\n        if (dx <= DEDUP_DISTANCE && dy <= DEDUP_DISTANCE) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');\nvar NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;\n\n// magical touchAction value\nvar TOUCH_ACTION_COMPUTE = 'compute';\nvar TOUCH_ACTION_AUTO = 'auto';\nvar TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented\nvar TOUCH_ACTION_NONE = 'none';\nvar TOUCH_ACTION_PAN_X = 'pan-x';\nvar TOUCH_ACTION_PAN_Y = 'pan-y';\nvar TOUCH_ACTION_MAP = getTouchActionProps();\n\n/**\n * Touch Action\n * sets the touchAction property or uses the js alternative\n * @param {Manager} manager\n * @param {String} value\n * @constructor\n */\nfunction TouchAction(manager, value) {\n    this.manager = manager;\n    this.set(value);\n}\n\nTouchAction.prototype = {\n    /**\n     * set the touchAction value on the element or enable the polyfill\n     * @param {String} value\n     */\n    set: function(value) {\n        // find out the touch-action by the event handlers\n        if (value == TOUCH_ACTION_COMPUTE) {\n            value = this.compute();\n        }\n\n        if (NATIVE_TOUCH_ACTION && this.manager.element.style && TOUCH_ACTION_MAP[value]) {\n            this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;\n        }\n        this.actions = value.toLowerCase().trim();\n    },\n\n    /**\n     * just re-set the touchAction value\n     */\n    update: function() {\n        this.set(this.manager.options.touchAction);\n    },\n\n    /**\n     * compute the value for the touchAction property based on the recognizer's settings\n     * @returns {String} value\n     */\n    compute: function() {\n        var actions = [];\n        each(this.manager.recognizers, function(recognizer) {\n            if (boolOrFn(recognizer.options.enable, [recognizer])) {\n                actions = actions.concat(recognizer.getTouchAction());\n            }\n        });\n        return cleanTouchActions(actions.join(' '));\n    },\n\n    /**\n     * this method is called on each input cycle and provides the preventing of the browser behavior\n     * @param {Object} input\n     */\n    preventDefaults: function(input) {\n        var srcEvent = input.srcEvent;\n        var direction = input.offsetDirection;\n\n        // if the touch action did prevented once this session\n        if (this.manager.session.prevented) {\n            srcEvent.preventDefault();\n            return;\n        }\n\n        var actions = this.actions;\n        var hasNone = inStr(actions, TOUCH_ACTION_NONE) && !TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];\n        var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];\n        var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];\n\n        if (hasNone) {\n            //do not prevent defaults if this is a tap gesture\n\n            var isTapPointer = input.pointers.length === 1;\n            var isTapMovement = input.distance < 2;\n            var isTapTouchTime = input.deltaTime < 250;\n\n            if (isTapPointer && isTapMovement && isTapTouchTime) {\n                return;\n            }\n        }\n\n        if (hasPanX && hasPanY) {\n            // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent\n            return;\n        }\n\n        if (hasNone ||\n            (hasPanY && direction & DIRECTION_HORIZONTAL) ||\n            (hasPanX && direction & DIRECTION_VERTICAL)) {\n            return this.preventSrc(srcEvent);\n        }\n    },\n\n    /**\n     * call preventDefault to prevent the browser's default behavior (scrolling in most cases)\n     * @param {Object} srcEvent\n     */\n    preventSrc: function(srcEvent) {\n        this.manager.session.prevented = true;\n        srcEvent.preventDefault();\n    }\n};\n\n/**\n * when the touchActions are collected they are not a valid value, so we need to clean things up. *\n * @param {String} actions\n * @returns {*}\n */\nfunction cleanTouchActions(actions) {\n    // none\n    if (inStr(actions, TOUCH_ACTION_NONE)) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n    var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);\n\n    // if both pan-x and pan-y are set (different recognizers\n    // for different directions, e.g. horizontal pan but vertical swipe?)\n    // we need none (as otherwise with pan-x pan-y combined none of these\n    // recognizers will work, since the browser would handle all panning\n    if (hasPanX && hasPanY) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    // pan-x OR pan-y\n    if (hasPanX || hasPanY) {\n        return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\n    }\n\n    // manipulation\n    if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {\n        return TOUCH_ACTION_MANIPULATION;\n    }\n\n    return TOUCH_ACTION_AUTO;\n}\n\nfunction getTouchActionProps() {\n    if (!NATIVE_TOUCH_ACTION) {\n        return false;\n    }\n    var touchMap = {};\n    var cssSupports = window.CSS && window.CSS.supports;\n    ['auto', 'manipulation', 'pan-y', 'pan-x', 'pan-x pan-y', 'none'].forEach(function(val) {\n\n        // If css.supports is not supported but there is native touch-action assume it supports\n        // all values. This is the case for IE 10 and 11.\n        touchMap[val] = cssSupports ? window.CSS.supports('touch-action', val) : true;\n    });\n    return touchMap;\n}\n\n/**\n * Recognizer flow explained; *\n * All recognizers have the initial state of POSSIBLE when a input session starts.\n * The definition of a input session is from the first input until the last input, with all it's movement in it. *\n * Example session for mouse-input: mousedown -> mousemove -> mouseup\n *\n * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed\n * which determines with state it should be.\n *\n * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\n * POSSIBLE to give it another change on the next cycle.\n *\n *               Possible\n *                  |\n *            +-----+---------------+\n *            |                     |\n *      +-----+-----+               |\n *      |           |               |\n *   Failed      Cancelled          |\n *                          +-------+------+\n *                          |              |\n *                      Recognized       Began\n *                                         |\n *                                      Changed\n *                                         |\n *                                  Ended/Recognized\n */\nvar STATE_POSSIBLE = 1;\nvar STATE_BEGAN = 2;\nvar STATE_CHANGED = 4;\nvar STATE_ENDED = 8;\nvar STATE_RECOGNIZED = STATE_ENDED;\nvar STATE_CANCELLED = 16;\nvar STATE_FAILED = 32;\n\n/**\n * Recognizer\n * Every recognizer needs to extend from this class.\n * @constructor\n * @param {Object} options\n */\nfunction Recognizer(options) {\n    this.options = assign({}, this.defaults, options || {});\n\n    this.id = uniqueId();\n\n    this.manager = null;\n\n    // default is enable true\n    this.options.enable = ifUndefined(this.options.enable, true);\n\n    this.state = STATE_POSSIBLE;\n\n    this.simultaneous = {};\n    this.requireFail = [];\n}\n\nRecognizer.prototype = {\n    /**\n     * @virtual\n     * @type {Object}\n     */\n    defaults: {},\n\n    /**\n     * set options\n     * @param {Object} options\n     * @return {Recognizer}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // also update the touchAction, in case something changed about the directions/enabled state\n        this.manager && this.manager.touchAction.update();\n        return this;\n    },\n\n    /**\n     * recognize simultaneous with an other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    recognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {\n            return this;\n        }\n\n        var simultaneous = this.simultaneous;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (!simultaneous[otherRecognizer.id]) {\n            simultaneous[otherRecognizer.id] = otherRecognizer;\n            otherRecognizer.recognizeWith(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the simultaneous link. it doesnt remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRecognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        delete this.simultaneous[otherRecognizer.id];\n        return this;\n    },\n\n    /**\n     * recognizer can only run when an other is failing\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    requireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {\n            return this;\n        }\n\n        var requireFail = this.requireFail;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (inArray(requireFail, otherRecognizer) === -1) {\n            requireFail.push(otherRecognizer);\n            otherRecognizer.requireFailure(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the requireFailure link. it does not remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRequireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        var index = inArray(this.requireFail, otherRecognizer);\n        if (index > -1) {\n            this.requireFail.splice(index, 1);\n        }\n        return this;\n    },\n\n    /**\n     * has require failures boolean\n     * @returns {boolean}\n     */\n    hasRequireFailures: function() {\n        return this.requireFail.length > 0;\n    },\n\n    /**\n     * if the recognizer can recognize simultaneous with an other recognizer\n     * @param {Recognizer} otherRecognizer\n     * @returns {Boolean}\n     */\n    canRecognizeWith: function(otherRecognizer) {\n        return !!this.simultaneous[otherRecognizer.id];\n    },\n\n    /**\n     * You should use `tryEmit` instead of `emit` directly to check\n     * that all the needed recognizers has failed before emitting.\n     * @param {Object} input\n     */\n    emit: function(input) {\n        var self = this;\n        var state = this.state;\n\n        function emit(event) {\n            self.manager.emit(event, input);\n        }\n\n        // 'panstart' and 'panmove'\n        if (state < STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n\n        emit(self.options.event); // simple 'eventName' events\n\n        if (input.additionalEvent) { // additional event(panleft, panright, pinchin, pinchout...)\n            emit(input.additionalEvent);\n        }\n\n        // panend and pancancel\n        if (state >= STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n    },\n\n    /**\n     * Check that all the require failure recognizers has failed,\n     * if true, it emits a gesture event,\n     * otherwise, setup the state to FAILED.\n     * @param {Object} input\n     */\n    tryEmit: function(input) {\n        if (this.canEmit()) {\n            return this.emit(input);\n        }\n        // it's failing anyway\n        this.state = STATE_FAILED;\n    },\n\n    /**\n     * can we emit?\n     * @returns {boolean}\n     */\n    canEmit: function() {\n        var i = 0;\n        while (i < this.requireFail.length) {\n            if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {\n                return false;\n            }\n            i++;\n        }\n        return true;\n    },\n\n    /**\n     * update the recognizer\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        // make a new copy of the inputData\n        // so we can change the inputData without messing up the other recognizers\n        var inputDataClone = assign({}, inputData);\n\n        // is is enabled and allow recognizing?\n        if (!boolOrFn(this.options.enable, [this, inputDataClone])) {\n            this.reset();\n            this.state = STATE_FAILED;\n            return;\n        }\n\n        // reset when we've reached the end\n        if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {\n            this.state = STATE_POSSIBLE;\n        }\n\n        this.state = this.process(inputDataClone);\n\n        // the recognizer has recognized a gesture\n        // so trigger an event\n        if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {\n            this.tryEmit(inputDataClone);\n        }\n    },\n\n    /**\n     * return the state of the recognizer\n     * the actual recognizing happens in this method\n     * @virtual\n     * @param {Object} inputData\n     * @returns {Const} STATE\n     */\n    process: function(inputData) { }, // jshint ignore:line\n\n    /**\n     * return the preferred touch-action\n     * @virtual\n     * @returns {Array}\n     */\n    getTouchAction: function() { },\n\n    /**\n     * called when the gesture isn't allowed to recognize\n     * like when another is being recognized or it is disabled\n     * @virtual\n     */\n    reset: function() { }\n};\n\n/**\n * get a usable string, used as event postfix\n * @param {Const} state\n * @returns {String} state\n */\nfunction stateStr(state) {\n    if (state & STATE_CANCELLED) {\n        return 'cancel';\n    } else if (state & STATE_ENDED) {\n        return 'end';\n    } else if (state & STATE_CHANGED) {\n        return 'move';\n    } else if (state & STATE_BEGAN) {\n        return 'start';\n    }\n    return '';\n}\n\n/**\n * direction cons to string\n * @param {Const} direction\n * @returns {String}\n */\nfunction directionStr(direction) {\n    if (direction == DIRECTION_DOWN) {\n        return 'down';\n    } else if (direction == DIRECTION_UP) {\n        return 'up';\n    } else if (direction == DIRECTION_LEFT) {\n        return 'left';\n    } else if (direction == DIRECTION_RIGHT) {\n        return 'right';\n    }\n    return '';\n}\n\n/**\n * get a recognizer by name if it is bound to a manager\n * @param {Recognizer|String} otherRecognizer\n * @param {Recognizer} recognizer\n * @returns {Recognizer}\n */\nfunction getRecognizerByNameIfManager(otherRecognizer, recognizer) {\n    var manager = recognizer.manager;\n    if (manager) {\n        return manager.get(otherRecognizer);\n    }\n    return otherRecognizer;\n}\n\n/**\n * This recognizer is just used as a base for the simple attribute recognizers.\n * @constructor\n * @extends Recognizer\n */\nfunction AttrRecognizer() {\n    Recognizer.apply(this, arguments);\n}\n\ninherit(AttrRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof AttrRecognizer\n     */\n    defaults: {\n        /**\n         * @type {Number}\n         * @default 1\n         */\n        pointers: 1\n    },\n\n    /**\n     * Used to check if it the recognizer receives valid input, like input.distance > 10.\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {Boolean} recognized\n     */\n    attrTest: function(input) {\n        var optionPointers = this.options.pointers;\n        return optionPointers === 0 || input.pointers.length === optionPointers;\n    },\n\n    /**\n     * Process the input and return the state for the recognizer\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {*} State\n     */\n    process: function(input) {\n        var state = this.state;\n        var eventType = input.eventType;\n\n        var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);\n        var isValid = this.attrTest(input);\n\n        // on cancel input and we've recognized before, return STATE_CANCELLED\n        if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {\n            return state | STATE_CANCELLED;\n        } else if (isRecognized || isValid) {\n            if (eventType & INPUT_END) {\n                return state | STATE_ENDED;\n            } else if (!(state & STATE_BEGAN)) {\n                return STATE_BEGAN;\n            }\n            return state | STATE_CHANGED;\n        }\n        return STATE_FAILED;\n    }\n});\n\n/**\n * Pan\n * Recognized when the pointer is down and moved in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PanRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n\n    this.pX = null;\n    this.pY = null;\n}\n\ninherit(PanRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PanRecognizer\n     */\n    defaults: {\n        event: 'pan',\n        threshold: 10,\n        pointers: 1,\n        direction: DIRECTION_ALL\n    },\n\n    getTouchAction: function() {\n        var direction = this.options.direction;\n        var actions = [];\n        if (direction & DIRECTION_HORIZONTAL) {\n            actions.push(TOUCH_ACTION_PAN_Y);\n        }\n        if (direction & DIRECTION_VERTICAL) {\n            actions.push(TOUCH_ACTION_PAN_X);\n        }\n        return actions;\n    },\n\n    directionTest: function(input) {\n        var options = this.options;\n        var hasMoved = true;\n        var distance = input.distance;\n        var direction = input.direction;\n        var x = input.deltaX;\n        var y = input.deltaY;\n\n        // lock to axis?\n        if (!(direction & options.direction)) {\n            if (options.direction & DIRECTION_HORIZONTAL) {\n                direction = (x === 0) ? DIRECTION_NONE : (x < 0) ? DIRECTION_LEFT : DIRECTION_RIGHT;\n                hasMoved = x != this.pX;\n                distance = Math.abs(input.deltaX);\n            } else {\n                direction = (y === 0) ? DIRECTION_NONE : (y < 0) ? DIRECTION_UP : DIRECTION_DOWN;\n                hasMoved = y != this.pY;\n                distance = Math.abs(input.deltaY);\n            }\n        }\n        input.direction = direction;\n        return hasMoved && distance > options.threshold && direction & options.direction;\n    },\n\n    attrTest: function(input) {\n        return AttrRecognizer.prototype.attrTest.call(this, input) &&\n            (this.state & STATE_BEGAN || (!(this.state & STATE_BEGAN) && this.directionTest(input)));\n    },\n\n    emit: function(input) {\n\n        this.pX = input.deltaX;\n        this.pY = input.deltaY;\n\n        var direction = directionStr(input.direction);\n\n        if (direction) {\n            input.additionalEvent = this.options.event + direction;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Pinch\n * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PinchRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(PinchRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'pinch',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);\n    },\n\n    emit: function(input) {\n        if (input.scale !== 1) {\n            var inOut = input.scale < 1 ? 'in' : 'out';\n            input.additionalEvent = this.options.event + inOut;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Press\n * Recognized when the pointer is down for x ms without any movement.\n * @constructor\n * @extends Recognizer\n */\nfunction PressRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    this._timer = null;\n    this._input = null;\n}\n\ninherit(PressRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PressRecognizer\n     */\n    defaults: {\n        event: 'press',\n        pointers: 1,\n        time: 251, // minimal time of the pointer to be pressed\n        threshold: 9 // a minimal movement is ok, but keep it low\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_AUTO];\n    },\n\n    process: function(input) {\n        var options = this.options;\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTime = input.deltaTime > options.time;\n\n        this._input = input;\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (!validMovement || !validPointers || (input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime)) {\n            this.reset();\n        } else if (input.eventType & INPUT_START) {\n            this.reset();\n            this._timer = setTimeoutContext(function() {\n                this.state = STATE_RECOGNIZED;\n                this.tryEmit();\n            }, options.time, this);\n        } else if (input.eventType & INPUT_END) {\n            return STATE_RECOGNIZED;\n        }\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function(input) {\n        if (this.state !== STATE_RECOGNIZED) {\n            return;\n        }\n\n        if (input && (input.eventType & INPUT_END)) {\n            this.manager.emit(this.options.event + 'up', input);\n        } else {\n            this._input.timeStamp = now();\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Rotate\n * Recognized when two or more pointer are moving in a circular motion.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction RotateRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(RotateRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof RotateRecognizer\n     */\n    defaults: {\n        event: 'rotate',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);\n    }\n});\n\n/**\n * Swipe\n * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction SwipeRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(SwipeRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof SwipeRecognizer\n     */\n    defaults: {\n        event: 'swipe',\n        threshold: 10,\n        velocity: 0.3,\n        direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,\n        pointers: 1\n    },\n\n    getTouchAction: function() {\n        return PanRecognizer.prototype.getTouchAction.call(this);\n    },\n\n    attrTest: function(input) {\n        var direction = this.options.direction;\n        var velocity;\n\n        if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {\n            velocity = input.overallVelocity;\n        } else if (direction & DIRECTION_HORIZONTAL) {\n            velocity = input.overallVelocityX;\n        } else if (direction & DIRECTION_VERTICAL) {\n            velocity = input.overallVelocityY;\n        }\n\n        return this._super.attrTest.call(this, input) &&\n            direction & input.offsetDirection &&\n            input.distance > this.options.threshold &&\n            input.maxPointers == this.options.pointers &&\n            abs(velocity) > this.options.velocity && input.eventType & INPUT_END;\n    },\n\n    emit: function(input) {\n        var direction = directionStr(input.offsetDirection);\n        if (direction) {\n            this.manager.emit(this.options.event + direction, input);\n        }\n\n        this.manager.emit(this.options.event, input);\n    }\n});\n\n/**\n * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\n * between the given interval and position. The delay option can be used to recognize multi-taps without firing\n * a single tap.\n *\n * The eventData from the emitted event contains the property `tapCount`, which contains the amount of\n * multi-taps being recognized.\n * @constructor\n * @extends Recognizer\n */\nfunction TapRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    // previous time and center,\n    // used for tap counting\n    this.pTime = false;\n    this.pCenter = false;\n\n    this._timer = null;\n    this._input = null;\n    this.count = 0;\n}\n\ninherit(TapRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'tap',\n        pointers: 1,\n        taps: 1,\n        interval: 300, // max time between the multi-tap taps\n        time: 250, // max time of the pointer to be down (like finger on the screen)\n        threshold: 9, // a minimal movement is ok, but keep it low\n        posThreshold: 10 // a multi-tap can be a bit off the initial position\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_MANIPULATION];\n    },\n\n    process: function(input) {\n        var options = this.options;\n\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTouchTime = input.deltaTime < options.time;\n\n        this.reset();\n\n        if ((input.eventType & INPUT_START) && (this.count === 0)) {\n            return this.failTimeout();\n        }\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (validMovement && validTouchTime && validPointers) {\n            if (input.eventType != INPUT_END) {\n                return this.failTimeout();\n            }\n\n            var validInterval = this.pTime ? (input.timeStamp - this.pTime < options.interval) : true;\n            var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;\n\n            this.pTime = input.timeStamp;\n            this.pCenter = input.center;\n\n            if (!validMultiTap || !validInterval) {\n                this.count = 1;\n            } else {\n                this.count += 1;\n            }\n\n            this._input = input;\n\n            // if tap count matches we have recognized it,\n            // else it has began recognizing...\n            var tapCount = this.count % options.taps;\n            if (tapCount === 0) {\n                // no failing requirements, immediately trigger the tap event\n                // or wait as long as the multitap interval to trigger\n                if (!this.hasRequireFailures()) {\n                    return STATE_RECOGNIZED;\n                } else {\n                    this._timer = setTimeoutContext(function() {\n                        this.state = STATE_RECOGNIZED;\n                        this.tryEmit();\n                    }, options.interval, this);\n                    return STATE_BEGAN;\n                }\n            }\n        }\n        return STATE_FAILED;\n    },\n\n    failTimeout: function() {\n        this._timer = setTimeoutContext(function() {\n            this.state = STATE_FAILED;\n        }, this.options.interval, this);\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function() {\n        if (this.state == STATE_RECOGNIZED) {\n            this._input.tapCount = this.count;\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Simple way to create a manager with a default set of recognizers.\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Hammer(element, options) {\n    options = options || {};\n    options.recognizers = ifUndefined(options.recognizers, Hammer.defaults.preset);\n    return new Manager(element, options);\n}\n\n/**\n * @const {string}\n */\nHammer.VERSION = '2.0.7';\n\n/**\n * default settings\n * @namespace\n */\nHammer.defaults = {\n    /**\n     * set if DOM events are being triggered.\n     * But this is slower and unused by simple implementations, so disabled by default.\n     * @type {Boolean}\n     * @default false\n     */\n    domEvents: false,\n\n    /**\n     * The value for the touchAction property/fallback.\n     * When set to `compute` it will magically set the correct value based on the added recognizers.\n     * @type {String}\n     * @default compute\n     */\n    touchAction: TOUCH_ACTION_COMPUTE,\n\n    /**\n     * @type {Boolean}\n     * @default true\n     */\n    enable: true,\n\n    /**\n     * EXPERIMENTAL FEATURE -- can be removed/changed\n     * Change the parent input target element.\n     * If Null, then it is being set the to main element.\n     * @type {Null|EventTarget}\n     * @default null\n     */\n    inputTarget: null,\n\n    /**\n     * force an input class\n     * @type {Null|Function}\n     * @default null\n     */\n    inputClass: null,\n\n    /**\n     * Default recognizer setup when calling `Hammer()`\n     * When creating a new Manager these will be skipped.\n     * @type {Array}\n     */\n    preset: [\n        // RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]\n        [RotateRecognizer, {enable: false}],\n        [PinchRecognizer, {enable: false}, ['rotate']],\n        [SwipeRecognizer, {direction: DIRECTION_HORIZONTAL}],\n        [PanRecognizer, {direction: DIRECTION_HORIZONTAL}, ['swipe']],\n        [TapRecognizer],\n        [TapRecognizer, {event: 'doubletap', taps: 2}, ['tap']],\n        [PressRecognizer]\n    ],\n\n    /**\n     * Some CSS properties can be used to improve the working of Hammer.\n     * Add them to this method and they will be set when creating a new Manager.\n     * @namespace\n     */\n    cssProps: {\n        /**\n         * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userSelect: 'none',\n\n        /**\n         * Disable the Windows Phone grippers when pressing an element.\n         * @type {String}\n         * @default 'none'\n         */\n        touchSelect: 'none',\n\n        /**\n         * Disables the default callout shown when you touch and hold a touch target.\n         * On iOS, when you touch and hold a touch target such as a link, Safari displays\n         * a callout containing information about the link. This property allows you to disable that callout.\n         * @type {String}\n         * @default 'none'\n         */\n        touchCallout: 'none',\n\n        /**\n         * Specifies whether zooming is enabled. Used by IE10>\n         * @type {String}\n         * @default 'none'\n         */\n        contentZooming: 'none',\n\n        /**\n         * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userDrag: 'none',\n\n        /**\n         * Overrides the highlight color shown when the user taps a link or a JavaScript\n         * clickable element in iOS. This property obeys the alpha value, if specified.\n         * @type {String}\n         * @default 'rgba(0,0,0,0)'\n         */\n        tapHighlightColor: 'rgba(0,0,0,0)'\n    }\n};\n\nvar STOP = 1;\nvar FORCED_STOP = 2;\n\n/**\n * Manager\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Manager(element, options) {\n    this.options = assign({}, Hammer.defaults, options || {});\n\n    this.options.inputTarget = this.options.inputTarget || element;\n\n    this.handlers = {};\n    this.session = {};\n    this.recognizers = [];\n    this.oldCssProps = {};\n\n    this.element = element;\n    this.input = createInputInstance(this);\n    this.touchAction = new TouchAction(this, this.options.touchAction);\n\n    toggleCssProps(this, true);\n\n    each(this.options.recognizers, function(item) {\n        var recognizer = this.add(new (item[0])(item[1]));\n        item[2] && recognizer.recognizeWith(item[2]);\n        item[3] && recognizer.requireFailure(item[3]);\n    }, this);\n}\n\nManager.prototype = {\n    /**\n     * set options\n     * @param {Object} options\n     * @returns {Manager}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // Options that need a little more setup\n        if (options.touchAction) {\n            this.touchAction.update();\n        }\n        if (options.inputTarget) {\n            // Clean up existing event listeners and reinitialize\n            this.input.destroy();\n            this.input.target = options.inputTarget;\n            this.input.init();\n        }\n        return this;\n    },\n\n    /**\n     * stop recognizing for this session.\n     * This session will be discarded, when a new [input]start event is fired.\n     * When forced, the recognizer cycle is stopped immediately.\n     * @param {Boolean} [force]\n     */\n    stop: function(force) {\n        this.session.stopped = force ? FORCED_STOP : STOP;\n    },\n\n    /**\n     * run the recognizers!\n     * called by the inputHandler function on every movement of the pointers (touches)\n     * it walks through all the recognizers and tries to detect the gesture that is being made\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        var session = this.session;\n        if (session.stopped) {\n            return;\n        }\n\n        // run the touch-action polyfill\n        this.touchAction.preventDefaults(inputData);\n\n        var recognizer;\n        var recognizers = this.recognizers;\n\n        // this holds the recognizer that is being recognized.\n        // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED\n        // if no recognizer is detecting a thing, it is set to `null`\n        var curRecognizer = session.curRecognizer;\n\n        // reset when the last recognizer is recognized\n        // or when we're in a new session\n        if (!curRecognizer || (curRecognizer && curRecognizer.state & STATE_RECOGNIZED)) {\n            curRecognizer = session.curRecognizer = null;\n        }\n\n        var i = 0;\n        while (i < recognizers.length) {\n            recognizer = recognizers[i];\n\n            // find out if we are allowed try to recognize the input for this one.\n            // 1.   allow if the session is NOT forced stopped (see the .stop() method)\n            // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one\n            //      that is being recognized.\n            // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.\n            //      this can be setup with the `recognizeWith()` method on the recognizer.\n            if (session.stopped !== FORCED_STOP && ( // 1\n                    !curRecognizer || recognizer == curRecognizer || // 2\n                    recognizer.canRecognizeWith(curRecognizer))) { // 3\n                recognizer.recognize(inputData);\n            } else {\n                recognizer.reset();\n            }\n\n            // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the\n            // current active recognizer. but only if we don't already have an active recognizer\n            if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {\n                curRecognizer = session.curRecognizer = recognizer;\n            }\n            i++;\n        }\n    },\n\n    /**\n     * get a recognizer by its event name.\n     * @param {Recognizer|String} recognizer\n     * @returns {Recognizer|Null}\n     */\n    get: function(recognizer) {\n        if (recognizer instanceof Recognizer) {\n            return recognizer;\n        }\n\n        var recognizers = this.recognizers;\n        for (var i = 0; i < recognizers.length; i++) {\n            if (recognizers[i].options.event == recognizer) {\n                return recognizers[i];\n            }\n        }\n        return null;\n    },\n\n    /**\n     * add a recognizer to the manager\n     * existing recognizers with the same event name will be removed\n     * @param {Recognizer} recognizer\n     * @returns {Recognizer|Manager}\n     */\n    add: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'add', this)) {\n            return this;\n        }\n\n        // remove existing\n        var existing = this.get(recognizer.options.event);\n        if (existing) {\n            this.remove(existing);\n        }\n\n        this.recognizers.push(recognizer);\n        recognizer.manager = this;\n\n        this.touchAction.update();\n        return recognizer;\n    },\n\n    /**\n     * remove a recognizer by name or instance\n     * @param {Recognizer|String} recognizer\n     * @returns {Manager}\n     */\n    remove: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'remove', this)) {\n            return this;\n        }\n\n        recognizer = this.get(recognizer);\n\n        // let's make sure this recognizer exists\n        if (recognizer) {\n            var recognizers = this.recognizers;\n            var index = inArray(recognizers, recognizer);\n\n            if (index !== -1) {\n                recognizers.splice(index, 1);\n                this.touchAction.update();\n            }\n        }\n\n        return this;\n    },\n\n    /**\n     * bind event\n     * @param {String} events\n     * @param {Function} handler\n     * @returns {EventEmitter} this\n     */\n    on: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n        if (handler === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            handlers[event] = handlers[event] || [];\n            handlers[event].push(handler);\n        });\n        return this;\n    },\n\n    /**\n     * unbind event, leave emit blank to remove all handlers\n     * @param {String} events\n     * @param {Function} [handler]\n     * @returns {EventEmitter} this\n     */\n    off: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            if (!handler) {\n                delete handlers[event];\n            } else {\n                handlers[event] && handlers[event].splice(inArray(handlers[event], handler), 1);\n            }\n        });\n        return this;\n    },\n\n    /**\n     * emit event to the listeners\n     * @param {String} event\n     * @param {Object} data\n     */\n    emit: function(event, data) {\n        // we also want to trigger dom events\n        if (this.options.domEvents) {\n            triggerDomEvent(event, data);\n        }\n\n        // no handlers, so skip it all\n        var handlers = this.handlers[event] && this.handlers[event].slice();\n        if (!handlers || !handlers.length) {\n            return;\n        }\n\n        data.type = event;\n        data.preventDefault = function() {\n            data.srcEvent.preventDefault();\n        };\n\n        var i = 0;\n        while (i < handlers.length) {\n            handlers[i](data);\n            i++;\n        }\n    },\n\n    /**\n     * destroy the manager and unbinds all events\n     * it doesn't unbind dom events, that is the user own responsibility\n     */\n    destroy: function() {\n        this.element && toggleCssProps(this, false);\n\n        this.handlers = {};\n        this.session = {};\n        this.input.destroy();\n        this.element = null;\n    }\n};\n\n/**\n * add/remove the css properties as defined in manager.options.cssProps\n * @param {Manager} manager\n * @param {Boolean} add\n */\nfunction toggleCssProps(manager, add) {\n    var element = manager.element;\n    if (!element.style) {\n        return;\n    }\n    var prop;\n    each(manager.options.cssProps, function(value, name) {\n        prop = prefixed(element.style, name);\n        if (add) {\n            manager.oldCssProps[prop] = element.style[prop];\n            element.style[prop] = value;\n        } else {\n            element.style[prop] = manager.oldCssProps[prop] || '';\n        }\n    });\n    if (!add) {\n        manager.oldCssProps = {};\n    }\n}\n\n/**\n * trigger dom event\n * @param {String} event\n * @param {Object} data\n */\nfunction triggerDomEvent(event, data) {\n    var gestureEvent = document.createEvent('Event');\n    gestureEvent.initEvent(event, true, true);\n    gestureEvent.gesture = data;\n    data.target.dispatchEvent(gestureEvent);\n}\n\nassign(Hammer, {\n    INPUT_START: INPUT_START,\n    INPUT_MOVE: INPUT_MOVE,\n    INPUT_END: INPUT_END,\n    INPUT_CANCEL: INPUT_CANCEL,\n\n    STATE_POSSIBLE: STATE_POSSIBLE,\n    STATE_BEGAN: STATE_BEGAN,\n    STATE_CHANGED: STATE_CHANGED,\n    STATE_ENDED: STATE_ENDED,\n    STATE_RECOGNIZED: STATE_RECOGNIZED,\n    STATE_CANCELLED: STATE_CANCELLED,\n    STATE_FAILED: STATE_FAILED,\n\n    DIRECTION_NONE: DIRECTION_NONE,\n    DIRECTION_LEFT: DIRECTION_LEFT,\n    DIRECTION_RIGHT: DIRECTION_RIGHT,\n    DIRECTION_UP: DIRECTION_UP,\n    DIRECTION_DOWN: DIRECTION_DOWN,\n    DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,\n    DIRECTION_VERTICAL: DIRECTION_VERTICAL,\n    DIRECTION_ALL: DIRECTION_ALL,\n\n    Manager: Manager,\n    Input: Input,\n    TouchAction: TouchAction,\n\n    TouchInput: TouchInput,\n    MouseInput: MouseInput,\n    PointerEventInput: PointerEventInput,\n    TouchMouseInput: TouchMouseInput,\n    SingleTouchInput: SingleTouchInput,\n\n    Recognizer: Recognizer,\n    AttrRecognizer: AttrRecognizer,\n    Tap: TapRecognizer,\n    Pan: PanRecognizer,\n    Swipe: SwipeRecognizer,\n    Pinch: PinchRecognizer,\n    Rotate: RotateRecognizer,\n    Press: PressRecognizer,\n\n    on: addEventListeners,\n    off: removeEventListeners,\n    each: each,\n    merge: merge,\n    extend: extend,\n    assign: assign,\n    inherit: inherit,\n    bindFn: bindFn,\n    prefixed: prefixed\n});\n\n// this prevents errors when Hammer is loaded in the presence of an AMD\n//  style loader but by script tag, not by the loader.\nvar freeGlobal = (typeof window !== 'undefined' ? window : (typeof self !== 'undefined' ? self : {})); // jshint ignore:line\nfreeGlobal.Hammer = Hammer;\n\nif (typeof define === 'function' && define.amd) {\n    define(function() {\n        return Hammer;\n    });\n} else if (typeof module != 'undefined' && module.exports) {\n    module.exports = Hammer;\n} else {\n    window[exportName] = Hammer;\n}\n\n})(window, document, 'Hammer');\n","var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\tvar module = __webpack_require__(id);\n\treturn module;\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";"],"sourceRoot":""}