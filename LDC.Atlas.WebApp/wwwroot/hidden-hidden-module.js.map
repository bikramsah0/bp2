{"version":3,"sources":["webpack:///./Client/app/hidden/components/background-interface-errors/background-interface-errors.component.html","webpack:///./Client/app/hidden/components/background-interface-errors/background-interface-errors.component.scss","webpack:///./Client/app/hidden/components/background-interface-errors/background-interface-errors.component.ts","webpack:///./Client/app/hidden/hidden.module.ts","webpack:///./Client/app/hidden/hidden.route.ts","webpack:///./Client/app/hidden/mock-data-provider.service.ts","webpack:///./Client/app/hidden/ux-components/custom-form-inputs/custom-form-inputs.component.html","webpack:///./Client/app/hidden/ux-components/custom-form-inputs/custom-form-inputs.component.scss","webpack:///./Client/app/hidden/ux-components/custom-form-inputs/custom-form-inputs.component.ts","webpack:///./Client/app/hidden/ux-components/ux-components-list/ux-components-list.component.html","webpack:///./Client/app/hidden/ux-components/ux-components-list/ux-components-list.component.scss","webpack:///./Client/app/hidden/ux-components/ux-components-list/ux-components-list.component.ts","webpack:///./Client/app/hidden/ux-components/ux-components-list/ux-dialog-list-search.component.html","webpack:///./Client/app/hidden/ux-components/ux-components-list/ux-dialog-list-search.component.ts","webpack:///./Client/app/hidden/ux-components/ux-components-list/ux-dialog-text.component.html","webpack:///./Client/app/hidden/ux-components/ux-components-list/ux-dialog-text.component.ts","webpack:///./Client/app/hidden/ux-components/ux-layout-template/ux-layout-template.component.html","webpack:///./Client/app/hidden/ux-components/ux-layout-template/ux-layout-template.component.scss","webpack:///./Client/app/hidden/ux-components/ux-layout-template/ux-layout-template.component.ts"],"names":[],"mappings":";;;;;;;;;AAAA,wqGAAwqG,QAAQ,87BAA87B,0BAA0B,+8C;;;;;;;;;;;ACAxoI,mB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACA;AACyC;AAEG;AACM;AAC3B;AAGU;AACX;AAE3B;AAE0E;AAE3C;AAO5E;IAAwD,sDAAe;IAgCnE,4CAAsB,IAAgB,EAAU,eAAgC,EAAU,oBAA0C,EAAU,iBAAoC,EAAS,WAA0B;QAArN,YACI,kBAAM,IAAI,CAAC,SACd;QAFqB,UAAI,GAAJ,IAAI,CAAY;QAAU,qBAAe,GAAf,eAAe,CAAiB;QAAU,0BAAoB,GAApB,oBAAoB,CAAsB;QAAU,uBAAiB,GAAjB,iBAAiB,CAAmB;QAAS,iBAAW,GAAX,WAAW,CAAe;QA9BpM,sCAAgC,GAAG,qBAAqB,CAAC;QAG1E,qBAAe,GAA8B;YACzC,WAAW,EAAE,OAAO;SACvB,CAAC;QAMF,eAAS,GAAS,IAAI,IAAI,EAAE,CAAC;QAC7B,aAAO,GAAS,IAAI,IAAI,EAAE,CAAC;QAE3B,kBAAY,GAAgB,IAAI,0DAAW,EAAE,CAAC;QAG9C,oBAAc,GAAgB,IAAI,0DAAW,EAAE,CAAC;QAEhD,mBAAa,GAAY,KAAK,CAAC;QAC/B,eAAS,GAAoB,EAAE,CAAC;QAEhC,gBAAU,GAAe,IAAI,6EAAU,EAAE,CAAC;QAE1C,gBAAU,GAAY,KAAK,CAAC;;IAQ5B,CAAC;IAED,qDAAQ,GAAR;QACI,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC;QAC1D,IAAI,CAAC,6BAA6B,GAAG;YACjC;gBACI,IAAI,EAAE,yBAAyB;gBAC/B,IAAI,EAAE,cAAc;gBACpB,MAAM,EAAE,IAAI,CAAC,eAAe,CAAC,WAAW;aAC3C;SACJ,CAAC;QACF,IAAI,CAAC,yBAAyB,GAAG;YAC7B,EAAE,UAAU,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE;YACrC,EAAE,UAAU,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,EAAE;YAC3C,EAAE,UAAU,EAAE,iBAAiB,EAAE,KAAK,EAAE,iBAAiB,EAAE;YAC3D,EAAE,UAAU,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE;YACzC,EAAE,UAAU,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE;YACvC;gBACI,UAAU,EAAE,EAAE;gBACd,qBAAqB,EAAE,4HAAyB;gBAChD,kBAAkB,EAAE;oBAChB,OAAO,EAAE;wBACL,eAAe,EAAE,IAAI;qBACxB;oBACD,WAAW,EAAE,IAAI,CAAC,6BAA6B;iBAElD;aACJ;YACD,EAAE,UAAU,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE;SAC1C,CAAC;QACF,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QACpC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;IAC3C,CAAC;IAED,yDAAY,GAAZ,UAAa,MAAc,EAAE,OAAuB;QAApD,iBAgBC;QAfG,QAAQ,MAAM,EAAE;YACZ,KAAK,IAAI,CAAC,eAAe,CAAC,WAAW;gBACjC,IAAI,OAAO,EAAE;oBACT,IAAI,OAAO,CAAC,SAAS,EAAE;wBACnB,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;wBACrB,IAAI,CAAC,oBAAoB,CAAC,kBAAkB,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC;4BACtE,KAAI,CAAC,eAAe,CAAC,mBAAmB,CAAC,sCAAsC,CAAC,CAAC;4BACjF,KAAI,CAAC,QAAQ,EAAE,CAAC;wBACpB,CAAC,CAAC,CAAC;qBACV;iBACA;gBACD,MAAM;YACV,SAAS,wCAAwC;gBAC7C,MAAM;SACb;IACL,CAAC;IAED,2DAAc,GAAd;QACI,IAAI,CAAC,cAAc,GAAG;YAClB,uBAAuB;YACvB,qBAAqB;YACrB,uCAAuC;YACvC,kCAAkC;YAClC,mCAAmC;YACnC,6BAA6B;SAAC,CAAC;QACnC,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;IACrC,CAAC;IAED,6DAAgB,GAAhB;QAAA,iBAKC;QAJG,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,CAAC,wFAAe,CAAC,eAAe,CAAC,CAAC,CAAC,SAAS,CAAC,UAAC,UAAsB;YACrG,KAAI,CAAC,SAAS,GAAG,UAAU,CAAC,eAAe,CAAC;YAC5C,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC9B,CAAC,CAAC,CAAC;IACP,CAAC;IAED,kEAAqB,GAArB;QACI,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,QAAQ,EAAE,CAAC;IACpB,CAAC;IAED,uDAAU,GAAV,UAAW,IAAY,EAAE,KAAoC;QACzD,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,KAAK,CAAC;IAC/B,CAAC;IAED,yDAAY,GAAZ,UAAa,IAAY,EAAE,KAAoC;QAC3D,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,KAAK,CAAC;IACjC,CAAC;IAED,qDAAQ,GAAR;QAAA,iBAiBC;QAhBG,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE;YAC5B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAC,MAAM,IAAK,aAAM,CAAC,YAAY,EAAnB,CAAmB,CAAC,CAAC;SACzE;aAAM;YACH,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,GAAG,CAAC,UAAC,MAAM,IAAK,aAAM,CAAC,YAAY,EAAnB,CAAmB,CAAC,CAAC;SACpF;QACD,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,MAAM,IAAG,CAAC,EAAC;YAC/D,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,cAAc,CAAC;SAClD;aAAM;YACH,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;SACtD;QAED,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,IAAI,CAAC,mBAAmB,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,UAAC,IAAI;YAC9I,IAAI,IAAI,EAAE;gBACN,KAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC;aACtC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAxIQ,kCAAkC;QAL9C,+DAAS,CAAC;YACP,QAAQ,EAAE,mCAAmC;;;SAGhD,CAAC;yCAiC8B,+DAAU,EAA2B,kFAAe,EAAgC,yGAAoB,EAA6B,mGAAiB,EAAsB,8EAAa;OAhC5M,kCAAkC,CAyI9C;IAAD,yCAAC;CAAA,CAzIuD,gGAAe,GAyItE;AAzI8C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvBA;AACS;AACS;AACkB;AACd;AACtB;AACY;AACgB;AACyD;AAC/E;AACuD;AACA;AACG;AACjB;AACc;AA4B5G;IAAA;IAA4B,CAAC;IAAhB,YAAY;QA1BxB,8DAAQ,CAAC;YACN,OAAO,EAAE;gBACL,4DAAY;gBACZ,sEAAc;gBACd,kEAAY;gBACZ,4DAAY,CAAC,cAAc,CAAC,EAAE,CAAC;gBAC/B,iEAAmB;gBACnB,qEAAgB;aAEnB;YACD,YAAY,EAAE;gBACV,yHAAyB;gBACzB,yHAAyB;gBACzB,2GAAe;gBACf,yHAAyB;gBACzB,4HAAyB;gBACzB,gJAAkC;aACrC;YACD,eAAe,EAAE,CAAC,2GAAe,EAAE,4HAAyB,CAAC;YAC7D,SAAS,EAAE;gBACP,EAAE,OAAO,EAAE,iEAAe,EAAE,QAAQ,EAAE,IAAI,EAAE;gBAC5C,EAAE,OAAO,EAAE,6DAAW,EAAE,QAAQ,EAAE,kFAAiB,EAAE;gBACrD,EAAE,OAAO,EAAE,kEAAgB,EAAE,QAAQ,EAAE,wEAAkB,EAAE;aAC9D;YACD,OAAO,EAAE,CAAC,oEAAsB,CAAC;SACpC,CAAC;OACW,YAAY,CAAI;IAAD,mBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1CgB;AACc;AACS;AAC4C;AACA;AACA;AACwB;AAE7H,IAAM,MAAM,GAAW;IAC7B;QACC,IAAI,EAAE,oBAAoB,EAAE,SAAS,EAAE,MAAM;QAC7C,WAAW,EAAE,CAAC,2EAAa,CAAC;QAC5B,SAAS,EAAE,wHAAyB;KACpC;IACD;QACC,IAAI,EAAE,oBAAoB,EAAE,SAAS,EAAE,MAAM;QAC7C,WAAW,EAAE,CAAC,2EAAa,CAAC;QAC5B,SAAS,EAAE,wHAAyB;KACpC;IACD;QACC,IAAI,EAAE,uBAAuB,EAAE,SAAS,EAAE,MAAM;QAChD,WAAW,EAAE,CAAC,2EAAa,CAAC;QAC5B,SAAS,EAAE,wHAAyB;KACjC;IACD;QACI,IAAI,EAAE,4BAA4B,EAAE,SAAS,EAAE,MAAM;QACrD,WAAW,EAAE,CAAC,2EAAa,CAAC;QAC5B,SAAS,EAAE,gJAAkC;KAChD;CAEJ,CAAC;AAMF;IAAA;IAAmC,CAAC;IAAvB,mBAAmB;QAJ/B,8DAAQ,CAAC;YACT,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACvB,CAAC;OACW,mBAAmB,CAAI;IAAD,0BAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;ACpCW;AAEmE;AAI9G;IAsCI;QArCA,eAAU,GAAoB;YAC1B;gBACI,UAAU,EAAE,MAAM;gBAClB,KAAK,EAAE,MAAM;gBACb,iBAAiB,EAAE,IAAI;gBACvB,uBAAuB,EAAE,IAAI;gBAC7B,eAAe,EAAE,IAAI;gBACrB,KAAK,EAAE,MAAM;gBACb,IAAI,EAAE,KAAK;aACd;YACD;gBACI,UAAU,EAAE,OAAO;gBACnB,KAAK,EAAE,OAAO;gBACd,eAAe,EAAE,IAAI;gBACrB,KAAK,EAAE,OAAO;gBACd,IAAI,EAAE,KAAK;aACd;YACD;gBACI,UAAU,EAAE,OAAO;gBACnB,KAAK,EAAE,OAAO;gBACd,eAAe,EAAE,IAAI;gBACrB,KAAK,EAAE,OAAO;gBACd,IAAI,EAAE,KAAK;aACd;YACD;gBACI,UAAU,EAAE,EAAE;gBACd,qBAAqB,EAAE,yHAAkB;gBACzC,kBAAkB,EAAE;oBAChB,OAAO,EAAE;wBACL,eAAe,EAAE,IAAI;qBACxB;iBACJ;gBACD,QAAQ,EAAE,EAAE;gBACZ,IAAI,EAAE,KAAK;aACd;SACJ,CAAC;IAEc,CAAC;IAEjB,8CAAY,GAAZ;QACI,OAAO,IAAI,CAAC,UAAU,CAAC;IAC3B,CAAC;IA1CQ,uBAAuB;QAHnC,gEAAU,CAAC;YACR,UAAU,EAAE,MAAM;SACrB,CAAC;;OACW,uBAAuB,CA2CnC;IAAD,8BAAC;CAAA;AA3CmC;;;;;;;;;;;;ACNpC,ylCAAylC,uKAAuK,WAAW,o2CAAo2C,wKAAwK,YAAY,iiDAAiiD,sKAAsK,UAAU,suBAAsuB,0BAA0B,oeAAoe,wKAAwK,YAAY,ouDAAouD,6T;;;;;;;;;;;ACAhnP,mB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAC+B;AACjC;AACuC;AAGnB;AACgB;AAOpF;IAuDI,mCACY,WAAwB,EACxB,WAAwB,EACtB,cAAqC;QAFvC,gBAAW,GAAX,WAAW,CAAa;QACxB,gBAAW,GAAX,WAAW,CAAa;QACtB,mBAAc,GAAd,cAAc,CAAuB;QAvDnD,QAAQ;QACR,oBAAe,GAAY,IAAI,CAAC;QAChC,cAAS,GAAW,WAAW,CAAC;QAChC,iBAAY,GAAgB,IAAI,0DAAW,CAAC,EAAE,EAAE;YAC5C,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC;YACvB,yDAAU,CAAC,KAAK;SACnB,CAAC,CAAC,CAAC,uBAAuB;QAC3B,kBAAa,GAAwB,IAAI,GAAG,EAAE,CAAC;QAC/C,eAAU,GAAW,gBAAgB,CAAC;QACtC,eAAU,GAAgB,IAAI,0DAAW,CAAC,EAAE,CAAC,CAAC;QAI9C,SAAS;QACT,qBAAgB,GAAY,IAAI,CAAC;QACjC,eAAU,GAAW,WAAW,CAAC;QACjC,uBAAkB,GAAgB,IAAI,0DAAW,CAAC,SAAS,CAAC,CAAC;QAC7D,wBAAmB,GAAgB,IAAI,0DAAW,CAAC,EAAE,CAAC,CAAC;QACvD,kBAAa,GAAgB,IAAI,0DAAW,CAAC,aAAa,EAAE;YACxD,yDAAU,CAAC,QAAQ;SACtB,CAAC,CAAC;QACH,yBAAoB,GAAqB,IAAI,GAAG,EAAE,CAAC;QAEnD,cAAc;QACd,mBAAc,GAAY,IAAI,CAAC;QAC/B,aAAQ,GAAW,WAAW,CAAC;QAC/B,cAAS,GAAgB,IAAI,0DAAW,CAAC,EAAE,CAAC,CAAC;QAC7C,gBAAW,GAAgB,IAAI,0DAAW,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,KAAK,EAAE,EAAE;YACvE,yDAAU,CAAC,QAAQ;YACnB,iGAAY,CAAC,IAAI,CAAC,cAAc,CAAC,qBAAqB,EAAE,CAAC;SAC5D,CAAC,CAAC;QACH,iBAAY,GAAwB,IAAI,GAAG,EAAE,CAAC;QAC9C,mBAAc,GAAwB,IAAI,GAAG,EAAE,CAAC;QAGhD,SAAS;QACT,qBAAgB,GAAY,IAAI,CAAC;QACjC,eAAU,GAAW,WAAW,CAAC;QACjC,6BAAwB,GAAW,mBAAmB,CAAC;QACvD,gBAAW,GAAgB,IAAI,0DAAW,CAAC,EAAE,CAAC,CAAC;QAC/C,kBAAa,GAAgB,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,mEAAmE;QAC5I,sBAAiB,GAAgB,IAAI,0DAAW,CAAC,EAAE,CAAC,CAAC;QAErD,YAAO,GAAc,EAAE,CAAC;QACxB,sBAAiB,GAAa,EAAE,CAAC;QAEjC,4BAAuB,GAAY,IAAI,CAAC;QACxC,mBAAc,GAAwB,IAAI,GAAG,EAAE,CAAC;QAEhD,oBAAe,GAAW,MAAM,CAAC;QACjC,qBAAgB,GAAa,CAAC,MAAM,EAAE,aAAa,CAAC,CAAC;QAOjD,IAAI,CAAC,aAAa;aACb,GAAG,CAAC,UAAU,EAAE,YAAY,CAAC;aAC7B,GAAG,CACA,WAAW,EACX,kDAAkD,CACrD;aACA,GAAG,CAAC,OAAO,EAAE,mBAAmB,CAAC,CAAC;QACvC,IAAI,CAAC,YAAY;aACZ,GAAG,CAAC,UAAU,EAAE,YAAY,CAAC;aAC7B,GAAG,CAAC,aAAa,EAAE,kCAAkC,CAAC;aACtD,GAAG,CACA,WAAW,EACX,kDAAkD,CACrD,CAAC;QACN,IAAI,CAAC,cAAc;aACd,GAAG,CAAC,aAAa,EAAE,sBAAsB,CAAC;aAC1C,GAAG,CAAC,UAAU,EAAE,YAAY,CAAC,CAAC;QAEnC,IAAI,CAAC,cAAc;aACd,GAAG,CAAC,UAAU,EAAE,YAAY,CAAC;aAC7B,GAAG,CAAC,gBAAgB,EAAE,mBAAmB,CAAC,CAAC;IACpD,CAAC;IAED,4CAAQ,GAAR;QACI,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAED,kDAAc,GAAd;QACI,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC7C,YAAY,EAAE,IAAI,CAAC,YAAY;YAC/B,aAAa,EAAE,IAAI,CAAC,aAAa;YACjC,WAAW,EAAE,IAAI,CAAC,WAAW;YAC7B,aAAa,EAAE,IAAI,CAAC,aAAa;YACjC,iBAAiB,EAAE,IAAI,CAAC,iBAAiB;SAC5C,CAAC,CAAC;QAEH,IAAI,CAAC,OAAO,GAAG,IAAI,KAAK,CACpB,EAAE,IAAI,EAAE,IAAI,EAAE,WAAW,EAAE,MAAM,EAAE,EACnC,EAAE,IAAI,EAAE,IAAI,EAAE,WAAW,EAAE,QAAQ,EAAE,EACrC,EAAE,IAAI,EAAE,IAAI,EAAE,WAAW,EAAE,QAAQ,EAAE,CACxC,CAAC;QAEF,IAAI,CAAC,iBAAiB,GAAG,IAAI,KAAK,CAC9B,EAAE,QAAQ,EAAE,CAAC,EAAE,UAAU,EAAE,QAAQ,EAAE,WAAW,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,EAAE,SAAS,EAAE,WAAW,EAAE,IAAI,EAAE,EACrH,EAAE,QAAQ,EAAE,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,WAAW,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,EAAE,SAAS,EAAE,WAAW,EAAE,IAAI,EAAE,EACnH,EAAE,QAAQ,EAAE,CAAC,EAAE,UAAU,EAAE,SAAS,EAAE,WAAW,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,EAAE,SAAS,EAAE,WAAW,EAAE,IAAI,EAAE,CACzH,CAAC;QACF,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,iBAAiB,CAAC;QAEjD,gCAAgC;QAChC,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,aAAa,EAAE,aAAa,CAAC,CAAC;QAC5D,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,cAAc,EAAE,cAAc,CAAC,CAAC;QAC9D,IAAI,CAAC,cAAc;YACf,IAAI,CAAC,YAAY,CAAC,MAAM,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,QAAQ,CAAC;QAClE,IAAI,CAAC,aAAa;YACd,IAAI,CAAC,WAAW,CAAC,MAAM,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,QAAQ,CAAC;QAChE,IAAI,CAAC,eAAe;YAChB,IAAI,CAAC,aAAa,CAAC,MAAM,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,QAAQ,CAAC;IACxE,CAAC;IAED,mDAAe,GAAf;QAAA,iBA2BC;QA1BG,IAAI,CAAC,aAAa,CAAC,YAAY;aAC1B,IAAI,CACD,gEAAS,CAAC,IAAI,CAAC,EACf,0DAAG,CAAC,UAAC,KAAK;YACN,IACI,KAAI,CAAC,uBAAuB,KAAK,IAAI;gBACrC,KAAK;gBACL,CAAC,KAAI,CAAC,YAAY,CAAC,KAAK,CAAC,EAC3B;gBACE,OAAO,KAAI,CAAC,WAAW,CAAC,gCAAgC,CACpD,KAAI,CAAC,OAAO,EACZ,EAAE,IAAI,EAAE,KAAK,EAAE,WAAW,EAAE,KAAK,EAAE,CACtC,CAAC;aACL;iBAAM;gBACH,OAAO,KAAI,CAAC,OAAO,CAAC;aACvB;QACL,CAAC,CAAC,CACL,CAAC,SAAS,CAAC,UAAC,KAAK,IAAK,YAAI,CAAC,aAAa,GAAG,KAAK,EAA1B,CAA0B,CAAC,CAAC;QAEvD,IAAI,CAAC,iBAAiB,CAAC,YAAY;aAC9B,SAAS,CAAC,UAAC,KAAK;YACb,KAAI,CAAC,kBAAkB,GAAG,KAAI,CAAC,WAAW,CAAC,yBAAyB,CAChE,KAAK,EACL,KAAI,CAAC,iBAAiB,EACtB,CAAC,YAAY,EAAE,aAAa,CAAC,CAAC,CAAC;QACvC,CAAC,CAAC,CAAC;IACX,CAAC;IAED,sDAAkB,GAAlB,UAAmB,KAAa;QAC5B,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,UAAC,IAAI;YACrC,OAAO,CACH,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC;gBACvD,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAC1D,CAAC;QACN,CAAC,CAAC,CAAC;QACH,OAAO,OAAO,CAAC;IACnB,CAAC;IAED,gDAAY,GAAZ,UAAa,GAAY;QACrB,2DAA2D;QAC3D,OAAiB,GAAI,CAAC,IAAI,KAAK,SAAS,CAAC;IAC7C,CAAC;IAED,mDAAe,GAAf;QACI,IAAI,CAAC,eAAe,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC;QAC7C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,cAAc,CAAC;IACzE,CAAC;IAED,yDAAqB,GAArB,UAAsB,KAAK;QACvB,IAAM,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC;QAC5B,IAAI,KAAK,EAAE;YACP,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC;gBAC5B,yDAAU,CAAC,QAAQ;gBACnB,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC;gBACvB,yDAAU,CAAC,KAAK;aACnB,CAAC,CAAC;SACN;aAAM;YACH,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC;gBAC5B,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC;gBACvB,yDAAU,CAAC,KAAK;aACnB,CAAC,CAAC;SACN;QAED,IAAI,CAAC,YAAY,CAAC,sBAAsB,EAAE,CAAC;IAC/C,CAAC;IAED,oDAAgB,GAAhB;QACI,IAAI,CAAC,gBAAgB,GAAG,CAAC,IAAI,CAAC,gBAAgB,CAAC;QAC/C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,cAAc,CAAC;IAC3E,CAAC;IAED,mDAAe,GAAf,UAAgB,KAAK;QACjB,IAAI,CAAC,oBAAoB,CAAC,GAAG,CACzB,IAAI,CAAC,mBAAmB,CAAC,KAAK,EAC9B,IAAI,CAAC,mBAAmB,CAAC,KAAK,CACjC,CAAC;QACF,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;IAC1C,CAAC;IAED,kDAAc,GAAd;QACI,IAAI,CAAC,cAAc,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC;QAC3C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,cAAc,CAAC;IACvE,CAAC;IAED,8DAA0B,GAA1B,UAA2B,KAAK;QAC5B,IAAM,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC;QAC5B,IAAI,KAAK,EAAE;YACP,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC;gBAC3B,yDAAU,CAAC,QAAQ;gBACnB,iGAAY,CAAC,IAAI,CAAC,cAAc,CAAC,qBAAqB,EAAE,CAAC;aAC5D,CAAC,CAAC;SACN;aAAM;YACH,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC,iGAAY,CAAC,IAAI,CAAC,cAAc,CAAC,qBAAqB,EAAE,CAAC,CAAC,CAAC,CAAC;SAC/F;QACD,IAAI,CAAC,WAAW,CAAC,sBAAsB,EAAE,CAAC;IAC9C,CAAC;IAED,oDAAgB,GAAhB;QACI,IAAI,CAAC,gBAAgB,GAAG,CAAC,IAAI,CAAC,gBAAgB,CAAC;QAC/C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,cAAc,CAAC;IAC3E,CAAC;IAED,kEAA8B,GAA9B;QACI,IAAI,CAAC,uBAAuB,GAAG,CAAC,IAAI,CAAC,uBAAuB,CAAC;QAC7D,IAAI,IAAI,CAAC,uBAAuB,EAAE;YAC9B,IAAI,CAAC,wBAAwB,GAAG,mBAAmB,CAAC;SACvD;aAAM;YACH,IAAI,CAAC,wBAAwB,GAAG,eAAe,CAAC;SACnD;IACL,CAAC;IAED,0DAAsB,GAAtB,UAAuB,KAAK;QACxB,IAAM,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC;QAC5B,IAAI,KAAK,EAAE;YACP,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;SAC3D;aAAM;YACH,IAAI,CAAC,aAAa,CAAC,eAAe,EAAE,CAAC;SACxC;QACD,IAAI,CAAC,aAAa,CAAC,sBAAsB,EAAE,CAAC;IAChD,CAAC;IAED,4DAAwB,GAAxB,UAAyB,KAAK;QAC1B,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IACvC,CAAC;IAED,wDAAoB,GAApB,UAAqB,KAAK;QACtB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;IACvD,CAAC;IAzPQ,yBAAyB;QALrC,+DAAS,CAAC;YACP,QAAQ,EAAE,YAAY;;;SAGzB,CAAC;yCAyD2B,0DAAW;YACX,yEAAW;YACN,4FAAqB;OA1D1C,yBAAyB,CA0PrC;IAAD,gCAAC;CAAA;AA1PqC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdtC,uvBAAuvB,YAAY,oHAAoH,wBAAwB,uSAAuS,2BAA2B,8MAA8M,2BAA2B,8MAA8M,2BAA2B,0nBAA0nB,sBAAsB,4EAA4E,sBAAsB,skBAAskB,uBAAuB,sSAAsS,sBAAsB,0nBAA0nB,iCAAiC,0EAA0E,6BAA6B,mTAAmT,4BAA4B,+UAA+U,6BAA6B,olEAAolE,sCAAsC,olBAAolB,+BAA+B,2LAA2L,oCAAoC,uRAAuR,kCAAkC,qjBAAqjB,aAAa,yOAAyO,yCAAyC,yIAAyI,qCAAqC,sSAAsS,iCAAiC,s1FAAs1F,gCAAgC,0MAA0M,gCAAgC,qEAAqE,iCAAiC,oUAAoU,gDAAgD,40BAA40B,oDAAoD,oOAAoO,gDAAgD,kPAAkP,uDAAuD,0OAA0O,iDAAiD,qOAAqO,gDAAgD,iOAAiO,mDAAmD,0sBAA0sB,4BAA4B,0WAA0W,iCAAiC,+MAA+M,gCAAgC,oEAAoE,mCAAmC,6SAA6S,iCAAiC,gIAAgI,mCAAmC,2cAA2c,uCAAuC,yDAAyD,yCAAyC,iJAAiJ,uCAAuC,yDAAyD,yCAAyC,6IAA6I,uCAAuC,yDAAyD,yCAAyC,8ZAA8Z,qCAAqC,weAAwe,oBAAoB,0VAA0V,wBAAwB,6aAA6a,oBAAoB,+VAA+V,wCAAwC,oWAAoW,iJAAiJ,uBAAuB,uRAAuR,oBAAoB,0VAA0V,uBAAuB,0aAA0a,oBAAoB,mKAAmK,oBAAoB,+VAA+V,4BAA4B,knBAAknB,oBAAoB,wKAAwK,qBAAqB,wiBAAwiB,kCAAkC,yFAAyF,0CAA0C,gdAAgd,wCAAwC,y6BAAy6B,sBAAsB,gFAAgF,+BAA+B,4GAA4G,sBAAsB,wgBAAwgB,8FAA8F,6BAA6B,scAAsc,qEAAqE,oBAAoB,iNAAiN,oCAAoC,gSAAgS,mCAAmC,gJAAgJ,mCAAmC,wTAAwT,mCAAmC,4mBAA4mB,sBAAsB,ysBAAysB,sBAAsB,qsBAAqsB,sBAAsB,kyBAAkyB,sBAAsB,i1BAAi1B,gCAAgC,qSAAqS,qCAAqC,2KAA2K,sCAAsC,mLAAmL,iCAAiC,iCAAiC,QAAQ,gRAAgR,2CAA2C,2OAA2O,gDAAgD,2aAA2a,uCAAuC,+VAA+V,6BAA6B,sPAAsP,8BAA8B,q6DAAq6D,gBAAgB,+oBAA+oB,oCAAoC,kUAAkU,+FAA+F,aAAa,4CAA4C,YAAY,2OAA2O,6BAA6B,4TAA4T,qwBAAqwB,u9BAAu9B,wBAAwB,wFAAwF,mBAAmB,yBAAyB,sBAAsB,6DAA6D,oBAAoB,yBAAyB,sBAAsB,6DAA6D,mBAAmB,yBAAyB,sBAAsB,kJAAkJ,mCAAmC,0XAA0X,wBAAwB,wDAAwD,wBAAwB,wDAAwD,wBAAwB,8ZAA8Z,iCAAiC,yMAAyM,uBAAuB,+cAA+c,uBAAuB,2CAA2C,uBAAuB,0JAA0J,oCAAoC,sBAAsB,iFAAiF,4TAA4T,wBAAwB,wDAAwD,wBAAwB,wDAAwD,wBAAwB,mRAAmR,uBAAuB,+cAA+c,uBAAuB,2CAA2C,uBAAuB,0nB;;;;;;;;;;;ACA902C,sCAAsC,kBAAkB,2BAA2B,gBAAgB,iBAAiB,EAAE,iEAAiE,sBAAsB,EAAE,sBAAsB,iBAAiB,EAAE,qBAAqB,8BAA8B,+BAA+B,8DAA8D,yBAAyB,sBAAsB,wBAAwB,wBAAwB,oBAAoB,gBAAgB,EAAE,uCAAuC,iBAAiB,EAAE,0BAA0B,4BAA4B,EAAE,gDAAgD,+DAA+D,EAAE,kDAAkD,0EAA0E,+BAA+B,EAAE,uBAAuB,qBAAqB,0BAA0B,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAn6B;AACA;AACO;AACG;AACY;AAE5C;AAC+C;AACL;AACqB;AACkB;AAGpC;AACE;AAChB;AACA;AACmB;AACjB;AAW7D;IAOI,mCACY,IAAgB,EAChB,MAAiB,EAClB,WAA0B,EAC1B,gBAAkC,EAClC,uBAAgD,EAC/C,kBAA2C;QANvD,iBA0BC;QAzBW,SAAI,GAAJ,IAAI,CAAY;QAChB,WAAM,GAAN,MAAM,CAAW;QAClB,gBAAW,GAAX,WAAW,CAAe;QAC1B,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,4BAAuB,GAAvB,uBAAuB,CAAyB;QAC/C,uBAAkB,GAAlB,kBAAkB,CAAyB;QAZvD,sBAAsB;QACtB,4BAAuB,GAAwB,IAAI,GAAG,CAAC;YACnD,CAAC,eAAe,EAAE,EAAE,CAAC;SACxB,CAAC,CAAC;QAEH,aAAQ,GAAG,IAAI,4CAAO,EAAE,CAAC;QA4BzB,UAAK,GAAG,CAAC,OAAO,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;QACrC,eAAU,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAE3B,kBAAa,GAAW,CAAC,CAAC;QAqB1B,0BAAqB,GAAG,KAAK,CAAC;QAC9B,yBAAoB,GAA6C,IAAI,KAAK,EAAE,CAAC;QAG7E;;WAEA;QACA,cAAS,GAAG,IAAI,0DAAW,EAAE,CAAC;QAC9B,YAAO,GAAW,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,CAAC;QAG5E;;WAEA;QACA,UAAK,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAC,CAAC,CAAC;QAzDjE,gBAAgB,CAAC,cAAc,CAAC,IAAI,EAAE,mDAAqB,EAAE,IAAI,CAAC,CAAC;QACnE,gBAAgB,CAAC,cAAc,CAAC,IAAI,EAAE,mDAAqB,EAAE,IAAI,CAAC,CAAC;QACnE,IAAI,CAAC,KAAK,GAAG;YACT,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,KAAK,EAAE;YACpC,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,KAAK,EAAE;YACpC,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,KAAK,EAAE;SACvC,CAAC;QAEF,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC;QAE1D,gBAAgB,CAAC,YAAY;aACxB,IAAI,CACD,gEAAS,CAAC,UAAC,KAAsB,IAAK,YAAI,CAAC,uBAAuB,EAAE,EAA9B,CAA8B,CAAC,CACxE;aACA,SAAS,CAAC;YACP,KAAI,CAAC,uBAAuB,CAAC,yBAAyB,CAAC,KAAI,CAAC,uBAAuB,CAAC,CAAC;YACrF,KAAI,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC;QACjC,CAAC,CAAC,CAAC;IACX,CAAC;IAmDD,+CAAW,GAAX,UAAY,MAAM;QAAlB,iBAUC;QATG,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,GAAG,CAAC;QAC1B,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,SAAS,CAAC;QACtC,IAAI,CAAC,aAAa,CAAC,kBAAkB,EAAE,CAAC;QACxC,IAAI,CAAC,uBAAuB,EAAE;aACzB,IAAI,CACD,gEAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAC3B,CAAC,SAAS,CAAC;YACR,KAAI,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC;QACjC,CAAC,CAAC,CAAC;IACX,CAAC;IAED,mDAAe,GAAf,UAAgB,KAAK,EAAE,GAAG;QACtB,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,IAAI,IAAI,KAAK,CAAC,CAAC;QAClE,KAAK,CAAC,eAAe,EAAE,CAAC;QACxB,OAAO,KAAK,CAAC;IACjB,CAAC;IACD,uDAAmB,GAAnB,UAAoB,KAAK;QACrB,IAAM,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAC/B,UAAC,GAAG,IAAK,UAAG,CAAC,KAAK,KAAK,KAAK,CAAC,MAAM,CAAC,KAAK,EAAhC,CAAgC,CAC5C,CAAC;QACF,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;YAAE,OAAO;SAAE;QAClC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC;IAClC,CAAC;IACD,2DAAuB,GAAvB,UAAwB,KAAK;QACzB,IAAI,CAAC,oBAAoB,GAAG,EAAE,CAAC;QAC/B,IAAM,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC,kBAAkB,EAAE,CAAC;QAC1D,IAAI,CAAC,eAAe,IAAI,eAAe,CAAC,MAAM,KAAK,CAAC,EAAE;YAClD,OAAO;SACV;QACD,IAAM,UAAU,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC;QACtC,IAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,QAAQ,EAAE,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAC9E,IAAM,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,QAAQ,EAAE,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAC5E,IAAM,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC;QACzB,IAAM,WAAW,GAAG,CAAC,CAAC;QACtB,IAAI,GAAG,GAAG,CAAC,CAAC;QACZ,IAAI,UAAkB,CAAC;QACvB,IAAM,oBAAoB,GAAG,IAAI,CAAC,oBAAoB,CAAC;QACvD,UAAU,CAAC,OAAO,CAAC,OAAO,CAAC,UAAU,MAAW;YAC5C,GAAG,GAAG,CAAC,CAAC;YACR,KAAK,IAAI,QAAQ,GAAG,QAAQ,EAAE,QAAQ,IAAI,MAAM,EAAE,QAAQ,EAAE,EAAE;gBAC1D,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC;gBACtC,IAAM,QAAQ,GAAG,GAAG,CAAC,QAAQ,EAAE,CAAC;gBAChC,IAAM,OAAO,GAAG,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;gBAC1C,IAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;gBAC5C,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;oBAC3B,GAAG,IAAI,KAAK,CAAC;iBAChB;aACJ;YACD,oBAAoB,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,UAAU,EAAE,GAAG,OAAE,CAAC,CAAC;QACzD,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,oBAAoB,GAAG,oBAAoB,CAAC;IACrD,CAAC;IAED,kDAAc,GAAd;QACI,IAAI,CAAC,qBAAqB,GAAG,CAAC,IAAI,CAAC,qBAAqB,CAAC;QACzD,IAAI,CAAC,oBAAoB,GAAG,EAAE,CAAC;IACnC,CAAC;IACD,gDAAY,GAAZ;QACI,IAAI,CAAC,OAAO,CAAC,mBAAmB,EAAE,CAAC;QACnC,IAAI,CAAC,oBAAoB,GAAG,EAAE,CAAC;IACnC,CAAC;IACD,+CAAW,GAAX,UAAY,WAAmB;QAC3B,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC;IAClE,CAAC;IAED,4CAAQ,GAAR;QAAA,iBAeC;QAdG,IAAI,CAAC,uBAAuB,CAAC,yBAAyB,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;QACrF,cAAc;QACd,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;QACzD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,oCAAoC,CAAC,CAAC;QACnE;;WAEH;QACG,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,IAAI,CACnD,gEAAS,CAAgB,EAAE,CAAC,EAC5B,0DAAG,CAAC,UAAC,KAAK,IAAK,QAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAAhD,CAAgD,CAAC,EAChE,0DAAG,CAAC,UAAC,IAAI,IAAK,QAAC,IAAI,CAAC,CAAC,CAAC,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC,EAAlD,CAAkD,CAAC,CACpE,CAAC;QACF,UAAU;QACV,IAAI,CAAC,OAAO,EAAE,CAAC;IACnB,CAAC;IAED,+CAAW,GAAX;QACI,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACzB,CAAC;IAED;;OAEA;IACA,6CAAS,GAAT,UAAU,IAAW;QACjB,OAAO,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC;IACxC,CAAC;IAEO,2CAAO,GAAf,UAAgB,IAAY;QACxB,IAAM,WAAW,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QAEvC,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CACtB,UAAC,MAAM,IAAK,aAAM,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,WAAW,CAAC,KAAK,CAAC,EAApD,CAAoD,CACnE,CAAC;IACN,CAAC;IAED,mDAAe,GAAf;QACI,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC;YAClC,CAAC,CAAC,wBAAwB;YAC1B,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC;gBAC1B,CAAC,CAAC,mBAAmB;gBACrB,CAAC,CAAC,EAAE,CAAC;IACjB,CAAC;IACD;;OAEA;IACA,6CAAS,GAAT;QACI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACxC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC;SAC7C;IACL,CAAC;IACD,sDAAkB,GAAlB;QACI,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,UAAU,IAAS;YACnD,OAAO,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC;QAClC,CAAC,CAAC,CAAC;IACP,CAAC;IACD,sDAAkB,GAAlB;QACI,IAAI,IAAI,CAAC,WAAW,KAAK,IAAI,EAAE;YAC3B,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;SAC9B;aAAM;YACH,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,IAAS;gBACpD,OAAO,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC;YAClC,CAAC,CAAC,CAAC;SACN;IACL,CAAC;IACD,qDAAiB,GAAjB;QAAA,iBAaC;QAZG,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,0EAAe,EAAE;YAChD,KAAK,EAAE,OAAO;YACd,IAAI,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE;SACnD,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE;aAClB,IAAI,CACD,gEAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAC3B,CAAC,SAAS,CAAC,UAAC,MAAM;YACf,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,uBAAuB,CAAC,eAAe,CAAC,CAAC,CAAC;YAC3D,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACzB,CAAC,CAAC,CAAC;IACX,CAAC;IAED,8CAAU,GAAV;QACI,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,2FAAyB,EAAE;YAC1D,KAAK,EAAE,KAAK;SACf,CAAC,CAAC;IACP,CAAC;IAED,yBAAyB;IACzB,0DAAsB,GAAtB,UAAuB,KAAa;QAChC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;IAC/B,CAAC;IAED;;OAEG;IACH,2CAAO,GAAP;QACI,IAAI,CAAC,QAAQ,GAAG,YAAY,CAAC;QAC7B,IAAI,CAAC,OAAO,GAAG,kHAAO,CAAC,OAAO,CAAC;QAC/B,IAAI,CAAC,cAAc,GAAG;YAClB;gBACI,IAAI,EAAE,MAAM;gBACZ,IAAI,EAAE,YAAY;gBAClB,MAAM,EAAE,WAAW;gBACnB,QAAQ,EAAE,KAAK;gBACf,KAAK,EAAE,CAAC;aACX;YACD;gBACI,IAAI,EAAE,KAAK;gBACX,IAAI,EAAE,cAAc;gBACpB,MAAM,EAAE,aAAa;gBACrB,QAAQ,EAAE,KAAK;gBACf,KAAK,EAAE,CAAC;aACX;SACJ,CAAC;IACN,CAAC;IAED,sDAAkB,GAAlB,UAAmB,MAAc;QAC7B,QAAQ,MAAM,EAAE;YACZ,KAAK,aAAa,CAAC,CAAC;gBAChB,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;gBAC3B,MAAM;aACT;YACD,KAAK,WAAW,CAAC,CAAC;gBACd,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;gBACzB,MAAM;aACT;SACJ;IACL,CAAC;IAED,2DAAuB,GAAvB;QAAA,iBAmBC;QAlBG,IAAM,cAAc,GAA8B,EAAE,CAAC;QACrD,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,UAAC,MAAM;YAC3B,IAAI,MAAM,CAAC,KAAK,EAAE;gBACd,IAAM,iBAAiB,GAAW,MAAM,CAAC,KAAK,CAAC;gBAC/C,cAAc,CAAC,IAAI,CAAC,KAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,CAAC;aACrE;QACL,CAAC,CAAC,CAAC;QAEH,OAAO,qDAAkB,CAAC,cAAc,CAAC,CAAC,IAAI,CAC1C,0DAAG,CAAC,UAAC,MAAgB;YACjB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC7C,IAAI,KAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE;oBAC1B,IAAM,qBAAqB,GAAW,MAAM,CAAC,CAAC,CAAC,CAAC;oBAChD,KAAI,CAAC,OAAO,CAAC,YAAY,CAAC,KAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,UAAU,GAAG,qBAAqB,CAAC;iBAC1F;aACJ;YACD,OAAO,KAAI,CAAC,UAAU,CAAC;QAC3B,CAAC,CAAC,CAAC,CAAC;IACZ,CAAC;IAzSQ,yBAAyB;QALrC,+DAAS,CAAC;YACP,QAAQ,EAAE,0BAA0B;;;SAGvC,CAAC;yCASoB,+DAAU;YACR,2DAAS;YACL,+EAAa;YACR,oEAAgB;YACT,gGAAuB;YAC3B,oFAAuB;OAb9C,yBAAyB,CA0SrC;IAAD,gCAAC;CAAA;AA1SqC;;;;;;;;;;;;AC7BtC,oUAAoU,ma;;;;;;;;;;;;;;;;;;;;;;;;ACA1R;AAM1C;IAcI;QAbA,YAAO,GAAG;YACN,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE;YACjD,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE;YAC/C,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE;SACrD,CAAC;QAEF,eAAU,GAAG;YACT,EAAE,UAAU,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE;YACrC,EAAE,UAAU,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE;YACvC,EAAE,UAAU,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE;YACvC,EAAE,iBAAiB,EAAE,IAAI,EAAE;SAC9B,CAAC;IAEc,CAAC;IAdR,yBAAyB;QAJrC,+DAAS,CAAC;YACP,QAAQ,EAAE,0BAA0B;;SAEvC,CAAC;;OACW,yBAAyB,CAgBrC;IAAD,gCAAC;CAAA;AAhBqC;;;;;;;;;;;;ACNtC,wBAAwB,oCAAoC,GAAG,YAAY,8CAA8C,mCAAmC,wV;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA1G;AACgB;AAYlE;IAEI,yBACW,SAAwC,EACf,IAAgB;QADzC,cAAS,GAAT,SAAS,CAA+B;QACf,SAAI,GAAJ,IAAI,CAAY;QAHpD,SAAI,GAAG,KAAK,CAAC;IAG2C,CAAC;IAJhD,eAAe;QAN3B,+DAAS,CAAC;YACP,QAAQ,EAAE,wBAAwB;;;SAGrC,CAAC;QAMO,uEAAM,CAAC,iEAAe,CAAC;yCADN,8DAAY;OAHzB,eAAe,CAM3B;IAAD,sBAAC;CAAA;AAN2B;;;;;;;;;;;;ACb5B,+2Q;;;;;;;;;;;ACAA,wBAAwB,iBAAiB,EAAE,mBAAmB,oBAAoB,EAAE,wBAAwB,mEAAmE,EAAE,gBAAgB,cAAc,EAAE,iBAAiB,mBAAmB,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;ACArM;AAOlD;IAEI;IAAgB,CAAC;IAEjB,4CAAQ,GAAR;IACA,CAAC;IALQ,yBAAyB;QALrC,+DAAS,CAAC;YACP,QAAQ,EAAE,wBAAwB;;;SAGrC,CAAC;;OACW,yBAAyB,CAOrC;IAAD,gCAAC;CAAA;AAPqC;AAUtC,yCAAyC;AACzC,8BAA8B;AAC9B,6BAA6B;AAC7B,sGAAsG;AACtG,qBAAqB;AACrB,gCAAgC;AAChC,mCAAmC;AACnC,4CAA4C;AAC5C,oCAAoC;AACpC,iCAAiC;AACjC,iCAAiC;AACjC,sBAAsB;AACtB,wQAAwQ;AACxQ,uBAAuB;AACvB,2DAA2D;AAC3D,sFAAsF;AACtF,2FAA2F;AAC3F,oCAAoC;AACpC,kCAAkC;AAClC,sBAAsB;AACtB,aAAa;AACb,sGAAsG;AACtG,qBAAqB;AACrB,gCAAgC;AAChC,mCAAmC;AACnC,yCAAyC;AACzC,oCAAoC;AACpC,iCAAiC;AACjC,iCAAiC;AACjC,sBAAsB;AACtB,iPAAiP;AACjP,uBAAuB;AACvB,kCAAkC;AAClC,sBAAsB;AACtB,aAAa;AACb,sGAAsG;AACtG,qBAAqB;AACrB,gCAAgC;AAChC,mCAAmC;AACnC,wCAAwC;AACxC,oCAAoC;AACpC,iCAAiC;AACjC,iCAAiC;AACjC,sBAAsB;AACtB,wQAAwQ;AACxQ,uBAAuB;AACvB,2DAA2D;AAC3D,sFAAsF;AACtF,2FAA2F;AAC3F,oCAAoC;AACpC,kCAAkC;AAClC,sBAAsB;AACtB,aAAa;AACb,sGAAsG;AACtG,qBAAqB;AACrB,gCAAgC;AAChC,mCAAmC;AACnC,oCAAoC;AACpC,oCAAoC;AACpC,iCAAiC;AACjC,iCAAiC;AACjC,sBAAsB;AACtB,wQAAwQ;AACxQ,uBAAuB;AACvB,2DAA2D;AAC3D,sFAAsF;AACtF,2FAA2F;AAC3F,oCAAoC;AACpC,kCAAkC;AAClC,sBAAsB;AACtB,aAAa;AACb,SAAS;AACT,aAAa;AACb,sCAAsC;AACtC,kCAAkC;AAClC,kFAAkF;AAClF,2CAA2C;AAC3C,qBAAqB;AACrB,gCAAgC;AAChC,6BAA6B;AAC7B,iCAAiC;AACjC,iCAAiC;AACjC,uCAAuC;AACvC,kCAAkC;AAClC,sBAAsB;AACtB,aAAa;AACb,wBAAwB;AACxB,qBAAqB;AACrB,gCAAgC;AAChC,6BAA6B;AAC7B,iCAAiC;AACjC,iCAAiC;AACjC,uCAAuC;AACvC,kCAAkC;AAClC,sBAAsB;AACtB,aAAa;AACb,wBAAwB;AACxB,qBAAqB;AACrB,gCAAgC;AAChC,6BAA6B;AAC7B,iCAAiC;AACjC,iCAAiC;AACjC,uCAAuC;AACvC,kCAAkC;AAClC,sBAAsB;AACtB,aAAa;AACb,SAAS;AACT,aAAa","file":"hidden-hidden-module.js","sourcesContent":["module.exports = \"<div class=\\\"main-container ux-component-list\\\">\\r\\n    <div layout=\\\"row\\\" layout-fill>\\r\\n        <header color=\\\"accent\\\">\\r\\n            <div class=\\\"docs-header-section\\\">\\r\\n                <div class=\\\"docs-header-headline\\\">\\r\\n                    <h1> Background Process </h1>\\r\\n                </div>\\r\\n                <mat-card>\\r\\n                    <div>\\r\\n                        Filter options\\r\\n                    </div>\\r\\n                    <div fxLayout=\\\"row\\\"\\r\\n                         fxLayout.md=\\\"column\\\"\\r\\n                         fxLayoutAlign=\\\"space-around start\\\"\\r\\n                         class=\\\"top-section\\\">\\r\\n                        <!-- Left -->\\r\\n                        <div fxLayout=\\\"column\\\"\\r\\n                             fxLayoutAlign=\\\"start left\\\"\\r\\n                             fxFlex=\\\"40\\\">\\r\\n                            <mat-form-field>\\r\\n                                <input matInput [matDatepicker]=\\\"pickerDateBegin\\\"\\r\\n                                       placeholder=\\\"Choose a begining date\\\"\\r\\n                                       (dateInput)=\\\"addDateBegin('input', $event)\\\">\\r\\n                                <mat-datepicker-toggle matSuffix [for]=\\\"pickerDateBegin\\\"></mat-datepicker-toggle>\\r\\n                                <mat-datepicker #pickerDateBegin></mat-datepicker>\\r\\n                            </mat-form-field>\\r\\n                        </div>\\r\\n                        <!-- Right -->\\r\\n                        <div fxLayout=\\\"column\\\"\\r\\n                             fxLayoutAlign=\\\"start right\\\"\\r\\n                             fxFlex=\\\"40\\\">\\r\\n                            <mat-form-field>\\r\\n                                <input matInput [matDatepicker]=\\\"pickerDateEnd\\\"\\r\\n                                       placeholder=\\\"Choose an ending date\\\"\\r\\n                                       (dateInput)=\\\"addDateEnd('input', $event)\\\">\\r\\n                                <mat-datepicker-toggle matSuffix [for]=\\\"pickerDateEnd\\\"></mat-datepicker-toggle>\\r\\n                                <mat-datepicker #pickerDateEnd></mat-datepicker>\\r\\n                            </mat-form-field>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div fxLayout=\\\"row\\\"\\r\\n                         fxLayout.md=\\\"column\\\"\\r\\n                         fxLayoutAlign=\\\"space-around start\\\"\\r\\n                         class=\\\"top-section\\\">\\r\\n                        <!-- Left -->\\r\\n                        <div fxLayout=\\\"column\\\"\\r\\n                             fxLayoutAlign=\\\"start left\\\"\\r\\n                             fxFlex=\\\"40\\\">\\r\\n                            <mat-form-field color=\\\"accent\\\">\\r\\n                                <mat-select [multiple]=\\\"true\\\"\\r\\n                                            placeholder=\\\"Choose the process name for filtering\\\"\\r\\n                                            [formControl]=\\\"formCtrlName\\\">\\r\\n                                    <mat-option *ngFor=\\\"let name of allProcessName\\\"\\r\\n                                                [value]=\\\"name\\\">\\r\\n                                        <span style=\\\"color:black\\\">{{ name }}</span>\\r\\n                                    </mat-option>\\r\\n                                </mat-select>\\r\\n                            </mat-form-field>\\r\\n                        </div>\\r\\n                        <!-- Right -->\\r\\n                        <div fxLayout=\\\"column\\\"\\r\\n                             fxLayoutAlign=\\\"start right\\\"\\r\\n                             fxFlex=\\\"40\\\">\\r\\n                            <mat-form-field color=\\\"accent\\\" *ngIf=\\\"loadingStatus\\\">\\r\\n                                <mat-select [multiple]=\\\"true\\\"\\r\\n                                            placeholder=\\\"Choose the status for filtering\\\"\\r\\n                                            [formControl]=\\\"formCtrlStatus\\\">\\r\\n                                    <mat-option *ngFor=\\\"let option of allStatus\\\"\\r\\n                                                [value]=\\\"option\\\">\\r\\n                                        <span style=\\\"color:black\\\">{{ option.enumEntityValue }}</span>\\r\\n                                    </mat-option>\\r\\n                                </mat-select>\\r\\n                            </mat-form-field>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </mat-card>             \\r\\n                <button mat-button (click)=\\\"onFilterButtonClicked()\\\" style=\\\"left:1030px\\\">\\r\\n                        Apply Filter\\r\\n                </button>\\r\\n                <div ag-grid=\\\"displayErrorMessage\\\" class=\\\"ag-theme-material pointer-cursor\\\" *ngIf=\\\"isFiltered\\\">\\r\\n                    <ag-grid-angular class=\\\"ag-theme-material\\\"\\r\\n                                         [rowData]=\\\"processMessageGridRows\\\"\\r\\n                                         [columnDefs]=\\\"processMessageGridColumns\\\"\\r\\n                                         domLayout=autoHeight\\r\\n                                         [pagination]=\\\"true\\\"\\r\\n                                         [paginationPageSize]=\\\"10\\\"\\r\\n                                         [enableSorting]=\\\"true\\\"\\r\\n                                         [enableColResize]=\\\"true\\\"\\r\\n                                         [context]=\\\"gridContext\\\"\\r\\n                                         enableFilter\\r\\n                                         [rowHeight]=\\\"atlasAgGridParam.rowHeight\\\">\\r\\n                    </ag-grid-angular>\\r\\n                </div>\\r\\n            </div>\\r\\n        </header>\\r\\n    </div>\\r\\n</div>\\r\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { HttpBaseService } from '../../../shared/services/http-services/http-base.service';\r\nimport { ProcessMessage } from '../../entities/process-message.entity';\r\nimport { MasterdataService } from '../../../shared/services/http-services/masterdata.service';\r\nimport { PreaccountingService } from '../../../shared/services/http-services/preaccounting.service';\r\nimport { AgGridService } from '../../../shared/services/ag-grid.service';\r\nimport { AtlasAgGridParam } from '../../../shared/entities/atlas-ag-grid-param.entity';\r\nimport { MatDatepickerInputEvent } from '@angular/material/datepicker';\r\nimport { MasterDataProps } from '../../../shared/entities/masterdata-props.entity';\r\nimport { MasterData } from '../../../shared/entities/masterdata.entity';\r\nimport { ProcessStatus } from '../../../shared/entities/process-status.entity';\r\nimport { FormControl } from '@angular/forms';\r\nimport { AgContextualMenuAction } from '../../../shared/entities/ag-contextual-menu-action.entity';\r\nimport { AgContextualMenuComponent } from '../../../shared/components/ag-contextual-menu/ag-contextual-menu.component';\r\nimport { UserListItemViewModel } from '../../../shared/models/user-list-item-view-model';\r\nimport { SnackbarService } from '../../../shared/services/snackbar.service';\r\n\r\n@Component({\r\n    selector: 'atlas-background-interface-errors',\r\n    templateUrl: './background-interface-errors.component.html',\r\n    styleUrls: ['./background-interface-errors.component.scss']\r\n})\r\nexport class BackgroundInterfaceErrorsComponent extends HttpBaseService implements OnInit {\r\n\r\n    private readonly accountingDocumentsControllerUrl = 'AccountingDocuments';\r\n\r\n    userGridContextualMenuActions: AgContextualMenuAction[];\r\n    userMenuActions: { [key: string]: string } = {\r\n        launchRetry: 'retry',\r\n    };\r\n\r\n    processMessageGridRows: ProcessMessage[];\r\n    processMessageGridColumns: any;\r\n    atlasAgGridParam: AtlasAgGridParam;\r\n\r\n    dateBegin: Date = new Date();\r\n    dateEnd: Date = new Date();\r\n\r\n    formCtrlName: FormControl = new FormControl();\r\n    allProcessName: string[];\r\n\r\n    formCtrlStatus: FormControl = new FormControl();\r\n    status: ProcessStatus;\r\n    loadingStatus: boolean = false;\r\n    allStatus: ProcessStatus[] = [];\r\n\r\n    masterData: MasterData = new MasterData();\r\n\r\n    isFiltered: boolean = false;\r\n\r\n    selectedProcessName: string[]\r\n    userName: string;\r\n    statusList: number[];\r\n\r\n    constructor(protected http: HttpClient, private snackbarService: SnackbarService, private preaccountingService: PreaccountingService, private masterdataService: MasterdataService, public gridService: AgGridService) {\r\n        super(http);\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.atlasAgGridParam = this.gridService.getAgGridParam();\r\n        this.userGridContextualMenuActions = [\r\n            {\r\n                icon: 'settings_backup_restore',\r\n                text: 'Launch Retry',\r\n                action: this.userMenuActions.launchRetry,\r\n            },\r\n        ];\r\n        this.processMessageGridColumns = [\r\n            { headerName: 'Name', field: 'name' },\r\n            { headerName: 'Content', field: 'content' },\r\n            { headerName: 'CreatedDateTime', field: 'createdDateTime' },\r\n            { headerName: 'Status', field: 'status' },\r\n            { headerName: 'Retry', field: 'retry' },\r\n            {\r\n                headerName: '',\r\n                cellRendererFramework: AgContextualMenuComponent,\r\n                cellRendererParams: {\r\n                    context: {\r\n                        componentParent: this,\r\n                    },\r\n                    menuActions: this.userGridContextualMenuActions,\r\n\r\n                },\r\n            },\r\n            { headerName: 'Error', field: 'error' }\r\n        ];\r\n        this.initFilterName();\r\n        this.initFilterStatus();\r\n        this.dateBegin.setFullYear(1, 1, 1);\r\n        this.dateEnd.setFullYear(9000, 12, 12);\r\n    }\r\n\r\n    handleAction(action: string, message: ProcessMessage) {\r\n        switch (action) {\r\n            case this.userMenuActions.launchRetry:\r\n                if (message) {\r\n                    if (message.messageId) {\r\n                        console.log(message);\r\n                        this.preaccountingService.updateProcessRetry(message.messageId).subscribe(() => {\r\n                            this.snackbarService.informationSnackBar('Process has been reset successfully.');\r\n                            this.loadData();\r\n                        });\r\n                }\r\n                }\r\n                break;\r\n            default: // throw Action not recognized exception\r\n                break;\r\n        }\r\n    }\r\n\r\n    initFilterName() {\r\n        this.allProcessName = [\r\n            'AtlasPostingProcessor',\r\n            'AtlasAuditProcessor',\r\n            'AtlasPaymentRequestInterfaceProcessor',\r\n            'AtlasAccountingDocumentProcessor',\r\n            'AtlasAccountingInterfaceProcessor',\r\n            'AtlasRecalculationProcessor'];\r\n        this.formCtrlName.patchValue([]);\r\n    }\r\n\r\n    initFilterStatus() {\r\n        this.masterdataService.getMasterData([MasterDataProps.ProcessStatuses]).subscribe((masterData: MasterData) => {\r\n            this.allStatus = masterData.processStatuses;\r\n            this.loadingStatus = true;\r\n        });\r\n    }\r\n\r\n    onFilterButtonClicked() {\r\n        this.isFiltered = true;\r\n        this.loadData();\r\n    }\r\n\r\n    addDateEnd(type: string, event: MatDatepickerInputEvent<Date>) {\r\n        this.dateEnd = event.value;\r\n    }\r\n\r\n    addDateBegin(type: string, event: MatDatepickerInputEvent<Date>) {\r\n        this.dateBegin = event.value;\r\n    }\r\n\r\n    loadData() {\r\n        if (!this.formCtrlStatus.value) {\r\n            this.statusList = this.allStatus.map((option) => option.enumEntityId);\r\n        } else {\r\n            this.statusList = this.formCtrlStatus.value.map((option) => option.enumEntityId);\r\n        }\r\n        if (!this.formCtrlName.value || this.formCtrlName.value.length ==0){\r\n            this.selectedProcessName = this.allProcessName;\r\n        } else {\r\n            this.selectedProcessName = this.formCtrlName.value;\r\n        }\r\n\r\n        this.preaccountingService.getErrorMessages(this.selectedProcessName, this.statusList, this.dateBegin, this.dateEnd, this.userName).subscribe((data) => {\r\n            if (data) {\r\n                this.processMessageGridRows = data;\r\n            }\r\n        });\r\n    }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\r\nimport { DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from '@angular/material';\r\nimport { MomentDateAdapter } from '@angular/material-moment-adapter';\r\nimport { AgGridModule } from 'ag-grid-angular';\r\nimport { MaterialModule } from '../shared/material.module';\r\nimport { ATLAS_DATE_FORMATS, SharedModule } from '../shared/shared.module';\r\nimport { BackgroundInterfaceErrorsComponent } from './components/background-interface-errors/background-interface-errors.component';\r\nimport { HiddenRoutingModule } from './hidden.route';\r\nimport { CustomFormInputsComponent } from './ux-components/custom-form-inputs/custom-form-inputs.component';\r\nimport { UxComponentsListComponent } from './ux-components/ux-components-list/ux-components-list.component';\r\nimport { ListSearchDialogComponent } from './ux-components/ux-components-list/ux-dialog-list-search.component';\r\nimport { DialogComponent } from './ux-components/ux-components-list/ux-dialog-text.component';\r\nimport { UxLayoutTemplateComponent } from './ux-components/ux-layout-template/ux-layout-template.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        MaterialModule,\r\n        SharedModule,\r\n        AgGridModule.withComponents([]),\r\n        HiddenRoutingModule,\r\n        HttpClientModule,\r\n\r\n    ],\r\n    declarations: [\r\n        UxComponentsListComponent,\r\n        UxLayoutTemplateComponent,\r\n        DialogComponent,\r\n        CustomFormInputsComponent,\r\n        ListSearchDialogComponent,\r\n        BackgroundInterfaceErrorsComponent,\r\n    ],\r\n    entryComponents: [DialogComponent, ListSearchDialogComponent],\r\n    providers: [\r\n        { provide: MAT_DATE_LOCALE, useValue: 'en' },\r\n        { provide: DateAdapter, useClass: MomentDateAdapter },\r\n        { provide: MAT_DATE_FORMATS, useValue: ATLAS_DATE_FORMATS },\r\n    ],\r\n    schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n})\r\nexport class HiddenModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { SecurityGuard } from '../shared/guards/security.guard';\r\nimport { CustomFormInputsComponent } from './ux-components/custom-form-inputs/custom-form-inputs.component';\r\nimport { UxComponentsListComponent } from './ux-components/ux-components-list/ux-components-list.component';\r\nimport { UxLayoutTemplateComponent } from './ux-components/ux-layout-template/ux-layout-template.component';\r\nimport { BackgroundInterfaceErrorsComponent } from './components/background-interface-errors/background-interface-errors.component';\r\n\r\nexport const routes: Routes = [\r\n\t{\r\n\t\tpath: 'ux/components-list', pathMatch: 'full',\r\n\t\tcanActivate: [SecurityGuard],\r\n\t\tcomponent: UxComponentsListComponent,\r\n\t},\r\n\t{\r\n\t\tpath: 'ux/layout-template', pathMatch: 'full',\r\n\t\tcanActivate: [SecurityGuard],\r\n\t\tcomponent: UxLayoutTemplateComponent,\r\n\t},\r\n\t{\r\n\t\tpath: 'ux/custom-form-inputs', pathMatch: 'full',\r\n\t\tcanActivate: [SecurityGuard],\r\n\t\tcomponent: CustomFormInputsComponent,\r\n    },\r\n    {\r\n        path: 'background-interface-error', pathMatch: 'full',\r\n        canActivate: [SecurityGuard],\r\n        component: BackgroundInterfaceErrorsComponent,\r\n    },\r\n\r\n];\r\n\r\n@NgModule({\r\n\timports: [RouterModule.forChild(routes)],\r\n\texports: [RouterModule],\r\n})\r\nexport class HiddenRoutingModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport * as agGrid from 'ag-grid-community';\r\nimport { RowSelectionButton } from '../shared/components/row-selection-button/row-selection-button.component';\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class MockDataProviderService {\r\n    columnDefs: agGrid.ColDef[] = [\r\n        {\r\n            headerName: 'Make',\r\n            field: 'make',\r\n            checkboxSelection: true,\r\n            headerCheckboxSelection: true,\r\n            suppressMovable: true,\r\n            colId: 'make',\r\n            hide: false,\r\n        },\r\n        {\r\n            headerName: 'Model',\r\n            field: 'model',\r\n            suppressMovable: true,\r\n            colId: 'model',\r\n            hide: false,\r\n        },\r\n        {\r\n            headerName: 'Price',\r\n            field: 'price',\r\n            suppressMovable: true,\r\n            colId: 'price',\r\n            hide: false,\r\n        },\r\n        {\r\n            headerName: '',\r\n            cellRendererFramework: RowSelectionButton,\r\n            cellRendererParams: {\r\n                context: {\r\n                    componentParent: this,\r\n                },\r\n            },\r\n            maxWidth: 80,\r\n            hide: false,\r\n        },\r\n    ];\r\n\r\n    constructor() { }\r\n\r\n    getColumnDef(): agGrid.ColDef[] {\r\n        return this.columnDefs;\r\n    }\r\n}\r\n","module.exports = \"<mat-card class=\\\"margin-12\\\">\\r\\n    <h2>Custom input components</h2>\\r\\n</mat-card>\\r\\n\\r\\n<form [formGroup]=\\\"componentsFormTest\\\">\\r\\n\\r\\n    <!-- INPUT -->\\r\\n    <mat-card class=\\\"margin-12\\\">\\r\\n        <h3>Input Component</h3>\\r\\n        <!-- Input settings -->\\r\\n        <mat-form-field class=\\\"medium-field\\\">\\r\\n            <input [formControl]=\\\"inputControl\\\"\\r\\n                   matInput>\\r\\n            <mat-placeholder>Set value</mat-placeholder>\\r\\n        </mat-form-field>\\r\\n        <mat-form-field class=\\\"medium-field\\\">\\r\\n            <input [formControl]=\\\"inputLabel\\\"\\r\\n                   matInput>\\r\\n            <mat-placeholder>Set label</mat-placeholder>\\r\\n        </mat-form-field>\\r\\n        <mat-checkbox #inputCheck\\r\\n                      [checked]=\\\"isInputChecked\\\"\\r\\n                      (change)=\\\"changeInputToRequired($event)\\\">Required\\r\\n        </mat-checkbox>\\r\\n        <mat-checkbox #inputWarningCheck\\r\\n                      (change)=\\\"changeInputToWarning($event)\\\">Warning\\r\\n        </mat-checkbox>\\r\\n        <div style=\\\"margin:20px; text-align:right\\\">\\r\\n            <span class=\\\"fill-space\\\"></span>\\r\\n            <button mat-raised-button\\r\\n                    (click)=\\\"changeModeInput()\\\">{{inputMode}}</button>\\r\\n        </div>\\r\\n        <div class=\\\"custom-line-footer\\\"></div>\\r\\n        <br>\\r\\n        <!-- Custom Input component -->\\r\\n        <atlas-form-input [fieldControl]=\\\"inputControl\\\"\\r\\n                          [isEditable]=\\\"isInputEditable\\\"\\r\\n                          [label]=\\\"inputLabel.value\\\"\\r\\n                          [errorMap]=\\\"inputErrorMap \\\"\\r\\n                          [hint]=\\\"customHint\\\"\\r\\n                          [hasWarning]=\\\"isInputWarning\\\"\\r\\n                          [warningMessage]=\\\"'This is a warning !'\\\">\\r\\n        </atlas-form-input>\\r\\n    </mat-card>\\r\\n\\r\\n\\r\\n    <!-- TOGGLE BUTTONS -->\\r\\n    <mat-card class=\\\"margin-12\\\">\\r\\n        <!--Toggle settings -->\\r\\n        <h3>Toggle Component</h3>\\r\\n        <mat-form-field class=\\\"medium-field\\\">\\r\\n            <input [formControl]=\\\"inputLabelForGroup\\\"\\r\\n                   matInput>\\r\\n            <mat-placeholder>Group Label</mat-placeholder>\\r\\n        </mat-form-field>\\r\\n        <mat-form-field class=\\\"medium-field\\\">\\r\\n            <input [formControl]=\\\"inputLabelForButton\\\"\\r\\n                   matInput>\\r\\n            <mat-placeholder>New button label</mat-placeholder>\\r\\n        </mat-form-field>\\r\\n        <button mat-button\\r\\n                (click)=\\\"addToggleButton($event)\\\">Add button</button>\\r\\n\\r\\n        <div style=\\\"margin:20px; text-align:right\\\">\\r\\n            <span class=\\\"fill-space\\\"></span>\\r\\n            <button mat-raised-button\\r\\n                    (click)=\\\"changeModeToggle()\\\">{{toggleMode}}</button>\\r\\n        </div>\\r\\n        <div class=\\\"custom-line-footer\\\"></div>\\r\\n        <br>\\r\\n        <!-- Custom Toggle component -->\\r\\n        <atlas-form-toggle [fieldControl]=\\\"toggleControl\\\"\\r\\n                           [label]=\\\"inputLabelForGroup.value\\\"\\r\\n                           [isEditable]=\\\"isToggleEditable\\\"\\r\\n                           [valueLabelMap]=\\\"valueLabelForButtons\\\">\\r\\n        </atlas-form-toggle>\\r\\n    </mat-card>\\r\\n\\r\\n\\r\\n    <!-- DATE PICKER -->\\r\\n    <mat-card class=\\\"margin-12\\\">\\r\\n        <h3>Date Picker Component</h3>\\r\\n        <!--Date picker settings -->\\r\\n        <mat-form-field class=\\\"medium-field\\\">\\r\\n            <input [formControl]=\\\"dateLabel\\\"\\r\\n                   matInput>\\r\\n            <mat-placeholder>Set label</mat-placeholder>\\r\\n        </mat-form-field>\\r\\n        <mat-form-field class=\\\"medium-field\\\">\\r\\n            <input matInput\\r\\n                   [matDatepicker]=\\\"picker\\\"\\r\\n                   autocomplete=\\\"off\\\"\\r\\n                   [formControl]=\\\"dateControl\\\">\\r\\n            <mat-placeholder>Set date</mat-placeholder>\\r\\n            <mat-datepicker-toggle matSuffix\\r\\n                                   [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n            <mat-datepicker #picker></mat-datepicker>\\r\\n        </mat-form-field>\\r\\n        <mat-checkbox #dateCheck\\r\\n                      [checked]=\\\"isDateChecked\\\"\\r\\n                      (change)=\\\"changeDatePickerToRequired($event)\\\">Required\\r\\n        </mat-checkbox>\\r\\n        <div style=\\\"margin:20px; text-align:right\\\">\\r\\n            <span class=\\\"fill-space\\\"></span>\\r\\n            <button mat-raised-button\\r\\n                    (click)=\\\"changeModeDate()\\\">{{dateMode}}</button>\\r\\n        </div>\\r\\n        <div class=\\\"custom-line-footer\\\"></div>\\r\\n        <br>\\r\\n        <!-- Custom Date Picker component -->\\r\\n        <atlas-date-picker [isEditable]=\\\"isDateEditable\\\"\\r\\n                           [label]=\\\"dateLabel.value\\\"\\r\\n                           [fieldControl]=\\\"dateControl\\\"\\r\\n                           [errorMap]=\\\"dateErrorMap\\\">\\r\\n        </atlas-date-picker>\\r\\n    </mat-card>\\r\\n\\r\\n\\r\\n    <!-- SELECT AUTOCOMPLETE -->\\r\\n    <mat-card class=\\\"margin-12\\\">\\r\\n        <h3>Select Autocomplete Component</h3>\\r\\n        <!-- Select/Autocomplete settings -->\\r\\n        Change mode: <button mat-button\\r\\n                (click)=\\\"changeModeAutocompleteDropdown()\\\">\\r\\n            {{autocompleteDropdownMode}}\\r\\n        </button><br>\\r\\n        <mat-form-field class=\\\"medium-field\\\">\\r\\n            <input [formControl]=\\\"selectLabel\\\"\\r\\n                   matInput>\\r\\n            <mat-placeholder>Set label</mat-placeholder>\\r\\n        </mat-form-field>\\r\\n        <mat-checkbox #selectCheck\\r\\n                      [checked]=\\\"isSelectChecked\\\"\\r\\n                      (change)=\\\"changeSelectToRequired($event)\\\">Required\\r\\n        </mat-checkbox>\\r\\n        <div style=\\\"margin:20px; text-align:right\\\">\\r\\n            <span class=\\\"fill-space\\\"></span>\\r\\n            <button mat-raised-button\\r\\n                    (click)=\\\"changeModeSelect()\\\">{{selectMode}}</button>\\r\\n        </div>\\r\\n        <div class=\\\"custom-line-footer\\\"></div>\\r\\n        <br>\\r\\n        <!-- List select custom component -->\\r\\n        <atlas-dropdown-select [isEditable]=\\\"isSelectEditable\\\"\\r\\n                               [label]=\\\"selectLabel.value\\\"\\r\\n                               [fieldControl]=\\\"selectControl\\\"\\r\\n                               [options]=\\\"selectOptions\\\"\\r\\n                               [displayProperty]=\\\"displayProperty\\\"\\r\\n                               [selectProperties]=\\\"selectProperties\\\"\\r\\n                               [isAutocompleteActivated]=\\\"isAutocompleteActivated\\\"\\r\\n                               [errorMap]=\\\"selectErrorMap\\\"\\r\\n                               [hint]=\\\"customHint\\\">\\r\\n        </atlas-dropdown-select>\\r\\n    </mat-card>\\r\\n\\r\\n    <!-- MASTERDATA AUTOCOMPLETE + CONTEXTUAL SEARCH -->\\r\\n    <mat-card class=\\\"margin-12\\\">\\r\\n        <h3>Masterdata Autocomplete with Contextual Search Component</h3>\\r\\n\\r\\n        <atlas-masterdata-input isEditable=\\\"true\\\"\\r\\n                                [fieldControl]=\\\"masterdataControl\\\"\\r\\n                                [options]=\\\"filteredMasterdata\\\"\\r\\n                                label=\\\"Vessel\\\"\\r\\n                                displayProperty=\\\"vesselName\\\"\\r\\n                                [selectProperties]=\\\"['vesselName', 'description']\\\"\\r\\n                                [errorMap]=\\\"vesselErrorMap\\\"\\r\\n                                lightBoxTitle=\\\"Results for vessels\\\"\\r\\n                                gridId=\\\"charterVesselGrid\\\">\\r\\n        </atlas-masterdata-input>\\r\\n    </mat-card>\\r\\n\\r\\n    <div>\\r\\n        <div class=\\\"custom-line-footer\\\"></div>\\r\\n        <div style=\\\"margin:20px; text-align:right\\\">\\r\\n            <span class=\\\"fill-space\\\"></span>\\r\\n            <button type=\\\"submit\\\"\\r\\n                    mat-raised-button\\r\\n                    color=\\\"accent\\\"\\r\\n                    [disabled]=\\\"!componentsFormTest.valid\\\">VALIDATED</button>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { CompanyManagerService } from '../../../core/services/company-manager.service';\r\nimport { FixType } from '../../../shared/entities/fix-type.entity';\r\nimport { Vessel } from '../../../shared/entities/vessel.entity';\r\nimport { UtilService } from '../../../shared/services/util.service';\r\nimport { isBeforeDate } from '../../../shared/validators/date-validators.validator';\r\n\r\n@Component({\r\n    selector: 'atlas-test',\r\n    templateUrl: './custom-form-inputs.component.html',\r\n    styleUrls: ['./custom-form-inputs.component.scss'],\r\n})\r\nexport class CustomFormInputsComponent implements OnInit {\r\n    componentsFormTest: FormGroup;\r\n\r\n    // Input\r\n    isInputEditable: boolean = true;\r\n    inputMode: string = 'Edit mode';\r\n    inputControl: FormControl = new FormControl('', [\r\n        Validators.minLength(5),\r\n        Validators.email,\r\n    ]); // Validators.required,\r\n    inputErrorMap: Map<string, string> = new Map();\r\n    customHint: string = 'This is a hint';\r\n    inputLabel: FormControl = new FormControl('');\r\n    isInputChecked: boolean;\r\n    isInputWarning: boolean;\r\n\r\n    // Toggle\r\n    isToggleEditable: boolean = true;\r\n    toggleMode: string = 'Edit mode';\r\n    inputLabelForGroup: FormControl = new FormControl('Buttons');\r\n    inputLabelForButton: FormControl = new FormControl('');\r\n    toggleControl: FormControl = new FormControl('first value', [\r\n        Validators.required,\r\n    ]);\r\n    valueLabelForButtons: Map<any, string> = new Map();\r\n\r\n    // Date picker\r\n    isDateEditable: boolean = true;\r\n    dateMode: string = 'Edit mode';\r\n    dateLabel: FormControl = new FormControl('');\r\n    dateControl: FormControl = new FormControl({ value: '', disabled: false }, [\r\n        Validators.required,\r\n        isBeforeDate(this.companyManager.getCurrentCompanyDate()),\r\n    ]);\r\n    dateErrorMap: Map<string, string> = new Map();\r\n    vesselErrorMap: Map<string, string> = new Map();\r\n    isDateChecked: boolean;\r\n\r\n    // Select\r\n    isSelectEditable: boolean = true;\r\n    selectMode: string = 'Edit mode';\r\n    autocompleteDropdownMode: string = 'Autocomplete mode';\r\n    selectLabel: FormControl = new FormControl('');\r\n    selectControl: FormControl = new FormControl('', [Validators.required]); // dropdown: use inDropdownListValidator()  //[Validators.required]\r\n    masterdataControl: FormControl = new FormControl('');\r\n    selectOptions: FixType[];\r\n    options: FixType[] = [];\r\n    masterdataOptions: Vessel[] = [];\r\n    filteredMasterdata: Vessel[];\r\n    isAutocompleteActivated: boolean = true;\r\n    selectErrorMap: Map<string, string> = new Map();\r\n    isSelectChecked: boolean;\r\n    displayProperty: string = 'code';\r\n    selectProperties: string[] = ['code', 'description'];\r\n\r\n    constructor(\r\n        private formBuilder: FormBuilder,\r\n        private utilService: UtilService,\r\n        protected companyManager: CompanyManagerService,\r\n    ) {\r\n        this.inputErrorMap\r\n            .set('required', 'Required *')\r\n            .set(\r\n                'minlength',\r\n                'Input length should be at least 5 character long',\r\n            )\r\n            .set('email', 'Not a valid email');\r\n        this.dateErrorMap\r\n            .set('required', 'Required *')\r\n            .set('isDateValid', 'The date cannot be in the future')\r\n            .set(\r\n                'minlength',\r\n                'Input length should be at least 5 character long',\r\n            );\r\n        this.selectErrorMap\r\n            .set('isDateValid', 'This date is invalid')\r\n            .set('required', 'Required *');\r\n\r\n        this.vesselErrorMap\r\n            .set('required', 'Required *')\r\n            .set('inDropdownList', 'Value not is list');\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.initializeForm();\r\n        this.listenToChanges();\r\n    }\r\n\r\n    initializeForm() {\r\n        this.componentsFormTest = this.formBuilder.group({\r\n            inputControl: this.inputControl,\r\n            toggleControl: this.toggleControl,\r\n            dateControl: this.dateControl,\r\n            selectControl: this.selectControl,\r\n            masterdataControl: this.masterdataControl,\r\n        });\r\n\r\n        this.options = new Array<FixType>(\r\n            { code: '01', description: 'Rice' },\r\n            { code: '02', description: 'Grains' },\r\n            { code: '03', description: 'Coffee' },\r\n        );\r\n\r\n        this.masterdataOptions = new Array<Vessel>(\r\n            { vesselId: 1, vesselName: 'Toyota', description: 'Celica', flag: 1, built: '12', imo: '9161510', displayName: '12' },\r\n            { vesselId: 1, vesselName: 'Ford', description: 'Mondeo', flag: 2, built: '13', imo: '8974192', displayName: '13' },\r\n            { vesselId: 1, vesselName: 'Porsche', description: 'Boxter', flag: 3, built: '14', imo: '8502200', displayName: '14' },\r\n        );\r\n        this.filteredMasterdata = this.masterdataOptions;\r\n\r\n        // Initialize two toggle buttons\r\n        this.valueLabelForButtons.set('first value', 'first label');\r\n        this.valueLabelForButtons.set('second value', 'second label');\r\n        this.isInputChecked =\r\n            this.inputControl.errors && this.inputControl.errors.required;\r\n        this.isDateChecked =\r\n            this.dateControl.errors && this.dateControl.errors.required;\r\n        this.isSelectChecked =\r\n            this.selectControl.errors && this.selectControl.errors.required;\r\n    }\r\n\r\n    listenToChanges() {\r\n        this.selectControl.valueChanges\r\n            .pipe(\r\n                startWith(null),\r\n                map((input) => {\r\n                    if (\r\n                        this.isAutocompleteActivated === true &&\r\n                        input &&\r\n                        !this.isInstanceOf(input)\r\n                    ) {\r\n                        return this.utilService.filterCollectionByMultipleValues(\r\n                            this.options,\r\n                            { code: input, description: input },\r\n                        );\r\n                    } else {\r\n                        return this.options;\r\n                    }\r\n                }),\r\n            ).subscribe((value) => this.selectOptions = value);\r\n\r\n        this.masterdataControl.valueChanges\r\n            .subscribe((input) => {\r\n                this.filteredMasterdata = this.utilService.filterListforAutocomplete(\r\n                    input,\r\n                    this.masterdataOptions,\r\n                    ['vesselCode', 'description']);\r\n            });\r\n    }\r\n\r\n    getFilteredOptions(input: string): FixType[] {\r\n        const options = this.options.filter((item) => {\r\n            return (\r\n                item.code.toLowerCase().startsWith(input.toLowerCase()) ||\r\n                item.code.toLowerCase().startsWith(input.toLowerCase())\r\n            );\r\n        });\r\n        return options;\r\n    }\r\n\r\n    isInstanceOf(obj: FixType): obj is FixType {\r\n        // tslint:disable-next-line:no-angle-bracket-type-assertion\r\n        return (<FixType>obj).code !== undefined;\r\n    }\r\n\r\n    changeModeInput() {\r\n        this.isInputEditable = !this.isInputEditable;\r\n        this.inputMode = this.isInputEditable ? 'Edit mode' : 'Display mode';\r\n    }\r\n\r\n    changeInputToRequired(event) {\r\n        const value = event.checked;\r\n        if (value) {\r\n            this.inputControl.setValidators([\r\n                Validators.required,\r\n                Validators.minLength(5),\r\n                Validators.email,\r\n            ]);\r\n        } else {\r\n            this.inputControl.setValidators([\r\n                Validators.minLength(5),\r\n                Validators.email,\r\n            ]);\r\n        }\r\n\r\n        this.inputControl.updateValueAndValidity();\r\n    }\r\n\r\n    changeModeToggle() {\r\n        this.isToggleEditable = !this.isToggleEditable;\r\n        this.toggleMode = this.isToggleEditable ? 'Edit mode' : 'Display mode';\r\n    }\r\n\r\n    addToggleButton(event) {\r\n        this.valueLabelForButtons.set(\r\n            this.inputLabelForButton.value,\r\n            this.inputLabelForButton.value,\r\n        );\r\n        this.inputLabelForButton.setValue('');\r\n    }\r\n\r\n    changeModeDate() {\r\n        this.isDateEditable = !this.isDateEditable;\r\n        this.dateMode = this.isDateEditable ? 'Edit mode' : 'Display mode';\r\n    }\r\n\r\n    changeDatePickerToRequired(event) {\r\n        const value = event.checked;\r\n        if (value) {\r\n            this.dateControl.setValidators([\r\n                Validators.required,\r\n                isBeforeDate(this.companyManager.getCurrentCompanyDate()),\r\n            ]);\r\n        } else {\r\n            this.dateControl.setValidators([isBeforeDate(this.companyManager.getCurrentCompanyDate())]);\r\n        }\r\n        this.dateControl.updateValueAndValidity();\r\n    }\r\n\r\n    changeModeSelect() {\r\n        this.isSelectEditable = !this.isSelectEditable;\r\n        this.selectMode = this.isSelectEditable ? 'Edit mode' : 'Display mode';\r\n    }\r\n\r\n    changeModeAutocompleteDropdown() {\r\n        this.isAutocompleteActivated = !this.isAutocompleteActivated;\r\n        if (this.isAutocompleteActivated) {\r\n            this.autocompleteDropdownMode = 'Autocomplete mode';\r\n        } else {\r\n            this.autocompleteDropdownMode = 'Dropdown mode';\r\n        }\r\n    }\r\n\r\n    changeSelectToRequired(event) {\r\n        const value = event.checked;\r\n        if (value) {\r\n            this.selectControl.setValidators([Validators.required]);\r\n        } else {\r\n            this.selectControl.clearValidators();\r\n        }\r\n        this.selectControl.updateValueAndValidity();\r\n    }\r\n\r\n    updateSelectFieldControl(value) {\r\n        this.selectControl.setValue(value);\r\n    }\r\n\r\n    changeInputToWarning(event) {\r\n        this.isInputWarning = event.checked ? true : false;\r\n    }\r\n}\r\n","module.exports = \"<div class=\\\"screenfullwidth\\\">\\r\\n    <div class=\\\"main-container ux-component-list\\\">\\r\\n        <div layout=\\\"row\\\"\\r\\n             layout-fill>\\r\\n            <header color=\\\"accent\\\">\\r\\n                <div class=\\\"docs-header-section\\\">\\r\\n                    <div class=\\\"docs-header-headline\\\">\\r\\n                        <select #languageSelection\\r\\n                                (change)=\\\"translateService.use(languageSelection.value)\\\">\\r\\n                            <option *ngFor=\\\"let language of translateService.getLangs()\\\"\\r\\n                                    [value]=\\\"language\\\"\\r\\n                                    [selected]=\\\"language === translateService.currentLang\\\">\\r\\n                                {{ language }}\\r\\n                            </option>\\r\\n                        </select>\\r\\n\\r\\n                        <h1>{{'TITLE_PAGE'|translate}}</h1>\\r\\n                    </div>\\r\\n\\r\\n                    <div fxLayout=\\\"row\\\"\\r\\n                         fxLayoutAlign=\\\" none\\\">\\r\\n                        <mat-form-field flex=\\\"50\\\">\\r\\n                            <input matInput\\r\\n                                   placeholder=\\\"{{'INPUT_LABEL' | translate}}\\\">\\r\\n                        </mat-form-field>\\r\\n                        <mat-form-field flex=\\\"20\\\">\\r\\n                            <input matInput\\r\\n                                   placeholder=\\\"{{'INPUT_LABEL' | translate}}\\\">\\r\\n                        </mat-form-field>\\r\\n                        <mat-form-field flex=\\\"30\\\">\\r\\n                            <input matInput\\r\\n                                   placeholder=\\\"{{'INPUT_LABEL' | translate}}\\\">\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </header>\\r\\n        </div>\\r\\n\\r\\n        <div layout=\\\"row\\\"\\r\\n             layout-margin>\\r\\n            <section>\\r\\n                <h2> Section</h2>\\r\\n            </section>\\r\\n            <section>\\r\\n                <mat-button-toggle-group class=\\\"toggle-group\\\"\\r\\n                                         name=\\\"fontStyle\\\"\\r\\n                                         aria-label=\\\"Font Style\\\">\\r\\n                    <mat-button-toggle value=\\\"\\\"\\r\\n                                       selected>{{'TOOGLE' | translate}}</mat-button-toggle>\\r\\n                    <mat-button-toggle value=\\\"\\\">{{'TOOGLE' | translate}}</mat-button-toggle>\\r\\n                </mat-button-toggle-group>\\r\\n            </section>\\r\\n            <!-- <mat-divider></mat-divider> -->\\r\\n            <mat-list>\\r\\n                <!-- search -->\\r\\n                <mat-card>\\r\\n\\r\\n                    <div fxLayout=\\\"row\\\"\\r\\n                         fxLayoutAlign=\\\"start none\\\"\\r\\n                         class=\\\"search\\\">\\r\\n                        <mat-form-field>\\r\\n                            <input matInput\\r\\n                                   value=\\\"\\\"\\r\\n                                   placeholder=\\\"{{'MESSAGE' | translate}}\\\"\\r\\n                                   #message>\\r\\n                        </mat-form-field>\\r\\n\\r\\n                        <mat-form-field>\\r\\n                            <input matInput\\r\\n                                   value=\\\"\\\"\\r\\n                                   placeholder=\\\"{{'ACTION' | translate}}\\\"\\r\\n                                   #action>\\r\\n                        </mat-form-field>\\r\\n                        <button mat-raised-button\\r\\n                                color=\\\"accent\\\">ok</button>\\r\\n                    </div>\\r\\n                </mat-card>\\r\\n                <mat-card class=\\\"search-filter\\\">\\r\\n                    <div fxLayout=\\\"row\\\"\\r\\n                         fxLayoutAlign=\\\"space-between start\\\"\\r\\n                         class=\\\"head-filter \\\">\\r\\n                        <div>\\r\\n                            <mat-form-field>\\r\\n                                <mat-select placeholder=\\\"{{'SELECT.FIELD_NAME' | translate}}\\\">\\r\\n                                    <mat-option value=\\\"option\\\">{{'SELECT.OPTION' | translate}}</mat-option>\\r\\n                                </mat-select>\\r\\n                            </mat-form-field>\\r\\n                        </div>\\r\\n                        <div class=\\\"more-filter\\\">\\r\\n                            <button mat-button\\r\\n                                    color=\\\"pink\\\">{{'MORE_FILTERS' | translate}}</button>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <mat-divider></mat-divider>\\r\\n\\r\\n                    <div fxLayout=\\\"row\\\"\\r\\n                         fxLayoutAlign=\\\"space-between none\\\"\\r\\n                         class=\\\"mt-1\\\">\\r\\n                        <button mat-button>{{'APPLY_FILTERS' | translate}}</button>\\r\\n                        <div class=\\\"button-row\\\">\\r\\n\\r\\n                            <button mat-icon-button=\\\"\\\">\\r\\n                                <span class=\\\"mat-button-wrapper\\\">\\r\\n                                    <mat-icon _ngcontent-c58=\\\"\\\"\\r\\n                                              class=\\\"mat-icon material-icons\\\"\\r\\n                                              role=\\\"img\\\"\\r\\n                                              aria-hidden=\\\"true\\\">delete_outlin</mat-icon>\\r\\n                                </span>\\r\\n                            </button>\\r\\n                            <button mat-icon-button=\\\"\\\">\\r\\n                                <span class=\\\"mat-button-wrapper\\\">\\r\\n                                    <mat-icon class=\\\"mat-icon material-icons\\\"\\r\\n                                              role=\\\"img\\\"\\r\\n                                              aria-hidden=\\\"true\\\">share</mat-icon>\\r\\n                                </span>\\r\\n                            </button>\\r\\n                            <button mat-icon-button=\\\"\\\">\\r\\n                                <span class=\\\"mat-button-wrapper\\\">\\r\\n                                    <mat-icon class=\\\"mat-icon material-icons\\\"\\r\\n                                              role=\\\"img\\\"\\r\\n                                              aria-hidden=\\\"true\\\">save_outlin</mat-icon>\\r\\n                                </span>\\r\\n                            </button>\\r\\n                            <button mat-icon-button=\\\"\\\">\\r\\n                                <span class=\\\"mat-button-wrapper\\\">\\r\\n                                    <mat-icon role=\\\"img\\\"\\r\\n                                              aria-hidden=\\\"true\\\">favorite_outlin</mat-icon>\\r\\n                                </span>\\r\\n                            </button>\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </mat-card>\\r\\n                <mat-card>\\r\\n                    <mat-form-field>\\r\\n                        <input matInput\\r\\n                               placeholder=\\\"{{'EMAIL_FIELD.FIELD_NAME' | translate}}\\\"\\r\\n                               [formControl]=\\\"email\\\"\\r\\n                               required>\\r\\n                        <span *ngIf=\\\"email.touched && email.invalid\\\"\\r\\n                              matSuffix>\\r\\n                            <mat-icon>error</mat-icon>\\r\\n                        </span>\\r\\n                        <span *ngIf=\\\"email.touched && email.valid\\\"\\r\\n                              matSuffix>\\r\\n                            <mat-icon>check_circle</mat-icon>\\r\\n                        </span>\\r\\n                        <mat-error *ngIf=\\\"email.invalid\\\">{{getErrorMessage() | translate}}</mat-error>\\r\\n                    </mat-form-field>\\r\\n                    <mat-form-field>\\r\\n                        <input matInput\\r\\n                               placeholder=\\\"{{'COMPLEXE_VALUE_FIELD' | translate}}\\\">\\r\\n                        <mat-icon matSuffix>help</mat-icon>\\r\\n                    </mat-form-field>\\r\\n\\r\\n                    <mat-form-field class=\\\"example-full-width\\\">\\r\\n                        <input type=\\\"text\\\"\\r\\n                               placeholder=\\\"{{'AUTOCOMPLETE_FIELD' | translate}}\\\"\\r\\n                               aria-label=\\\"Assignee\\\"\\r\\n                               matInput\\r\\n                               [formControl]=\\\"myControl\\\"\\r\\n                               [matAutocomplete]=\\\"auto\\\">\\r\\n                        <mat-autocomplete #auto=\\\"matAutocomplete\\\"\\r\\n                                          [displayWith]=\\\"displayFn\\\">\\r\\n                            <mat-option *ngFor=\\\"let option of filteredOptions | async\\\"\\r\\n                                        [value]=\\\"option\\\">\\r\\n                                {{option.name}}\\r\\n                            </mat-option>\\r\\n                        </mat-autocomplete>\\r\\n                    </mat-form-field>\\r\\n\\r\\n                    <mat-form-field>\\r\\n                        <mat-select placeholder=\\\"{{'DROPDOWN_FIELD.FIELD_NAME' | translate}}\\\">\\r\\n                            <mat-option value=\\\"option\\\"\\r\\n                                        style=\\\"padding-top: 10px\\\">{{'DROPDOWN_FIELD.OPTION' | translate}}</mat-option>\\r\\n                        </mat-select>\\r\\n                    </mat-form-field>\\r\\n\\r\\n                    <mat-form-field>\\r\\n                        <input matInput\\r\\n                               [matDatepicker]=\\\"picker\\\"\\r\\n                               placeholder=\\\"{{'DATE_PICKER_FIELD' | translate}}\\\">\\r\\n                        <mat-datepicker-toggle matSuffix\\r\\n                                               [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n                        <mat-datepicker #picker></mat-datepicker>\\r\\n                    </mat-form-field>\\r\\n                </mat-card>\\r\\n            </mat-list>\\r\\n\\r\\n\\r\\n\\r\\n            <div fxLayout=\\\"row\\\">\\r\\n                <div fxFlex=\\\"100\\\">\\r\\n                    <mat-card>\\r\\n                        <mat-chip-list>\\r\\n                            <mat-chip>chips</mat-chip>\\r\\n                            <mat-chip color=\\\"primary\\\"\\r\\n                                      selected>Primary fish</mat-chip>\\r\\n                            <mat-chip color=\\\"accent\\\"\\r\\n                                      selected>Accent fish</mat-chip>\\r\\n                            <mat-chip color=\\\"accent\\\"\\r\\n                                      selected>\\r\\n                                <mat-icon>help</mat-icon> chips with icon\\r\\n                            </mat-chip>\\r\\n                            <mat-chip color=\\\"lemon\\\"\\r\\n                                      selected>Lemon Chip</mat-chip>\\r\\n                            <mat-chip color=\\\"energy\\\"\\r\\n                                      selected>Energy Chip</mat-chip>\\r\\n                            <mat-chip color=\\\"apricot\\\"\\r\\n                                      selected>Apricot</mat-chip>\\r\\n                            <mat-chip color=\\\"coral\\\"\\r\\n                                      selected>Coral</mat-chip>\\r\\n                            <mat-chip color=\\\"cherry\\\"\\r\\n                                      selected>Cherry Pink</mat-chip>\\r\\n                            <mat-chip color=\\\"violine\\\"\\r\\n                                      selected>Violine</mat-chip>\\r\\n                            <mat-chip color=\\\"royal\\\"\\r\\n                                      selected>Royal</mat-chip>\\r\\n                            <mat-chip color=\\\"grass\\\"\\r\\n                                      selected>Grass</mat-chip>\\r\\n                            <mat-chip color=\\\"aqua\\\"\\r\\n                                      selected>Aqua</mat-chip>\\r\\n                            <mat-chip color=\\\"duck\\\"\\r\\n                                      selected>Duck</mat-chip>\\r\\n                        </mat-chip-list>\\r\\n                    </mat-card>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n\\r\\n            <!-- chips -->\\r\\n            <!-- <mat-grid-list cols=\\\"4\\\"\\r\\n\\t\\t\\t               class=\\\"docs-component-overview\\\"\\r\\n                           gutterSize=\\\"24px\\\"> -->\\r\\n\\r\\n            <div fxLayout=\\\"row\\\"\\r\\n                 fxLayoutGap=\\\"24px\\\">\\r\\n                <!-- button -->\\r\\n                <div fxFlex=\\\"33\\\">\\r\\n                    <mat-card>\\r\\n                        <mat-card-header>\\r\\n                            <h2>{{'BUTTONS_BOX.TITLE'| translate}}</h2>\\r\\n                        </mat-card-header>\\r\\n                        <mat-card-content>\\r\\n                            <!-- star button -->\\r\\n                            <button mat-button>{{'BUTTONS_BOX.BASIC'| translate}}</button>\\r\\n                            <button mat-raised-button>{{'BUTTONS_BOX.RAISED'| translate}}</button>\\r\\n                            <!-- end button -->\\r\\n                        </mat-card-content>\\r\\n                    </mat-card>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"33\\\">\\r\\n                    <mat-card>\\r\\n                        <mat-card-header>\\r\\n                            <h2>{{'FLOATING_ACTION_BUTTON_BOX.TITLE' | translate}}</h2>\\r\\n                        </mat-card-header>\\r\\n                        <mat-card-content>\\r\\n                            <!-- start floating -->\\r\\n                            <button mat-fab\\r\\n                                    class=\\\"floating-menu\\\"\\r\\n                                    color=\\\"accent\\\"\\r\\n                                    [matMenuTriggerFor]=\\\"menu\\\">\\r\\n                                <mat-icon class=\\\"mdc-fab__icon material-icons\\\">add</mat-icon>\\r\\n                            </button>\\r\\n                            <mat-menu #menu=\\\"matMenu\\\"\\r\\n                                      class=\\\"floating-menu\\\">\\r\\n                                <h5>\\r\\n                                    <mat-icon class=\\\"mdc-fab__icon material-icons\\\">edit</mat-icon>\\r\\n                                    <span>{{'FLOATING_ACTION_BUTTON_BOX.CUSTOMIZE' | translate}} </span>\\r\\n                                </h5>\\r\\n                                <button mat-menu-item>\\r\\n                                    <mat-icon>lock_outline</mat-icon>\\r\\n                                    <span>{{'FLOATING_ACTION_BUTTON_BOX.CLOSE' | translate}}</span>\\r\\n                                </button>\\r\\n                                <button mat-menu-item>\\r\\n                                    <mat-icon>not_interested_outlined</mat-icon>\\r\\n                                    <span>{{'FLOATING_ACTION_BUTTON_BOX.NEW_CALL_OFF' | translate}}</span>\\r\\n                                </button>\\r\\n                                <button mat-menu-item>\\r\\n                                    <mat-icon>directions_boat</mat-icon>\\r\\n                                    <span>{{'FLOATING_ACTION_BUTTON_BOX.ASSIGN' | translate}}</span>\\r\\n                                </button>\\r\\n                                <button mat-menu-item>\\r\\n                                    <mat-icon>call_split</mat-icon>\\r\\n                                    <span>{{'FLOATING_ACTION_BUTTON_BOX.SPLIT' | translate}}</span>\\r\\n                                </button>\\r\\n                                <button mat-menu-item>\\r\\n                                    <mat-icon>placet</mat-icon>\\r\\n                                    <span>{{'FLOATING_ACTION_BUTTON_BOX.ALLOCATE' | translate}}</span>\\r\\n                                </button>\\r\\n                            </mat-menu>\\r\\n                            <button mat-fab\\r\\n                                    class=\\\"fab-menu\\\"\\r\\n                                    color=\\\"primary\\\">\\r\\n                                <mat-icon class=\\\"mdc-fab__icon material-icons\\\">add</mat-icon>\\r\\n                            </button>\\r\\n                            <button mat-raised-button\\r\\n                                    class=\\\"fab-text-button\\\"\\r\\n                                    color=\\\"accent\\\">\\r\\n                                <mat-icon class=\\\"mdc-fab__icon material-icons\\\">add</mat-icon>\\r\\n                                {{'BUTTON_LABEL' | translate}}\\r\\n                            </button>\\r\\n\\r\\n                            <!-- end floating -->\\r\\n                        </mat-card-content>\\r\\n                    </mat-card>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"33\\\">\\r\\n                    <mat-card>\\r\\n                        <mat-card-header>\\r\\n                            <h2>{{'TOOLTIP_BOX.TITLE' | translate}}</h2>\\r\\n                        </mat-card-header>\\r\\n                        <mat-card-content>\\r\\n\\r\\n                            <section class=\\\"matTooltip\\\">\\r\\n                                <span>{{'TOOLTIP_BOX.TEST' | translate}}</span>\\r\\n                                <mat-icon matTooltip=\\\"{{'TOOLTIP_BOX.TOOLTIP' | translate}}\\\">error</mat-icon>\\r\\n                            </section>\\r\\n\\r\\n                            <section>\\r\\n                                <mat-form-field class=\\\"mat-form-field\\\">\\r\\n                                    <input matInput\\r\\n                                           placeholder=\\\"{{'TOOLTIP_BOX.FIELD' | translate}} \\\">\\r\\n                                    <mat-icon matSuffix\\r\\n                                              matTooltip=\\\"{{'TOOLTIP_BOX.TOOLTIP' | translate}}\\\">error</mat-icon>\\r\\n                                </mat-form-field>\\r\\n                            </section>\\r\\n                        </mat-card-content>\\r\\n                    </mat-card>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n\\r\\n            <!-- EMPTY STATE -->\\r\\n            <div fxLayout=\\\"row\\\"\\r\\n                 fxLayoutGap=\\\"24px\\\">\\r\\n                <div fxFlex=\\\"50\\\">\\r\\n                    <atlas-empty-state title=\\\"{{'EMPTY_STATE_BOX_1.TITLE' | translate}}\\\"\\r\\n                                       message=\\\"{{'EMPTY_STATE_BOX_1.MESSAGE' | translate}}\\\"></atlas-empty-state>\\r\\n                </div>\\r\\n\\r\\n                <div fxFlex=\\\"25\\\">\\r\\n                    <atlas-empty-state title=\\\"{{'EMPTY_STATE_BOX_2.TITLE' | translate}}\\\"\\r\\n                                       message=\\\"{{'EMPTY_STATE_BOX_2.MESSAGE' | translate}}\\\"></atlas-empty-state>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"25\\\">\\r\\n                    <atlas-empty-state title=\\\"{{'EMPTY_STATE_BOX_3.TITLE' | translate}}\\\"\\r\\n                                       message=\\\"{{'EMPTY_STATE_BOX_3.MESSAGE' | translate}}\\\"></atlas-empty-state>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div fxLayout=\\\"row\\\">\\r\\n                <div fxFlex>\\r\\n                    <mat-card>\\r\\n                        <mat-horizontal-stepper #stepper\\r\\n                                                color=\\\"accent\\\">\\r\\n                            <mat-step>\\r\\n                                <ng-template matStepLabel>{{'STEPPER.PERSONAL_INFO' | translate}}</ng-template>\\r\\n                                <div fxLayout=\\\"row\\\"\\r\\n                                     fxLayoutAlign=\\\"center center\\\">\\r\\n                                    <div fxFlex=\\\"30%\\\">\\r\\n                                        <form class=\\\"form-control\\\">\\r\\n                                            <mat-form-field>\\r\\n                                                <input type=\\\"text\\\"\\r\\n                                                       placeholder=\\\"{{'NAME' | translate}}\\\"\\r\\n                                                       matInput>\\r\\n                                            </mat-form-field>\\r\\n                                            <mat-form-field>\\r\\n                                                <input type=\\\"text\\\"\\r\\n                                                       placeholder=\\\"{{'USERNAME' | translate}}\\\"\\r\\n                                                       matInput>\\r\\n                                            </mat-form-field>\\r\\n                                            <div class=\\\"full-width\\\"\\r\\n                                                 align=\\\"end\\\">\\r\\n                                                <button mat-raised-button\\r\\n                                                        matStepperNext>{{'NEXT' | translate}}</button>\\r\\n                                            </div>\\r\\n                                        </form>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </mat-step>\\r\\n                            <mat-step>\\r\\n                                <ng-template matStepLabel>{{'STEPPER.FILL_OUT_ADDRESS' | translate}}</ng-template>\\r\\n                                <div fxLayout=\\\"row\\\"\\r\\n                                     fxLayoutAlign=\\\"center center\\\">\\r\\n                                    <div fxFlex=\\\"30%\\\">\\r\\n                                        <form>\\r\\n                                            <mat-form-field style=\\\"position: relative !important;\\\">\\r\\n                                                <input matInput\\r\\n                                                       placeholder=\\\"{{'ADDRESS' | translate}}\\\">\\r\\n                                            </mat-form-field>\\r\\n                                            <mat-form-field>\\r\\n                                                <input type=\\\"text\\\"\\r\\n                                                       placeholder=\\\"{{'CITY' | translate}}\\\"\\r\\n                                                       matInput>\\r\\n                                            </mat-form-field>\\r\\n                                            <mat-form-field>\\r\\n                                                <input type=\\\"text\\\"\\r\\n                                                       placeholder=\\\"{{'COUNTRY' | translate}}\\\"\\r\\n                                                       matInput>\\r\\n                                            </mat-form-field>\\r\\n                                            <div class=\\\"full-width\\\"\\r\\n                                                 align=\\\"end\\\">\\r\\n                                                <button mat-button\\r\\n                                                        matStepperPrevious>{{'BACK' | translate}}</button>\\r\\n                                                <button mat-raised-button\\r\\n                                                        matStepperNext>{{'NEXT' | translate}}</button>\\r\\n                                            </div>\\r\\n                                        </form>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </mat-step>\\r\\n                            <mat-step>\\r\\n                                <ng-template matStepLabel>{{'STEPPER.DONE' | translate}}</ng-template>\\r\\n                                <div fxLayout=\\\"row\\\"\\r\\n                                     fxLayoutAlign=\\\"center center\\\">\\r\\n                                    <div fxFlex=\\\"30%\\\">\\r\\n                                        <h2 [innerHTML]=\\\"'STEPPER.END_MESSAGE' | translate\\\">\\r\\n                                        </h2>\\r\\n                                        <div class=\\\"full-width\\\"\\r\\n                                             align=\\\"end\\\">\\r\\n                                            <button mat-button\\r\\n                                                    matStepperPrevious>{{'BACK' | translate}}</button>\\r\\n                                            <button mat-raised-button\\r\\n                                                    (click)=\\\"stepper.reset()\\\">{{'RESET' | translate}}</button>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </mat-step>\\r\\n                        </mat-horizontal-stepper>\\r\\n                    </mat-card>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div fxLayout=\\\"row\\\"\\r\\n                 fxLayoutap=\\\"24px\\\">\\r\\n                <!-- progress bar -->\\r\\n                <div fxFlex=\\\"33\\\">\\r\\n                    <mat-card>\\r\\n                        <h2>{{'PROGRESS_BOX.TITLE' | translate}}</h2>\\r\\n                        <mat-card-content>\\r\\n                            <h3>{{'PROGRESS_BOX.INDETERMINATE' | translate}}</h3>\\r\\n                            <mat-progress-spinner color=\\\"accent\\\"\\r\\n                                                  mode=\\\"indeterminate\\\"></mat-progress-spinner>\\r\\n                            <mat-progress-bar color=\\\"accent\\\"\\r\\n                                              mode=\\\"indeterminate\\\"></mat-progress-bar>\\r\\n                        </mat-card-content>\\r\\n                        <mat-card-content>\\r\\n                            <h3>{{'PROGRESS_BOX.DETERMINATE' | translate}}</h3>\\r\\n                            <mat-progress-spinner color=\\\"accent\\\"\\r\\n                                                  mode=\\\"determinate\\\"\\r\\n                                                  value=\\\"34\\\"></mat-progress-spinner>\\r\\n\\r\\n                            <mat-progress-bar color=\\\"accent\\\"\\r\\n                                              mode=\\\"determinate\\\"\\r\\n                                              value=\\\"40\\\"></mat-progress-bar>\\r\\n                        </mat-card-content>\\r\\n                    </mat-card>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"33\\\"\\r\\n                     fxLayoutAlign=\\\"center center\\\">\\r\\n                    <mat-button-toggle-group class=\\\"toggle-group\\\"\\r\\n                                             name=\\\"fontStyle\\\"\\r\\n                                             aria-label=\\\"Font Style\\\">\\r\\n                        <mat-button-toggle value=\\\"\\\">{{'TOOGLE' | translate}}</mat-button-toggle>\\r\\n                        <mat-button-toggle value=\\\"\\\">{{'TOOGLE_SELECTED' | translate}}\\r\\n                        </mat-button-toggle>\\r\\n                        <mat-button-toggle value=\\\"\\\">{{'TOOGLE' | translate}}</mat-button-toggle>\\r\\n                    </mat-button-toggle-group>\\r\\n                </div>\\r\\n                <!-- Form Controls -->\\r\\n                <div fxFlex=\\\"33\\\">\\r\\n                    <mat-card>\\r\\n                        <mat-card-content>\\r\\n                            <div class=\\\"form-control\\\">\\r\\n                                <section>\\r\\n                                    <mat-checkbox [(ngModel)]=\\\"selectedAll\\\"\\r\\n                                                  (change)=\\\"selectAll();\\\"\\r\\n                                                  [(indeterminate)]=\\\"indeterminate\\\">{{'CHECKBOX.PARENT'|translate}}\\r\\n                                    </mat-checkbox>\\r\\n                                </section>\\r\\n                                <mat-divider></mat-divider>\\r\\n                                <section>\\r\\n                                    <mat-checkbox *ngFor=\\\"let n of names\\\"\\r\\n                                                  [(ngModel)]=\\\"n.selected\\\"\\r\\n                                                  (change)=\\\"checkIfAllSelected();checkIfOneSelected()\\\">\\r\\n                                        {{n.name | translate}}\\r\\n                                    </mat-checkbox>\\r\\n\\r\\n                                    <mat-checkbox class=\\\"\\\"\\r\\n                                                  [(ngModel)]=\\\"indeterminate\\\">{{'CHECKBOX.INDETERMINATE'|translate}}\\r\\n                                    </mat-checkbox>\\r\\n                                </section>\\r\\n\\r\\n                                <section>\\r\\n                                    <mat-radio-group>\\r\\n                                        <mat-radio-button value=\\\"radio1\\\">{{'CHECKBOX.RADIO_BUTTON'|translate}}\\r\\n                                        </mat-radio-button>\\r\\n                                        <mat-radio-button value=\\\"radio2\\\">{{'CHECKBOX.RADIO_BUTTON'|translate}}\\r\\n                                        </mat-radio-button>\\r\\n                                    </mat-radio-group>\\r\\n                                </section>\\r\\n                                <hr>\\r\\n                                <section>\\r\\n                                    <mat-slide-toggle>{{'CHECKBOX.SLIDE_TOOGLE'|translate}}</mat-slide-toggle>\\r\\n                                </section>\\r\\n                            </div>\\r\\n                        </mat-card-content>\\r\\n                    </mat-card>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div fxLayout=\\\"row\\\"\\r\\n                 fxLayoutAlign=\\\"space-around center\\\"\\r\\n                 fxLayoutGap=\\\"24px\\\"\\r\\n                 fxLayout.xs=\\\"column\\\">\\r\\n\\r\\n                <div flex=\\\"30\\\"\\r\\n                     fxFlexOrder.xs=\\\"2\\\">\\r\\n                    <mat-card>\\r\\n                        <mat-card-header>\\r\\n                            <h2>{{'CARD.1' | translate}}</h2>\\r\\n                        </mat-card-header>\\r\\n                        <mat-card-content>\\r\\n                            <p>Lorem ipsum dolor sit amet consecte tur adipisicing elit. Earum molestiae aut adipisci\\r\\n                                autem est, dicta\\r\\n                                excepturi quam alias, sed libero voluptates rerum. Quam distinctio libero est aut\\r\\n                                reprehenderit at error? </p>\\r\\n                        </mat-card-content>\\r\\n                    </mat-card>\\r\\n                </div>\\r\\n                <div flex=\\\"30\\\">\\r\\n                    <mat-card>\\r\\n                        <mat-card-header>\\r\\n                            <h2>{{'CARD.2' | translate}}</h2>\\r\\n                        </mat-card-header>\\r\\n                        <mat-card-content>\\r\\n                            <p>Lorem ipsum, dolor sit amet consectetur adipisicing elit. Aut ad eius, libero eaque\\r\\n                                impedit saepe natus quasi\\r\\n                                odio minus sint iste nesciunt. Voluptates, corrupti asperiores numquam dolorem hic\\r\\n                                deleniti aut?</p>\\r\\n                        </mat-card-content>\\r\\n                    </mat-card>\\r\\n                </div>\\r\\n                <div flex=\\\"30\\\">\\r\\n                    <mat-card>\\r\\n                        <mat-card-header>\\r\\n                            <h2>{{'CARD.3' | translate}}</h2>\\r\\n                        </mat-card-header>\\r\\n                        <mat-card-content>\\r\\n                            <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Voluptatem voluptatum, nam,\\r\\n                                nesciunt ex quod quam ea\\r\\n                                ipsam excepturi, dolorum ducimus quasi impedit perferendis repellat dolores deserunt\\r\\n                                minima cum. Consequatur,\\r\\n                                cupiditate.\\r\\n                            </p>\\r\\n                        </mat-card-content>\\r\\n                    </mat-card>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div fxFill>\\r\\n                <mat-card>\\r\\n                    <mat-card-header>\\r\\n                        <h2>{{'CARD.4' | translate}}</h2>\\r\\n                    </mat-card-header>\\r\\n                    <mat-card-content>\\r\\n                        <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Voluptatem voluptatum, nam,\\r\\n                            nesciunt ex quod quam ea\\r\\n                            ipsam excepturi, dolorum ducimus quasi impedit perferendis repellat dolores deserunt minima\\r\\n                            cum. Consequatur,\\r\\n                            cupiditate.\\r\\n                        </p>\\r\\n                    </mat-card-content>\\r\\n                </mat-card>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div fxLayout=\\\"row\\\"\\r\\n             fxLayoutAlign=\\\"space-around center\\\">\\r\\n            <div fxFlex=\\\"33\\\">\\r\\n                <mat-card>\\r\\n                    <mat-card-header>\\r\\n                        <h2>{{'DIALOG_BOX.TITLE' | translate}}</h2>\\r\\n                    </mat-card-header>\\r\\n                    <mat-card-content>\\r\\n                        <mat-form-field>\\r\\n                            <input matInput\\r\\n                                   [(ngModel)]='fname'\\r\\n                                   placeholder=\\\"{{'DIALOG_BOX.FIELD_NAME' | translate}}\\\">\\r\\n                        </mat-form-field>\\r\\n                        <button mat-raised-button\\r\\n                                (click)=\\\"openAddFileDialog()\\\">{{'DIALOG_BOX.OPEN_DIALOG' | translate}}</button>\\r\\n                    </mat-card-content>\\r\\n                    <li *ngIf=\\\"animal\\\"\\r\\n                        class=\\\"display_animal\\\">\\r\\n                        {{'DIALOG_BOX.CHOICE' | translate}}\\r\\n                        <i>{{animal}}</i>\\r\\n                    </li>\\r\\n                </mat-card>\\r\\n            </div>\\r\\n            <div fxFlex=\\\"33\\\">\\r\\n                <!-- Contextual Search -->\\r\\n                <mat-card>\\r\\n                    <mat-card-header>\\r\\n                        <h1>{{'CONTEXTUAL_SEARCH_BOX.TITLE' | translate}}</h1>\\r\\n                    </mat-card-header>\\r\\n                    <mat-card-content>\\r\\n                        <mat-form-field>\\r\\n                            <input matInput\\r\\n                                   placeholder=\\\"{{'CONTEXTUAL_SEARCH_BOX.FIELD_NAME' | translate}}\\\">\\r\\n                            <mat-icon matSuffix\\r\\n                                      class=\\\"compass-icon\\\"\\r\\n                                      (click)=\\\"openDialog()\\\">explore</mat-icon>\\r\\n                        </mat-form-field>\\r\\n                    </mat-card-content>\\r\\n                </mat-card>\\r\\n                <mat-card>\\r\\n                    <mat-card-header>\\r\\n                        <h2>{{'COMMODITY_INPUT_BOX.TITLE'|translate}}</h2>\\r\\n                    </mat-card-header>\\r\\n                    <mat-card-content>\\r\\n                        <atlas-commodity-input></atlas-commodity-input>\\r\\n                    </mat-card-content>\\r\\n                </mat-card>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!-- List & Search -->\\r\\n        <div>\\r\\n            <h4>{{'LIST_AND_SEARCH'|translate}}</h4>\\r\\n            <atlas-list-and-search class=\\\"default-height\\\"></atlas-list-and-search>\\r\\n        </div>\\r\\n        <div fxLayout=\\\"row\\\">\\r\\n            <div fxFlex>\\r\\n                <mat-card>\\r\\n                    <mat-card-header>{{'Ag-Grid Examples'|translate}}</mat-card-header>\\r\\n                    <div fxLayout=\\\"row\\\"\\r\\n                         fxLayout.xs=\\\"column\\\"\\r\\n                         fxLayoutAlign=\\\"space-between right\\\"\\r\\n                         fxLayoutWrap\\r\\n                         fxLayoutGap=\\\"20px\\\">\\r\\n                        <div fxFlex=\\\"10%\\\"\\r\\n                             fxFlex.xs=\\\"10%\\\"\\r\\n                             fxFlex.sm=\\\"10%\\\">\\r\\n                            <button mat-icon-button>\\r\\n                                <mat-icon>settings_backup_restore</mat-icon>\\r\\n                            </button>\\r\\n                            <button mat-icon-button\\r\\n                                    [matMenuTriggerFor]=\\\"menuAggrid\\\">\\r\\n                                <mat-icon>reorder</mat-icon>\\r\\n                            </button>\\r\\n                            <button mat-icon-button>\\r\\n                                <mat-icon>\\r\\n                                    more_vert</mat-icon>\\r\\n                            </button>\\r\\n                            <div>\\r\\n                                <mat-menu class=\\\"no-overflow\\\"\\r\\n                                          #menuAggrid=\\\"matMenu\\\">\\r\\n                                    <div fxLayout=\\\"column\\\"\\r\\n                                         fxLayoutWrap\\r\\n                                         fxLayoutGap=\\\"20px\\\">\\r\\n                                        <div *ngFor=\\\"let col of columnDefs\\\"\\r\\n                                             fxFlex=\\\"100%\\\"\\r\\n                                             fxFlex.xs=\\\"100%\\\"\\r\\n                                             fxFlex.sm=\\\"100%\\\">\\r\\n                                            <mat-checkbox [checked]=\\\"!col.hide\\\"\\r\\n                                                          (click)=\\\"showOrHideColum($event, col)\\\"\\r\\n                                                          *ngIf=\\\"col.headerName != ''\\\">{{col.headerName}}\\r\\n                                            </mat-checkbox>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </mat-menu>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!--Buttons-->\\r\\n                    <div style='padding-bottom: 15px'\\r\\n                         fxLayout='row'\\r\\n                         fxLayoutAlign=\\\"space-between center\\\">\\r\\n                        <mat-slide-toggle mat-raised-button\\r\\n                                          (change)=\\\"toggleQuickSum()\\\">{{'Enable Range Selection'|translate}}\\r\\n                        </mat-slide-toggle>\\r\\n                        <div fxLayout='row'\\r\\n                             fxLayoutAlign=\\\"space-around center\\\">\\r\\n\\r\\n                            <div *ngFor=\\\"let column of selectedColumnsArray\\\">\\r\\n                                <span style=\\\"padding-right: 20px;\\\"\\r\\n                                      *ngIf=\\\"column.sum!=0 && quickSumModeActivated\\\">{{column.name}} :\\r\\n                                    {{column.sum}}</span>\\r\\n                            </div>\\r\\n                            <button mat-button\\r\\n                                    (click)=\\\"onClearRange()\\\"\\r\\n                                    *ngIf=\\\"quickSumModeActivated\\\">{{'Clear Selection'|translate}}</button>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!--Ag grid -->\\r\\n                    <ag-grid-angular *ngIf=\\\"!quickSumModeActivated\\\"\\r\\n                                     class=\\\"ag-theme-material\\\"\\r\\n                                     style=\\\"height: 500px;\\\"\\r\\n                                     [enableSorting]=\\\"true\\\"\\r\\n                                     [rowData]=\\\"rowData | async\\\"\\r\\n                                     [columnDefs]=\\\"columnDefs\\\"\\r\\n                                     rowSelection=\\\"multiple\\\"\\r\\n                                     [rowHeight]=\\\"atlasAgGridParam.rowHeight\\\"\\r\\n                                     rowMultiSelectWithClick=\\\"true\\\"\\r\\n                                     (columnVisible)=\\\"onAddOrDeleteColumn($event)\\\"\\r\\n                                     (gridReady)=\\\"onGridReady($event)\\\">\\r\\n                    </ag-grid-angular>\\r\\n\\r\\n                    <ag-grid-angular *ngIf=\\\"quickSumModeActivated\\\"\\r\\n                                     style=\\\"height: 500px;\\\"\\r\\n                                     class=\\\"ag-theme-material\\\"\\r\\n                                     [enableSorting]=\\\"true\\\"\\r\\n                                     [rowData]=\\\"rowData | async\\\"\\r\\n                                     [columnDefs]=\\\"columnDefs\\\"\\r\\n                                     [rowHeight]=\\\"atlasAgGridParam.rowHeight\\\"\\r\\n                                     rowSelection=\\\"multiple\\\"\\r\\n                                     [enableRangeSelection]=\\\"true\\\"\\r\\n                                     (gridReady)=\\\"onGridReady($event)\\\"\\r\\n                                     (columnVisible)=\\\"onAddOrDeleteColumn($event)\\\"\\r\\n                                     (rangeSelectionChanged)=\\\"onRangeSelectionChanged($event)\\\">\\r\\n                    </ag-grid-angular>\\r\\n                </mat-card>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!-- TAB STYLING  -->\\r\\n        <!-- Tab in the page content is a bright tab -->\\r\\n        <h2>{{'Bright Tab'|translate}}</h2>\\r\\n        <mat-tab-group class=\\\"bright-tab\\\">\\r\\n            <mat-tab label=\\\"{{'First'|translate}}\\\">\\r\\n                {{'Number 1'|translate}}\\r\\n            </mat-tab>\\r\\n            <mat-tab label=\\\"{{'Second'|translate}}\\\">\\r\\n                {{'Number 2'|translate}}\\r\\n            </mat-tab>\\r\\n            <mat-tab label=\\\"{{'Third'|translate}}\\\">\\r\\n                {{'Number 3'|translate}}\\r\\n            </mat-tab>\\r\\n        </mat-tab-group>\\r\\n        <br>\\r\\n        <!-- Tab in the page content is a dark tab -->\\r\\n        <h2>{{'Dark Tab - for topbar'|translate}}</h2>\\r\\n        <div class=\\\"dark-tab header-tab mat-elevation-z6\\\">\\r\\n            <div class=\\\"header-tab-container\\\">\\r\\n                <mat-tab-group [selectedIndex]=selectedIndex\\r\\n                               (selectedIndexChange)=onSelectedIndexChanged($event)\\r\\n                               backgroundColor=\\\"primary\\\">\\r\\n                    <mat-tab label=\\\"{{'trade type'|translate}}\\\"></mat-tab>\\r\\n                    <mat-tab label=\\\"{{'trade type'|translate}}\\\"></mat-tab>\\r\\n                    <mat-tab label=\\\"{{'trade type'|translate}}\\\"></mat-tab>\\r\\n                </mat-tab-group>\\r\\n                <span class=\\\"fill-space\\\"></span>\\r\\n                <!-- Add FAB extanded if needed -->\\r\\n                <button mat-raised-button\\r\\n                        class=\\\"fab-text-button\\\"\\r\\n                        color=\\\"accent\\\">\\r\\n                    <mat-icon class=\\\"mdc-fab__icon material-icons\\\">add</mat-icon>\\r\\n                    {{'Label of the button'|translate}}\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"content-tab\\\">\\r\\n            <mat-tab-group [selectedIndex]=selectedIndex>\\r\\n                <mat-tab> {{'Content 1'|translate}}\\r\\n                    <mat-card fxFlex=\\\"100\\\">\\r\\n                        Lorem ipsum dolor sit amet, consectetur adipisicing elit. Tenetur facilis molestiae quasi fugit\\r\\n                        natus iure repellat, ipsa eum explicabo autem modi! Molestias delectus repudiandae dicta\\r\\n                        sapiente, et doloremque consequuntur perspiciatis?\\r\\n                    </mat-card>\\r\\n                </mat-tab>\\r\\n                <mat-tab> {{'Content 2'|translate}} </mat-tab>\\r\\n                <mat-tab> {{'Content 3'|translate}} </mat-tab>\\r\\n            </mat-tab-group>\\r\\n        </div>\\r\\n        <br>\\r\\n        <!-- Tab in the page content is a admin tab -->\\r\\n        <h2>{{'Admin Tab - for topbar'|translate}}</h2>\\r\\n        <p>{{'The background image needs to be defined in the css class admin-tab'|translate}}</p>\\r\\n        <div class=\\\"admin-tab header-tab mat-elevation-z6\\\">\\r\\n            <div class=\\\"header-tab-container\\\">\\r\\n                <mat-tab-group [selectedIndex]=selectedIndex\\r\\n                               (selectedIndexChange)=onSelectedIndexChanged($event)>\\r\\n                    <mat-tab label=\\\"{{'trade type'|translate}}\\\"></mat-tab>\\r\\n                    <mat-tab label=\\\"{{'trade type'|translate}}\\\"></mat-tab>\\r\\n                    <mat-tab label=\\\"{{'trade type'|translate}}\\\"></mat-tab>\\r\\n                </mat-tab-group>\\r\\n                <span class=\\\"fill-space\\\"></span>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"content-tab\\\">\\r\\n            <mat-tab-group [selectedIndex]=selectedIndex>\\r\\n                <mat-tab> {{'Content 1'|translate}}\\r\\n                    <mat-card fxFlex=\\\"100\\\">\\r\\n                        Lorem ipsum dolor sit amet, consectetur adipisicing elit. Tenetur facilis molestiae quasi fugit\\r\\n                        natus iure repellat, ipsa eum explicabo autem modi! Molestias delectus repudiandae dicta\\r\\n                        sapiente, et doloremque consequuntur perspiciatis?\\r\\n                    </mat-card>\\r\\n                </mat-tab>\\r\\n                <mat-tab> {{'Content 2'|translate}} </mat-tab>\\r\\n                <mat-tab> {{'Content 3'|translate}} </mat-tab>\\r\\n            </mat-tab-group>\\r\\n        </div>\\r\\n        <div>\\r\\n            <atlas-picklist></atlas-picklist>\\r\\n        </div>\\r\\n\\r\\n        <div>\\r\\n            <atlas-floating-action-button [fabTitle]=\\\"fabTitle\\\"\\r\\n                                          [fabType]=\\\"fabType\\\"\\r\\n                                          [fabActions]=\\\"fabMenuActions\\\"\\r\\n                                          [isLoaded]=\\\"true\\\"\\r\\n                                          (fabActionClicked)=\\\"onFabActionClicked($event)\\\">\\r\\n            </atlas-floating-action-button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","module.exports = \".example-container {\\n  display: flex;\\n  flex-direction: column;\\n  width: 100%;\\n  margin: 20px; }\\n\\n.steppers li.active .circle,\\n.steppers li.complete .circle {\\n  background: green; }\\n\\n.example-section {\\n  margin: 10px; }\\n\\n.mat-basic-chip {\\n  background-color: #e0e0e0;\\n  color: rgba(0, 0, 0, 0.87);\\n  transition: box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);\\n  display: inline-flex;\\n  padding: 7px 12px;\\n  border-radius: 24px;\\n  align-items: center;\\n  cursor: default;\\n  margin: 4px; }\\n\\n.mat-checkbox,\\n.mat-radio-button {\\n  margin: 10px; }\\n\\n.example-empty-state {\\n  background-image: url(); }\\n\\n::ng-deep.ag-icon.ag-icon-checkbox-checked {\\n  background-image: url(\\\"/assets/checkbox.svg\\\") !important; }\\n\\n::ng-deep.ag-icon.ag-icon-checkbox-unchecked {\\n  background-image: url(\\\"/assets/check_box_unchecked.svg\\\") !important;\\n  background-size: 24px 24px; }\\n\\nli.display_animal {\\n  margin-top: 10px;\\n  list-style-type: none; }\\n\"","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormControl, Validators } from '@angular/forms';\r\nimport { MatDialog, MatDialogRef } from '@angular/material';\r\nimport { LangChangeEvent, TranslateService } from '@ngx-translate/core';\r\nimport * as agGrid from 'ag-grid-community';\r\nimport 'ag-grid-enterprise';\r\nimport { forkJoin as observableForkJoin, Observable, Subject } from \"rxjs\";\r\nimport { concatMap, map, startWith, takeUntil } from \"rxjs/operators\";\r\nimport { AtlasTranslationService } from '../../../core/services/atlas-translation.service';\r\nimport { FABType } from \"../../../shared/components/floating-action-button/floating-action-button-type.enum\";\r\nimport { AtlasAgGridParam } from '../../../shared/entities/atlas-ag-grid-param.entity';\r\nimport { FloatingActionButtonActions } from '../../../shared/entities/floating-action-buttons-actions.entity';\r\nimport { AgGridService } from '../../../shared/services/ag-grid.service';\r\nimport { MockDataProviderService } from '../../mock-data-provider.service';\r\nimport hiddenEnRessourceFile from './translations/en.json';\r\nimport hiddenFrRessourceFile from './translations/fr.json';\r\nimport { ListSearchDialogComponent } from './ux-dialog-list-search.component';\r\nimport { DialogComponent } from \"./ux-dialog-text.component\";\r\n\r\nexport interface User {\r\n    name: string;\r\n}\r\n\r\n@Component({\r\n    selector: 'atlas-ux-components-list',\r\n    templateUrl: './ux-components-list.component.html',\r\n    styleUrls: ['./ux-components-list.component.scss'],\r\n})\r\nexport class UxComponentsListComponent implements OnInit {\r\n    // --String ressources\r\n    translationRessourceMap: Map<string, string> = new Map([\r\n        ['DIALOG_CLOSED', ''],\r\n    ]);\r\n\r\n    destroy$ = new Subject();\r\n    constructor(\r\n        private http: HttpClient,\r\n        private dialog: MatDialog,\r\n        public gridService: AgGridService,\r\n        public translateService: TranslateService,\r\n        public atlasTranslationService: AtlasTranslationService,\r\n        private agGridDataProvider: MockDataProviderService,\r\n    ) {\r\n        translateService.setTranslation('en', hiddenEnRessourceFile, true);\r\n        translateService.setTranslation('fr', hiddenFrRessourceFile, true);\r\n        this.names = [\r\n            { name: 'Child 1', selected: false },\r\n            { name: 'Child 2', selected: false },\r\n            { name: 'Child 3', selected: false },\r\n        ];\r\n\r\n        this.atlasAgGridParam = this.gridService.getAgGridParam();\r\n\r\n        translateService.onLangChange\r\n            .pipe(\r\n                concatMap((event: LangChangeEvent) => this.getTranslatedColumnDefs()),\r\n            )\r\n            .subscribe(() => {\r\n                this.atlasTranslationService.getTranslatedRessourceMap(this.translationRessourceMap);\r\n                this.gridApi.refreshHeader();\r\n            });\r\n    }\r\n    links = ['First', 'Second', 'Third'];\r\n    activeLink = this.links[0];\r\n\r\n    selectedIndex: number = 0;\r\n    atlasAgGridParam: AtlasAgGridParam;\r\n\r\n    /**\r\n     * For Dialog\r\n     */\r\n\r\n    dialogRef: MatDialogRef<DialogComponent>;\r\n\r\n    /**\r\n\t *  For checkbox\r\n\t */\r\n    names: any;\r\n    selectedAll: any;\r\n    indeterminate: false;\r\n\r\n    // ag grid\r\n\r\n    private gridApi: agGrid.GridApi;\r\n    private gridColumnApi;\r\n    rowData: any;\r\n    quickSumModeActivated = false;\r\n    selectedColumnsArray: Array<{ 'name': string, 'sum': number }> = new Array();\r\n    columnDefs: agGrid.ColDef[];\r\n\r\n    /**\r\n\t * For Autocomplete\r\n\t */\r\n    myControl = new FormControl();\r\n    options: User[] = [{ name: 'Mary' }, { name: 'Shelley' }, { name: 'Igor' }];\r\n    filteredOptions: Observable<User[]>;\r\n\r\n    /**\r\n\t *  For custom input\r\n\t */\r\n    email = new FormControl('', [Validators.required, Validators.email]);\r\n    animal: string;\r\n    fname: string;\r\n\r\n    /**\r\n     * For FAB\r\n     */\r\n\r\n    fabMenuActions: FloatingActionButtonActions[];\r\n    fabTitle: string;\r\n    fabType: FABType;\r\n\r\n    onGridReady(params) {\r\n        this.gridApi = params.api;\r\n        this.gridColumnApi = params.columnApi;\r\n        this.gridColumnApi.autoSizeAllColumns();\r\n        this.getTranslatedColumnDefs()\r\n            .pipe(\r\n                takeUntil(this.destroy$),\r\n            ).subscribe(() => {\r\n                this.gridApi.refreshHeader();\r\n            });\r\n    }\r\n\r\n    showOrHideColum(event, col) {\r\n        this.gridColumnApi.setColumnVisible(col.colId, col.hide || false);\r\n        event.stopPropagation();\r\n        return false;\r\n    }\r\n    onAddOrDeleteColumn(event) {\r\n        const cols = this.columnDefs.filter(\r\n            (col) => col.colId === event.column.colId,\r\n        );\r\n        if (cols.length !== 1) { return; }\r\n        cols[0].hide = !event.visible;\r\n    }\r\n    onRangeSelectionChanged(event) {\r\n        this.selectedColumnsArray = [];\r\n        const rangeSelections = this.gridApi.getRangeSelections();\r\n        if (!rangeSelections || rangeSelections.length === 0) {\r\n            return;\r\n        }\r\n        const firstRange = rangeSelections[0];\r\n        const startRow = Math.min(firstRange.start.rowIndex, firstRange.end.rowIndex);\r\n        const endRow = Math.max(firstRange.start.rowIndex, firstRange.end.rowIndex);\r\n        const api = this.gridApi;\r\n        const columnIndex = 0;\r\n        let sum = 0;\r\n        let columnName: string;\r\n        const selectedColumnsArray = this.selectedColumnsArray;\r\n        firstRange.columns.forEach(function (column: any) {\r\n            sum = 0;\r\n            for (let rowIndex = startRow; rowIndex <= endRow; rowIndex++) {\r\n                columnName = column.colDef.headerName;\r\n                const rowModel = api.getModel();\r\n                const rowNode = rowModel.getRow(rowIndex);\r\n                const value = api.getValue(column, rowNode);\r\n                if (typeof value === 'number') {\r\n                    sum += value;\r\n                }\r\n            }\r\n            selectedColumnsArray.push({ name: columnName, sum });\r\n        });\r\n        this.selectedColumnsArray = selectedColumnsArray;\r\n    }\r\n\r\n    toggleQuickSum() {\r\n        this.quickSumModeActivated = !this.quickSumModeActivated;\r\n        this.selectedColumnsArray = [];\r\n    }\r\n    onClearRange() {\r\n        this.gridApi.clearRangeSelection();\r\n        this.selectedColumnsArray = [];\r\n    }\r\n    applyFilter(filterValue: string) {\r\n        this.gridApi.setQuickFilter(filterValue.trim().toLowerCase());\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.atlasTranslationService.getTranslatedRessourceMap(this.translationRessourceMap);\r\n        // for ag-grid\r\n        this.columnDefs = this.agGridDataProvider.getColumnDef();\r\n        this.rowData = this.http.get('https://api.myjson.com/bins/15psn9');\r\n        /**\r\n\t\t * For Autocomplete\r\n\t\t */\r\n        this.filteredOptions = this.myControl.valueChanges.pipe(\r\n            startWith<string | User>(''),\r\n            map((value) => (typeof value === 'string' ? value : value.name)),\r\n            map((name) => (name ? this._filter(name) : this.options.slice())),\r\n        );\r\n        // For FAB\r\n        this.initFAB();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destroy$.next();\r\n    }\r\n\r\n    /**\r\n\t * For Autocomplete\r\n\t */\r\n    displayFn(user?: User): string | undefined {\r\n        return user ? user.name : undefined;\r\n    }\r\n\r\n    private _filter(name: string): User[] {\r\n        const filterValue = name.toLowerCase();\r\n\r\n        return this.options.filter(\r\n            (option) => option.name.toLowerCase().indexOf(filterValue) === 0,\r\n        );\r\n    }\r\n\r\n    getErrorMessage() {\r\n        return this.email.hasError('required')\r\n            ? 'You must enter a value'\r\n            : this.email.hasError('email')\r\n                ? 'Not a valid email'\r\n                : '';\r\n    }\r\n    /**\r\n\t *  For checkbox\r\n\t */\r\n    selectAll() {\r\n        for (let i = 0; i < this.names.length; i++) {\r\n            this.names[i].selected = this.selectedAll;\r\n        }\r\n    }\r\n    checkIfAllSelected() {\r\n        this.selectedAll = this.names.every(function (item: any) {\r\n            return item.selected === true;\r\n        });\r\n    }\r\n    checkIfOneSelected() {\r\n        if (this.selectedAll === true) {\r\n            this.indeterminate = false;\r\n        } else {\r\n            this.indeterminate = this.names.some(function (item: any) {\r\n                return item.selected === true;\r\n            });\r\n        }\r\n    }\r\n    openAddFileDialog(): void {\r\n        const dialogRef = this.dialog.open(DialogComponent, {\r\n            width: '250px',\r\n            data: { fname: this.fname, animal: this.animal },\r\n        });\r\n\r\n        dialogRef.afterClosed()\r\n            .pipe(\r\n                takeUntil(this.destroy$),\r\n            ).subscribe((result) => {\r\n                console.log(this.translationRessourceMap['DIALOG_CLOSED']);\r\n                this.animal = result;\r\n            });\r\n    }\r\n\r\n    openDialog(): void {\r\n        const dialogRef = this.dialog.open(ListSearchDialogComponent, {\r\n            width: '80%',\r\n        });\r\n    }\r\n\r\n    // for tab matching index\r\n    onSelectedIndexChanged(value: number) {\r\n        this.selectedIndex = value;\r\n    }\r\n\r\n    /**\r\n     * For FAB\r\n     */\r\n    initFAB() {\r\n        this.fabTitle = 'FAB Button';\r\n        this.fabType = FABType.MiniFAB;\r\n        this.fabMenuActions = [\r\n            {\r\n                icon: 'edit',\r\n                text: 'Edit Trade',\r\n                action: 'editTrade',\r\n                disabled: false,\r\n                index: 1,\r\n            },\r\n            {\r\n                icon: 'add',\r\n                text: 'Create Trade',\r\n                action: 'createTrade',\r\n                disabled: false,\r\n                index: 0,\r\n            },\r\n        ];\r\n    }\r\n\r\n    onFabActionClicked(action: string) {\r\n        switch (action) {\r\n            case 'createTrade': {\r\n                console.log('createTrade');\r\n                break;\r\n            }\r\n            case 'editTrade': {\r\n                console.log('editTrade');\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    getTranslatedColumnDefs(): Observable<agGrid.ColDef[]> {\r\n        const observableList: Array<Observable<string>> = [];\r\n        this.columnDefs.forEach((column) => {\r\n            if (column.colId) {\r\n                const headerToTranslate: string = column.colId;\r\n                observableList.push(this.translateService.get(headerToTranslate));\r\n            }\r\n        });\r\n\r\n        return observableForkJoin(observableList).pipe(\r\n            map((result: string[]) => {\r\n                for (let i = 0; i < this.columnDefs.length; i++) {\r\n                    if (this.columnDefs[i].colId) {\r\n                        const headerNameTranslation: string = result[i];\r\n                        this.gridApi.getColumnDef(this.columnDefs[i].colId).headerName = headerNameTranslation;\r\n                    }\r\n                }\r\n                return this.columnDefs;\r\n            }));\r\n    }\r\n}\r\n","module.exports = \"<h1 mat-dialog-title>Lightbox Title\\r\\n    <button mat-icon-button\\r\\n            mat-dialog-close\\r\\n            class=\\\"close-dialog-btn\\\">\\r\\n        <mat-icon aria-label=\\\"Closing button\\\">clear</mat-icon>\\r\\n    </button></h1>\\r\\n\\r\\n<mat-dialog-content>\\r\\n    <ag-grid-angular style=\\\"height: 500px;\\\"\\r\\n                     class=\\\"ag-theme-material\\\"\\r\\n                     [rowData]=\\\"rowData\\\"\\r\\n                     [columnDefs]=\\\"columnDefs\\\"\\r\\n                     [rowHeight]=\\\"24\\\">\\r\\n    </ag-grid-angular>\\r\\n</mat-dialog-content>\\r\\n\\r\\n\\r\\n<mat-divider></mat-divider>\\r\\n\\r\\n<mat-dialog-actions>\\r\\n    <button mat-button\\r\\n            mat-dialog-close>discard</button>\\r\\n</mat-dialog-actions>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'atlas-list-search-dialog',\r\n    templateUrl: 'ux-dialog-list-search.component.html',\r\n})\r\nexport class ListSearchDialogComponent {\r\n    rowData = [\r\n        { make: 'Toyota', model: 'Celica', price: 35000 },\r\n        { make: 'Ford', model: 'Mondeo', price: 32000 },\r\n        { make: 'Porsche', model: 'Boxter', price: 72000 },\r\n    ];\r\n\r\n    columnDefs = [\r\n        { headerName: 'Make', field: 'make' },\r\n        { headerName: 'Model', field: 'model' },\r\n        { headerName: 'Price', field: 'price' },\r\n        { checkboxSelection: true },\r\n    ];\r\n\r\n    constructor() { }\r\n\r\n}\r\n","module.exports = \"<h1>{{'DIALOG_BOX.GREETINGS' | translate}} {{data.fname}}</h1>\\r\\n<div mat-dialog-content>\\r\\n    <p>{{'DIALOG_BOX.QUESTION' | translate}}</p>\\r\\n    <mat-form-field>\\r\\n        <input matInput\\r\\n               [(ngModel)]=\\\"data.animal\\\"\\r\\n               required>\\r\\n    </mat-form-field>\\r\\n</div>\\r\\n<mat-dialog-actions>\\r\\n    <button mat-raised-button\\r\\n            type=\\\"button\\\"\\r\\n            [mat-dialog-close]=\\\"data.animal\\\">Ok</button>\\r\\n</mat-dialog-actions>\\r\\n\"","import { Component, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\n\r\nexport interface DialogData {\r\n    animal: string;\r\n    fname: string;\r\n}\r\n@Component({\r\n    selector: 'atr-ux-components-list',\r\n    templateUrl: './ux-dialog-text.component.html',\r\n    styleUrls: ['./ux-components-list.component.scss'],\r\n})\r\n\r\nexport class DialogComponent {\r\n    hide = false;\r\n    constructor(\r\n        public dialogRef: MatDialogRef<DialogComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: DialogData) { }\r\n\r\n}\r\n","module.exports = \"<header class=\\\"header-background\\\"\\r\\n        style=\\\"background-image:url(http://www.almowatine.com/wp-content/uploads/2017/10/Le-Maroc-d%C3%A9tiendra-un-appel-doffres-pour-lachat-de-bl%C3%A9-am%C3%A9ricain.jpg)\\\">\\r\\n    <div class=\\\"header-container\\\">\\r\\n        <div fxLayout=\\\"row\\\"\\r\\n             fxLayoutAlign=\\\"center start\\\">\\r\\n            <h1>Trade Capture</h1>\\r\\n        </div>\\r\\n        <div fxLayout=\\\"row\\\"\\r\\n             fxLayoutAlign=\\\"center start\\\"\\r\\n             fxLayoutGap=\\\"5%\\\">\\r\\n            <mat-button-toggle-group class=\\\"toggle-group\\\"\\r\\n                                     name=\\\"toggleStyle\\\"\\r\\n                                     aria-label=\\\"Example button\\\">\\r\\n                <mat-button-toggle value=\\\"\\\">toggle</mat-button-toggle>\\r\\n                <mat-button-toggle value=\\\"\\\">toggle</mat-button-toggle>\\r\\n            </mat-button-toggle-group>\\r\\n            <mat-form-field fxFlex=\\\"25%\\\">\\r\\n                <input matInput\\r\\n                       placeholder=\\\"Contract Reference\\\"\\r\\n                       value=\\\"XXXXXXXXXXXXXxx\\\">\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n        <div fxLayout=\\\"row\\\"\\r\\n             fxLayoutAlign=\\\"center start\\\"\\r\\n             fxLayoutGap=\\\"5%\\\">\\r\\n            <mat-form-field fxFlex=\\\"10%\\\">\\r\\n                <input matInput\\r\\n                       placeholder=\\\"Contract Reference\\\"\\r\\n                       value=\\\"XXXXXXXXXXXXXxx\\\">\\r\\n            </mat-form-field>\\r\\n            <mat-form-field fxFlex=\\\"10%\\\">\\r\\n                <input matInput\\r\\n                       placeholder=\\\"Contract Reference\\\"\\r\\n                       value=\\\"XXXXXXXXXXXXXxx\\\">\\r\\n            </mat-form-field>\\r\\n            <mat-form-field fxFlex=\\\"10%\\\">\\r\\n                <input matInput\\r\\n                       placeholder=\\\"Contract Reference\\\"\\r\\n                       value=\\\"XXXXXXXXXXXXXxx\\\">\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n    </div>\\r\\n</header>\\r\\n<main>\\r\\n    <mat-tab-group dynamicHeight>\\r\\n        <mat-tab label=\\\"LAYOUT 2 COLUMNS\\\">\\r\\n            <!-- Layout divided by column -->\\r\\n            <!-- container -->\\r\\n            <div fxLayout=\\\"row\\\"\\r\\n                 fxLayout.md=\\\"column\\\"\\r\\n                 fxLayoutAlign=\\\"space-between\\\"\\r\\n                 fxLayoutGap=\\\"5%\\\">\\r\\n                <!-- Left -->\\r\\n                <div fxLayout=\\\"column\\\"\\r\\n                     fxLayoutAlign=\\\"start center\\\"\\r\\n                     fxFlex=\\\"45\\\"\\r\\n                     fxFlexOffset=\\\"5%\\\">\\r\\n                    <mat-card fxFlexOffset=\\\"5%\\\">\\r\\n                        <mat-card-header>\\r\\n                            <mat-card-title>\\r\\n                                <h2>Counterparty</h2>\\r\\n                            </mat-card-title>\\r\\n                        </mat-card-header>\\r\\n                        <mat-card-content>\\r\\n                            <p>\\r\\n                                Lorem ipsum dolor sit amet consectetur adipisicing elit. Recusandae illo repellendus voluptas quasi deleniti asperiores eius\\r\\n                                tempore eos, suscipit doloribus laudantium temporibus eaque possimus accusantium praesentium.\\r\\n                                Quaerat quod nemo rem.\\r\\n                            </p>\\r\\n                            <mat-form-field class=\\\"mat-form-field\\\">\\r\\n                                <input matInput\\r\\n                                       placeholder=\\\"Input\\\"\\r\\n                                       placeholder=\\\"Field with \\\">\\r\\n                                <mat-icon matSuffix\\r\\n                                          matTooltip=\\\"This is a tooltip\\\">error</mat-icon>\\r\\n                            </mat-form-field>\\r\\n                        </mat-card-content>\\r\\n                    </mat-card>\\r\\n                    <mat-card>\\r\\n                        <mat-card-header>\\r\\n                            <mat-card-title>\\r\\n                                <h2>Quantity</h2>\\r\\n                            </mat-card-title>\\r\\n                        </mat-card-header>\\r\\n                        <mat-card-content>\\r\\n                            <p>\\r\\n                                Lorem ipsum dolor sit amet consectetur adipisicing elit. Recusandae illo repellendus voluptas quasi deleniti asperiores eius\\r\\n                                tempore eos, suscipit doloribus laudantium temporibus eaque possimus accusantium praesentium.\\r\\n                                Quaerat quod nemo rem.\\r\\n                            </p>\\r\\n                            <mat-form-field class=\\\"mat-form-field\\\">\\r\\n                                <input matInput\\r\\n                                       placeholder=\\\"Input\\\"\\r\\n                                       placeholder=\\\"Field with \\\">\\r\\n                                <mat-icon matSuffix\\r\\n                                          matTooltip=\\\"This is a tooltip\\\">error</mat-icon>\\r\\n                            </mat-form-field>\\r\\n                        </mat-card-content>\\r\\n                    </mat-card>\\r\\n                </div>\\r\\n                <!-- Rigth -->\\r\\n                <div fxLayout=\\\"column\\\"\\r\\n                     fxLayoutAlign=\\\"start center\\\"\\r\\n                     fxFlex=\\\"45\\\">\\r\\n                    <mat-card fxFlexOffset=\\\"5%\\\"\\r\\n                              fxFlexOffset.md=\\\"0\\\"\\r\\n                              fxFlexOffset.xs=\\\"0\\\">\\r\\n                        <mat-card-header>\\r\\n                            <mat-card-title>\\r\\n                                <h2>Commodity</h2>\\r\\n                            </mat-card-title>\\r\\n                        </mat-card-header>\\r\\n                        <mat-card-content>\\r\\n                            <div fxLayout=\\\"row\\\">\\r\\n                                <img mat-card-sm-image\\r\\n                                     src=\\\"https://material.angular.io/assets/img/examples/shiba1.jpg\\\"\\r\\n                                     fxFlexOffset=\\\"2%\\\">\\r\\n                                <div fxLayout=\\\"column\\\"\\r\\n                                     fxFlexOffset=\\\"2%\\\">\\r\\n                                    <h4 class=\\\"no-margin\\\">RIC_ING_WWW_2347</h4>\\r\\n                                    <p class=\\\"no-margin\\\">\\r\\n                                        Lorem ipsum dolor sit amet consectetur adipisicing elit. Ad doloremque maxime inventore quo nulla doloribus dolore\\r\\n                                    </p>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div fxLayout=\\\"row\\\"\\r\\n                                 fxLayoutGap=\\\"5%\\\">\\r\\n                                <div fxLayout=\\\"column\\\">\\r\\n                                    <h5 class=\\\"no-margin data-label \\\"\\r\\n                                        fxFlexOffset=\\\"30% \\\">Code value</h5>\\r\\n                                    <p class=\\\"no-margin \\\">XXXXXXX</p>\\r\\n                                </div>\\r\\n                                <div fxLayout=\\\"column \\\"\\r\\n                                     fxFlexOffset=\\\"1% \\\">\\r\\n                                    <h5 class=\\\"no-margin data-label \\\"\\r\\n                                        fxFlexOffset=\\\"30% \\\">Code value</h5>\\r\\n                                    <p class=\\\"no-margin \\\">XXXXXXX</p>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </mat-card-content>\\r\\n                    </mat-card>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <mat-divider></mat-divider>\\r\\n            <div fxLayout=\\\"row \\\"\\r\\n                 fxLayoutAlign=\\\"space-between center \\\">\\r\\n                <div fxLayout=\\\"column \\\"\\r\\n                     fxLayoutAlign=\\\"start start \\\">\\r\\n                    <button mat-button\\r\\n                            fxFlexOffset=\\\"20% \\\">cancel</button>\\r\\n                </div>\\r\\n                <div fxLayout=\\\"column \\\"\\r\\n                     fxLayoutAlign=\\\"start end \\\">\\r\\n                    <div fxLayout=\\\"row \\\"\\r\\n                         fxLayoutAlign=\\\"end start \\\"\\r\\n                         fxFlexOffset=\\\"20% \\\">\\r\\n                        <button mat-button>add costs</button>\\r\\n                        <button mat-raised-button>save</button>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </mat-tab>\\r\\n\\r\\n    </mat-tab-group>\\r\\n</main>\"","module.exports = \"main {\\n  margin: 50px; }\\n\\n.example-card {\\n  max-width: 100%; }\\n\\n.header-background {\\n  background: bottom/cover url(\\\"/assets/img/empty-status.png\\\"); }\\n\\n.no-margin {\\n  margin: 0; }\\n\\n.data-label {\\n  color: #928D8F; }\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'atr-ux-layout-template',\r\n    templateUrl: './ux-layout-template.component.html',\r\n    styleUrls: ['./ux-layout-template.component.scss']\r\n})\r\nexport class UxLayoutTemplateComponent implements OnInit {\r\n\r\n    constructor() { }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n}\r\n\r\n\r\n// <mat-tab label=\"Layout with row wrap\">\r\n// <!-- Layout by row wrap -->\r\n// <div fxLayout=\"row wrap \">\r\n//     <div fxFlex=\"100\" fxFlex.gt-sm=\"45\" fxFlex.gt-xs=\"100\" fxFlexOffset.gt-sm=\"2\" fxFlexOffset=\"0\">\r\n//         <mat-card>\r\n//             <mat-card-header>\r\n//                 <mat-card-title>\r\n//                     <h2>Counterparty</h2>\r\n//                 </mat-card-title>\r\n//             </mat-card-header>\r\n//             <mat-card-content>\r\n//                 <p>\r\n//                     Lorem ipsum dolor sit amet consectetur adipisicing elit. Recusandae illo repellendus voluptas quasi deleniti asperiores eius tempore eos, suscipit doloribus laudantium temporibus eaque possimus accusantium praesentium. Quaerat quod nemo rem.\r\n//                 </p>\r\n//                 <mat-form-field class=\"mat-form-field \">\r\n//                     <input matInput placeholder=\"Input \" placeholder=\"Field with \">\r\n//                     <mat-icon matSuffix matTooltip=\"This is a tooltip \">error</mat-icon>\r\n//                 </mat-form-field>\r\n//             </mat-card-content>\r\n//         </mat-card>\r\n//     </div>\r\n//     <div fxFlex=\"100\" fxFlex.gt-sm=\"45\" fxFlex.gt-xs=\"100\" fxFlexOffset.gt-sm=\"5\" fxFlexOffset=\"0\">\r\n//         <mat-card>\r\n//             <mat-card-header>\r\n//                 <mat-card-title>\r\n//                     <h2>Commodity</h2>\r\n//                 </mat-card-title>\r\n//             </mat-card-header>\r\n//             <mat-card-content>\r\n//                 <p>\r\n//                     Lorem ipsum dolor sit amet consectetur adipisicing elit. Ad doloremque maxime inventore quo nulla doloribus dolore, veritatis ipsam nisi quae, incidunt animi repudiandae dolorum? Molestiae illo odio quis placeat rerum.\r\n//                 </p>\r\n//             </mat-card-content>\r\n//         </mat-card>\r\n//     </div>\r\n//     <div fxFlex=\"100\" fxFlex.gt-sm=\"45\" fxFlex.gt-xs=\"100\" fxFlexOffset.gt-sm=\"2\" fxFlexOffset=\"0\">\r\n//         <mat-card>\r\n//             <mat-card-header>\r\n//                 <mat-card-title>\r\n//                     <h2>Quantity</h2>\r\n//                 </mat-card-title>\r\n//             </mat-card-header>\r\n//             <mat-card-content>\r\n//                 <p>\r\n//                     Lorem ipsum dolor sit amet consectetur adipisicing elit. Recusandae illo repellendus voluptas quasi deleniti asperiores eius tempore eos, suscipit doloribus laudantium temporibus eaque possimus accusantium praesentium. Quaerat quod nemo rem.\r\n//                 </p>\r\n//                 <mat-form-field class=\"mat-form-field \">\r\n//                     <input matInput placeholder=\"Input \" placeholder=\"Field with \">\r\n//                     <mat-icon matSuffix matTooltip=\"This is a tooltip \">error</mat-icon>\r\n//                 </mat-form-field>\r\n//             </mat-card-content>\r\n//         </mat-card>\r\n//     </div>\r\n//     <div fxFlex=\"100\" fxFlex.gt-sm=\"45\" fxFlex.gt-xs=\"100\" fxFlexOffset.gt-sm=\"5\" fxFlexOffset=\"0\">\r\n//         <mat-card>\r\n//             <mat-card-header>\r\n//                 <mat-card-title>\r\n//                     <h2>Test</h2>\r\n//                 </mat-card-title>\r\n//             </mat-card-header>\r\n//             <mat-card-content>\r\n//                 <p>\r\n//                     Lorem ipsum dolor sit amet consectetur adipisicing elit. Recusandae illo repellendus voluptas quasi deleniti asperiores eius tempore eos, suscipit doloribus laudantium temporibus eaque possimus accusantium praesentium. Quaerat quod nemo rem.\r\n//                 </p>\r\n//                 <mat-form-field class=\"mat-form-field \">\r\n//                     <input matInput placeholder=\"Input \" placeholder=\"Field with \">\r\n//                     <mat-icon matSuffix matTooltip=\"This is a tooltip \">error</mat-icon>\r\n//                 </mat-form-field>\r\n//             </mat-card-content>\r\n//         </mat-card>\r\n//     </div>\r\n// </div>\r\n// </mat-tab>\r\n// <mat-tab label=\"Flex Order Layout\">\r\n// <!-- Layout with card order -->\r\n// <div fxLayout=\"row\" fxLayout.xs=\"column\" class=\"container-lg\" fxLayoutGap=\"5%\">\r\n//     <div fxFlex=\"20\" fxFlexOrder.xs=\"2\">\r\n//         <mat-card>\r\n//             <mat-card-header>\r\n//                 <h2>1</h2>\r\n//             </mat-card-header>\r\n//             <mat-card-content>\r\n//                 <p> fxFlex=\"20\" </p>\r\n//             </mat-card-content>\r\n//         </mat-card>\r\n//     </div>\r\n//     <div fxFlex=\"30\">\r\n//         <mat-card>\r\n//             <mat-card-header>\r\n//                 <h2>2</h2>\r\n//             </mat-card-header>\r\n//             <mat-card-content>\r\n//                 <p> fxFlex=\"30\" </p>\r\n//             </mat-card-content>\r\n//         </mat-card>\r\n//     </div>\r\n//     <div fxFlex=\"50\">\r\n//         <mat-card>\r\n//             <mat-card-header>\r\n//                 <h2>3</h2>\r\n//             </mat-card-header>\r\n//             <mat-card-content>\r\n//                 <p> fxFlex=\"50\" </p>\r\n//             </mat-card-content>\r\n//         </mat-card>\r\n//     </div>\r\n// </div>\r\n// </mat-tab>\r\n"],"sourceRoot":""}