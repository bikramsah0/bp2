(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["financial-financial-module"],{

/***/ "./Client/app/financial/components/cash-matching/cash-matching-dialog/cash-matching-dialog/cash-matching-dialog.component.html":
/*!*************************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/cash-matching/cash-matching-dialog/cash-matching-dialog/cash-matching-dialog.component.html ***!
  \*************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<h1 mat-dialog-title> System will match the transactions. please provide the data to proceed\r\n    <button mat-icon-button\r\n            mat-dialog-close\r\n            class=\"close-dialog-btn\">\r\n        <mat-icon aria-label=\"Closing button\">clear</mat-icon>\r\n    </button></h1>\r\n<mat-dialog-content class=\"mat-dialog-content\">\r\n    <div fxLayout=\"row\"\r\n         fxLayoutAlign=\"none center\"\r\n         fxLayoutWrap\r\n         fxLayoutGap=\"10px\">\r\n        <p>{{dialogData.text}}</p>\r\n    </div>\r\n</mat-dialog-content>\r\n<div fxLayout=\"column\">\r\n    <div fxLayout=\"row\"\r\n         fxLayoutAlign=\"left start\"\r\n         fxLayoutGap=\"10%\"\r\n         class=\"confirmation-input-container\">\r\n        <mat-form-field fxFlex=\"40%\">\r\n            <input matInput\r\n                   [matDatepicker]=\"documentDatePicker\"\r\n                   placeholder=\"Payment Document Date\"\r\n                   matTooltip=\"Payment Document Date\"\r\n                   [required]=\"paymentDocDateCtrl.isRequired\"\r\n                   autocomplete=\"off\"\r\n                   [formControl]='paymentDocDateCtrl'>\r\n            <mat-datepicker-toggle matSuffix\r\n                                   [for]=\"documentDatePicker\"></mat-datepicker-toggle>\r\n            <mat-datepicker #documentDatePicker></mat-datepicker>\r\n            <mat-error *ngIf=\"paymentDocDateCtrl.hasError('required')\">\r\n                This field is required\r\n            </mat-error>\r\n            <mat-error *ngIf=\"paymentDocDateCtrl.hasError('isBeforeDateValid')\">\r\n                Date cannot be before the document date\r\n            </mat-error>\r\n            <mat-error *ngIf=\"paymentDocDateCtrl.hasError('isDateAfterValid')\">\r\n                Date cannot be greater than the system date\r\n            </mat-error>\r\n        </mat-form-field>\r\n    </div>\r\n    <div fxLayout=\"row\"\r\n         fxLayoutAlign=\"space-between end\">\r\n        <button mat-button\r\n                (click)=\"onCancelButtonClicked()\">CANCEL</button>\r\n\r\n        <button mat-button\r\n                (click)=\"onProceedButtonClicked()\">PROCEED</button>\r\n    </div>\r\n</div>"

/***/ }),

/***/ "./Client/app/financial/components/cash-matching/cash-matching-dialog/cash-matching-dialog/cash-matching-dialog.component.scss":
/*!*************************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/cash-matching/cash-matching-dialog/cash-matching-dialog/cash-matching-dialog.component.scss ***!
  \*************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".mat-dialog-content {\n  width: 500px; }\n\n.confirmation-input-container {\n  margin-top: 2%; }\n"

/***/ }),

/***/ "./Client/app/financial/components/cash-matching/cash-matching-dialog/cash-matching-dialog/cash-matching-dialog.component.ts":
/*!***********************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/cash-matching/cash-matching-dialog/cash-matching-dialog/cash-matching-dialog.component.ts ***!
  \***********************************************************************************************************************************/
/*! exports provided: CashMatchingDialogComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CashMatchingDialogComponent", function() { return CashMatchingDialogComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _core_services_company_manager_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../../core/services/company-manager.service */ "./Client/app/core/services/company-manager.service.ts");
/* harmony import */ var _shared_components_base_form_component_base_form_component_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../shared/components/base-form-component/base-form-component.component */ "./Client/app/shared/components/base-form-component/base-form-component.component.ts");
/* harmony import */ var _shared_entities_atlas_form_control__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../../shared/entities/atlas-form-control */ "./Client/app/shared/entities/atlas-form-control.ts");
/* harmony import */ var _shared_services_form_configuration_provider_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../../shared/services/form-configuration-provider.service */ "./Client/app/shared/services/form-configuration-provider.service.ts");
/* harmony import */ var _shared_services_http_services_preaccounting_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../../shared/services/http-services/preaccounting.service */ "./Client/app/shared/services/http-services/preaccounting.service.ts");
/* harmony import */ var _shared_validators_date_validators_validator__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../../shared/validators/date-validators.validator */ "./Client/app/shared/validators/date-validators.validator.ts");
/* harmony import */ var _document_date_dialog_document_date_dialog_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../document-date-dialog/document-date-dialog.component */ "./Client/app/financial/components/cash-matching/cash-matching-dialog/document-date-dialog/document-date-dialog.component.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};











var CashMatchingDialogComponent = /** @class */ (function (_super) {
    __extends(CashMatchingDialogComponent, _super);
    function CashMatchingDialogComponent(formBuilder, thisDialogRef, dialog, preAccountingService, data, formConfigurationProvider, companyManager) {
        var _this = _super.call(this, formConfigurationProvider) || this;
        _this.formBuilder = formBuilder;
        _this.thisDialogRef = thisDialogRef;
        _this.dialog = dialog;
        _this.preAccountingService = preAccountingService;
        _this.data = data;
        _this.formConfigurationProvider = formConfigurationProvider;
        _this.companyManager = companyManager;
        _this.isDialogClosedValue = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        _this.paymentDocDateCtrl = new _shared_entities_atlas_form_control__WEBPACK_IMPORTED_MODULE_6__["AtlasFormControl"]('PaymentDocumentDate');
        _this.dialogData = data;
        _this.documentDate = _this.dialogData.value;
        return _this;
    }
    CashMatchingDialogComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.setValidators();
        this.bindConfiguration();
        this.paymentDocDateCtrl.setValue(this.companyManager.getCurrentCompanyDate());
        this.documentDate = this.dialogData.value;
        this.preAccountingService.getAccountingSetupDetails().subscribe(function (data) {
            if (data) {
                _this.lastMonthClosedForOperation = data.lastMonthClosedForOperation;
            }
        });
    };
    CashMatchingDialogComponent.prototype.onProceedButtonClicked = function () {
        var _this = this;
        this.paymentDocumentDate = new Date(this.paymentDocDateCtrl.value);
        if (new Date(new Date(this.lastMonthClosedForOperation).toLocaleDateString()) >
            new Date(this.paymentDocDateCtrl.value)) {
            var paymentDocumentDateDialog = this.dialog.open(_document_date_dialog_document_date_dialog_component__WEBPACK_IMPORTED_MODULE_10__["DocumentDateDialogComponent"], {
                data: {
                    title: 'Payment Document Date Dialog',
                    text: 'Please note that any revaluation journal will be posted on the next open accounting month',
                    okButton: 'Confirm',
                    cancelButton: 'Cancel',
                    value: this.paymentDocumentDate,
                },
            });
            this.subscriptions.push(paymentDocumentDateDialog.afterClosed().subscribe(function (answer) {
                _this.documentDateDialogClosed = answer ? true : false;
                if (answer && answer['buttonClicked']) {
                    _this.thisDialogRef.close({ buttonClicked: true, buttonValue: answer['buttonValue'] });
                    _this.isDialogClosed = answer['buttonClicked'];
                }
            }));
        }
        else {
            this.thisDialogRef.close({ buttonClicked: true, buttonValue: this.paymentDocumentDate });
        }
    };
    CashMatchingDialogComponent.prototype.onCancelButtonClicked = function () {
        this.thisDialogRef.close(false);
    };
    CashMatchingDialogComponent.prototype.setValidators = function () {
        this.paymentDocDateCtrl.setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required, Object(_shared_validators_date_validators_validator__WEBPACK_IMPORTED_MODULE_9__["isAfterDate"])(this.companyManager.getCurrentCompanyDate()),
            Object(_shared_validators_date_validators_validator__WEBPACK_IMPORTED_MODULE_9__["isDateBeforeControlDate"])(moment__WEBPACK_IMPORTED_MODULE_3__(this.documentDate))]));
    };
    CashMatchingDialogComponent.prototype.getFormGroup = function () {
        this.formGroup = this.formBuilder.group({
            paymentDocDateCtrl: this.paymentDocDateCtrl,
        });
        return _super.prototype.getFormGroup.call(this);
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], CashMatchingDialogComponent.prototype, "isDialogClosedValue", void 0);
    CashMatchingDialogComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'atlas-cash-matching-dialog',
            template: __webpack_require__(/*! ./cash-matching-dialog.component.html */ "./Client/app/financial/components/cash-matching/cash-matching-dialog/cash-matching-dialog/cash-matching-dialog.component.html"),
            styles: [__webpack_require__(/*! ./cash-matching-dialog.component.scss */ "./Client/app/financial/components/cash-matching/cash-matching-dialog/cash-matching-dialog/cash-matching-dialog.component.scss")],
        }),
        __param(4, Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"])),
        __metadata("design:paramtypes", [_angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormBuilder"],
            _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialogRef"],
            _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialog"],
            _shared_services_http_services_preaccounting_service__WEBPACK_IMPORTED_MODULE_8__["PreaccountingService"], Object, _shared_services_form_configuration_provider_service__WEBPACK_IMPORTED_MODULE_7__["FormConfigurationProviderService"],
            _core_services_company_manager_service__WEBPACK_IMPORTED_MODULE_4__["CompanyManagerService"]])
    ], CashMatchingDialogComponent);
    return CashMatchingDialogComponent;
}(_shared_components_base_form_component_base_form_component_component__WEBPACK_IMPORTED_MODULE_5__["BaseFormComponent"]));



/***/ }),

/***/ "./Client/app/financial/components/cash-matching/cash-matching-dialog/delete-matching-dialog/delete-matching-dialog.component.html":
/*!*****************************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/cash-matching/cash-matching-dialog/delete-matching-dialog/delete-matching-dialog.component.html ***!
  \*****************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<h3 mat-dialog-title> Delete Match Flag ?\r\n    <button mat-icon-button\r\n            mat-dialog-close\r\n            class=\"close-dialog-btn\">\r\n        <mat-icon aria-label=\"Closing button\">clear</mat-icon>\r\n    </button></h3>\r\n<mat-dialog-content class=\"mat-dialog-content\">\r\n    <div fxLayout=\"row\"\r\n         fxLayoutAlign=\"none center\"\r\n         fxLayoutWrap\r\n         fxLayoutGap=\"10px\">\r\n        <p>{{dialogData.text}} {{dialogData.value}}.</p>\r\n    </div>\r\n</mat-dialog-content>\r\n<div fxLayout=\"column\">\r\n    <div fxLayout=\"row\"\r\n         class=\"confirmation-input-container\"\r\n         fxLayoutGap=\"30%\">\r\n        <div fxLayout=\"row\"\r\n             fxFlex=\"100%\"\r\n             fxLayoutAlign=\"space-between end\">\r\n            <button mat-button\r\n                    (click)=\"onCancelButtonClicked()\">{{dialogData.cancelButton}}</button>\r\n            <button mat-button\r\n                    (click)=\"onProceedButtonClicked()\">{{dialogData.okButton}}</button>\r\n        </div>\r\n    </div>\r\n</div>"

/***/ }),

/***/ "./Client/app/financial/components/cash-matching/cash-matching-dialog/delete-matching-dialog/delete-matching-dialog.component.scss":
/*!*****************************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/cash-matching/cash-matching-dialog/delete-matching-dialog/delete-matching-dialog.component.scss ***!
  \*****************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ""

/***/ }),

/***/ "./Client/app/financial/components/cash-matching/cash-matching-dialog/delete-matching-dialog/delete-matching-dialog.component.ts":
/*!***************************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/cash-matching/cash-matching-dialog/delete-matching-dialog/delete-matching-dialog.component.ts ***!
  \***************************************************************************************************************************************/
/*! exports provided: DeleteMatchingDialogComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DeleteMatchingDialogComponent", function() { return DeleteMatchingDialogComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _shared_components_base_form_component_base_form_component_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../shared/components/base-form-component/base-form-component.component */ "./Client/app/shared/components/base-form-component/base-form-component.component.ts");
/* harmony import */ var _shared_services_form_configuration_provider_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../../shared/services/form-configuration-provider.service */ "./Client/app/shared/services/form-configuration-provider.service.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};





var DeleteMatchingDialogComponent = /** @class */ (function (_super) {
    __extends(DeleteMatchingDialogComponent, _super);
    function DeleteMatchingDialogComponent(formBuilder, thisDialogRef, data, formConfigurationProvider) {
        var _this = _super.call(this, formConfigurationProvider) || this;
        _this.formBuilder = formBuilder;
        _this.thisDialogRef = thisDialogRef;
        _this.data = data;
        _this.formConfigurationProvider = formConfigurationProvider;
        _this.dialogData = data;
        _this.matchFlagCode = _this.dialogData.value;
        return _this;
    }
    DeleteMatchingDialogComponent.prototype.ngOnInit = function () {
        this.matchFlagCode = this.dialogData.value;
    };
    DeleteMatchingDialogComponent.prototype.onProceedButtonClicked = function () {
        this.thisDialogRef.close({ buttonClicked: true, buttonValue: this.matchFlagCode });
    };
    DeleteMatchingDialogComponent.prototype.onCancelButtonClicked = function () {
        this.thisDialogRef.close({ buttonClicked: false });
    };
    DeleteMatchingDialogComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'atlas-delete-matching-dialog',
            template: __webpack_require__(/*! ./delete-matching-dialog.component.html */ "./Client/app/financial/components/cash-matching/cash-matching-dialog/delete-matching-dialog/delete-matching-dialog.component.html"),
            styles: [__webpack_require__(/*! ./delete-matching-dialog.component.scss */ "./Client/app/financial/components/cash-matching/cash-matching-dialog/delete-matching-dialog/delete-matching-dialog.component.scss")],
        }),
        __param(2, Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"])),
        __metadata("design:paramtypes", [_angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormBuilder"],
            _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialogRef"], Object, _shared_services_form_configuration_provider_service__WEBPACK_IMPORTED_MODULE_4__["FormConfigurationProviderService"]])
    ], DeleteMatchingDialogComponent);
    return DeleteMatchingDialogComponent;
}(_shared_components_base_form_component_base_form_component_component__WEBPACK_IMPORTED_MODULE_3__["BaseFormComponent"]));



/***/ }),

/***/ "./Client/app/financial/components/cash-matching/cash-matching-dialog/document-date-dialog/document-date-dialog.component.html":
/*!*************************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/cash-matching/cash-matching-dialog/document-date-dialog/document-date-dialog.component.html ***!
  \*************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<h3 mat-dialog-title> Accounting month for the date selected is already closed.\r\n    <button mat-icon-button\r\n            mat-dialog-close\r\n            class=\"close-dialog-btn\">\r\n        <mat-icon aria-label=\"Closing button\">clear</mat-icon>\r\n    </button></h3>\r\n<mat-dialog-content class=\"mat-dialog-content\">\r\n    <div fxLayout=\"row\"\r\n         fxLayoutAlign=\"none center\"\r\n         fxLayoutWrap\r\n         fxLayoutGap=\"10px\">\r\n        <p>{{dialogData.text}}</p>\r\n    </div>\r\n</mat-dialog-content>\r\n<div fxLayout=\"column\">\r\n    <div fxLayout=\"row\"\r\n         fxLayoutAlign=\"left start\"\r\n         fxLayoutGap=\"10%\"\r\n         class=\"confirmation-input-container\">\r\n        <div fxLayout=\"row\"\r\n             fxLayoutAlign=\"space-between end\">\r\n            <button mat-button\r\n                    (click)=\"onCancelButtonClicked()\">CANCEL</button>\r\n            <button mat-button\r\n                    (click)=\"onProceedButtonClicked()\">OKAY</button>\r\n        </div>\r\n    </div>"

/***/ }),

/***/ "./Client/app/financial/components/cash-matching/cash-matching-dialog/document-date-dialog/document-date-dialog.component.scss":
/*!*************************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/cash-matching/cash-matching-dialog/document-date-dialog/document-date-dialog.component.scss ***!
  \*************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ""

/***/ }),

/***/ "./Client/app/financial/components/cash-matching/cash-matching-dialog/document-date-dialog/document-date-dialog.component.ts":
/*!***********************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/cash-matching/cash-matching-dialog/document-date-dialog/document-date-dialog.component.ts ***!
  \***********************************************************************************************************************************/
/*! exports provided: DocumentDateDialogComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DocumentDateDialogComponent", function() { return DocumentDateDialogComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _shared_components_base_form_component_base_form_component_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../shared/components/base-form-component/base-form-component.component */ "./Client/app/shared/components/base-form-component/base-form-component.component.ts");
/* harmony import */ var _shared_services_form_configuration_provider_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../../shared/services/form-configuration-provider.service */ "./Client/app/shared/services/form-configuration-provider.service.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};





var DocumentDateDialogComponent = /** @class */ (function (_super) {
    __extends(DocumentDateDialogComponent, _super);
    function DocumentDateDialogComponent(formBuilder, thisDialogRef, data, formConfigurationProvider) {
        var _this = _super.call(this, formConfigurationProvider) || this;
        _this.formBuilder = formBuilder;
        _this.thisDialogRef = thisDialogRef;
        _this.data = data;
        _this.formConfigurationProvider = formConfigurationProvider;
        _this.dialogData = data;
        _this.paymentDocumentDate = _this.dialogData.value;
        return _this;
    }
    DocumentDateDialogComponent.prototype.ngOnInit = function () {
        this.paymentDocumentDate = this.dialogData.value;
    };
    DocumentDateDialogComponent.prototype.onProceedButtonClicked = function () {
        this.thisDialogRef.close({ buttonClicked: true, buttonValue: this.paymentDocumentDate });
    };
    DocumentDateDialogComponent.prototype.onCancelButtonClicked = function () {
        this.thisDialogRef.close(false);
    };
    DocumentDateDialogComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'atlas-document-date-dialog',
            template: __webpack_require__(/*! ./document-date-dialog.component.html */ "./Client/app/financial/components/cash-matching/cash-matching-dialog/document-date-dialog/document-date-dialog.component.html"),
            styles: [__webpack_require__(/*! ./document-date-dialog.component.scss */ "./Client/app/financial/components/cash-matching/cash-matching-dialog/document-date-dialog/document-date-dialog.component.scss")],
        }),
        __param(2, Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"])),
        __metadata("design:paramtypes", [_angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormBuilder"],
            _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialogRef"], Object, _shared_services_form_configuration_provider_service__WEBPACK_IMPORTED_MODULE_4__["FormConfigurationProviderService"]])
    ], DocumentDateDialogComponent);
    return DocumentDateDialogComponent;
}(_shared_components_base_form_component_base_form_component_component__WEBPACK_IMPORTED_MODULE_3__["BaseFormComponent"]));



/***/ }),

/***/ "./Client/app/financial/components/cash-matching/cash-matching-dialog/payment-document-date-dialog/payment-document-date-dialog.component.html":
/*!*****************************************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/cash-matching/cash-matching-dialog/payment-document-date-dialog/payment-document-date-dialog.component.html ***!
  \*****************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<h3>\r\n    <button mat-icon-button\r\n            mat-dialog-close\r\n            class=\"close-dialog-btn\">\r\n        <mat-icon aria-label=\"Closing button\">clear</mat-icon>\r\n    </button></h3>\r\n<mat-dialog-content class=\"mat-dialog-content\">\r\n    <div fxLayout=\"row\"\r\n         fxLayoutAlign=\"none center\"\r\n         fxLayoutWrap\r\n         fxLayoutGap=\"10px\">\r\n        <p>{{dialogData.text1}} {{dialogData.value1}} are selected</p>\r\n    </div>\r\n    <div fxLayout=\"row\"\r\n         fxLayoutAlign=\"none center\"\r\n         fxLayoutWrap\r\n         fxLayoutGap=\"10px\">\r\n        <p>{{dialogData.text2}} {{dialogData.value3}}</p>\r\n    </div>\r\n</mat-dialog-content>\r\n<div fxLayout=\"column\">\r\n    <div fxLayout=\"row\"\r\n         fxLayoutAlign=\"left start\"\r\n         fxLayoutGap=\"10%\"\r\n         class=\"confirmation-input-container\">\r\n        <mat-form-field fxFlex=\"40%\">\r\n            <input matInput\r\n                   [matDatepicker]=\"documentDatePicker\"\r\n                   placeholder=\"New Payment Document Date\"\r\n                   matTooltip=\"New Payment Document Date\"\r\n                   [required]=\"paymentDocDateCtrl.isRequired\"\r\n                   autocomplete=\"off\"\r\n                   [formControl]='paymentDocDateCtrl'>\r\n            <mat-datepicker-toggle matSuffix\r\n                                   [for]=\"documentDatePicker\"></mat-datepicker-toggle>\r\n            <mat-datepicker #documentDatePicker></mat-datepicker>\r\n            <mat-error *ngIf=\"paymentDocDateCtrl.hasError('required')\">\r\n                This field is required\r\n            </mat-error>\r\n            <mat-error *ngIf=\"paymentDocDateCtrl.hasError('isBeforeDateValid')\">\r\n                Date cannot be before the document date\r\n            </mat-error>\r\n            <mat-error *ngIf=\"paymentDocDateCtrl.hasError('isDateAfterValid')\">\r\n                Date cannot be greater than the system date\r\n            </mat-error>\r\n        </mat-form-field>\r\n    </div>\r\n    <div fxLayout=\"row\"\r\n         fxLayoutAlign=\"space-between end\">\r\n        <button mat-button\r\n                (click)=\"onCancelButtonClicked()\">CANCEL</button>\r\n        <button mat-button\r\n                (click)=\"onProceedButtonClicked()\">OKAY</button>\r\n    </div>\r\n</div>"

/***/ }),

/***/ "./Client/app/financial/components/cash-matching/cash-matching-dialog/payment-document-date-dialog/payment-document-date-dialog.component.scss":
/*!*****************************************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/cash-matching/cash-matching-dialog/payment-document-date-dialog/payment-document-date-dialog.component.scss ***!
  \*****************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ""

/***/ }),

/***/ "./Client/app/financial/components/cash-matching/cash-matching-dialog/payment-document-date-dialog/payment-document-date-dialog.component.ts":
/*!***************************************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/cash-matching/cash-matching-dialog/payment-document-date-dialog/payment-document-date-dialog.component.ts ***!
  \***************************************************************************************************************************************************/
/*! exports provided: PaymentDocumentDateDialogComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PaymentDocumentDateDialogComponent", function() { return PaymentDocumentDateDialogComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _core_services_company_manager_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../core/services/company-manager.service */ "./Client/app/core/services/company-manager.service.ts");
/* harmony import */ var _shared_components_base_form_component_base_form_component_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../../shared/components/base-form-component/base-form-component.component */ "./Client/app/shared/components/base-form-component/base-form-component.component.ts");
/* harmony import */ var _shared_entities_atlas_form_control__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../shared/entities/atlas-form-control */ "./Client/app/shared/entities/atlas-form-control.ts");
/* harmony import */ var _shared_services_form_configuration_provider_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../../shared/services/form-configuration-provider.service */ "./Client/app/shared/services/form-configuration-provider.service.ts");
/* harmony import */ var _shared_services_http_services_preaccounting_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../../shared/services/http-services/preaccounting.service */ "./Client/app/shared/services/http-services/preaccounting.service.ts");
/* harmony import */ var _shared_validators_date_validators_validator__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../../shared/validators/date-validators.validator */ "./Client/app/shared/validators/date-validators.validator.ts");
/* harmony import */ var _document_date_dialog_document_date_dialog_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../document-date-dialog/document-date-dialog.component */ "./Client/app/financial/components/cash-matching/cash-matching-dialog/document-date-dialog/document-date-dialog.component.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};










var PaymentDocumentDateDialogComponent = /** @class */ (function (_super) {
    __extends(PaymentDocumentDateDialogComponent, _super);
    function PaymentDocumentDateDialogComponent(formBuilder, thisDialogRef, dialog, data, formConfigurationProvider, companyManager, preAccountingService) {
        var _this = _super.call(this, formConfigurationProvider) || this;
        _this.formBuilder = formBuilder;
        _this.thisDialogRef = thisDialogRef;
        _this.dialog = dialog;
        _this.data = data;
        _this.formConfigurationProvider = formConfigurationProvider;
        _this.companyManager = companyManager;
        _this.preAccountingService = preAccountingService;
        _this.paymentDocDateCtrl = new _shared_entities_atlas_form_control__WEBPACK_IMPORTED_MODULE_5__["AtlasFormControl"]('PaymentDocumentDate');
        _this.dialogData = data;
        _this.matchFlagCode = _this.dialogData.value1;
        _this.paymentDocumentDate = _this.dialogData.value2;
        return _this;
    }
    PaymentDocumentDateDialogComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.matchFlagCode = this.dialogData.value1;
        this.paymentDocumentDate = this.dialogData.value2;
        this.setValidators();
        this.bindConfiguration();
        this.paymentDocDateCtrl.setValue(this.companyManager.getCurrentCompanyDate());
        this.preAccountingService.getAccountingSetupDetails().subscribe(function (data) {
            if (data) {
                _this.lastMonthClosedForOperation = data.lastMonthClosedForOperation;
            }
        });
    };
    PaymentDocumentDateDialogComponent.prototype.onProceedButtonClicked = function () {
        var _this = this;
        this.newPaymentDocumentDate = new Date(new Date(this.paymentDocDateCtrl.value).toDateString());
        if (new Date(new Date(this.lastMonthClosedForOperation).toDateString()) >
            new Date(new Date(this.paymentDocDateCtrl.value).toDateString())) {
            var paymentDocumentDateDialog = this.dialog.open(_document_date_dialog_document_date_dialog_component__WEBPACK_IMPORTED_MODULE_9__["DocumentDateDialogComponent"], {
                data: {
                    title: 'Payment Document Date Dialog',
                    text: 'Please note that any revaluation journal will be posted on the next open accounting month',
                    okButton: 'Confirm',
                    cancelButton: 'Cancel',
                    value: this.newPaymentDocumentDate,
                },
            });
            this.subscriptions.push(paymentDocumentDateDialog.afterClosed().subscribe(function (answer) {
                if (answer && answer['buttonClicked']) {
                    _this.thisDialogRef.close({ buttonClicked: true, buttonValue: answer['buttonValue'] });
                }
            }));
        }
        else {
            this.thisDialogRef.close({ buttonClicked: true, buttonValue: this.paymentDocDateCtrl.value });
        }
    };
    PaymentDocumentDateDialogComponent.prototype.onCancelButtonClicked = function () {
        this.thisDialogRef.close({ buttonClicked: false });
    };
    PaymentDocumentDateDialogComponent.prototype.setValidators = function () {
        this.paymentDocDateCtrl.setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required, Object(_shared_validators_date_validators_validator__WEBPACK_IMPORTED_MODULE_8__["isAfterDate"])(this.companyManager.getCurrentCompanyDate())]));
    };
    PaymentDocumentDateDialogComponent.prototype.getFormGroup = function () {
        this.formGroup = this.formBuilder.group({
            paymentDocDateCtrl: this.paymentDocDateCtrl,
        });
        return _super.prototype.getFormGroup.call(this);
    };
    PaymentDocumentDateDialogComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'atlas-payment-document-date-dialog',
            template: __webpack_require__(/*! ./payment-document-date-dialog.component.html */ "./Client/app/financial/components/cash-matching/cash-matching-dialog/payment-document-date-dialog/payment-document-date-dialog.component.html"),
            styles: [__webpack_require__(/*! ./payment-document-date-dialog.component.scss */ "./Client/app/financial/components/cash-matching/cash-matching-dialog/payment-document-date-dialog/payment-document-date-dialog.component.scss")],
        }),
        __param(3, Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"])),
        __metadata("design:paramtypes", [_angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormBuilder"],
            _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialogRef"],
            _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialog"], Object, _shared_services_form_configuration_provider_service__WEBPACK_IMPORTED_MODULE_6__["FormConfigurationProviderService"],
            _core_services_company_manager_service__WEBPACK_IMPORTED_MODULE_3__["CompanyManagerService"],
            _shared_services_http_services_preaccounting_service__WEBPACK_IMPORTED_MODULE_7__["PreaccountingService"]])
    ], PaymentDocumentDateDialogComponent);
    return PaymentDocumentDateDialogComponent;
}(_shared_components_base_form_component_base_form_component_component__WEBPACK_IMPORTED_MODULE_4__["BaseFormComponent"]));



/***/ }),

/***/ "./Client/app/financial/components/cash-matching/cash-matching-home/cash-matching-home.component.html":
/*!************************************************************************************************************!*\
  !*** ./Client/app/financial/components/cash-matching/cash-matching-home/cash-matching-home.component.html ***!
  \************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div matToolbarHighlight\r\n     class=\"dark-tab header-tab mat-elevation-z6\">\r\n    <div class=\"header-tab-container\">\r\n        <nav matToolbarHighlight\r\n             mat-tab-nav-bar>\r\n            <div *ngFor=\"let routeLink of routeLinks\">\r\n                <a mat-tab-link\r\n                   [routerLink]=\"routeLink.link\"\r\n                   routerLinkActive\r\n                   #rla=\"routerLinkActive\"\r\n                   [active]=\"isActive(routeLink)\">\r\n                    {{ routeLink.label }}\r\n                </a>\r\n            </div>\r\n        </nav>\r\n    </div>\r\n</div>"

/***/ }),

/***/ "./Client/app/financial/components/cash-matching/cash-matching-home/cash-matching-home.component.scss":
/*!************************************************************************************************************!*\
  !*** ./Client/app/financial/components/cash-matching/cash-matching-home/cash-matching-home.component.scss ***!
  \************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ""

/***/ }),

/***/ "./Client/app/financial/components/cash-matching/cash-matching-home/cash-matching-home.component.ts":
/*!**********************************************************************************************************!*\
  !*** ./Client/app/financial/components/cash-matching/cash-matching-home/cash-matching-home.component.ts ***!
  \**********************************************************************************************************/
/*! exports provided: CashMatchingHomeComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CashMatchingHomeComponent", function() { return CashMatchingHomeComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _core_services_company_manager_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../core/services/company-manager.service */ "./Client/app/core/services/company-manager.service.ts");
/* harmony import */ var _shared_components_base_form_component_base_form_component_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../shared/components/base-form-component/base-form-component.component */ "./Client/app/shared/components/base-form-component/base-form-component.component.ts");
/* harmony import */ var _shared_services_form_configuration_provider_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../shared/services/form-configuration-provider.service */ "./Client/app/shared/services/form-configuration-provider.service.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





var CashMatchingHomeComponent = /** @class */ (function (_super) {
    __extends(CashMatchingHomeComponent, _super);
    function CashMatchingHomeComponent(router, companyManager, formConfigurationProvider, route) {
        var _this = _super.call(this, formConfigurationProvider) || this;
        _this.router = router;
        _this.companyManager = companyManager;
        _this.formConfigurationProvider = formConfigurationProvider;
        _this.route = route;
        _this.routeLinks = [
            {
                label: 'Create Match',
                link: '/' + _this.companyManager.getCurrentCompanyId() + '/financial/create/matching',
                index: 0,
            },
            {
                label: 'Delete Match',
                link: '/' + _this.companyManager.getCurrentCompanyId() + '/financial/delete/matching',
                index: 1,
            },
        ];
        _this.activeLinkIndex = -1;
        _this.activeLinkIndex = _this.routeLinks.indexOf(_this.routeLinks.find(function (tab) { return _this.router.url.includes(tab.link); }));
        return _this;
    }
    CashMatchingHomeComponent.prototype.ngOnInit = function () {
        this.company = this.route.snapshot.paramMap.get('company');
    };
    CashMatchingHomeComponent.prototype.isActive = function (routeLink) {
        return this.activeLinkIndex === routeLink.index;
    };
    CashMatchingHomeComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'atlas-cash-matching-home',
            template: __webpack_require__(/*! ./cash-matching-home.component.html */ "./Client/app/financial/components/cash-matching/cash-matching-home/cash-matching-home.component.html"),
            styles: [__webpack_require__(/*! ./cash-matching-home.component.scss */ "./Client/app/financial/components/cash-matching/cash-matching-home/cash-matching-home.component.scss")],
        }),
        __metadata("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_1__["Router"],
            _core_services_company_manager_service__WEBPACK_IMPORTED_MODULE_2__["CompanyManagerService"],
            _shared_services_form_configuration_provider_service__WEBPACK_IMPORTED_MODULE_4__["FormConfigurationProviderService"],
            _angular_router__WEBPACK_IMPORTED_MODULE_1__["ActivatedRoute"]])
    ], CashMatchingHomeComponent);
    return CashMatchingHomeComponent;
}(_shared_components_base_form_component_base_form_component_component__WEBPACK_IMPORTED_MODULE_3__["BaseFormComponent"]));



/***/ }),

/***/ "./Client/app/financial/components/cash-matching/create-match-flag/create-match-flag.component.html":
/*!**********************************************************************************************************!*\
  !*** ./Client/app/financial/components/cash-matching/create-match-flag/create-match-flag.component.html ***!
  \**********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<atlas-cash-matching-home></atlas-cash-matching-home>\r\n<div class=\"main-container\">\r\n\r\n    <mat-card *ngIf=\"isDialogClosed\">\r\n        <mat-card-header>\r\n            <mat-card-title *ngIf=\"!journalFieldShow\">\r\n                <mat-card-subtitle>Documents matched with code\r\n                    <span class=\"total-figure-value\">{{matchCodeSelected}}\r\n                    </span>\r\n                </mat-card-subtitle>\r\n            </mat-card-title>\r\n            <mat-card-title *ngIf=\"journalFieldShow\">\r\n                <mat-card-subtitle>Documents matched with match flag\r\n                    <span class=\"total-figure-value\">{{matchCodeSelected}}\r\n                    </span>\r\n                    Revaluation Journal Generated is :\r\n                    <span class=\"total-figure-value\">{{journalDocumentId}}</span>\r\n                </mat-card-subtitle>\r\n            </mat-card-title>\r\n        </mat-card-header>\r\n\r\n        <div class=\"button-container\"\r\n             fxLayoutAlign=\"end end\"\r\n             fxLayoutGap=\"8px\">\r\n            <button mat-button\r\n                    (click)=\"onCloseButtonClicked()\">\r\n                CLOSE </button>\r\n            <button mat-button\r\n                    (click)=\"onAccountingEntriesButtonClicked()\">\r\n                GO TO ACC. ENTRIES\r\n            </button>\r\n\r\n        </div>\r\n    </mat-card>\r\n\r\n\r\n    <mat-card>\r\n        <mat-card-header>\r\n            <mat-card-title>\r\n                Documents to match\r\n            </mat-card-title>\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n            <div fxLayout=\"row\"\r\n                 fxLayoutAlign=\"left start\"\r\n                 fxLayoutGap=\"5%\"\r\n                 fxFlex=\"15%\">\r\n                <div fxFlex=\"98%\">\r\n                    <atlas-masterdata-user-preferences-input isEditable=\"true\"\r\n                                                             [fieldControl]=\"counterpartyCtrl\"\r\n                                                             [options]=\"filteredCounterPartyList\"\r\n                                                             label=\"Client Account\"\r\n                                                             displayProperty=\"counterpartyCode\"\r\n                                                             [selectProperties]=\"['counterpartyCode', 'description']\"\r\n                                                             [errorMap]=\"counterpartyErrorMap\"\r\n                                                             lightBoxTitle=\"Results for Counterparty\"\r\n                                                             gridId=\"counterpartiesGrid\"\r\n                                                             (optionSelected)=\"onCounterpartyIdSelected($event)\">\r\n                    </atlas-masterdata-user-preferences-input>\r\n                </div>\r\n            </div>\r\n            <mat-form-field fxFlex=\"16%\">\r\n                <input matInput\r\n                       placeholder=\"Client Name\"\r\n                       [formControl]=\"clientNameCtrl\"\r\n                       label=\"Client Name\"\r\n                       autocomplete=\"off\"\r\n                       matTooltip=\"Client Name\">\r\n            </mat-form-field>\r\n            <div class=\"custom-form\"\r\n                 fxFlex=\"12%\"\r\n                 [class.isEmpty]=\"!departmentCtrl.value\"\r\n                 [class.required-field]=\"departmentCtrl.isRequired\">\r\n                <mat-form-field>\r\n                    <input matInput\r\n                           placeholder=\"Department\"\r\n                           [required]=\"departmentCtrl.isRequired\"\r\n                           [matAutocomplete]=\"departments\"\r\n                           [formControl]=\"departmentCtrl\"\r\n                           autocomplete=\"off\"\r\n                           matTooltip=\"Department Code\">\r\n                    <mat-autocomplete #departments=\"matAutocomplete\"\r\n                                      [panelWidth]=\"panelSize\"\r\n                                      (optionSelected)=\"onDepartmentCodeSelected($event.option.value)\">\r\n                        <mat-option *ngFor=\"let department of filteredDepartment\"\r\n                                    [value]=\"department.departmentCode\">\r\n                            {{department.departmentCode}} | {{department.description}}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <mat-error *ngIf=\"departmentCtrl.hasError('required')\"> Required\r\n                    </mat-error>\r\n                    <mat-hint *ngIf=\"departmentCtrl.isRequired\">\r\n                        Required *\r\n                    </mat-hint>\r\n                </mat-form-field>\r\n            </div>\r\n            <div class=\"custom-form\"\r\n                 fxFlex=\"12%\"\r\n                 [class.isEmpty]=\"!currencyCtrl.value\"\r\n                 [class.required-field]=\"currencyCtrl.isRequired\">\r\n                <mat-form-field>\r\n                    <input matInput\r\n                           placeholder=\"Currency\"\r\n                           [required]=\"currencyCtrl.isRequired\"\r\n                           [matAutocomplete]=\"currencies\"\r\n                           [formControl]=\"currencyCtrl\"\r\n                           autocomplete=\"off\"\r\n                           matTooltip=\"Currency\">\r\n                    <mat-autocomplete #currencies=\"matAutocomplete\"\r\n                                      [panelWidth]=\"panelSize\">\r\n                        <mat-option *ngFor=\"let currency of filteredCurrencyList\"\r\n                                    [value]=\"currency.currencyCode\">{{currency.currencyCode}} |\r\n                            {{currency.description}}</mat-option>\r\n                    </mat-autocomplete>\r\n                    <mat-error *ngIf=\"currencyCtrl.hasError('required')\"> Required\r\n                    </mat-error>\r\n                    <mat-hint *ngIf=\"currencyCtrl.isRequired\">\r\n                        Required *\r\n                    </mat-hint>\r\n                </mat-form-field>\r\n            </div>\r\n            <mat-form-field fxFlex=12%>\r\n                <input matInput\r\n                       placeholder=\"DocumentReference\"\r\n                       [matAutocomplete]=\"documentReferences\"\r\n                       [formControl]=\"docReferenceCtrl\"\r\n                       autocomplete=\"off\"\r\n                       matTooltip=\"DocumentReference\">\r\n                <mat-autocomplete #documentReferences=\"matAutocomplete\"\r\n                                  [panelWidth]=\"panelSize\"\r\n                                  (optionSelected)=\"onDocumentReferenceOptionSelected($event.option.value)\">\r\n                    <mat-option *ngFor=\"let docReference of filteredDocReferenceList\"\r\n                                [value]=\"docReference.documentReference\">\r\n                        {{docReference.documentReference}}\r\n                    </mat-option>\r\n                </mat-autocomplete>\r\n                <mat-error *ngIf=\"docReferenceCtrl.hasError('inDropdownList')\">\r\n                    Document Reference doesn't exist\r\n                </mat-error>\r\n            </mat-form-field>\r\n            <mat-form-field fxFlex=14%>\r\n                <input matInput\r\n                       placeholder=\"Second Document Reference\"\r\n                       [formControl]=\"secDocReferenceCtrl\"\r\n                       autocomplete=\"off\"\r\n                       matTooltip=\"Second Document Reference\">\r\n            </mat-form-field>\r\n            <button mat-icon-button\r\n                    [disabled]=\"isSearchDisabled\"\r\n                    (click)=\"onCreateMatchSearchButtonClicked()\">\r\n                <mat-icon aria-label=\"Search\">search</mat-icon>\r\n            </button>\r\n        </mat-card-content>\r\n    </mat-card>\r\n\r\n    <div fxLayout=\"row\"\r\n         fxLayoutAlign=\"start none\"\r\n         *ngIf=\"isDataAvailable\">\r\n        <mat-card fxFlex=\"100%\">\r\n            <div ag-grid=\"documentMatchingGridOptions\"\r\n                 class=\"ag-theme-material pointer-cursor\">\r\n                <ag-grid-angular style=\" height:100%;\"\r\n                                 class=\"ag-theme-material\"\r\n                                 [columnDefs]=\"documentMatchingGridColumns\"\r\n                                 [rowData]=\"documentMatchingGridRows\"\r\n                                 [gridOptions]=\"documentMatchingGridOptions\"\r\n                                 domLayout=\"autoHeight\"\r\n                                 (gridReady)=\"onGridReady($event)\"\r\n                                 (rowSelected)=\"onCreateMatchRowSelected($event)\"\r\n                                 (cellValueChanged)=\"onCellValueChanged($event)\"\r\n                                 [frameworkComponents]=\"gridComponents\"\r\n                                 rowSelection=\"multiple\"\r\n                                 [singleClickEdit]=\"true\"\r\n                                 [suppressRowClickSelection]=\"true\"\r\n                                 [suppressNoRowsOverlay]=\"true\"\r\n                                 [pagination]=\"true\"\r\n                                 [paginationPageSize]=\"20\"\r\n                                 domLayout=autoHeight\r\n                                 [enableSorting]=\"true\"\r\n                                 [enableColResize]=\"true\"\r\n                                 enableFilter\r\n                                 [rowHeight]=\"atlasAgGridParam.rowHeight\">\r\n                </ag-grid-angular>\r\n            </div>\r\n            <div fxLayout=\"row\"\r\n                 fxLayoutAlign=\"end center\">\r\n                <mat-card-subtitle class=\"total-figure\">Balance : <span class=\"total-figure-value\">{{formattedInput}}\r\n                    </span></mat-card-subtitle>\r\n            </div>\r\n            <div fxLayout=\"row\"\r\n                 fxLayoutAlign=\"center center\"\r\n                 fxLayoutWrap\r\n                 *ngIf=\"isLoading\"\r\n                 class=\"loading\">\r\n                <mat-spinner color=\"accent\"></mat-spinner>\r\n            </div>\r\n        </mat-card>\r\n    </div>\r\n    <atlas-empty-state *ngIf=\"!isDataAvailable\"\r\n                       title=\"No Entries to display\"\r\n                       message=\"Edit the filters and generate the table again\"\r\n                       #emptyStateComponent></atlas-empty-state>\r\n    <div fxLayout=\"row \"\r\n         fxLayoutAlign=\"space-between start\"\r\n         class=\"button-details\">\r\n        <div fxLayout=\"column \"\r\n             fxLayoutAlign=\"start \">\r\n            <button (click)=\"onDiscardButtonClicked()\"\r\n                    mat-button>\r\n                DISCARD\r\n            </button>\r\n        </div>\r\n        <div fxLayout=\"column \"\r\n             fxLayoutAlign=\"start \"\r\n             *ngIf=\"isDataAvailable\">\r\n            <div fxLayout=\"row \"\r\n                 fxLayoutAlign=\"end start \">\r\n                <button mat-raised-button\r\n                        (click)=\"onMatchSelectedButtonClicked()\"\r\n                        [disabled]=\"isCompanyFrozen\">\r\n                    MATCH SELECTED\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n"

/***/ }),

/***/ "./Client/app/financial/components/cash-matching/create-match-flag/create-match-flag.component.scss":
/*!**********************************************************************************************************!*\
  !*** ./Client/app/financial/components/cash-matching/create-match-flag/create-match-flag.component.scss ***!
  \**********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".matched-document {\n  margin-right: 5%;\n  float: left;\n  padding-top: 18px;\n  color: green; }\n"

/***/ }),

/***/ "./Client/app/financial/components/cash-matching/create-match-flag/create-match-flag.component.ts":
/*!********************************************************************************************************!*\
  !*** ./Client/app/financial/components/cash-matching/create-match-flag/create-match-flag.component.ts ***!
  \********************************************************************************************************/
/*! exports provided: CreateMatchFlagComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CreateMatchFlagComponent", function() { return CreateMatchFlagComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _core_services_company_manager_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../core/services/company-manager.service */ "./Client/app/core/services/company-manager.service.ts");
/* harmony import */ var _shared_components_ag_grid_user_preferences_ag_grid_user_preferences_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../shared/components/ag-grid-user-preferences/ag-grid-user-preferences.component */ "./Client/app/shared/components/ag-grid-user-preferences/ag-grid-user-preferences.component.ts");
/* harmony import */ var _shared_components_base_form_component_base_form_component_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../shared/components/base-form-component/base-form-component.component */ "./Client/app/shared/components/base-form-component/base-form-component.component.ts");
/* harmony import */ var _shared_components_cell_editor_numeric_cell_editor_numeric_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../shared/components/cell-editor-numeric/cell-editor-numeric.component */ "./Client/app/shared/components/cell-editor-numeric/cell-editor-numeric.component.ts");
/* harmony import */ var _shared_components_confirmation_dialog_confirmation_dialog_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../shared/components/confirmation-dialog/confirmation-dialog.component */ "./Client/app/shared/components/confirmation-dialog/confirmation-dialog.component.ts");
/* harmony import */ var _shared_components_empty_state_empty_state_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../shared/components/empty-state/empty-state.component */ "./Client/app/shared/components/empty-state/empty-state.component.ts");
/* harmony import */ var _shared_directives_autocomplete_dropdown_directive__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../../shared/directives/autocomplete-dropdown.directive */ "./Client/app/shared/directives/autocomplete-dropdown.directive.ts");
/* harmony import */ var _shared_entities_atlas_form_control__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../../shared/entities/atlas-form-control */ "./Client/app/shared/entities/atlas-form-control.ts");
/* harmony import */ var _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../../shared/entities/masterdata-props.entity */ "./Client/app/shared/entities/masterdata-props.entity.ts");
/* harmony import */ var _shared_enums_matching_type_enum__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../../../shared/enums/matching-type.enum */ "./Client/app/shared/enums/matching-type.enum.ts");
/* harmony import */ var _shared_enums_transaction_document_enum__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../../../shared/enums/transaction-document.enum */ "./Client/app/shared/enums/transaction-document.enum.ts");
/* harmony import */ var _shared_numberMask__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../../../shared/numberMask */ "./Client/app/shared/numberMask.ts");
/* harmony import */ var _shared_services_ag_grid_service__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../../../shared/services/ag-grid.service */ "./Client/app/shared/services/ag-grid.service.ts");
/* harmony import */ var _shared_services_execution_dtos_document_matching__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../../../shared/services/execution/dtos/document-matching */ "./Client/app/shared/services/execution/dtos/document-matching.ts");
/* harmony import */ var _shared_services_form_configuration_provider_service__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../../../../shared/services/form-configuration-provider.service */ "./Client/app/shared/services/form-configuration-provider.service.ts");
/* harmony import */ var _shared_services_http_services_execution_service__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../../../../shared/services/http-services/execution.service */ "./Client/app/shared/services/http-services/execution.service.ts");
/* harmony import */ var _shared_services_http_services_foreign_exchange_service__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../../../../shared/services/http-services/foreign-exchange.service */ "./Client/app/shared/services/http-services/foreign-exchange.service.ts");
/* harmony import */ var _shared_services_http_services_masterdata_service__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../../../../shared/services/http-services/masterdata.service */ "./Client/app/shared/services/http-services/masterdata.service.ts");
/* harmony import */ var _shared_services_preaccounting_dtos_document_matching_record__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../../../../shared/services/preaccounting/dtos/document-matching-record */ "./Client/app/shared/services/preaccounting/dtos/document-matching-record.ts");
/* harmony import */ var _shared_services_snackbar_service__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ../../../../shared/services/snackbar.service */ "./Client/app/shared/services/snackbar.service.ts");
/* harmony import */ var _shared_services_title_service__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ../../../../shared/services/title.service */ "./Client/app/shared/services/title.service.ts");
/* harmony import */ var _shared_services_ui_service__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ../../../../shared/services/ui.service */ "./Client/app/shared/services/ui.service.ts");
/* harmony import */ var _shared_services_util_service__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ../../../../shared/services/util.service */ "./Client/app/shared/services/util.service.ts");
/* harmony import */ var _cash_matching_dialog_cash_matching_dialog_cash_matching_dialog_component__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ../cash-matching-dialog/cash-matching-dialog/cash-matching-dialog.component */ "./Client/app/financial/components/cash-matching/cash-matching-dialog/cash-matching-dialog/cash-matching-dialog.component.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




























var CreateMatchFlagComponent = /** @class */ (function (_super) {
    __extends(CreateMatchFlagComponent, _super);
    function CreateMatchFlagComponent(formConfigurationProvider, formBuilder, router, masterdataService, utilService, uiService, dialog, foreignExchangeService, route, snackbarService, companyManager, executionService, gridService, titleService) {
        var _this = _super.call(this, formConfigurationProvider) || this;
        _this.formConfigurationProvider = formConfigurationProvider;
        _this.formBuilder = formBuilder;
        _this.router = router;
        _this.masterdataService = masterdataService;
        _this.utilService = utilService;
        _this.uiService = uiService;
        _this.dialog = dialog;
        _this.foreignExchangeService = foreignExchangeService;
        _this.route = route;
        _this.snackbarService = snackbarService;
        _this.companyManager = companyManager;
        _this.executionService = executionService;
        _this.gridService = gridService;
        _this.titleService = titleService;
        _this.counterpartyCtrl = new _shared_entities_atlas_form_control__WEBPACK_IMPORTED_MODULE_11__["AtlasFormControl"]('Counterparty');
        _this.clientNameCtrl = new _shared_entities_atlas_form_control__WEBPACK_IMPORTED_MODULE_11__["AtlasFormControl"]('ClientName');
        _this.departmentCtrl = new _shared_entities_atlas_form_control__WEBPACK_IMPORTED_MODULE_11__["AtlasFormControl"]('Department');
        _this.currencyCtrl = new _shared_entities_atlas_form_control__WEBPACK_IMPORTED_MODULE_11__["AtlasFormControl"]('Currency');
        _this.docReferenceCtrl = new _shared_entities_atlas_form_control__WEBPACK_IMPORTED_MODULE_11__["AtlasFormControl"]('DocumentReference');
        _this.secDocReferenceCtrl = new _shared_entities_atlas_form_control__WEBPACK_IMPORTED_MODULE_11__["AtlasFormControl"]('SecondaryReference');
        _this.currentDocDateCtrl = new _shared_entities_atlas_form_control__WEBPACK_IMPORTED_MODULE_11__["AtlasFormControl"]('CurrentDocumentDate');
        _this.formComponents = [];
        _this.dataLength = 0;
        _this.journalFieldShow = false;
        _this.isDocumentsSelected = false;
        _this.isSave = false;
        _this.documentMatchingGridOptions = {};
        _this.documentReference = [];
        _this.index = 0;
        _this.masterdataList = [
            _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_12__["MasterDataProps"].Counterparties,
            _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_12__["MasterDataProps"].Departments,
            _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_12__["MasterDataProps"].Currencies,
            _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_12__["MasterDataProps"].Companies
        ];
        _this.gridContext = {
            component: _this,
        };
        _this.gridComponents = {
            atlasNumeric: _shared_components_cell_editor_numeric_cell_editor_numeric_component__WEBPACK_IMPORTED_MODULE_7__["CellEditorNumericComponent"],
        };
        _this.counterpartyErrorMap = new Map()
            .set('required', 'This field is required')
            .set('inDropdownList', 'Invalid entry. Client not in the list.');
        _this.decimalOptionValue = 2;
        _this.formatType = 'en-US';
        _this.isDataAvailable = false;
        _this.atlasAgGridParam = _this.gridService.getAgGridParam();
        return _this;
    }
    CreateMatchFlagComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.company = this.route.snapshot.paramMap.get('company');
        this.titleService.setTitle(this.route.snapshot.data.title);
        this.masterData = this.route.snapshot.data.masterdata;
        this.currentDocDateCtrl.setValue(this.companyManager.getCurrentCompanyDate());
        this.companyConfiguration = this.companyManager.getCompany(this.company);
        this.functionalCurrency = this.companyConfiguration.functionalCurrencyCode;
        this.statutoryCurrency = this.companyConfiguration.statutoryCurrencyCode;
        this.filteredCounterPartyList = this.masterData.counterparties;
        this.currencyCtrl.setValue(this.functionalCurrency);
        this.isSearchDisabled = true;
        this.counterpartyCtrl.valueChanges.subscribe(function (input) {
            _this.filteredCounterPartyList = _this.utilService.filterListforAutocomplete(input, _this.masterData.counterparties, ['counterpartyCode', 'description', 'counterpartyID']);
            if (_this.counterpartyCtrl.valid) {
                _this.onCounterpartyIdSelected(_this.counterpartyCtrl.value);
            }
            else {
                if (_this.counterpartyCtrl.value !== null && _this.counterpartyCtrl.value.length === 0) {
                    _this.docReferenceCtrl.enable();
                    _this.disableSearchButton();
                }
            }
        });
        this.filteredDepartment = [];
        this.filteredDepartment = this.masterData.departments;
        var departments = this.filteredDepartment.filter(function (a) { return a.departmentId === 0; });
        if (departments.length === 0 || departments === undefined) {
            this.filteredDepartment.push({
                departmentId: 0, departmentCode: 'ALL', description: 'ALL Departments',
                profitCenterId: null, companyId: null, companyCode: null,
            });
        }
        this.departmentCtrl.valueChanges.subscribe(function (input) {
            _this.filteredDepartment = _this.utilService.filterListforAutocomplete(input, _this.masterData.departments, ['departmentCode', 'description']);
        });
        var selectedDepartments = this.masterData.departments.filter(function (department) { return department.departmentCode === 'ALL'; });
        if (selectedDepartments.length > 0) {
            this.departmentValue = null;
            this.departmentCtrl.setValue(selectedDepartments[0].departmentCode);
        }
        this.filteredCurrencyList = this.masterData.currencies;
        this.currencyCtrl.valueChanges.subscribe(function (input) {
            _this.filteredCurrencyList = _this.utilService.filterListforAutocomplete(input, _this.masterData.currencies, ['currencyCode', 'description']);
        });
        this.executionService.getDocumentReferenceValues(this.matchType = _shared_enums_matching_type_enum__WEBPACK_IMPORTED_MODULE_13__["MatchingType"].createMatch)
            .subscribe(function (data) {
            data.value.forEach(function (item) { return _this.documentReference.push(_this.populateDocuments(item)); });
            _this.filteredDocReferenceList = _this.documentReference;
        });
        this.docReferenceCtrl.valueChanges.subscribe(function (input) {
            _this.filteredDocReferenceList = _this.utilService.filterListforAutocomplete(input, _this.documentReference, ['documentReference']);
            if (_this.docReferenceCtrl.valid) {
                if (_this.docReferenceCtrl.value) {
                    if (_this.docReferenceCtrl.value.length === 0) {
                        _this.disableSearchButton();
                    }
                }
            }
        });
        this.initializeGridColumns();
        this.setValidators();
        this.bindConfiguration();
        this.isCompanyFrozen = this.companyManager.getCompany(this.company).isFrozen;
    };
    CreateMatchFlagComponent.prototype.canDeactivate = function () {
        if ((this.counterpartyCtrl.dirty || this.departmentCtrl.dirty || this.clientNameCtrl.dirty ||
            this.secDocReferenceCtrl.dirty || this.currencyCtrl.dirty || this.docReferenceCtrl.dirty) && this.isSave === false) {
            return window.confirm('Leave an unsave form? \nYour changes won\'t be applied!');
        }
        return true;
    };
    CreateMatchFlagComponent.prototype.populateDocuments = function (value) {
        var documentsForMatching = new _shared_services_execution_dtos_document_matching__WEBPACK_IMPORTED_MODULE_17__["DocumentMatching"]();
        documentsForMatching.documentReference = value.documentReference;
        return documentsForMatching;
    };
    CreateMatchFlagComponent.prototype.initializeGridColumns = function () {
        this.documentMatchingGridOptions = {
            context: this.gridContext,
        };
        this.documentMatchingGridColumns = [
            {
                headerName: 'Transaction Document Id',
                field: 'transactionDocumentId',
                colId: 'transactionDocumentId',
                hide: true,
            },
            {
                headerName: 'Document Reference',
                field: 'documentReference',
                colId: 'documentReference',
                hide: false,
            },
            {
                headerName: 'Secondary Document Reference',
                field: 'secondaryRef',
                colId: 'secondaryRef',
                hide: false,
            },
            {
                headerName: 'DepartmentId',
                field: 'departmentId',
                colId: 'departmentId',
                hide: true,
            },
            {
                headerName: 'Department',
                field: 'departmentCode',
                colId: 'departmentCode',
                hide: false,
            },
            {
                headerName: 'TransactionDirectionId',
                field: 'transactionDirectionId',
                colId: 'transactionDirectionId',
                hide: true,
            },
            {
                headerName: 'Marking',
                field: 'marking',
                colId: 'marking',
                hide: false,
            },
            {
                headerName: 'Marking',
                field: 'matchFlagCode',
                colId: 'matchFlagCode',
                hide: true,
            },
            {
                headerName: 'Document Date',
                field: 'documentDate',
                colId: 'documentDate',
                hide: false,
                valueFormatter: this.uiService.dateFormatter,
            },
            {
                headerName: 'Value Date',
                field: 'valueDate',
                colId: 'valueDate',
                hide: false,
                valueFormatter: this.uiService.dateFormatter,
            },
            {
                headerName: 'DocumentAmount',
                field: 'documentAmount',
                colId: 'documentAmount',
                hide: true,
            },
            {
                headerName: 'Cost Type',
                field: 'costType',
                colId: 'costType',
                hide: false,
            },
            {
                headerName: 'Expense Code',
                field: 'expenseCode',
                colId: 'expenseCode',
                hide: true,
            },
            {
                headerName: 'Narrative',
                field: 'narrative',
                colId: 'narrative',
                hide: false,
            },
            {
                headerName: 'Document Type',
                field: 'documentType',
                colId: 'documentType',
                hide: true,
            },
            {
                headerName: 'JournalLineId',
                field: 'lineId',
                colId: 'lineId',
                hide: true,
            },
            {
                headerName: 'TotalAmount',
                field: 'amount',
                colId: 'amount',
                type: 'numericColumn',
                hide: true,
            },
            {
                headerName: 'Debit',
                field: 'debit',
                colId: 'debit',
                hide: false,
                pinned: 'right',
                editable: this.isDebitFieldEditable,
                onCellValueChanged: this.onDebitValueChanged,
                valueFormatter: this.amountFormatter.bind(this),
                cellEditor: 'atlasNumeric',
                cellEditorParams: {
                    displayMask: Object(_shared_numberMask__WEBPACK_IMPORTED_MODULE_15__["CustomNumberMask"])(12, 10, false),
                    isRightAligned: true,
                },
                type: 'numericColumn',
            },
            {
                headerName: 'Credit',
                field: 'credit',
                colId: 'credit',
                hide: false,
                pinned: 'right',
                editable: this.isCreditFieldEditable,
                onCellValueChanged: this.onCreditValueChanged,
                valueFormatter: this.amountFormatter.bind(this),
                cellEditor: 'atlasNumeric',
                cellEditorParams: {
                    displayMask: Object(_shared_numberMask__WEBPACK_IMPORTED_MODULE_15__["CustomNumberMask"])(12, 10, false),
                    isRightAligned: true,
                },
                type: 'numericColumn',
            },
            {
                headerName: 'Document Type',
                field: 'isCreditOrDebit',
                colId: 'isCreditOrDebit',
                hide: true,
            },
            {
                headerCheckboxSelection: true,
                checkboxSelection: true,
                width: 40,
                minWidth: 40,
                maxWidth: 40,
                pinned: 'right',
            },
        ];
    };
    CreateMatchFlagComponent.prototype.onCellValueChanged = function (params) {
        if ((params.column.colId === 'credit' || params.column.colId === 'debit') && !params.value) {
            params.node.setDataValue(params.column.colId, params.oldValue);
        }
    };
    CreateMatchFlagComponent.prototype.isCreditFieldEditable = function (params) {
        if (params.data.credit) {
            params.node.setSelected(true);
            return true;
        }
        else {
            return false;
        }
    };
    CreateMatchFlagComponent.prototype.isDebitFieldEditable = function (params) {
        if (params.data.debit) {
            params.node.setSelected(true);
            return true;
        }
        else {
            return false;
        }
    };
    CreateMatchFlagComponent.prototype.setValidators = function () {
        this.counterpartyCtrl.setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].compose([
            Object(_shared_directives_autocomplete_dropdown_directive__WEBPACK_IMPORTED_MODULE_10__["inDropdownListValidator"])(this.masterData.counterparties, Object(_shared_services_util_service__WEBPACK_IMPORTED_MODULE_26__["nameof"])('counterpartyCode')), _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required,
        ]));
        this.docReferenceCtrl.setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].compose([
            Object(_shared_directives_autocomplete_dropdown_directive__WEBPACK_IMPORTED_MODULE_10__["inDropdownListValidator"])(this.documentReference, Object(_shared_services_util_service__WEBPACK_IMPORTED_MODULE_26__["nameof"])('documentReference')),
        ]));
        this.currencyCtrl.setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].compose([
            Object(_shared_directives_autocomplete_dropdown_directive__WEBPACK_IMPORTED_MODULE_10__["inDropdownListValidator"])(this.masterData.currencies, Object(_shared_services_util_service__WEBPACK_IMPORTED_MODULE_26__["nameof"])('currencyCode')), _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required,
        ]));
        this.departmentCtrl.setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].compose([
            Object(_shared_directives_autocomplete_dropdown_directive__WEBPACK_IMPORTED_MODULE_10__["inDropdownListValidator"])(this.masterData.departments, Object(_shared_services_util_service__WEBPACK_IMPORTED_MODULE_26__["nameof"])('departmentCode')), _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required,
        ]));
    };
    CreateMatchFlagComponent.prototype.onCreateMatchSearchButtonClicked = function () {
        this.isLoading = true;
        this.isDialogClosed = false;
        if (this.departmentCtrl.value === '') {
            var selectedDepartments = this.masterData.departments.filter(function (department) { return department.departmentCode === 'ALL'; });
            if (selectedDepartments.length > 0) {
                this.departmentValue = null;
                this.departmentCtrl.setValue(selectedDepartments[0].departmentCode);
            }
        }
        else if (!this.departmentCtrl.valid) {
            this.snackbarService.throwErrorSnackBar('Form is invalid. Please resolve the errors.');
            this.isLoading = false;
            return;
        }
        if (this.counterpartyCtrl.valid && this.currencyCtrl.valid) {
            if (this.gridApi) {
                this.isDocumentsSelected = this.gridApi.getSelectedRows().length > 0 ? true : false;
            }
            if (this.isDocumentsSelected === false) {
                this.documentIndex = 0;
                this.index = 0;
                if (this.docReferenceCtrl.value === '' || this.docReferenceCtrl.value === null) {
                    this.getDocumentsToMatch();
                }
                else {
                    this.getDocumentToMatchByDocumentReference();
                    this.isLoading = false;
                }
            }
            else {
                this.snackbarService.throwErrorSnackBar('Cannot Search when document is selected');
                this.isLoading = false;
            }
        }
        else {
            this.isLoading = false;
        }
        this.disableSearchButton();
    };
    CreateMatchFlagComponent.prototype.getDocumentsToMatch = function () {
        var _this = this;
        this.executionService
            .getDocumentsToMatch(this.counterpartyId.toString(), this.departmentValue, this.currencyCtrl.value, this.isEdit, this.matchFlagCode)
            .subscribe(function (data) {
            if (data && data.value.length > 0) {
                if (_this.gridApi) {
                    _this.gridApi.setRowData([]);
                }
                _this.documentMatching = data.value;
                _this.initializeGridColumns();
                for (_this.documentIndex = 0; _this.documentIndex < data.value['length']; _this.documentIndex++) {
                    _this.documentMatching[_this.index].amount = data.value[_this.index].amount;
                    _this.calculateDebitCreditAmounts();
                    _this.getDepartmentCodeValue();
                    _this.index++;
                }
                _this.documentMatchingGridRows = _this.documentMatching;
                _this.isLoading = false;
                _this.isDataAvailable = true;
                _this.dataLength = _this.documentMatchingGridRows.length;
            }
            else {
                if (_this.gridApi) {
                    _this.gridApi.setRowData([]);
                }
                _this.isLoading = false;
                _this.isDataAvailable = false;
            }
        });
    };
    CreateMatchFlagComponent.prototype.getDocumentToMatchByDocumentReference = function () {
        var _this = this;
        if (this.docReferenceCtrl.valid) {
            this.executionService
                .getDocumentToMatchByDocumentReference(this.docReferenceCtrl.value).subscribe(function (data) {
                if (data && data.value.length > 0) {
                    if (_this.gridApi) {
                        _this.gridApi.setRowData([]);
                    }
                    _this.documentMatching = data.value;
                    _this.initializeGridColumns();
                    for (_this.documentIndex = 0; _this.documentIndex < data.value['length']; _this.documentIndex++) {
                        _this.documentMatching[_this.index].amount = data.value[_this.index].amount;
                        _this.calculateDebitCreditAmounts();
                        _this.getDepartmentCodeValue();
                        _this.index++;
                    }
                    _this.documentMatchingGridRows = _this.documentMatching;
                    _this.isLoading = false;
                    _this.isDataAvailable = true;
                    _this.dataLength = _this.documentMatchingGridRows.length;
                }
                else {
                    if (_this.gridApi) {
                        _this.gridApi.setRowData([]);
                    }
                    _this.isLoading = false;
                    _this.isDataAvailable = false;
                }
            });
        }
    };
    CreateMatchFlagComponent.prototype.getDepartmentCodeValue = function () {
        var _this = this;
        var selectedDepartments = this.masterData.departments.filter(function (department) { return department.departmentId === _this.documentMatching[_this.index].departmentId; });
        if (selectedDepartments.length > 0) {
            this.documentMatching[this.index].departmentCode = selectedDepartments[0].departmentCode;
        }
    };
    CreateMatchFlagComponent.prototype.amountFormatter = function (param) {
        if (param.value) {
            return param.value.toLocaleString(undefined, {
                minimumFractionDigits: 2,
                maximumFractionDigits: 2,
            });
        }
    };
    CreateMatchFlagComponent.prototype.onCreditValueChanged = function (params) {
        params.data.totalAmount = (params.data.amount > 0) ? (params.data.amount) : ((-1) * params.data.amount);
        if (Object(_shared_numberMask__WEBPACK_IMPORTED_MODULE_15__["ConvertToNumber"])(params.data.credit) > params.data.totalAmount) {
            params.node.setDataValue('credit', -(params.data.amount));
            params.node.setDataValue('documentAmount', params.data.amount);
            params.node.setSelected(false);
        }
        else {
            if (params.node.selected !== false) {
                params.node.setSelected(true);
                params.data.documentAmount = (-1) * params.data.credit;
                params.node.setDataValue('documentAmount', params.data.documentAmount);
                params.context.component.totalCredit = 0;
                var selectedRows = params.context.component.gridApi.getSelectedRows();
                selectedRows.forEach(function (selectedDocumentRow) {
                    params.context.component.totalCredit += Object(_shared_numberMask__WEBPACK_IMPORTED_MODULE_15__["ConvertToNumber"])(selectedDocumentRow.credit);
                });
                params.context.component.totalBalance =
                    params.context.component.totalCredit - params.context.component.totalDebit;
                params.context.component.formattedInput = params.context.component.totalBalance.toLocaleString(undefined, {
                    minimumFractionDigits: 2,
                    maximumFractionDigits: 2,
                });
            }
        }
    };
    CreateMatchFlagComponent.prototype.calculateDebitCreditAmounts = function () {
        if (this.documentMatching[this.index].documentType === _shared_enums_transaction_document_enum__WEBPACK_IMPORTED_MODULE_14__["TransactionDocument"].CashPayment
            || this.documentMatching[this.index].documentType === _shared_enums_transaction_document_enum__WEBPACK_IMPORTED_MODULE_14__["TransactionDocument"].SalesInvoice
            || this.documentMatching[this.index].documentType === _shared_enums_transaction_document_enum__WEBPACK_IMPORTED_MODULE_14__["TransactionDocument"].DebitNote
            || this.documentMatching[this.index].documentType === _shared_enums_transaction_document_enum__WEBPACK_IMPORTED_MODULE_14__["TransactionDocument"].JournalEntry) {
            if (this.documentMatching[this.index].amount > 0) {
                this.documentMatching[this.index].debit = this.documentMatching[this.index].amount;
            }
            else {
                this.documentMatching[this.index].credit = -this.documentMatching[this.index].amount;
            }
            this.documentMatching[this.index].documentAmount = this.documentMatching[this.index].amount;
        }
        else {
            if (this.documentMatching[this.index].amount > 0) {
                this.documentMatching[this.index].credit = this.documentMatching[this.index].amount;
            }
            else {
                this.documentMatching[this.index].debit = -this.documentMatching[this.index].amount;
            }
            this.documentMatching[this.index].documentAmount = -this.documentMatching[this.index].amount;
        }
    };
    CreateMatchFlagComponent.prototype.onDebitValueChanged = function (params) {
        if (Object(_shared_numberMask__WEBPACK_IMPORTED_MODULE_15__["ConvertToNumber"])(params.data.debit) > params.data.amount) {
            params.node.setDataValue('debit', params.data.amount);
            params.node.setDataValue('documentAmount', params.data.amount);
            params.node.setSelected(false);
        }
        else {
            if (params.node.selected !== false) {
                params.node.setSelected(true);
                params.node.setDataValue('documentAmount', params.data.debit);
                params.context.component.totalDebit = 0;
                var selectedRows = params.context.component.gridApi.getSelectedRows();
                selectedRows.forEach(function (selectedDocumentRow) {
                    params.context.component.totalDebit += Object(_shared_numberMask__WEBPACK_IMPORTED_MODULE_15__["ConvertToNumber"])(selectedDocumentRow.debit);
                });
                params.context.component.totalBalance =
                    params.context.component.totalCredit - params.context.component.totalDebit;
                params.context.component.formattedInput = params.context.component.totalBalance.toLocaleString(undefined, {
                    minimumFractionDigits: 2,
                    maximumFractionDigits: 2,
                });
            }
            else {
                params.node.setDataValue('debit', params.data.amount);
                params.node.setDataValue('documentAmount', params.data.amount);
            }
        }
    };
    CreateMatchFlagComponent.prototype.deselectNode = function (currentRowIndex) {
        var _this = this;
        this.documentMatchingGridOptions.api.forEachNode(function (node) {
            if (Number(node.id) === currentRowIndex) {
                _this.documentMatchingGridOptions.api.deselectNode(node);
            }
        });
    };
    CreateMatchFlagComponent.prototype.onCreateMatchRowSelected = function (event) {
        var _this = this;
        this.functionalCurrencyAmount = 0;
        this.statutoryCurrencyAmount = 0;
        var currentRowIndex = event.rowIndex;
        if (event.node.selected === false) {
            this.isDocumentsSelected = false;
            // Restoration of the initial value of the cell, in the case the user edited it
            if (event.data.credit) {
                event.node.setDataValue('credit', Math.abs(event.data.amount));
            }
            if (event.data.debit) {
                event.node.setDataValue('debit', Math.abs(event.data.amount));
            }
        }
        if (event.node.selected) {
            this.isDocumentsSelected = true;
            if (event.data.matchFlagCode) {
                this.snackbarService.informationSnackBar('Document is preliminary marked and cannot be selected');
                this.gridApi.deselectIndex(currentRowIndex);
            }
            if (event.data.credit) {
                event.node.setDataValue('isCreditOrDebit', _shared_enums_matching_type_enum__WEBPACK_IMPORTED_MODULE_13__["MatchingType"].Credit);
            }
            if (event.data.debit) {
                event.node.setDataValue('isCreditOrDebit', _shared_enums_matching_type_enum__WEBPACK_IMPORTED_MODULE_13__["MatchingType"].Debit);
            }
        }
        this.totalCredit = 0;
        this.totalDebit = 0;
        var selectedRows = this.gridApi.getSelectedRows();
        selectedRows.forEach(function (selectedDocumentRow) {
            if (selectedDocumentRow.credit) {
                _this.totalCredit = Object(_shared_numberMask__WEBPACK_IMPORTED_MODULE_15__["ConvertToNumber"])(_this.totalCredit) + Object(_shared_numberMask__WEBPACK_IMPORTED_MODULE_15__["ConvertToNumber"])(selectedDocumentRow.credit);
            }
            if (selectedDocumentRow.debit) {
                _this.totalDebit = Object(_shared_numberMask__WEBPACK_IMPORTED_MODULE_15__["ConvertToNumber"])(_this.totalDebit) + Object(_shared_numberMask__WEBPACK_IMPORTED_MODULE_15__["ConvertToNumber"])(selectedDocumentRow.debit);
            }
            _this.selectedDocumentLength = selectedRows.length;
            _this.documentDate = selectedDocumentRow.documentDate.toDateString();
        });
        this.totalBalance = this.totalCredit - this.totalDebit;
        this.formattedInput = this.totalBalance.toLocaleString(undefined, {
            minimumFractionDigits: 2,
            maximumFractionDigits: 2,
        });
        this.selectedDocumentsToMatch = this.gridApi.getSelectedRows();
    };
    CreateMatchFlagComponent.prototype.onMatchSelectedButtonClicked = function () {
        var _this = this;
        this.isSave = true;
        if (this.gridApi) {
            if (this.gridApi.getSelectedRows().length > 0) {
                if (this.totalBalance === 0) {
                    var matchDateDialog = this.dialog.open(_cash_matching_dialog_cash_matching_dialog_cash_matching_dialog_component__WEBPACK_IMPORTED_MODULE_27__["CashMatchingDialogComponent"], {
                        data: {
                            title: 'Cash Matching Dialog',
                            text: 'Revaluation Document Date / Payment Document Date',
                            okButton: 'Confirm',
                            cancelButton: 'Cancel',
                            value: this.documentDate,
                        },
                    });
                    this.subscriptions.push(matchDateDialog.afterClosed().subscribe(function (answer) {
                        if (answer && answer['buttonClicked']) {
                            _this.paymentDocumentDate = answer['buttonValue'];
                            _this.matchDocuments();
                        }
                    }));
                }
                else {
                    this.snackbarService.throwErrorSnackBar('Selected Items do not balance');
                }
            }
            else {
                this.snackbarService.throwErrorSnackBar('Select a document to match');
            }
        }
    };
    CreateMatchFlagComponent.prototype.matchDocuments = function () {
        var _this = this;
        this.model = new _shared_services_preaccounting_dtos_document_matching_record__WEBPACK_IMPORTED_MODULE_22__["DocumentMatchingRecord"]();
        this.populateEntity();
        this.executionService.createMatchFlag(this.model)
            .subscribe(function (data) {
            _this.isDialogClosed = true;
            _this.matchCodeSelected = data.matchFlagCode;
            if (data) {
                _this.journalDocumentId = data.journalId;
                _this.transactionDocumentId = data.transactionDocumentId;
                _this.journalFieldShow = (data.journalId) ? true : false;
                _this.gridApi.setRowData([]);
                _this.counterpartyCtrl.reset();
                _this.clientNameCtrl.patchValue(null);
                _this.currencyCtrl.setValue(_this.functionalCurrency);
                var selectedDepartments = _this.masterData.departments.filter(function (department) { return department.departmentCode === 'ALL'; });
                _this.departmentCtrl.setValue(selectedDepartments[0].departmentCode);
                _this.docReferenceCtrl.patchValue(null);
                _this.secDocReferenceCtrl.patchValue(null);
                _this.currentDocDateCtrl.patchValue(null);
                _this.docReferenceCtrl.enable(); // ReversalRevalJournalCode
                var informationMessage = 'The match ' + data.matchFlagCode + ' has been created.';
                if (data.reversalRevalJournalCode) {
                    informationMessage = informationMessage + '\nThe Reval ' + data.reversalRevalJournalCode + ' has been created.';
                }
                _this.snackbarService.informationAndCopySnackBar(informationMessage, informationMessage);
            }
            if (_this.gridApi) {
                _this.gridApi.setRowData([]);
            }
        }, function (error) {
            _this.snackbarService.throwErrorSnackBar('Oops! An error ocurred');
        }, function () {
        });
    };
    CreateMatchFlagComponent.prototype.populateEntity = function () {
        this.model.counterpartyId = this.counterpartyId;
        this.model.currencyCode = this.currencyCtrl.value;
        this.model.functionalCurrency = this.functionalCurrency;
        this.model.statutoryCurrency = this.statutoryCurrency;
        this.model.paymentDocumentDate = this.paymentDocumentDate;
        this.model.totalAmount = this.totalBalance;
        this.model.documentMatchings = this.getDocumentMatching();
        this.model.manualDocumentMatchings = this.getDocumentMatching();
    };
    CreateMatchFlagComponent.prototype.getDocumentMatching = function () {
        // The sign of amount and document amount should be the same
        // If you want to change this line, please check with Dorine Boutten or Michael Durand
        var documentMatchings = this.gridApi.getSelectedRows();
        documentMatchings.forEach(function (doc) {
            if (Math.sign(doc.amount) !== Math.sign(doc.documentAmount)) {
                doc.documentAmount = -doc.documentAmount;
            }
        });
        return documentMatchings;
    };
    CreateMatchFlagComponent.prototype.onCloseButtonClicked = function () {
        this.isDialogClosed = false;
    };
    CreateMatchFlagComponent.prototype.onGridReady = function (params) {
        var _this = this;
        params.columnApi.autoSizeColumns();
        params.columnDefs = this.documentMatchingGridColumns;
        this.gridApi = params.api;
        this.gridColumnApi = params.columnApi;
        this.gridApi.showNoRowsOverlay();
        this.gridService.sizeColumns(params);
        window.onresize = function () {
            _this.gridService.sizeColumns(params);
        };
    };
    CreateMatchFlagComponent.prototype.onCounterpartyIdSelected = function (value) {
        var counterparty = this.masterData.counterparties.filter(function (item) { return item.counterpartyCode === value.counterpartyCode; });
        if (counterparty.length > 0) {
            this.counterpartyId = counterparty[0].counterpartyID;
            this.clientNameCtrl.patchValue(counterparty[0].description);
            if (!this.docReferenceCtrl.value) {
                this.docReferenceCtrl.disable();
            }
            this.disableSearchButton();
        }
        else {
            this.docReferenceCtrl.enable();
        }
        this.clientNameCtrl.disable();
    };
    CreateMatchFlagComponent.prototype.clearDropdownControls = function () {
        this.docReferenceCtrl.reset();
    };
    CreateMatchFlagComponent.prototype.onDepartmentCodeSelected = function (departmentCode) {
        var selectedDepartments = this.masterData.departments.filter(function (department) { return department.departmentCode === departmentCode; });
        if (selectedDepartments.length > 0) {
            this.departmentValue = selectedDepartments[0].departmentCode !== 'ALL' ?
                selectedDepartments[0].departmentId : null;
        }
    };
    CreateMatchFlagComponent.prototype.onDocumentReferenceOptionSelected = function (documentReference) {
        var _this = this;
        this.executionService.getDocumentToMatchByDocumentReference(documentReference)
            .subscribe(function (data) {
            if (data && data.value) {
                var distinctCounterparty_1;
                var isDifferentCounterParties_1 = false;
                data.value.forEach(function (row) {
                    if (!isDifferentCounterParties_1) {
                        if (distinctCounterparty_1 && distinctCounterparty_1 !== row.counterpartyId) {
                            isDifferentCounterParties_1 = true;
                            _this.counterpartyCtrl.patchValue('');
                            _this.documentMatchingGridRows = null;
                            _this.snackbarService.throwErrorSnackBar('This Document has different Counterparties');
                        }
                        else {
                            distinctCounterparty_1 = row.counterpartyId;
                        }
                    }
                });
                if (!isDifferentCounterParties_1) {
                    _this.documentSelectionModel = data.value[0];
                    if (_this.documentSelectionModel && _this.documentSelectionModel.counterpartyId) {
                        var counterparty = _this.masterData.counterparties.filter(function (item) { return item.counterpartyID === _this.documentSelectionModel.counterpartyId; });
                        if (counterparty.length > 0) {
                            _this.counterpartyValue = counterparty[0].counterpartyCode;
                            _this.counterpartyCtrl.patchValue(counterparty[0]);
                            _this.clientNameCtrl.setValue(counterparty[0].description);
                            _this.disableSearchButton();
                        }
                    }
                    if (_this.documentSelectionModel && _this.documentSelectionModel.departmentId) {
                        var department = _this.masterData.departments.filter(function (item) { return item.departmentId === _this.documentSelectionModel.departmentId; });
                        if (department.length > 0) {
                            _this.departmentCtrl.setValue(department[0].departmentCode);
                            _this.departmentValue = department[0].departmentId;
                        }
                    }
                    if (_this.documentSelectionModel && _this.documentSelectionModel.currencyCode) {
                        _this.currencyCtrl.setValue(_this.documentSelectionModel.currencyCode);
                    }
                }
            }
        });
    };
    CreateMatchFlagComponent.prototype.onDiscardButtonClicked = function () {
        var _this = this;
        this.isSave = true;
        var confirmDiscardDialog = this.dialog.open(_shared_components_confirmation_dialog_confirmation_dialog_component__WEBPACK_IMPORTED_MODULE_8__["ConfirmationDialogComponent"], {
            data: {
                title: 'Discard Changes',
                text: 'You have some modification pending. Close and lose changes?',
                okButton: 'Ok',
                cancelButton: 'Cancel',
            },
        });
        confirmDiscardDialog.afterClosed().subscribe(function (answer) {
            if (answer) {
                _this.counterpartyCtrl.reset();
                _this.clientNameCtrl.patchValue(null);
                _this.currencyCtrl.setValue(_this.functionalCurrency);
                var selectedDepartments = _this.masterData.departments.filter(function (department) { return department.departmentCode === 'ALL'; });
                _this.departmentCtrl.setValue(selectedDepartments[0].departmentCode);
                if (_this.docReferenceCtrl.value) {
                    _this.docReferenceCtrl.patchValue(null);
                }
                _this.secDocReferenceCtrl.patchValue(null);
                _this.currentDocDateCtrl.patchValue(null);
                _this.gridApi.setRowData([]);
                _this.docReferenceCtrl.enable();
                _this.totalBalance = null;
                _this.isDialogClosed = false;
            }
        });
    };
    CreateMatchFlagComponent.prototype.getFormGroup = function () {
        this.formGroup = this.formBuilder.group({
            counterpartyCtrl: this.counterpartyCtrl,
            clientNameCtrl: this.clientNameCtrl,
            docReferenceCtrl: this.docReferenceCtrl,
            secDocReferenceCtrl: this.secDocReferenceCtrl,
            departmentCtrl: this.departmentCtrl,
            currencyCtrl: this.currencyCtrl,
        });
        return _super.prototype.getFormGroup.call(this);
    };
    CreateMatchFlagComponent.prototype.unloadNotification = function ($event) {
        if ((this.counterpartyCtrl.dirty || this.departmentCtrl.dirty || this.clientNameCtrl.dirty ||
            this.secDocReferenceCtrl.dirty || this.currencyCtrl.dirty || this.docReferenceCtrl.dirty) && this.isSave === false) {
            $event.returnValue = true;
        }
    };
    CreateMatchFlagComponent.prototype.disableSearchButton = function () {
        this.isSearchDisabled = ((!this.docReferenceCtrl.value) && (!this.counterpartyCtrl.value)) ? true : false;
    };
    CreateMatchFlagComponent.prototype.onAccountingEntriesButtonClicked = function () {
        this.router.navigate(['/' + this.companyManager.getCurrentCompanyId() +
                '/financial/accounting/entries'], {
            queryParams: {
                matchFlag: this.matchCodeSelected,
            },
        });
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('userPreferences'),
        __metadata("design:type", _shared_components_ag_grid_user_preferences_ag_grid_user_preferences_component__WEBPACK_IMPORTED_MODULE_5__["AgGridUserPreferencesComponent"])
    ], CreateMatchFlagComponent.prototype, "userPreferencesComponent", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('emptyStateComponent'),
        __metadata("design:type", _shared_components_empty_state_empty_state_component__WEBPACK_IMPORTED_MODULE_9__["EmptyStateComponent"])
    ], CreateMatchFlagComponent.prototype, "emptyStateComponent", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["HostListener"])('window:beforeunload', ['$event']),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Object]),
        __metadata("design:returntype", void 0)
    ], CreateMatchFlagComponent.prototype, "unloadNotification", null);
    CreateMatchFlagComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'atlas-create-match-flag',
            template: __webpack_require__(/*! ./create-match-flag.component.html */ "./Client/app/financial/components/cash-matching/create-match-flag/create-match-flag.component.html"),
            styles: [__webpack_require__(/*! ./create-match-flag.component.scss */ "./Client/app/financial/components/cash-matching/create-match-flag/create-match-flag.component.scss")],
        }),
        __metadata("design:paramtypes", [_shared_services_form_configuration_provider_service__WEBPACK_IMPORTED_MODULE_18__["FormConfigurationProviderService"],
            _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormBuilder"],
            _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"],
            _shared_services_http_services_masterdata_service__WEBPACK_IMPORTED_MODULE_21__["MasterdataService"],
            _shared_services_util_service__WEBPACK_IMPORTED_MODULE_26__["UtilService"],
            _shared_services_ui_service__WEBPACK_IMPORTED_MODULE_25__["UiService"],
            _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialog"],
            _shared_services_http_services_foreign_exchange_service__WEBPACK_IMPORTED_MODULE_20__["ForeignExchangeService"],
            _angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"],
            _shared_services_snackbar_service__WEBPACK_IMPORTED_MODULE_23__["SnackbarService"],
            _core_services_company_manager_service__WEBPACK_IMPORTED_MODULE_4__["CompanyManagerService"],
            _shared_services_http_services_execution_service__WEBPACK_IMPORTED_MODULE_19__["ExecutionService"],
            _shared_services_ag_grid_service__WEBPACK_IMPORTED_MODULE_16__["AgGridService"],
            _shared_services_title_service__WEBPACK_IMPORTED_MODULE_24__["TitleService"]])
    ], CreateMatchFlagComponent);
    return CreateMatchFlagComponent;
}(_shared_components_base_form_component_base_form_component_component__WEBPACK_IMPORTED_MODULE_6__["BaseFormComponent"]));



/***/ }),

/***/ "./Client/app/financial/components/cash-matching/delete-match-flag/delete-match-flag.component.html":
/*!**********************************************************************************************************!*\
  !*** ./Client/app/financial/components/cash-matching/delete-match-flag/delete-match-flag.component.html ***!
  \**********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<atlas-cash-matching-home></atlas-cash-matching-home>\r\n<div class=\"main-container\">\r\n\r\n    <mat-card *ngIf=\"isDialogClosed\">\r\n        <mat-card-header *ngIf=\"journalFieldShow\">\r\n            <mat-card-title>\r\n                <h3>Revaluation Journal\r\n                    <span class=\"total-figure-value\">{{selectedJournalValue}}\r\n                    </span> Reversed by <span class=\"total-figure-value\">{{journalDocumentId}}\r\n                    </span>\r\n                </h3>\r\n            </mat-card-title>\r\n        </mat-card-header>\r\n        <mat-card-subtitle>\r\n            <h3>Removal of Match Flag <span class=\"total-figure-value\">{{matchFlagSelected}}</span> completed\r\n            </h3>\r\n        </mat-card-subtitle>\r\n        <div class=\"button-container\"\r\n             fxLayoutAlign=\"end end\"\r\n             fxLayoutGap=\"8px\">\r\n            <button mat-button\r\n                    (click)=\"onCloseButtonClicked()\">\r\n                CLOSE </button>\r\n            <button mat-button\r\n                    (click)=\"onAccountingEntriesButtonClicked()\">\r\n                GO TO ACC. ENTRIES\r\n            </button>\r\n\r\n        </div>\r\n    </mat-card>\r\n\r\n    <mat-card>\r\n        <mat-card-header>\r\n            <mat-card-title>\r\n                Documents to unmatch\r\n            </mat-card-title>\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n            <div fxLayout=\"row\"\r\n                 fxLayoutAlign=\"left start\"\r\n                 fxLayoutGap=\"5%\"\r\n                 fxFlex=\"15%\">\r\n                <div fxFlex=\"98%\">\r\n                    <atlas-masterdata-user-preferences-input isEditable=\"true\"\r\n                                                             [fieldControl]=\"counterpartyCtrl\"\r\n                                                             [options]=\"filteredCounterPartyList\"\r\n                                                             label=\"Client Account\"\r\n                                                             displayProperty=\"counterpartyCode\"\r\n                                                             [selectProperties]=\"['counterpartyCode', 'description']\"\r\n                                                             [errorMap]=\"counterpartyErrorMap\"\r\n                                                             lightBoxTitle=\"Results for Counterparty\"\r\n                                                             gridId=\"counterpartiesGrid\"\r\n                                                             (optionSelected)=\"onCounterpartyIdSelected($event)\">\r\n                    </atlas-masterdata-user-preferences-input>\r\n                </div>\r\n            </div>\r\n            <mat-form-field fxFlex=\"16%\">\r\n                <input matInput\r\n                       placeholder=\"Client Name\"\r\n                       [formControl]=\"clientNameCtrl\"\r\n                       label=\"Client Name\"\r\n                       autocomplete=\"off\"\r\n                       matTooltip=\"Client Name\">\r\n            </mat-form-field>\r\n            <div class=\"custom-form\"\r\n                 fxFlex=\"8%\"\r\n                 [class.isEmpty]=\"!departmentsCtrl.value\"\r\n                 [class.required-field]=\"departmentsCtrl.isRequired\">\r\n                <mat-form-field>\r\n                    <input matInput\r\n                           placeholder=\"Department\"\r\n                           [required]=\"departmentsCtrl.isRequired\"\r\n                           [matAutocomplete]=\"departments\"\r\n                           [formControl]=\"departmentsCtrl\"\r\n                           autocomplete=\"off\"\r\n                           matTooltip=\"Depatment Code\">\r\n                    <mat-autocomplete #departments=\"matAutocomplete\"\r\n                                      [panelWidth]=\"panelSize\"\r\n                                      (optionSelected)=\"onDepartmentCodeSelected($event.option.value)\">\r\n                        <mat-option *ngFor=\"let department of filteredDepartmentsList\"\r\n                                    [value]=\"department.departmentCode\">\r\n                            {{department.departmentCode}} | {{department.description}}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <mat-error *ngIf=\"departmentsCtrl.hasError('required')\"> Required\r\n                    </mat-error>\r\n                    <mat-hint *ngIf=\"departmentsCtrl.isRequired\">\r\n                        Required *\r\n                    </mat-hint>\r\n                </mat-form-field>\r\n            </div>\r\n            <div class=\"custom-form\"\r\n                 fxFlex=\"12%\"\r\n                 fxLayoutGap=\"5%\"\r\n                 [class.isEmpty]=\"!currencyCtrl.value\"\r\n                 [class.required-field]=\"currencyCtrl.isRequired\">\r\n                <mat-form-field>\r\n                    <input matInput\r\n                           placeholder=\"Currency\"\r\n                           [required]=\"currencyCtrl.isRequired\"\r\n                           [matAutocomplete]=\"currencies\"\r\n                           [formControl]=\"currencyCtrl\"\r\n                           autocomplete=\"off\"\r\n                           matTooltip=\"Currency\">\r\n                    <mat-autocomplete #currencies=\"matAutocomplete\"\r\n                                      [panelWidth]=\"panelSize\"\r\n                                      (optionSelected)=\"onCurrencyOptionSelected($event.option.value)\">\r\n                        <mat-option *ngFor=\"let currency of filteredCurrencyList\"\r\n                                    [value]=\"currency.currencyCode\">{{currency.currencyCode}} |\r\n                            {{currency.description}}</mat-option>\r\n                    </mat-autocomplete>\r\n                    <mat-error *ngIf=\"currencyCtrl.hasError('required')\"> Required\r\n                    </mat-error>\r\n                    <mat-hint *ngIf=\"currencyCtrl.isRequired\">\r\n                        Required *\r\n                    </mat-hint>\r\n                </mat-form-field>\r\n            </div>\r\n            <mat-form-field fxFlex=12%>\r\n                <input matInput\r\n                       placeholder=\"DocumentReference\"\r\n                       [matAutocomplete]=\"documentReferences\"\r\n                       [formControl]=\"docReferenceCtrl\"\r\n                       autocomplete=\"off\"\r\n                       matTooltip=\"Document Reference\">\r\n                <mat-autocomplete #documentReferences=\"matAutocomplete\"\r\n                                  [panelWidth]=\"panelSize\"\r\n                                  (optionSelected)=\"onDocumentReferenceOptionSelected($event.option.value)\">\r\n                    <mat-option *ngFor=\"let docReference of filteredDocReferenceList\"\r\n                                [value]=\"docReference.documentReference\">\r\n                        {{docReference.documentReference}}\r\n                    </mat-option>\r\n                </mat-autocomplete>\r\n                <mat-error *ngIf=\"docReferenceCtrl.hasError('inDropdownList')\">\r\n                    Document Reference doesn't exist\r\n                </mat-error>\r\n            </mat-form-field>\r\n            <mat-form-field fxFlex=14%>\r\n                <input matInput\r\n                       placeholder=\"Second Document Reference\"\r\n                       [formControl]=\"secDocReferenceCtrl\"\r\n                       autocomplete=\"off\"\r\n                       matTooltip=\"Second Document Reference\">\r\n            </mat-form-field>\r\n            <mat-form-field fxFlex=12%>\r\n                <input matInput\r\n                       placeholder=\"Match Flag\"\r\n                       [matAutocomplete]=\"matchFlags\"\r\n                       [formControl]=\"matchFlagCtrl\"\r\n                       autocomplete=\"off\"\r\n                       matTooltip=\"Match Flag\">\r\n                <mat-autocomplete #matchFlags=\"matAutocomplete\"\r\n                                  [panelWidth]=\"panelSize\"\r\n                                  (optionSelected)=\"onMatchFlagOptionSelected($event.option.value)\">\r\n                    <mat-option *ngFor=\"let matchFlag of filteredMatchFlagList\"\r\n                                [value]=\"matchFlag.matchFlagCode\">\r\n                        {{matchFlag.matchFlagCode}}\r\n                    </mat-option>\r\n                </mat-autocomplete>\r\n                <mat-error *ngIf=\"matchFlagCtrl.hasError('inDropdownList')\">\r\n                    Match Code doesn't exist\r\n                </mat-error>\r\n            </mat-form-field>\r\n            <button mat-icon-button\r\n                    [disabled]=\"isSearchDisabled\"\r\n                    (click)=\"onDeleteMatchSearchButtonClicked()\">\r\n                <mat-icon aria-label=\"Search\">search</mat-icon>\r\n            </button>\r\n        </mat-card-content>\r\n    </mat-card>\r\n\r\n    <div fxLayout=\"row\"\r\n         fxLayoutAlign=\"start none\"\r\n         *ngIf=\"isDataAvailable\">\r\n        <mat-card fxFlex=100%>\r\n            <div ag-grid=\"documentMatchingGridOptions\"\r\n                 class=\"ag-theme-material pointer-cursor\">\r\n                <ag-grid-angular style=\" height:100%;\"\r\n                                 class=\"ag-theme-material\"\r\n                                 [columnDefs]=\"documentMatchingGridColumns\"\r\n                                 [rowData]=\"documentMatchingGridRows\"\r\n                                 [gridOptions]=\"documentMatchingGridOptions\"\r\n                                 domLayout=\"autoHeight\"\r\n                                 (gridReady)=\"onGridReady($event)\"\r\n                                 (rowSelected)=\"onDeleteMatchRowSelected($event)\"\r\n                                 (cellValueChanged)=\"onCellValueChanged($event)\"\r\n                                 [frameworkComponents]=\"gridComponents\"\r\n                                 rowSelection=\"multiple\"\r\n                                 [singleClickEdit]=\"true\"\r\n                                 [suppressRowClickSelection]=\"true\"\r\n                                 [suppressNoRowsOverlay]=\"true\"\r\n                                 [pagination]=\"true\"\r\n                                 [enableSorting]=\"true\"\r\n                                 [enableColResize]=\"true\"\r\n                                 domLayout=autoHeight\r\n                                 [enableFilter]=\"true\"\r\n                                 [rowHeight]=\"atlasAgGridParam.rowHeight\">\r\n                </ag-grid-angular>\r\n            </div>\r\n            <div fxLayout=\"row\"\r\n                 fxLayoutAlign=\"end center\">\r\n                <mat-card-subtitle class=\"total-figure\">Balance : <span class=\"total-figure-value\">{{totalBalance}}\r\n                    </span></mat-card-subtitle>\r\n            </div>\r\n            <div fxLayout=\"row\"\r\n                 fxLayoutAlign=\"center center\"\r\n                 fxLayoutWrap\r\n                 *ngIf=\"isLoading\"\r\n                 class=\"loading\">\r\n                <mat-spinner color=\"accent\"></mat-spinner>\r\n            </div>\r\n        </mat-card>\r\n    </div>\r\n    <atlas-empty-state *ngIf=\"!isDataAvailable\"\r\n                       title=\"No Entries to display\"\r\n                       message=\"Edit the filters and generate the table again\"\r\n                       #emptyStateComponent></atlas-empty-state>\r\n    <div fxLayout=\"row \"\r\n         fxLayoutAlign=\"space-between start\"\r\n         class=\"button-details\">\r\n        <div fxLayout=\"column \"\r\n             fxLayoutAlign=\"start \">\r\n            <button (click)=\"onDiscardButtonClicked()\"\r\n                    mat-button>\r\n                DISCARD\r\n            </button>\r\n        </div>\r\n        <div fxLayout=\"column \"\r\n             fxLayoutAlign=\"start \"\r\n             *ngIf=\"isDataAvailable\">\r\n            <div fxLayout=\"row\"\r\n                 fxLayoutAlign=\"end start\">\r\n                <button (click)=\"onEditPaymentDocumentButtonClicked()\"\r\n                        mat-button>\r\n                    EDIT PAYMENT DOCUMENT DATE\r\n                </button>\r\n                <button mat-raised-button\r\n                        (click)=\"onUnmatchButtonClicked()\"\r\n                        [disabled]=\"isCompanyFrozen\">\r\n                    UNMATCH SELECTED\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>"

/***/ }),

/***/ "./Client/app/financial/components/cash-matching/delete-match-flag/delete-match-flag.component.scss":
/*!**********************************************************************************************************!*\
  !*** ./Client/app/financial/components/cash-matching/delete-match-flag/delete-match-flag.component.scss ***!
  \**********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".matched-document {\n  margin-right: 5%;\n  float: left;\n  padding-top: 18px;\n  color: green; }\n"

/***/ }),

/***/ "./Client/app/financial/components/cash-matching/delete-match-flag/delete-match-flag.component.ts":
/*!********************************************************************************************************!*\
  !*** ./Client/app/financial/components/cash-matching/delete-match-flag/delete-match-flag.component.ts ***!
  \********************************************************************************************************/
/*! exports provided: DeleteMatchFlagComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DeleteMatchFlagComponent", function() { return DeleteMatchFlagComponent; });
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _core_services_company_manager_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../core/services/company-manager.service */ "./Client/app/core/services/company-manager.service.ts");
/* harmony import */ var _shared_components_ag_grid_user_preferences_ag_grid_user_preferences_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../shared/components/ag-grid-user-preferences/ag-grid-user-preferences.component */ "./Client/app/shared/components/ag-grid-user-preferences/ag-grid-user-preferences.component.ts");
/* harmony import */ var _shared_components_base_form_component_base_form_component_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../shared/components/base-form-component/base-form-component.component */ "./Client/app/shared/components/base-form-component/base-form-component.component.ts");
/* harmony import */ var _shared_components_cell_editor_numeric_cell_editor_numeric_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../shared/components/cell-editor-numeric/cell-editor-numeric.component */ "./Client/app/shared/components/cell-editor-numeric/cell-editor-numeric.component.ts");
/* harmony import */ var _shared_components_confirmation_dialog_confirmation_dialog_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../shared/components/confirmation-dialog/confirmation-dialog.component */ "./Client/app/shared/components/confirmation-dialog/confirmation-dialog.component.ts");
/* harmony import */ var _shared_components_empty_state_empty_state_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../../shared/components/empty-state/empty-state.component */ "./Client/app/shared/components/empty-state/empty-state.component.ts");
/* harmony import */ var _shared_directives_autocomplete_dropdown_directive__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../../shared/directives/autocomplete-dropdown.directive */ "./Client/app/shared/directives/autocomplete-dropdown.directive.ts");
/* harmony import */ var _shared_entities_atlas_form_control__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../../shared/entities/atlas-form-control */ "./Client/app/shared/entities/atlas-form-control.ts");
/* harmony import */ var _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../../../shared/entities/masterdata-props.entity */ "./Client/app/shared/entities/masterdata-props.entity.ts");
/* harmony import */ var _shared_enums_matching_type_enum__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../../../shared/enums/matching-type.enum */ "./Client/app/shared/enums/matching-type.enum.ts");
/* harmony import */ var _shared_enums_transaction_document_enum__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../../../shared/enums/transaction-document.enum */ "./Client/app/shared/enums/transaction-document.enum.ts");
/* harmony import */ var _shared_numberMask__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../../../shared/numberMask */ "./Client/app/shared/numberMask.ts");
/* harmony import */ var _shared_services_ag_grid_service__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../../../shared/services/ag-grid.service */ "./Client/app/shared/services/ag-grid.service.ts");
/* harmony import */ var _shared_services_execution_dtos_document_matching__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../../../../shared/services/execution/dtos/document-matching */ "./Client/app/shared/services/execution/dtos/document-matching.ts");
/* harmony import */ var _shared_services_form_configuration_provider_service__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../../../../shared/services/form-configuration-provider.service */ "./Client/app/shared/services/form-configuration-provider.service.ts");
/* harmony import */ var _shared_services_http_services_execution_service__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../../../../shared/services/http-services/execution.service */ "./Client/app/shared/services/http-services/execution.service.ts");
/* harmony import */ var _shared_services_http_services_foreign_exchange_service__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../../../../shared/services/http-services/foreign-exchange.service */ "./Client/app/shared/services/http-services/foreign-exchange.service.ts");
/* harmony import */ var _shared_services_http_services_masterdata_service__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../../../../shared/services/http-services/masterdata.service */ "./Client/app/shared/services/http-services/masterdata.service.ts");
/* harmony import */ var _shared_services_preaccounting_dtos_document_matching_record__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ../../../../shared/services/preaccounting/dtos/document-matching-record */ "./Client/app/shared/services/preaccounting/dtos/document-matching-record.ts");
/* harmony import */ var _shared_services_snackbar_service__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ../../../../shared/services/snackbar.service */ "./Client/app/shared/services/snackbar.service.ts");
/* harmony import */ var _shared_services_title_service__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ../../../../shared/services/title.service */ "./Client/app/shared/services/title.service.ts");
/* harmony import */ var _shared_services_ui_service__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ../../../../shared/services/ui.service */ "./Client/app/shared/services/ui.service.ts");
/* harmony import */ var _shared_services_util_service__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ../../../../shared/services/util.service */ "./Client/app/shared/services/util.service.ts");
/* harmony import */ var _cash_matching_dialog_delete_matching_dialog_delete_matching_dialog_component__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ../cash-matching-dialog/delete-matching-dialog/delete-matching-dialog.component */ "./Client/app/financial/components/cash-matching/cash-matching-dialog/delete-matching-dialog/delete-matching-dialog.component.ts");
/* harmony import */ var _cash_matching_dialog_payment_document_date_dialog_payment_document_date_dialog_component__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ../cash-matching-dialog/payment-document-date-dialog/payment-document-date-dialog.component */ "./Client/app/financial/components/cash-matching/cash-matching-dialog/payment-document-date-dialog/payment-document-date-dialog.component.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






























var DeleteMatchFlagComponent = /** @class */ (function (_super) {
    __extends(DeleteMatchFlagComponent, _super);
    function DeleteMatchFlagComponent(formConfigurationProvider, datepipe, formBuilder, masterdataService, router, utilService, dialog, uiService, route, snackbarService, executionService, foreignExchangeService, companyManager, gridService, titleService) {
        var _this = _super.call(this, formConfigurationProvider) || this;
        _this.formConfigurationProvider = formConfigurationProvider;
        _this.datepipe = datepipe;
        _this.formBuilder = formBuilder;
        _this.masterdataService = masterdataService;
        _this.router = router;
        _this.utilService = utilService;
        _this.dialog = dialog;
        _this.uiService = uiService;
        _this.route = route;
        _this.snackbarService = snackbarService;
        _this.executionService = executionService;
        _this.foreignExchangeService = foreignExchangeService;
        _this.companyManager = companyManager;
        _this.gridService = gridService;
        _this.titleService = titleService;
        _this.counterpartyCtrl = new _shared_entities_atlas_form_control__WEBPACK_IMPORTED_MODULE_12__["AtlasFormControl"]('Counterparty');
        _this.clientNameCtrl = new _shared_entities_atlas_form_control__WEBPACK_IMPORTED_MODULE_12__["AtlasFormControl"]('ClientName');
        _this.departmentsCtrl = new _shared_entities_atlas_form_control__WEBPACK_IMPORTED_MODULE_12__["AtlasFormControl"]('Department');
        _this.currencyCtrl = new _shared_entities_atlas_form_control__WEBPACK_IMPORTED_MODULE_12__["AtlasFormControl"]('Currency');
        _this.docReferenceCtrl = new _shared_entities_atlas_form_control__WEBPACK_IMPORTED_MODULE_12__["AtlasFormControl"]('DocumentReference');
        _this.secDocReferenceCtrl = new _shared_entities_atlas_form_control__WEBPACK_IMPORTED_MODULE_12__["AtlasFormControl"]('SecondaryReference');
        _this.matchFlagCtrl = new _shared_entities_atlas_form_control__WEBPACK_IMPORTED_MODULE_12__["AtlasFormControl"]('MatchFlag');
        _this.currentDocDateCtrl = new _shared_entities_atlas_form_control__WEBPACK_IMPORTED_MODULE_12__["AtlasFormControl"]('CurrentDocumentDate');
        _this.dataLength = 0;
        _this.index = 0;
        _this.journalFieldShow = false;
        _this.isDialogClosed = false;
        _this.documentMatchingGridOptions = {};
        _this.documentReference = [];
        _this.matchFlagList = [];
        _this.masterdataList = [
            _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_13__["MasterDataProps"].Counterparties,
            _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_13__["MasterDataProps"].Departments,
            _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_13__["MasterDataProps"].Currencies
        ];
        _this.gridComponents = {
            atlasNumeric: _shared_components_cell_editor_numeric_cell_editor_numeric_component__WEBPACK_IMPORTED_MODULE_8__["CellEditorNumericComponent"],
        };
        _this.counterpartyErrorMap = new Map()
            .set('required', 'This field is required')
            .set('inDropdownList', 'Invalid entry. Client not in the list.');
        _this.isSave = false;
        _this.isDocumentsSelected = false;
        _this.isDataAvailable = false;
        _this.atlasAgGridParam = _this.gridService.getAgGridParam();
        return _this;
    }
    DeleteMatchFlagComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.company = this.route.snapshot.paramMap.get('company');
        this.titleService.setTitle(this.route.snapshot.data.title);
        this.masterData = this.route.snapshot.data.masterdata;
        this.currentDocDateCtrl.setValue(this.companyManager.getCurrentCompanyDate());
        this.companyConfiguration = this.companyManager.getCompany(this.company);
        this.functionalCurrency = this.companyConfiguration.functionalCurrencyCode;
        this.statutoryCurrency = this.companyConfiguration.statutoryCurrencyCode;
        this.filteredCounterPartyList = this.masterData.counterparties;
        this.matchType = _shared_enums_matching_type_enum__WEBPACK_IMPORTED_MODULE_14__["MatchingType"].createMatch;
        this.currencyCtrl.setValue(this.functionalCurrency);
        this.isSearchDisabled = true;
        this.counterpartyCtrl.valueChanges.subscribe(function (input) {
            _this.filteredCounterPartyList = _this.utilService.filterListforAutocomplete(input, _this.masterData.counterparties, ['counterpartyCode', 'description', 'counterpartyID']);
            if (_this.counterpartyCtrl.valid) {
                _this.onCounterpartyIdSelected(_this.counterpartyCtrl.value);
            }
            else {
                if (_this.counterpartyCtrl.value !== null && _this.counterpartyCtrl.value.length === 0) {
                    _this.docReferenceCtrl.enable();
                    _this.matchFlagCtrl.enable();
                }
            }
        });
        this.filteredDepartmentsList = [];
        this.filteredDepartmentsList = this.masterData.departments;
        var departments = this.filteredDepartmentsList.filter(function (a) { return a.departmentId === 0; });
        if (departments === undefined) {
            this.filteredDepartmentsList.push({
                departmentId: 0, departmentCode: 'ALL', description: 'ALL Departments',
                profitCenterId: null, companyId: null, companyCode: null,
            });
        }
        this.departmentsCtrl.valueChanges.subscribe(function (input) {
            _this.filteredDepartmentsList = _this.utilService.filterListforAutocomplete(input, _this.masterData.departments, ['departmentCode', 'description']);
        });
        var selectedDepartments = this.masterData.departments.filter(function (department) { return department.departmentCode === 'ALL'; });
        if (selectedDepartments.length > 0) {
            this.departmentValue = null;
            this.departmentsCtrl.setValue(selectedDepartments[0].departmentCode);
        }
        this.filteredCurrencyList = this.masterData.currencies;
        this.currencyCtrl.valueChanges.subscribe(function (input) {
            _this.filteredCurrencyList = _this.utilService.filterListforAutocomplete(input, _this.masterData.currencies, ['currencyCode', 'description']);
        });
        this.executionService.getDocumentReferenceValues(this.matchType = _shared_enums_matching_type_enum__WEBPACK_IMPORTED_MODULE_14__["MatchingType"].deleteMatch)
            .subscribe(function (data) {
            data.value.forEach(function (item) { return _this.documentReference.push(_this.populateDocuments(item)); });
            _this.filteredDocReferenceList = _this.documentReference;
        });
        this.docReferenceCtrl.valueChanges.subscribe(function (input) {
            _this.filteredDocReferenceList = _this.utilService.filterListforAutocomplete(input, _this.documentReference, ['documentReference']);
            if (_this.docReferenceCtrl.valid) {
                if (_this.docReferenceCtrl.value) {
                    if (_this.docReferenceCtrl.value.length === 0) {
                        _this.disableSearchButton();
                    }
                }
            }
        });
        this.getMatchFlagList();
        this.calculateFxRate();
        this.initializeGridColumns();
        this.setValidators();
        this.bindConfiguration();
        this.isCompanyFrozen = this.companyManager.getCompany(this.company).isFrozen;
    };
    DeleteMatchFlagComponent.prototype.unloadNotification = function ($event) {
        if ((this.counterpartyCtrl.dirty || this.departmentsCtrl.dirty || this.clientNameCtrl.dirty || this.secDocReferenceCtrl.dirty || this.currencyCtrl.dirty || this.docReferenceCtrl.dirty || this.matchFlagCtrl.dirty) && this.isSave === false) {
            $event.returnValue = true;
        }
    };
    DeleteMatchFlagComponent.prototype.canDeactivate = function () {
        if ((this.counterpartyCtrl.dirty || this.departmentsCtrl.dirty || this.clientNameCtrl.dirty || this.secDocReferenceCtrl.dirty || this.currencyCtrl.dirty || this.docReferenceCtrl.dirty || this.matchFlagCtrl.dirty) && this.isSave === false) {
            return window.confirm('Leave an unsave form? \nYour changes won\'t be applied!');
        }
        return true;
    };
    DeleteMatchFlagComponent.prototype.getMatchFlagList = function () {
        var _this = this;
        this.executionService.getMatchFlag()
            .subscribe(function (data) {
            if (data) {
                data.value.forEach(function (item) { return _this.matchFlagList.push(_this.populateMatchFlag(item)); });
                _this.filteredMatchFlagList = _this.matchFlagList;
            }
        });
        this.matchFlagCtrl.valueChanges.subscribe(function (input) {
            _this.filteredMatchFlagList = _this.utilService.filterListforAutocomplete(input, _this.matchFlagList, ['matchFlagCode']);
            if (_this.matchFlagCtrl.valid) {
                if (_this.matchFlagCtrl.value) {
                    if (_this.matchFlagCtrl.value.length === 0) {
                        _this.disableSearchButton();
                    }
                }
            }
        });
    };
    DeleteMatchFlagComponent.prototype.calculateFxRate = function () {
        var _this = this;
        this.foreignExchangeService.getForeignExchangeRate(new Date(this.currentDocDateCtrl.value), this.functionalCurrency)
            .subscribe(function (data) {
            if (data) {
                _this.functionalCurrencyRate = data.rate != null ? Number(data.rate) : null; // TODO: use AtlasNumber
                _this.functionalCurrencyRoeType = data.currencyRoeType;
            }
        });
        this.foreignExchangeService.getForeignExchangeRate(new Date(this.currentDocDateCtrl.value), this.statutoryCurrency)
            .subscribe(function (data) {
            if (data) {
                _this.statutoryCurrenyRate = data.rate != null ? Number(data.rate) : null; // TODO: use AtlasNumber
                _this.statutoryCurrencyRoeType = data.currencyRoeType;
            }
        });
    };
    DeleteMatchFlagComponent.prototype.populateDocuments = function (value) {
        var documentsForMatching = new _shared_services_execution_dtos_document_matching__WEBPACK_IMPORTED_MODULE_18__["DocumentMatching"]();
        documentsForMatching.documentReference = value.documentReference;
        return documentsForMatching;
    };
    DeleteMatchFlagComponent.prototype.populateMatchFlag = function (value) {
        var matchFlagList = new _shared_services_execution_dtos_document_matching__WEBPACK_IMPORTED_MODULE_18__["DocumentMatching"]();
        matchFlagList.matchFlagCode = value.matchFlagCode;
        return matchFlagList;
    };
    DeleteMatchFlagComponent.prototype.initializeGridColumns = function () {
        this.documentMatchingGridColumns = [
            {
                headerName: 'Transaction Document Id',
                field: 'transactionDocumentId',
                colId: 'transactionDocumentId',
                hide: true,
            },
            {
                headerName: 'Document Reference',
                field: 'documentReference',
                colId: 'documentReference',
                hide: false,
            },
            {
                headerName: 'Secondary Document Reference',
                field: 'secondaryRef',
                colId: 'secondaryRef',
                hide: false,
            },
            {
                headerName: 'DepartmentId',
                field: 'departmentId',
                colId: 'departmentId',
                hide: true,
            },
            {
                headerName: 'Department',
                field: 'departmentCode',
                colId: 'departmentCode',
                hide: false,
            },
            {
                headerName: 'Match Flag',
                field: 'matchFlagCode',
                colId: 'matchFlagCode',
                hide: false,
            },
            {
                headerName: 'Document Date',
                field: 'documentDate',
                colId: 'documentDate',
                hide: false,
                valueFormatter: this.uiService.dateFormatter,
            },
            {
                headerName: 'Value Date',
                field: 'valueDate',
                colId: 'valueDate',
                hide: false,
                valueFormatter: this.uiService.dateFormatter,
            },
            {
                headerName: 'Cost Type',
                field: 'costType',
                colId: 'costType',
                hide: false,
            },
            {
                headerName: 'Payment Document Date',
                field: 'paymentDocumentDate',
                colId: 'paymentDocumentDate',
                hide: true,
                valueFormatter: this.uiService.dateFormatter,
            },
            {
                headerName: 'Expense Code',
                field: 'expenseCode',
                colId: 'expenseCode',
                hide: true,
            },
            {
                headerName: 'Narrative',
                field: 'narrative',
                colId: 'narrative',
                hide: false,
            },
            {
                headerName: 'Document Type',
                field: 'documentType',
                colId: 'documentType',
                hide: true,
            },
            {
                headerName: 'TotalAmount',
                field: 'amount',
                colId: 'amount',
                type: 'numericColumn',
                hide: true,
            },
            {
                headerName: 'TransactionDirection',
                field: 'transactionDirection',
                colId: 'transactionDirection',
                hide: true,
            },
            {
                headerName: 'Match Flag',
                field: 'matchFlagCode',
                colId: 'matchFlagCode',
                hide: true,
                cellEditorParams: {
                    displayMask: Object(_shared_numberMask__WEBPACK_IMPORTED_MODULE_16__["CustomNumberMask"])(12, 10, false),
                },
            },
            {
                headerName: 'Debit',
                field: 'debit',
                colId: 'debit',
                hide: false,
                pinned: 'right',
                type: 'numericColumn',
                valueFormatter: this.NumberFormatterForTotalInGrid.bind(this),
                cellEditor: 'atlasNumeric',
                cellEditorParams: {
                    displayMask: Object(_shared_numberMask__WEBPACK_IMPORTED_MODULE_16__["CustomNumberMask"])(12, 10, false),
                },
            },
            {
                headerName: 'Credit',
                field: 'credit',
                colId: 'credit',
                hide: false,
                pinned: 'right',
                type: 'numericColumn',
                valueFormatter: this.NumberFormatterForTotalInGrid.bind(this),
                cellEditor: 'atlasNumeric',
                cellEditorParams: {
                    displayMask: Object(_shared_numberMask__WEBPACK_IMPORTED_MODULE_16__["CustomNumberMask"])(12, 10, false),
                },
            },
            {
                headerName: 'JournalLineId',
                field: 'lineId',
                colId: 'lineId',
                hide: true,
            },
            {
                headerName: 'DocumentAmount',
                field: 'documentAmount',
                colId: 'documentAmount',
                hide: true,
            },
            {
                headerName: 'Document Type',
                field: 'isCreditOrDebit',
                colId: 'isCreditOrDebit',
                hide: true,
            },
            {
                headerName: 'Amount in Func CCY',
                field: 'functionalCcyAmount',
                colId: 'functionalCcyAmount',
                hide: true,
                valueFormatter: this.amountFormatter.bind(this),
            },
            {
                headerName: 'Amount in Stat CCY',
                field: 'statutoryCcyAmount',
                colId: 'statutoryCcyAmount',
                hide: true,
                valueFormatter: this.amountFormatter.bind(this),
            },
            {
                headerCheckboxSelection: false,
                checkboxSelection: true,
                width: 40,
                minWidth: 40,
                maxWidth: 40,
                pinned: 'right',
            },
        ];
    };
    DeleteMatchFlagComponent.prototype.onCellValueChanged = function (params) {
        if ((params.column.colId === 'credit' || params.column.colId === 'debit') && !params.value) {
            params.node.setDataValue(params.column.colId, params.oldValue);
        }
    };
    DeleteMatchFlagComponent.prototype.amountFormatter = function (param) {
        if (param.value) {
            return Number(param.value).toFixed(2);
        }
    };
    DeleteMatchFlagComponent.prototype.setValidators = function () {
        this.counterpartyCtrl.setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].compose([
            Object(_shared_directives_autocomplete_dropdown_directive__WEBPACK_IMPORTED_MODULE_11__["inDropdownListValidator"])(this.masterData.counterparties, Object(_shared_services_util_service__WEBPACK_IMPORTED_MODULE_27__["nameof"])('counterpartyCode')), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required,
        ]));
        this.currencyCtrl.setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].compose([
            Object(_shared_directives_autocomplete_dropdown_directive__WEBPACK_IMPORTED_MODULE_11__["inDropdownListValidator"])(this.masterData.currencies, Object(_shared_services_util_service__WEBPACK_IMPORTED_MODULE_27__["nameof"])('currencyCode')), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required,
        ]));
        this.docReferenceCtrl.setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].compose([
            Object(_shared_directives_autocomplete_dropdown_directive__WEBPACK_IMPORTED_MODULE_11__["inDropdownListValidator"])(this.documentReference, Object(_shared_services_util_service__WEBPACK_IMPORTED_MODULE_27__["nameof"])('documentReference')),
        ]));
        this.matchFlagCtrl.setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].compose([
            Object(_shared_directives_autocomplete_dropdown_directive__WEBPACK_IMPORTED_MODULE_11__["inDropdownListValidator"])(this.matchFlagList, Object(_shared_services_util_service__WEBPACK_IMPORTED_MODULE_27__["nameof"])('matchFlagCode')),
        ]));
        this.departmentsCtrl.setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].compose([
            Object(_shared_directives_autocomplete_dropdown_directive__WEBPACK_IMPORTED_MODULE_11__["inDropdownListValidator"])(this.masterData.departments, Object(_shared_services_util_service__WEBPACK_IMPORTED_MODULE_27__["nameof"])('departmentCode')), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required,
        ]));
    };
    DeleteMatchFlagComponent.prototype.onDeleteMatchSearchButtonClicked = function () {
        this.isSave = true;
        this.isLoading = true;
        this.isDialogClosed = false;
        if (this.departmentsCtrl.value === '') {
            var selectedDepartments = this.masterData.departments.filter(function (department) { return department.departmentCode === 'ALL'; });
            if (selectedDepartments.length > 0) {
                this.departmentValue = null;
                this.departmentsCtrl.setValue(selectedDepartments[0].departmentCode);
            }
        }
        if (this.counterpartyCtrl.valid && this.currencyCtrl.valid) {
            if (this.gridApi) {
                this.isDocumentsSelected = this.gridApi.getSelectedRows().length > 0 ? true : false;
            }
            if (this.isDocumentsSelected === false) {
                this.documentIndex = 0;
                this.index = 0;
                this.getDocumentsToUnmatch();
            }
            else {
                this.snackbarService.throwErrorSnackBar('Cannot Search when document is selected');
                this.isLoading = false;
            }
        }
        else {
            this.isLoading = false;
        }
        this.disableSearchButton();
    };
    DeleteMatchFlagComponent.prototype.getDocumentsToUnmatch = function () {
        var _this = this;
        this.executionService
            .getDocumentToUnmatch(this.counterpartyId.toString(), this.departmentValue, this.currencyCtrl.value, this.docReferenceCtrl.value, this.matchFlagCtrl.value)
            .subscribe(function (data) {
            if (data && data.value.length > 0) {
                _this.documentMatching = data.value;
                _this.initializeGridColumns();
                for (_this.documentIndex = 0; _this.documentIndex < data.value['length']; _this.documentIndex++) {
                    _this.documentMatching[_this.index].amount = data.value[_this.index].amount;
                    _this.calculateDebitCreditAmounts();
                    _this.getDepartmentCodeValue();
                    _this.index++;
                }
                _this.documentMatchingGridRows = _this.documentMatching;
                _this.isLoading = false;
                _this.isDataAvailable = true;
                _this.dataLength = _this.documentMatchingGridRows.length;
            }
            else {
                if (_this.gridApi) {
                    _this.gridApi.setRowData([]);
                }
                _this.isLoading = false;
                _this.isDataAvailable = false;
            }
        });
    };
    DeleteMatchFlagComponent.prototype.getDocumentToUnmatchByDocumentReference = function () {
        var _this = this;
        if (this.docReferenceCtrl.valid) {
            this.executionService
                .getDocumentToUnMatchbyDocumentReference(this.docReferenceCtrl.value).subscribe(function (data) {
                if (data && data.value.length > 0) {
                    _this.documentMatching = data.value;
                    _this.initializeGridColumns();
                    for (_this.documentIndex = 0; _this.documentIndex < data.value['length']; _this.documentIndex++) {
                        _this.documentMatching[_this.index].amount = data.value[_this.index].amount;
                        _this.calculateDebitCreditAmounts();
                        _this.getDepartmentCodeValue();
                        _this.index++;
                    }
                    _this.documentMatchingGridRows = _this.documentMatching;
                    _this.isLoading = false;
                    _this.isDataAvailable = true;
                    _this.dataLength = _this.documentMatchingGridRows.length;
                }
                else {
                    if (_this.gridApi) {
                        _this.gridApi.setRowData([]);
                    }
                    _this.snackbarService.throwErrorSnackBar('No records are available for this search criteria.');
                    _this.isLoading = false;
                    _this.isDataAvailable = false;
                }
            });
        }
    };
    DeleteMatchFlagComponent.prototype.getDepartmentCodeValue = function () {
        var _this = this;
        var selectedDepartments = this.masterData.departments.filter(function (department) { return department.departmentId === _this.documentMatching[_this.index].departmentId; });
        if (selectedDepartments.length > 0) {
            this.documentMatching[this.index].departmentCode = selectedDepartments[0].departmentCode;
        }
    };
    DeleteMatchFlagComponent.prototype.calculateDebitCreditAmounts = function () {
        if (this.documentMatching[this.index].documentType === _shared_enums_transaction_document_enum__WEBPACK_IMPORTED_MODULE_15__["TransactionDocument"].CashPayment
            || this.documentMatching[this.index].documentType === _shared_enums_transaction_document_enum__WEBPACK_IMPORTED_MODULE_15__["TransactionDocument"].SalesInvoice
            || this.documentMatching[this.index].documentType === _shared_enums_transaction_document_enum__WEBPACK_IMPORTED_MODULE_15__["TransactionDocument"].DebitNote
            || this.documentMatching[this.index].documentType === _shared_enums_transaction_document_enum__WEBPACK_IMPORTED_MODULE_15__["TransactionDocument"].JournalEntry) {
            if (this.documentMatching[this.index].amount >= 0) {
                this.documentMatching[this.index].debit = this.documentMatching[this.index].amount;
            }
            else {
                this.documentMatching[this.index].credit = -this.documentMatching[this.index].amount;
            }
            this.documentMatching[this.index].documentAmount = this.documentMatching[this.index].amount;
        }
        else {
            if (this.documentMatching[this.index].amount >= 0) {
                this.documentMatching[this.index].credit = this.documentMatching[this.index].amount;
            }
            else {
                this.documentMatching[this.index].debit = -this.documentMatching[this.index].amount;
            }
            this.documentMatching[this.index].documentAmount = -this.documentMatching[this.index].amount;
        }
    };
    DeleteMatchFlagComponent.prototype.deselectNode = function (currentRowIndex) {
        var _this = this;
        this.documentMatchingGridOptions.api.forEachNode(function (node) {
            if (Number(node.id) === currentRowIndex) {
                _this.documentMatchingGridOptions.api.deselectNode(node);
            }
        });
    };
    DeleteMatchFlagComponent.prototype.onDeleteMatchRowSelected = function (event) {
        var _this = this;
        var selectedRows = this.gridApi.getSelectedRows();
        var currentRowIndex = event.rowIndex;
        this.totalCredit = 0;
        this.totalDebit = 0;
        this.functionalCurrencyAmount = 0;
        this.statutoryCurrencyAmount = 0;
        selectedRows.forEach(function (selectedDocumentRow) {
            if (selectedDocumentRow.credit) {
                _this.totalCredit = Object(_shared_numberMask__WEBPACK_IMPORTED_MODULE_16__["ConvertToNumber"])(_this.totalCredit) + Object(_shared_numberMask__WEBPACK_IMPORTED_MODULE_16__["ConvertToNumber"])(selectedDocumentRow.credit);
            }
            if (selectedDocumentRow.debit) {
                _this.totalDebit = Object(_shared_numberMask__WEBPACK_IMPORTED_MODULE_16__["ConvertToNumber"])(_this.totalDebit) + Object(_shared_numberMask__WEBPACK_IMPORTED_MODULE_16__["ConvertToNumber"])(selectedDocumentRow.debit);
            }
        });
        this.totalBalance = this.totalCredit - this.totalDebit;
        this.selectedDocumentLength = selectedRows.length;
        if (!event.node.isSelected()) {
            this.isDocumentsSelected = false;
            if (event.data.matchFlagCode === this.matchFlagSelected) {
                this.selectedJournalValue = '';
                this.gridApi.forEachNode(function (rowData) {
                    if (rowData.data.matchFlagCode === _this.matchFlagSelected) {
                        rowData.selectThisNode(false);
                    }
                });
            }
            this.gridApi.deselectNode(event.node);
        }
        else {
            if (selectedRows.length === 1) {
                if (event.node.selected === true) {
                    this.isDocumentsSelected = true;
                    this.matchFlagSelected = event.data.matchFlagCode;
                    this.matchFlagId = event.data.matchFlagId;
                    if (event.data.paymentDocumentDate) {
                        this.paymentDocumentDate = event.data.paymentDocumentDate.toDateString();
                    }
                    else {
                        this.paymentDocumentDate = event.data.documentDate.toDateString();
                    }
                }
            }
            if (selectedRows.length > 1) {
                if (event.data.documentType === _shared_enums_transaction_document_enum__WEBPACK_IMPORTED_MODULE_15__["TransactionDocument"].JournalEntry) {
                    this.selectedJournalValue = event.data.documentReference;
                }
                if (event.data.matchFlagCode !== this.matchFlagSelected) {
                    this.snackbarService.informationSnackBar('Only one MatchFlag can be deleted at a time');
                    this.gridApi.deselectIndex(currentRowIndex);
                }
            }
            this.gridApi.forEachNode(function (rowData) {
                if (rowData.data.matchFlagCode === _this.matchFlagSelected) {
                    rowData.selectThisNode(true);
                }
            });
        }
        if (event.node.selected) {
            if (event.data.credit) {
                event.node.setDataValue('isCreditOrDebit', _shared_enums_matching_type_enum__WEBPACK_IMPORTED_MODULE_14__["MatchingType"].Credit);
                if (this.cashCurrency !== null && this.cashCurrency !== 'USD') {
                    this.amountInUSD = (this.cashCurrencyRoeType === 'M') ? (event.data.credit * this.cashCurrencyRate)
                        : (event.data.credit / this.cashCurrencyRate);
                    this.amountInUSD = (event.data.amount > 0) ? -(this.amountInUSD) : (this.amountInUSD);
                }
                else if (this.cashCurrency === 'USD') {
                    this.amountInUSD = event.data.credit;
                    this.amountInUSD = (event.data.amount > 0) ? -(this.amountInUSD) : (this.amountInUSD);
                }
                this.getFuncAndStatCCYValues();
            }
            if (event.data.debit) {
                event.node.setDataValue('isCreditOrDebit', _shared_enums_matching_type_enum__WEBPACK_IMPORTED_MODULE_14__["MatchingType"].Debit);
                if (this.cashCurrency !== null && this.cashCurrency !== 'USD') {
                    this.amountInUSD = (this.cashCurrencyRoeType === 'M') ? (event.data.debit * this.cashCurrencyRate)
                        : (event.data.debit / this.cashCurrencyRate);
                }
                else if (this.cashCurrency === 'USD') {
                    this.amountInUSD = event.data.debit;
                }
                this.getFuncAndStatCCYValues();
            }
            event.node.setDataValue('functionalCcyAmount', this.functionalCurrencyAmount);
            event.node.setDataValue('statutoryCcyAmount', this.statutoryCurrencyAmount);
            event.node.setDataValue('documentAmount', event.data.documentAmount);
        }
        else {
            event.node.setDataValue('functionalCcyAmount', null);
            event.node.setDataValue('statutoryCcyAmount', null);
            event.node.setDataValue('documentAmount', null);
        }
        this.selectedDocumentsToMatch = this.gridApi.getSelectedRows();
    };
    DeleteMatchFlagComponent.prototype.getFuncAndStatCCYValues = function () {
        if (this.statutoryCurrency !== null && this.statutoryCurrency !== 'USD') {
            this.statutoryCurrencyAmount = (this.statutoryCurrencyRoeType === 'D') ? (this.amountInUSD * this.statutoryCurrenyRate)
                : (this.amountInUSD / this.statutoryCurrenyRate);
        }
        else if (this.statutoryCurrency === 'USD') {
            this.statutoryCurrencyAmount = this.amountInUSD;
        }
        if (this.functionalCurrency !== null && this.functionalCurrency !== 'USD') {
            this.functionalCurrencyAmount = (this.functionalCurrencyRoeType === 'D')
                ? (this.amountInUSD * this.functionalCurrencyRate) : (this.amountInUSD / this.functionalCurrencyRate);
        }
        else if (this.functionalCurrency === 'USD') {
            this.functionalCurrencyAmount = this.amountInUSD;
        }
    };
    DeleteMatchFlagComponent.prototype.onCurrencyOptionSelected = function (currencyCode) {
        var _this = this;
        this.cashCurrency = currencyCode;
        this.foreignExchangeService.getForeignExchangeRate(new Date(this.currentDocDateCtrl.value), this.cashCurrency)
            .subscribe(function (data) {
            if (data) {
                _this.cashCurrencyRate = data.rate != null ? Number(data.rate) : null; // TODO: use AtlasNumber
                _this.cashCurrencyRoeType = data.currencyRoeType;
            }
        });
    };
    DeleteMatchFlagComponent.prototype.onEditPaymentDocumentButtonClicked = function () {
        var _this = this;
        this.isSave = true;
        if (this.gridApi) {
            if (this.gridApi.getSelectedRows().length > 0) {
                if (this.totalBalance === 0) {
                    this.executionService.getDocumentToUnmatchByMatchFlag(this.matchFlagSelected).subscribe(function (data) {
                        if (data && data.value.length > 0) {
                            _this.documentMatching = data.value;
                            _this.paymentDocumentDateString = _this.datepipe.transform(data.value[0].paymentDocumentDate.toDateString(), 'dd/MM/yyyy');
                            if (data.value[0].paymentDocumentDate === null) {
                                _this.paymentDocumentDateString = _this.datepipe.transform(data.value[0].documentDate.toDateString(), 'dd/MM/yyyy');
                            }
                            var editMatchDialog = _this.dialog.open(_cash_matching_dialog_payment_document_date_dialog_payment_document_date_dialog_component__WEBPACK_IMPORTED_MODULE_29__["PaymentDocumentDateDialogComponent"], {
                                data: {
                                    title: 'Edit Payment Document Date',
                                    text1: 'Documents Matched with the Match Flag',
                                    text2: 'The Payment Document Date of the Documents are',
                                    okButton: 'Confirm',
                                    cancelButton: 'Cancel',
                                    value1: _this.matchFlagSelected,
                                    value2: _this.paymentDocumentDate,
                                    value3: _this.paymentDocumentDateString,
                                },
                            });
                            _this.subscriptions.push(editMatchDialog.afterClosed().subscribe(function (answer) {
                                if (answer && answer['buttonClicked']) {
                                    _this.paymentDocumentDate = answer['buttonValue'];
                                    _this.editPaymentDocumentDate();
                                }
                            }));
                        }
                    });
                }
                else {
                    this.snackbarService.throwErrorSnackBar('Balance should be equal to zero');
                }
            }
            else {
                this.snackbarService.throwErrorSnackBar('Select Documents to Edit');
            }
        }
    };
    DeleteMatchFlagComponent.prototype.onUnmatchButtonClicked = function () {
        var _this = this;
        this.isSave = true;
        if (this.gridApi) {
            if (this.gridApi.getSelectedRows().length > 0) {
                if (this.totalBalance === 0) {
                    this.executionService.getDocumentToUnmatchByMatchFlag(this.matchFlagSelected).subscribe(function (data) {
                        if (data && data.value.length > 0) {
                            _this.paymentDocumentDate = data.value[0].paymentDocumentDate;
                            if (data.value[0].paymentDocumentDate === null) {
                                _this.paymentDocumentDate = data.value[0].documentDate;
                            }
                        }
                        var unmatchDialog = _this.dialog.open(_cash_matching_dialog_delete_matching_dialog_delete_matching_dialog_component__WEBPACK_IMPORTED_MODULE_28__["DeleteMatchingDialogComponent"], {
                            data: {
                                title: 'Delete Matching Dialog',
                                text: 'The system will delete the Match Flag',
                                okButton: 'PROCEED',
                                cancelButton: 'DISCARD',
                                value: _this.matchFlagSelected,
                            },
                            width: '46%',
                            height: '25%',
                        });
                        _this.subscriptions.push(unmatchDialog.afterClosed().subscribe(function (answer) {
                            if (answer && answer['buttonClicked']) {
                                _this.matchFlagSelected = answer['buttonValue'];
                                _this.unmatchDocuments();
                            }
                        }));
                    });
                }
                else {
                    this.snackbarService.throwErrorSnackBar('Balance should be equal to zero');
                }
            }
            else {
                this.snackbarService.throwErrorSnackBar('Select a document to match');
            }
        }
    };
    DeleteMatchFlagComponent.prototype.unmatchDocuments = function () {
        var _this = this;
        this.model = new _shared_services_preaccounting_dtos_document_matching_record__WEBPACK_IMPORTED_MODULE_23__["DocumentMatchingRecord"]();
        this.populateEntity();
        this.executionService.deleteMatchFlag(this.model)
            .subscribe(function (data) {
            if (_this.gridApi) {
                _this.gridApi.setRowData([]);
            }
            _this.matchFlagCtrl.reset();
            _this.isDialogClosed = true;
            if (data) {
                _this.journalDocumentId = data.reversalRevalJournalCode;
                _this.journalFieldShow = true;
                _this.gridApi.setRowData([]);
                _this.counterpartyCtrl.reset();
                _this.clientNameCtrl.patchValue(null);
                _this.currencyCtrl.setValue(_this.functionalCurrency);
                var selectedDepartments = _this.masterData.departments.filter(function (department) { return department.departmentCode === 'ALL'; });
                _this.departmentsCtrl.setValue(selectedDepartments[0].departmentCode);
                _this.docReferenceCtrl.patchValue(null);
                _this.secDocReferenceCtrl.patchValue(null);
                _this.currentDocDateCtrl.patchValue(null);
                _this.docReferenceCtrl.enable();
                _this.matchFlagCtrl.enable();
            }
        });
    };
    DeleteMatchFlagComponent.prototype.editPaymentDocumentDate = function () {
        var _this = this;
        this.paymentDocumentModel = new _shared_services_preaccounting_dtos_document_matching_record__WEBPACK_IMPORTED_MODULE_23__["DocumentMatchingRecord"]();
        this.populateEditFields();
        this.executionService.updateDocumentMatching(this.paymentDocumentModel)
            .subscribe(function (data) {
            _this.snackbarService.informationAndCopySnackBar('Documents with Match Flag : ' + _this.matchFlagSelected + ' is updated', _this.matchFlagSelected);
            if (_this.gridApi) {
                _this.gridApi.setRowData([]);
            }
            _this.onDeleteMatchSearchButtonClicked();
        });
    };
    DeleteMatchFlagComponent.prototype.populateEntity = function () {
        this.model.matchFlagCode = this.matchFlagSelected;
        this.model.matchFlagId = this.matchFlagId;
        this.model.currencyCode = this.currencyCtrl.value;
        this.model.functionalCurrency = this.functionalCurrency;
        this.model.statutoryCurrency = this.statutoryCurrency;
        this.model.paymentDocumentDate = this.paymentDocumentDate;
        this.model.manualDocumentMatchings = this.gridApi.getSelectedRows();
        this.model.documentMatchings = this.gridApi.getSelectedRows();
        this.model.unmatchDocuments = this.gridApi.getSelectedRows();
    };
    DeleteMatchFlagComponent.prototype.populateEditFields = function () {
        this.paymentDocumentModel.matchFlagCode = this.matchFlagSelected;
        this.paymentDocumentModel.paymentDocumentDate = this.paymentDocumentDate;
        this.paymentDocumentModel.matchFlagId = this.matchFlagId;
    };
    DeleteMatchFlagComponent.prototype.onCloseButtonClicked = function () {
        this.isSave = true;
        this.isDialogClosed = false;
    };
    DeleteMatchFlagComponent.prototype.onCounterpartyIdSelected = function (value) {
        var counterparty = this.masterData.counterparties.filter(function (item) { return item.counterpartyCode === value.counterpartyCode; });
        if (counterparty.length > 0) {
            this.counterpartyId = counterparty[0].counterpartyID;
            this.clientNameCtrl.patchValue(counterparty[0].description);
            if (!this.docReferenceCtrl.value) {
                this.docReferenceCtrl.disable();
            }
            if (!this.matchFlagCtrl.value) {
                this.matchFlagCtrl.disable();
            }
            this.disableSearchButton();
        }
        else {
            this.docReferenceCtrl.enable();
            this.matchFlagCtrl.enable();
        }
        this.clientNameCtrl.disable();
    };
    DeleteMatchFlagComponent.prototype.onDepartmentCodeSelected = function (departmentCode) {
        var selectedDepartments = this.masterData.departments.filter(function (department) { return department.departmentCode === departmentCode; });
        if (selectedDepartments.length > 0) {
            this.departmentValue = selectedDepartments[0].departmentCode !== 'ALL' ?
                selectedDepartments[0].departmentId : null;
        }
    };
    DeleteMatchFlagComponent.prototype.onDocumentReferenceOptionSelected = function (documentReference) {
        var _this = this;
        this.documentReferenceValue = documentReference;
        this.executionService.getDocumentToUnMatchbyDocumentReference(this.documentReferenceValue)
            .subscribe(function (data) {
            if (data) {
                _this.documentSelectionModel = data.value[0];
                _this.populateSearchFields(_this.documentSelectionModel);
                if (_this.documentSelectionModel && _this.documentSelectionModel.departmentId) {
                    var department = _this.masterData.departments.filter(function (item) { return item.departmentId === _this.documentSelectionModel.departmentId; });
                    if (department.length > 0) {
                        _this.departmentsCtrl.setValue(department[0].departmentCode);
                        _this.departmentValue = department[0].departmentId;
                    }
                }
            }
        });
    };
    DeleteMatchFlagComponent.prototype.onMatchFlagOptionSelected = function (matchFlagCode) {
        var _this = this;
        this.matchFlagValue = matchFlagCode;
        this.executionService.getDocumentToUnmatchByMatchFlag(this.matchFlagValue)
            .subscribe(function (data) {
            if (data) {
                _this.documentSelectionModel = data.value[0];
                _this.populateSearchFields(_this.documentSelectionModel);
            }
        });
    };
    DeleteMatchFlagComponent.prototype.populateSearchFields = function (documentSelectionModel) {
        var _this = this;
        this.documentSelectionModel = documentSelectionModel;
        if (this.documentSelectionModel.counterpartyId) {
            var counterparty = this.masterData.counterparties.filter(function (item) { return item.counterpartyID === _this.documentSelectionModel.counterpartyId; });
            if (counterparty.length > 0) {
                this.counterpartyValue = counterparty[0].counterpartyCode;
                this.counterpartyCtrl.setValue(counterparty[0]);
                this.clientNameCtrl.setValue(counterparty[0].description);
                this.disableSearchButton();
            }
        }
        if (this.documentSelectionModel.currencyCode) {
            this.onCurrencyOptionSelected(this.documentSelectionModel.currencyCode);
            this.currencyCtrl.setValue(this.documentSelectionModel.currencyCode);
        }
    };
    DeleteMatchFlagComponent.prototype.onGridReady = function (params) {
        var _this = this;
        params.columnDefs = this.documentMatchingGridColumns;
        this.gridApi = params.api;
        this.gridColumnApi = params.columnApi;
        this.gridApi.showNoRowsOverlay();
        this.gridService.sizeColumns(params);
        window.onresize = function () {
            _this.gridService.sizeColumns(params);
        };
    };
    DeleteMatchFlagComponent.prototype.onDiscardButtonClicked = function () {
        var _this = this;
        this.isSave = true;
        var confirmDiscardDialog = this.dialog.open(_shared_components_confirmation_dialog_confirmation_dialog_component__WEBPACK_IMPORTED_MODULE_9__["ConfirmationDialogComponent"], {
            data: {
                title: 'Discard Changes',
                text: 'You have some modification pending. Close and lose changes?',
                okButton: 'Ok',
                cancelButton: 'Cancel',
            },
        });
        confirmDiscardDialog.afterClosed().subscribe(function (answer) {
            if (answer) {
                _this.counterpartyCtrl.reset();
                _this.clientNameCtrl.patchValue(null);
                _this.currencyCtrl.setValue(_this.functionalCurrency);
                var selectedDepartments = _this.masterData.departments.filter(function (department) { return department.departmentCode === 'ALL'; });
                _this.departmentsCtrl.setValue(selectedDepartments[0].departmentCode);
                if (_this.docReferenceCtrl.value) {
                    _this.docReferenceCtrl.patchValue(null);
                }
                if (_this.matchFlagCtrl.value) {
                    _this.matchFlagCtrl.patchValue(null);
                }
                _this.secDocReferenceCtrl.patchValue(null);
                _this.currentDocDateCtrl.patchValue(null);
                _this.gridApi.setRowData([]);
                _this.docReferenceCtrl.enable();
                _this.matchFlagCtrl.enable();
                _this.totalBalance = null;
                _this.isDialogClosed = false;
            }
        });
    };
    DeleteMatchFlagComponent.prototype.getFormGroup = function () {
        this.formGroup = this.formBuilder.group({
            counterpartyCtrl: this.counterpartyCtrl,
            clientNameCtrl: this.clientNameCtrl,
            docReferenceCtrl: this.docReferenceCtrl,
            secDocReferenceCtrl: this.secDocReferenceCtrl,
            matchFlagCtrl: this.matchFlagCtrl,
            departmentsCtrl: this.departmentsCtrl,
            currencyCtrl: this.currencyCtrl,
        });
        return _super.prototype.getFormGroup.call(this);
    };
    DeleteMatchFlagComponent.prototype.disableSearchButton = function () {
        this.isSearchDisabled = ((!this.docReferenceCtrl.value) && (!this.counterpartyCtrl.value) && (!this.matchFlagCtrl.value))
            ? true : false;
    };
    DeleteMatchFlagComponent.prototype.onAccountingEntriesButtonClicked = function () {
        var allColumnIds = [];
        if (this.model.unmatchDocuments) {
            this.model.unmatchDocuments.forEach(function (columnDefs) {
                allColumnIds.push(columnDefs.documentReference);
            });
            this.router.navigate(['/' + this.companyManager.getCurrentCompanyId() +
                    '/financial/accounting/entries'], {
                queryParams: {
                    documentDeleted: allColumnIds,
                },
            });
        }
    };
    DeleteMatchFlagComponent.prototype.NumberFormatterForTotalInGrid = function (params) {
        if (isNaN(params.value) || params.value === null) {
            return '';
        }
        return new Intl.NumberFormat('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 }).format(params.value);
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('userPreferences'),
        __metadata("design:type", _shared_components_ag_grid_user_preferences_ag_grid_user_preferences_component__WEBPACK_IMPORTED_MODULE_6__["AgGridUserPreferencesComponent"])
    ], DeleteMatchFlagComponent.prototype, "userPreferencesComponent", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('emptyStateComponent'),
        __metadata("design:type", _shared_components_empty_state_empty_state_component__WEBPACK_IMPORTED_MODULE_10__["EmptyStateComponent"])
    ], DeleteMatchFlagComponent.prototype, "emptyStateComponent", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["HostListener"])('window:beforeunload', ['$event']),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Object]),
        __metadata("design:returntype", void 0)
    ], DeleteMatchFlagComponent.prototype, "unloadNotification", null);
    DeleteMatchFlagComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'atlas-delete-match-flag',
            template: __webpack_require__(/*! ./delete-match-flag.component.html */ "./Client/app/financial/components/cash-matching/delete-match-flag/delete-match-flag.component.html"),
            styles: [__webpack_require__(/*! ./delete-match-flag.component.scss */ "./Client/app/financial/components/cash-matching/delete-match-flag/delete-match-flag.component.scss")],
            providers: [_angular_common__WEBPACK_IMPORTED_MODULE_0__["DatePipe"]],
        }),
        __metadata("design:paramtypes", [_shared_services_form_configuration_provider_service__WEBPACK_IMPORTED_MODULE_19__["FormConfigurationProviderService"],
            _angular_common__WEBPACK_IMPORTED_MODULE_0__["DatePipe"],
            _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"],
            _shared_services_http_services_masterdata_service__WEBPACK_IMPORTED_MODULE_22__["MasterdataService"],
            _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"],
            _shared_services_util_service__WEBPACK_IMPORTED_MODULE_27__["UtilService"],
            _angular_material__WEBPACK_IMPORTED_MODULE_3__["MatDialog"],
            _shared_services_ui_service__WEBPACK_IMPORTED_MODULE_26__["UiService"],
            _angular_router__WEBPACK_IMPORTED_MODULE_4__["ActivatedRoute"],
            _shared_services_snackbar_service__WEBPACK_IMPORTED_MODULE_24__["SnackbarService"],
            _shared_services_http_services_execution_service__WEBPACK_IMPORTED_MODULE_20__["ExecutionService"],
            _shared_services_http_services_foreign_exchange_service__WEBPACK_IMPORTED_MODULE_21__["ForeignExchangeService"],
            _core_services_company_manager_service__WEBPACK_IMPORTED_MODULE_5__["CompanyManagerService"],
            _shared_services_ag_grid_service__WEBPACK_IMPORTED_MODULE_17__["AgGridService"],
            _shared_services_title_service__WEBPACK_IMPORTED_MODULE_25__["TitleService"]])
    ], DeleteMatchFlagComponent);
    return DeleteMatchFlagComponent;
}(_shared_components_base_form_component_base_form_component_component__WEBPACK_IMPORTED_MODULE_7__["BaseFormComponent"]));



/***/ }),

/***/ "./Client/app/financial/components/cut-off/close-month/cards/accounting-closure/accounting-closure.component.html":
/*!************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/cut-off/close-month/cards/accounting-closure/accounting-closure.component.html ***!
  \************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<mat-card>\r\n    <mat-card-header>\r\n        <mat-card-title>\r\n            <h2>Accounting Closure</h2>\r\n        </mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n        <div fxLayout=\"row\"\r\n             fxLayoutAlign=\"left start\"\r\n             fxLayoutGap=\"5%\">\r\n            <div>Last Month Closed: {{accountingLastMonthClosed | date : \"MMM y\"}}\r\n                <button mat-button\r\n                        (click)=\"onUpdateAccountingSetup(true);\"\r\n                        [disabled]=\"isLastMonthDisable || buttonEditable\">REVERSE</button>\r\n            </div>\r\n        </div>\r\n        <div fxLayout=\"row\"\r\n             fxLayoutAlign=\"left start\"\r\n             fxLayoutGap=\"5%\">\r\n            <div>Closable Period: {{accountingClosablePeriod | date : \"MMM y\"}}\r\n                <button mat-button\r\n                        (click)=\"onUpdateAccountingSetup(false);\"\r\n                        [disabled]=\"isClosableMonthDisable || buttonEditable\">CLOSE</button>\r\n            </div>\r\n        </div>\r\n    </mat-card-content>\r\n</mat-card>"

/***/ }),

/***/ "./Client/app/financial/components/cut-off/close-month/cards/accounting-closure/accounting-closure.component.scss":
/*!************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/cut-off/close-month/cards/accounting-closure/accounting-closure.component.scss ***!
  \************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ""

/***/ }),

/***/ "./Client/app/financial/components/cut-off/close-month/cards/accounting-closure/accounting-closure.component.ts":
/*!**********************************************************************************************************************!*\
  !*** ./Client/app/financial/components/cut-off/close-month/cards/accounting-closure/accounting-closure.component.ts ***!
  \**********************************************************************************************************************/
/*! exports provided: AccountingClosureComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AccountingClosureComponent", function() { return AccountingClosureComponent; });
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _core_services_authorization_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../../core/services/authorization.service */ "./Client/app/core/services/authorization.service.ts");
/* harmony import */ var _core_services_company_manager_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../../../core/services/company-manager.service */ "./Client/app/core/services/company-manager.service.ts");
/* harmony import */ var _shared_components_base_form_component_base_form_component_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../../../shared/components/base-form-component/base-form-component.component */ "./Client/app/shared/components/base-form-component/base-form-component.component.ts");
/* harmony import */ var _shared_enums_permission_level_enum__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../../../shared/enums/permission-level.enum */ "./Client/app/shared/enums/permission-level.enum.ts");
/* harmony import */ var _shared_services_form_configuration_provider_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../../../shared/services/form-configuration-provider.service */ "./Client/app/shared/services/form-configuration-provider.service.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};










var AccountingClosureComponent = /** @class */ (function (_super) {
    __extends(AccountingClosureComponent, _super);
    function AccountingClosureComponent(formBuilder, formConfigurationProvider, companyManager, datePipe, route, authorizationService) {
        var _this = _super.call(this, formConfigurationProvider) || this;
        _this.formBuilder = formBuilder;
        _this.formConfigurationProvider = formConfigurationProvider;
        _this.companyManager = companyManager;
        _this.datePipe = datePipe;
        _this.route = route;
        _this.authorizationService = authorizationService;
        _this.accountClosureUpdate = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        _this.isClosableMonthDisable = false;
        _this.isLastMonthDisable = false;
        _this.buttonEditable = false;
        _this.openPeriodCounter = 0;
        _this.PermissionLevels = _shared_enums_permission_level_enum__WEBPACK_IMPORTED_MODULE_8__["PermissionLevels"];
        _this.editAccountingClosurePrivilege = {
            profileId: null,
            privilegeName: 'CloseRevAcc',
            permission: _shared_enums_permission_level_enum__WEBPACK_IMPORTED_MODULE_8__["PermissionLevels"].Read,
            privilegeParentLevelOne: 'Financials',
            privilegeParentLevelTwo: 'CutOff',
        };
        return _this;
    }
    AccountingClosureComponent.prototype.ngOnInit = function () {
        this.company = this.route.snapshot.paramMap.get('company');
    };
    AccountingClosureComponent.prototype.initForm = function (entity) {
        this.accountingSetupModel = entity;
        if (this.accountingSetupModel.lastMonthClosed != null) {
            this.accountingClosablePeriod = this.companyManager.getCurrentCompanyDate().toDate();
            this.accountingLastMonthClosed = moment__WEBPACK_IMPORTED_MODULE_4__(this.accountingSetupModel.lastMonthClosed).toDate();
            this.accountingClosablePeriod = moment__WEBPACK_IMPORTED_MODULE_4__(this.accountingLastMonthClosed).add(1, 'month').toDate();
            this.validateAccountingClosure();
        }
        this.openPeriodCounter = this.accountingSetupModel.openPeriodCounter;
        this.buttonEditable = this.checkIfUserHasRequiredPrivileges(this.editAccountingClosurePrivilege);
    };
    AccountingClosureComponent.prototype.checkIfUserHasRequiredPrivileges = function (userCompanyPrivilege) {
        if (this.authorizationService.isUserAllowedForCompany(this.company)) {
            var userPermissionLevel = this.authorizationService.getPermissionLevel(this.company, userCompanyPrivilege.privilegeName, userCompanyPrivilege.privilegeParentLevelOne, userCompanyPrivilege.privilegeParentLevelTwo);
            if (userPermissionLevel <= userCompanyPrivilege.permission) {
                return true;
            }
        }
        return false;
    };
    AccountingClosureComponent.prototype.validateAccountingClosure = function () {
        if ((moment__WEBPACK_IMPORTED_MODULE_4__(this.accountingClosablePeriod).month() ===
            this.companyManager.getCurrentCompanyDate().month()) &&
            (moment__WEBPACK_IMPORTED_MODULE_4__(this.accountingClosablePeriod).year() ===
                this.companyManager.getCurrentCompanyDate().year())) {
            this.isClosableMonthDisable = true;
        }
        var reopenMonthAttempts = this.accountingSetupModel.numberOfOpenPeriod - this.accountingSetupModel.openPeriodCounter;
        if (reopenMonthAttempts === 1) {
            this.isLastMonthDisable = true;
        }
    };
    AccountingClosureComponent.prototype.populateEntity = function (entity) {
        var accountingSetup = entity;
        accountingSetup.lastMonthClosed = this.tempAccountingLastMonthClosed ?
            this.tempAccountingLastMonthClosed : this.accountingLastMonthClosed;
        accountingSetup.openPeriodCounter = this.openPeriodCounter;
        return accountingSetup;
    };
    AccountingClosureComponent.prototype.onUpdateAccountingSetup = function (isLastMonthClosed) {
        var accountingSetUpValidations = [];
        this.tempAccountingLastMonthClosed = this.companyManager.getCurrentCompanyDate().toDate();
        this.tempAccountingLastMonthClosed = (isLastMonthClosed ?
            moment__WEBPACK_IMPORTED_MODULE_4__(this.accountingLastMonthClosed).add(-1, 'month')
            : moment__WEBPACK_IMPORTED_MODULE_4__(this.accountingLastMonthClosed).add(1, 'month')).toDate();
        var warningMessage = isLastMonthClosed ? 'Do you want to reverse the closure of' + ' ' +
            this.datePipe.transform(this.accountingLastMonthClosed, 'MMM y') + ' ' + 'for accounting?' :
            'Do you want to close' + ' ' +
                this.datePipe.transform(this.accountingClosablePeriod, 'MMM y') + ' ' + 'for accounting?';
        var titleDialog = isLastMonthClosed ? 'Accounting Reverse' : 'Accounting Closure';
        accountingSetUpValidations.push(titleDialog);
        accountingSetUpValidations.push(warningMessage);
        accountingSetUpValidations.push(isLastMonthClosed ? 'accountingLastMonth' : 'accountingClosable');
        this.accountClosureUpdate.emit(accountingSetUpValidations);
        this.openPeriodCounter = isLastMonthClosed ? this.openPeriodCounter + 1 : 0;
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(),
        __metadata("design:type", Object)
    ], AccountingClosureComponent.prototype, "accountClosureUpdate", void 0);
    AccountingClosureComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            providers: [_angular_common__WEBPACK_IMPORTED_MODULE_0__["DatePipe"]],
            selector: 'atlas-accounting-closure',
            template: __webpack_require__(/*! ./accounting-closure.component.html */ "./Client/app/financial/components/cut-off/close-month/cards/accounting-closure/accounting-closure.component.html"),
            styles: [__webpack_require__(/*! ./accounting-closure.component.scss */ "./Client/app/financial/components/cut-off/close-month/cards/accounting-closure/accounting-closure.component.scss")],
        }),
        __metadata("design:paramtypes", [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"],
            _shared_services_form_configuration_provider_service__WEBPACK_IMPORTED_MODULE_9__["FormConfigurationProviderService"],
            _core_services_company_manager_service__WEBPACK_IMPORTED_MODULE_6__["CompanyManagerService"],
            _angular_common__WEBPACK_IMPORTED_MODULE_0__["DatePipe"],
            _angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"],
            _core_services_authorization_service__WEBPACK_IMPORTED_MODULE_5__["AuthorizationService"]])
    ], AccountingClosureComponent);
    return AccountingClosureComponent;
}(_shared_components_base_form_component_base_form_component_component__WEBPACK_IMPORTED_MODULE_7__["BaseFormComponent"]));



/***/ }),

/***/ "./Client/app/financial/components/cut-off/close-month/cards/operations-closure/operations-closure.component.html":
/*!************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/cut-off/close-month/cards/operations-closure/operations-closure.component.html ***!
  \************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<mat-card>\r\n    <mat-card-header>\r\n        <mat-card-title>\r\n            <h2>Operations Closure</h2>\r\n        </mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n        <div fxLayout=\"row\"\r\n             fxLayoutAlign=\"left start\"\r\n             fxLayoutGap=\"5%\">\r\n            <div>Last Month Closed: {{operationsLastMonthClosed | date : \"MMM y\"}}\r\n                <span matTooltip=\"A period closed for Accounting, cannot be opened for Operations\"\r\n                      [matTooltipDisabled]=\"!isLastMonthDisable\">\r\n                    <button mat-button\r\n                            (click)=\"onUpdateAccountingSetup(true)\"\r\n                            [disabled]=\"isLastMonthDisable || buttonReverseEditable\">REVERSE</button>\r\n                </span>\r\n            </div>\r\n        </div>\r\n        <div fxLayout=\"row\"\r\n             fxLayoutAlign=\"left start\"\r\n             fxLayoutGap=\"5%\">\r\n            <div>Closable Period: {{operationsClosablePeriod | date : \"MMM y\"}}\r\n                <button mat-button\r\n                        (click)=\"onUpdateAccountingSetup(false)\"\r\n                        [disabled]=\"isClosableMonthDisable || buttonCloseEditable\">CLOSE</button>\r\n            </div>\r\n        </div>\r\n    </mat-card-content>\r\n</mat-card>"

/***/ }),

/***/ "./Client/app/financial/components/cut-off/close-month/cards/operations-closure/operations-closure.component.scss":
/*!************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/cut-off/close-month/cards/operations-closure/operations-closure.component.scss ***!
  \************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ""

/***/ }),

/***/ "./Client/app/financial/components/cut-off/close-month/cards/operations-closure/operations-closure.component.ts":
/*!**********************************************************************************************************************!*\
  !*** ./Client/app/financial/components/cut-off/close-month/cards/operations-closure/operations-closure.component.ts ***!
  \**********************************************************************************************************************/
/*! exports provided: OperationsClosureComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OperationsClosureComponent", function() { return OperationsClosureComponent; });
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _core_services_authorization_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../../core/services/authorization.service */ "./Client/app/core/services/authorization.service.ts");
/* harmony import */ var _core_services_company_manager_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../../../core/services/company-manager.service */ "./Client/app/core/services/company-manager.service.ts");
/* harmony import */ var _shared_components_base_form_component_base_form_component_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../../../shared/components/base-form-component/base-form-component.component */ "./Client/app/shared/components/base-form-component/base-form-component.component.ts");
/* harmony import */ var _shared_enums_permission_level_enum__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../../../shared/enums/permission-level.enum */ "./Client/app/shared/enums/permission-level.enum.ts");
/* harmony import */ var _shared_services_form_configuration_provider_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../../../shared/services/form-configuration-provider.service */ "./Client/app/shared/services/form-configuration-provider.service.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};










var OperationsClosureComponent = /** @class */ (function (_super) {
    __extends(OperationsClosureComponent, _super);
    function OperationsClosureComponent(formBuilder, datePipe, formConfigurationProvider, companyManager, route, authorizationService) {
        var _this = _super.call(this, formConfigurationProvider) || this;
        _this.formBuilder = formBuilder;
        _this.datePipe = datePipe;
        _this.formConfigurationProvider = formConfigurationProvider;
        _this.companyManager = companyManager;
        _this.route = route;
        _this.authorizationService = authorizationService;
        _this.operationClosureUpdate = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        _this.isLastMonthDisable = false;
        _this.isClosableMonthDisable = false;
        _this.buttonReverseEditable = false;
        _this.buttonCloseEditable = false;
        _this.PermissionLevels = _shared_enums_permission_level_enum__WEBPACK_IMPORTED_MODULE_8__["PermissionLevels"];
        _this.editOperationsReversePrivilege = {
            profileId: null,
            privilegeName: 'ReverseOp',
            permission: _shared_enums_permission_level_enum__WEBPACK_IMPORTED_MODULE_8__["PermissionLevels"].Read,
            privilegeParentLevelOne: 'Financials',
            privilegeParentLevelTwo: 'CutOff',
        };
        _this.editOperationsClosurePrivilege = {
            profileId: null,
            privilegeName: 'CloseOp',
            permission: _shared_enums_permission_level_enum__WEBPACK_IMPORTED_MODULE_8__["PermissionLevels"].Read,
            privilegeParentLevelOne: 'Financials',
            privilegeParentLevelTwo: 'CutOff',
        };
        return _this;
    }
    OperationsClosureComponent.prototype.ngOnInit = function () {
        this.company = this.route.snapshot.paramMap.get('company');
    };
    OperationsClosureComponent.prototype.initForm = function (entity) {
        this.accountingSetupModel = entity;
        if (this.accountingSetupModel.lastMonthClosedForOperation) {
            this.operationsClosablePeriod = this.companyManager.getCurrentCompanyDate().toDate();
            this.operationsLastMonthClosed = moment__WEBPACK_IMPORTED_MODULE_4__(this.accountingSetupModel.lastMonthClosedForOperation).toDate();
            this.operationsClosablePeriod = moment__WEBPACK_IMPORTED_MODULE_4__(this.operationsLastMonthClosed).
                add(1, 'month').toDate();
            this.validateOperationClosure();
        }
        this.buttonReverseEditable = this.checkIfUserHasRequiredPrivileges(this.editOperationsReversePrivilege);
        this.buttonCloseEditable = this.checkIfUserHasRequiredPrivileges(this.editOperationsClosurePrivilege);
    };
    OperationsClosureComponent.prototype.checkIfUserHasRequiredPrivileges = function (userCompanyPrivilege) {
        if (this.authorizationService.isUserAllowedForCompany(this.company)) {
            var userPermissionLevel = this.authorizationService.getPermissionLevel(this.company, userCompanyPrivilege.privilegeName, userCompanyPrivilege.privilegeParentLevelOne, userCompanyPrivilege.privilegeParentLevelTwo);
            if (userPermissionLevel <= userCompanyPrivilege.permission) {
                return true;
            }
        }
        return false;
    };
    OperationsClosureComponent.prototype.validateOperationClosure = function () {
        var lastMonthClosed = new Date(this.accountingSetupModel.lastMonthClosed);
        var lastMonthClosedForOperation = new Date(this.accountingSetupModel.lastMonthClosedForOperation);
        if ((lastMonthClosedForOperation.getMonth() === lastMonthClosed.getMonth()) &&
            (lastMonthClosedForOperation.getFullYear() === lastMonthClosed.getFullYear())) {
            this.isLastMonthDisable = true;
        }
        if ((moment__WEBPACK_IMPORTED_MODULE_4__(this.operationsClosablePeriod).month() ===
            this.companyManager.getCurrentCompanyDate().month()) &&
            (moment__WEBPACK_IMPORTED_MODULE_4__(this.operationsClosablePeriod).year() ===
                this.companyManager.getCurrentCompanyDate().year())) {
            this.isClosableMonthDisable = true;
        }
    };
    OperationsClosureComponent.prototype.populateEntity = function (entity) {
        var accountingSetup = entity;
        accountingSetup.lastMonthClosedForOperation = this.tempOperationsLastMonthClosed ?
            this.tempOperationsLastMonthClosed : this.operationsLastMonthClosed;
        return accountingSetup;
    };
    OperationsClosureComponent.prototype.onUpdateAccountingSetup = function (isLastMonthClosed) {
        var accountingSetUpValidations = [];
        this.tempOperationsLastMonthClosed = this.companyManager.getCurrentCompanyDate().toDate();
        this.tempOperationsLastMonthClosed = (isLastMonthClosed ?
            moment__WEBPACK_IMPORTED_MODULE_4__(this.operationsLastMonthClosed).add(-1, 'month')
            : moment__WEBPACK_IMPORTED_MODULE_4__(this.operationsLastMonthClosed).add(1, 'month')).toDate();
        var warningMessage = isLastMonthClosed ? 'Do you want to reverse the closure of' + ' ' +
            this.datePipe.transform(this.operationsLastMonthClosed, 'MMM y') + ' ' + 'for operations?' :
            'Do you want to close' + ' ' +
                this.datePipe.transform(this.operationsClosablePeriod, 'MMM y') + ' ' + 'for operations?';
        var titleDialog = isLastMonthClosed ? 'Operations reverse' : 'Operations Closure';
        accountingSetUpValidations.push(titleDialog);
        accountingSetUpValidations.push(warningMessage);
        accountingSetUpValidations.push(isLastMonthClosed ? 'oprtationLastMonth' : 'operationsClosable');
        this.operationClosureUpdate.emit(accountingSetUpValidations);
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(),
        __metadata("design:type", Object)
    ], OperationsClosureComponent.prototype, "operationClosureUpdate", void 0);
    OperationsClosureComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            providers: [_angular_common__WEBPACK_IMPORTED_MODULE_0__["DatePipe"]],
            selector: 'atlas-operations-closure',
            template: __webpack_require__(/*! ./operations-closure.component.html */ "./Client/app/financial/components/cut-off/close-month/cards/operations-closure/operations-closure.component.html"),
            styles: [__webpack_require__(/*! ./operations-closure.component.scss */ "./Client/app/financial/components/cut-off/close-month/cards/operations-closure/operations-closure.component.scss")],
        }),
        __metadata("design:paramtypes", [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"],
            _angular_common__WEBPACK_IMPORTED_MODULE_0__["DatePipe"],
            _shared_services_form_configuration_provider_service__WEBPACK_IMPORTED_MODULE_9__["FormConfigurationProviderService"],
            _core_services_company_manager_service__WEBPACK_IMPORTED_MODULE_6__["CompanyManagerService"],
            _angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"],
            _core_services_authorization_service__WEBPACK_IMPORTED_MODULE_5__["AuthorizationService"]])
    ], OperationsClosureComponent);
    return OperationsClosureComponent;
}(_shared_components_base_form_component_base_form_component_component__WEBPACK_IMPORTED_MODULE_7__["BaseFormComponent"]));



/***/ }),

/***/ "./Client/app/financial/components/cut-off/close-month/close-month.component.html":
/*!****************************************************************************************!*\
  !*** ./Client/app/financial/components/cut-off/close-month/close-month.component.html ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"main-container\">\r\n    <div fxLayout=\"row\"\r\n         fxAlignLayout=\"start end\">\r\n        <span class=\"fill-space\"></span>\r\n        <button mat-button\r\n                (click)=\"onOpenClosureSettingsDialog()\"\r\n                [disabled]=\"isCompanyFrozen\">EDIT CLOSURE SETTINGS</button>\r\n    </div>\r\n    <div fxLayout=\"row\"\r\n         fxLayout.md=\"column\"\r\n         fxLayoutAlign=\"space-between start\">\r\n        <div fxLayout=\"column\"\r\n             fxLayoutAlign=\"start left\"\r\n             fxFlex=\"49\">\r\n            <atlas-operations-closure #operationsClosureComponent\r\n                                      (operationClosureUpdate)=\"onUpdateAccountingSetup($event)\">\r\n            </atlas-operations-closure>\r\n        </div>\r\n        <div fxLayout=\"column\"\r\n             fxLayoutAlign=\"start right\"\r\n             fxFlex=\"49\">\r\n            <atlas-accounting-closure #accountingClosureComponent\r\n                                      (accountClosureUpdate)=\"onUpdateAccountingSetup($event)\">\r\n            </atlas-accounting-closure>\r\n        </div>\r\n    </div>\r\n</div>"

/***/ }),

/***/ "./Client/app/financial/components/cut-off/close-month/close-month.component.scss":
/*!****************************************************************************************!*\
  !*** ./Client/app/financial/components/cut-off/close-month/close-month.component.scss ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ""

/***/ }),

/***/ "./Client/app/financial/components/cut-off/close-month/close-month.component.ts":
/*!**************************************************************************************!*\
  !*** ./Client/app/financial/components/cut-off/close-month/close-month.component.ts ***!
  \**************************************************************************************/
/*! exports provided: CloseMonthComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CloseMonthComponent", function() { return CloseMonthComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _core_services_company_manager_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../core/services/company-manager.service */ "./Client/app/core/services/company-manager.service.ts");
/* harmony import */ var _shared_entities_accounting_setup_entity__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../shared/entities/accounting-setup.entity */ "./Client/app/shared/entities/accounting-setup.entity.ts");
/* harmony import */ var _shared_services_http_services_preaccounting_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../shared/services/http-services/preaccounting.service */ "./Client/app/shared/services/http-services/preaccounting.service.ts");
/* harmony import */ var _shared_services_title_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../shared/services/title.service */ "./Client/app/shared/services/title.service.ts");
/* harmony import */ var _shared_services_url_management_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../shared/services/url-management.service */ "./Client/app/shared/services/url-management.service.ts");
/* harmony import */ var _cards_accounting_closure_accounting_closure_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./cards/accounting-closure/accounting-closure.component */ "./Client/app/financial/components/cut-off/close-month/cards/accounting-closure/accounting-closure.component.ts");
/* harmony import */ var _cards_operations_closure_operations_closure_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./cards/operations-closure/operations-closure.component */ "./Client/app/financial/components/cut-off/close-month/cards/operations-closure/operations-closure.component.ts");
/* harmony import */ var _dialog_boxes_close_month_edit_dialog_close_month_edit_dialog_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./dialog-boxes/close-month-edit-dialog/close-month-edit-dialog.component */ "./Client/app/financial/components/cut-off/close-month/dialog-boxes/close-month-edit-dialog/close-month-edit-dialog.component.ts");
/* harmony import */ var _dialog_boxes_close_month_warning_dialog_close_month_warning_dialog_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./dialog-boxes/close-month-warning-dialog/close-month-warning-dialog.component */ "./Client/app/financial/components/cut-off/close-month/dialog-boxes/close-month-warning-dialog/close-month-warning-dialog.component.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};













var CloseMonthComponent = /** @class */ (function () {
    function CloseMonthComponent(formBuilder, router, route, preaccountingService, urlManagementService, cdr, dialog, titleService, companyManager) {
        this.formBuilder = formBuilder;
        this.router = router;
        this.route = route;
        this.preaccountingService = preaccountingService;
        this.urlManagementService = urlManagementService;
        this.cdr = cdr;
        this.dialog = dialog;
        this.titleService = titleService;
        this.companyManager = companyManager;
        this.subscriptions = [];
        this.formComponents = [];
    }
    CloseMonthComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.company = this.route.snapshot.paramMap.get('company');
        this.titleService.setTitle(this.route.snapshot.data.title);
        this.closeMonthsFormGroup = this.formBuilder.group({
            accountingClosureComponent: this.accountingClosureComponent.getFormGroup(),
            operationsClosureComponent: this.operationsClosureComponent.getFormGroup(),
        });
        this.formComponents.push(this.accountingClosureComponent, this.operationsClosureComponent);
        this.cdr.detectChanges();
        this.subscriptions.push(this.preaccountingService.getAccountingSetupDetails()
            .subscribe(function (data) {
            _this.accountingSetupModel = data;
            _this.formComponents.forEach(function (comp) {
                comp.initForm(data);
            });
        }));
        this.isCompanyFrozen = this.companyManager.getCompany(this.company).isFrozen;
    };
    CloseMonthComponent.prototype.ngOnDestroy = function () {
        this.subscriptions.forEach(function (subscription) {
            subscription.unsubscribe();
        });
    };
    CloseMonthComponent.prototype.onUpdateAccountingSetup = function (validations) {
        var _this = this;
        if (validations.length > 1) {
            var openDialog = this.dialog.open(_dialog_boxes_close_month_warning_dialog_close_month_warning_dialog_component__WEBPACK_IMPORTED_MODULE_12__["CloseMonthWarningDialogComponent"], {
                data: {
                    title: validations[0],
                    text: validations[1],
                    okButton: 'Yes',
                    noButton: 'No',
                },
            });
            openDialog.afterClosed().subscribe(function (answer) {
                if (answer) {
                    _this.validateSetUpDetails(validations[2]);
                }
            });
        }
    };
    CloseMonthComponent.prototype.validateSetUpDetails = function (validation) {
        switch (validation) {
            case 'accountingClosable':
                if ((new Date(this.accountingSetupModel.lastMonthClosed).getMonth() ===
                    new Date(this.accountingSetupModel.lastMonthClosedForOperation).getMonth()) &&
                    (new Date(this.accountingSetupModel.lastMonthClosed).getFullYear() ===
                        new Date(this.accountingSetupModel.lastMonthClosedForOperation).getFullYear())) {
                    return this.showWarningMessage('Both accounting and operations period will be closed on this action.' +
                        'Do you want to proceed?');
                }
            default:
                this.saveAccountingSetUpDetails();
                break;
        }
    };
    CloseMonthComponent.prototype.showWarningMessage = function (message) {
        var _this = this;
        var warningDialog = this.dialog.open(_dialog_boxes_close_month_warning_dialog_close_month_warning_dialog_component__WEBPACK_IMPORTED_MODULE_12__["CloseMonthWarningDialogComponent"], {
            data: {
                text: message,
                okButton: 'Yes',
                noButton: 'No',
            },
        });
        warningDialog.afterClosed().subscribe(function (answer) {
            if (answer) {
                _this.saveAccountingSetUpDetails(null, true);
            }
        });
    };
    CloseMonthComponent.prototype.saveAccountingSetUpDetails = function (accountingSetup, isClosableSame) {
        var _this = this;
        this.getCloseMonthInfo();
        if (accountingSetup) {
            this.model.numberOfOpenPeriod = accountingSetup.numberOfOpenPeriod;
            this.model.openPeriodCounter = accountingSetup.openPeriodCounter;
            this.model.maximumNumberofOpenFinancialYears = accountingSetup.maximumNumberofOpenFinancialYears;
            this.model.lastMonthofFinancialYear = accountingSetup.lastMonthofFinancialYear;
            this.model.lastFinancialYearClosed = accountingSetup.lastFinancialYearClosed;
        }
        if (isClosableSame) {
            this.model.lastMonthClosedForOperation = this.model.lastMonthClosed;
        }
        this.model.lastMonthClosed = new Date(new Date(this.model.lastMonthClosed).
            setHours(this.model.lastMonthClosed.getHours() + 5, 30));
        this.model.lastMonthClosedForOperation = new Date(new Date(this.model.lastMonthClosedForOperation).
            setHours(this.model.lastMonthClosedForOperation.getHours() + 5, 30));
        this.subscriptions.push(this.preaccountingService.updateAccountingSetupDetails(this.model)
            .subscribe(function () {
            _this.router.navigate(['/' + _this.urlManagementService.getCurrentCompanyId() + '/financial/cut-off/close-month']);
        }, function (err) {
            throw err;
        }));
    };
    CloseMonthComponent.prototype.getCloseMonthInfo = function () {
        var _this = this;
        this.model = new _shared_entities_accounting_setup_entity__WEBPACK_IMPORTED_MODULE_5__["AccountingSetup"]();
        this.formComponents.forEach(function (comp) {
            _this.model = comp.populateEntity(_this.model);
        });
        this.model.numberOfOpenPeriod = this.accountingSetupModel.numberOfOpenPeriod;
        this.model.maximumNumberofOpenFinancialYears = this.accountingSetupModel.maximumNumberofOpenFinancialYears;
        this.model.lastMonthofFinancialYear = this.accountingSetupModel.lastMonthofFinancialYear;
        this.model.lastFinancialYearClosed = this.accountingSetupModel.lastFinancialYearClosed;
    };
    CloseMonthComponent.prototype.onOpenClosureSettingsDialog = function () {
        var _this = this;
        var openDialog = this.dialog.open(_dialog_boxes_close_month_edit_dialog_close_month_edit_dialog_component__WEBPACK_IMPORTED_MODULE_11__["CloseMonthEditDialogComponent"], {
            data: {
                model: this.accountingSetupModel,
                company: this.company,
            },
        });
        openDialog.afterClosed().subscribe(function (answer) {
            if (answer) {
                _this.saveAccountingSetUpDetails(answer);
            }
        });
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('accountingClosureComponent'),
        __metadata("design:type", _cards_accounting_closure_accounting_closure_component__WEBPACK_IMPORTED_MODULE_9__["AccountingClosureComponent"])
    ], CloseMonthComponent.prototype, "accountingClosureComponent", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('operationsClosureComponent'),
        __metadata("design:type", _cards_operations_closure_operations_closure_component__WEBPACK_IMPORTED_MODULE_10__["OperationsClosureComponent"])
    ], CloseMonthComponent.prototype, "operationsClosureComponent", void 0);
    CloseMonthComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'atlas-close-month',
            template: __webpack_require__(/*! ./close-month.component.html */ "./Client/app/financial/components/cut-off/close-month/close-month.component.html"),
            styles: [__webpack_require__(/*! ./close-month.component.scss */ "./Client/app/financial/components/cut-off/close-month/close-month.component.scss")],
        }),
        __metadata("design:paramtypes", [_angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormBuilder"],
            _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"],
            _angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"],
            _shared_services_http_services_preaccounting_service__WEBPACK_IMPORTED_MODULE_6__["PreaccountingService"],
            _shared_services_url_management_service__WEBPACK_IMPORTED_MODULE_8__["UrlManagementService"],
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectorRef"], _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialog"],
            _shared_services_title_service__WEBPACK_IMPORTED_MODULE_7__["TitleService"], _core_services_company_manager_service__WEBPACK_IMPORTED_MODULE_4__["CompanyManagerService"]])
    ], CloseMonthComponent);
    return CloseMonthComponent;
}());



/***/ }),

/***/ "./Client/app/financial/components/cut-off/close-month/dialog-boxes/close-month-edit-dialog/close-month-edit-dialog.component.html":
/*!*****************************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/cut-off/close-month/dialog-boxes/close-month-edit-dialog/close-month-edit-dialog.component.html ***!
  \*****************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<h2>Closure settings\r\n    <button mat-icon-button\r\n            mat-dialog-close\r\n            class=\"close-dialog-btn\">\r\n        <mat-icon aria-label=\"Closing button\">clear</mat-icon>\r\n    </button>\r\n</h2>\r\n\r\n<mat-dialog-content class=\"mat-dialog-content\"\r\n                    fxLayout=\"column\">\r\n    <div fxLayout=\"row\"\r\n         fxLayoutAlign=\"start center\"\r\n         fxLayoutGap=\"150px\">\r\n        <mat-form-field fxFlex=\"40%\">\r\n            <mat-select placeholder=\"No of open periods\"\r\n                        [formControl]=\"numberOfOpenPeriodsCtrl\"\r\n                        [disabled]=\"closeMonthDialogEdit\">\r\n                <mat-option *ngFor=\"let periods of numberOfOpenPeriods\"\r\n                            [value]=\"periods\">{{periods}} </mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n    </div>\r\n    <div fxLayout=\"row\"\r\n         fxLayoutAlign=\"start center\">\r\n        <h2 class=\"no-margin\">Accounting Periods Open</h2>\r\n    </div>\r\n    <div class=\"close-month-field\">\r\n        <mat-chip-list multiple\r\n                       fxFlex=\"100%\">\r\n            <mat-chip *ngFor=\"let periods of accountingPeriods\"\r\n                      [selectable]=\"false\">\r\n                {{periods | date : \"MMM y\"}}\r\n            </mat-chip>\r\n        </mat-chip-list>\r\n    </div>\r\n    <div fxLayout=\"row\"\r\n         fxLayoutAlign=\"start center\">\r\n        <mat-form-field fxFlex=\"100%\">\r\n            <input matInput\r\n                   placeholder=\"Youngest Month\"\r\n                   autocomplete=\"off\"\r\n                   [formControl]=\"youngestMonthCtrl\"\r\n                   readonly>\r\n        </mat-form-field>\r\n    </div>\r\n    <div fxLayout=\"row\"\r\n         fxLayoutAlign=\"start center\"\r\n         fxLayoutGap=\"16px\">\r\n        <mat-form-field fxFlex=\"60%\">\r\n            <mat-select placeholder=\"Maximum no. of open financial years\"\r\n                        [formControl]=\"numberOfOpenFinancialYearsCtrl\"\r\n                        [disabled]=\"closeMonthDialogEdit\">\r\n                <mat-option *ngFor=\"let periods of numberOfOpenFinancialYears\"\r\n                            [value]=\"periods\">{{periods}} </mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field fxFlex=\"50%\">\r\n            <mat-select placeholder=\"Last Month of Financial Year\"\r\n                        [formControl]=\"lastMonthFinancialYearCtrl\"\r\n                        [disabled]=\"closeMonthDialogEdit\">\r\n                <mat-option *ngFor=\"let periods of lastMonthFinancialYears\"\r\n                            [value]=\"periods.monthId\">{{periods.description}} </mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n    </div>\r\n    <div fxLayout=\"row\"\r\n         fxLayoutAlign=\"start center\"\r\n         fxLayoutGap=\"155px\">\r\n        <mat-form-field fxFlex=\"100%\">\r\n            <input matInput\r\n                   placeholder=\"Last Financial Year Closed\"\r\n                   [formControl]=\"lastFinancialYearClosedCtrl\"\r\n                   readonly\r\n                   autocomplete=\"off\">\r\n        </mat-form-field>\r\n    </div>\r\n</mat-dialog-content>\r\n\r\n<div fxLayout=\"row\"\r\n     fxLayoutAlign=\"space-between center\">\r\n    <div fxLayout=\"column\"\r\n         fxLayoutAlign=\"start start\">\r\n        <button mat-button\r\n                (click)=\"onDiscardButtonClick()\">\r\n            DISCARD\r\n        </button>\r\n    </div>\r\n    <div fxLayout=\"column\"\r\n         fxLayoutAlign=\"start end\">\r\n        <div fxLayout=\"row\"\r\n             fxLayoutAlign=\"end start\">\r\n            <button mat-button\r\n                    (click)=\"onSaveButtonClicked()\">\r\n                SAVE\r\n            </button>\r\n        </div>\r\n    </div>\r\n</div>\r\n"

/***/ }),

/***/ "./Client/app/financial/components/cut-off/close-month/dialog-boxes/close-month-edit-dialog/close-month-edit-dialog.component.scss":
/*!*****************************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/cut-off/close-month/dialog-boxes/close-month-edit-dialog/close-month-edit-dialog.component.scss ***!
  \*****************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".mat-dialog-title {\n  margin-bottom: 0; }\n\n.mat-dialog-content {\n  width: 750px; }\n\n.close-month-field {\n  margin: 8px 0 16px 0; }\n\nbutton {\n  margin: 0; }\n"

/***/ }),

/***/ "./Client/app/financial/components/cut-off/close-month/dialog-boxes/close-month-edit-dialog/close-month-edit-dialog.component.ts":
/*!***************************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/cut-off/close-month/dialog-boxes/close-month-edit-dialog/close-month-edit-dialog.component.ts ***!
  \***************************************************************************************************************************************/
/*! exports provided: CloseMonthEditDialogComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CloseMonthEditDialogComponent", function() { return CloseMonthEditDialogComponent; });
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _core_services_authorization_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../../../core/services/authorization.service */ "./Client/app/core/services/authorization.service.ts");
/* harmony import */ var _shared_entities_atlas_form_control__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../../shared/entities/atlas-form-control */ "./Client/app/shared/entities/atlas-form-control.ts");
/* harmony import */ var _shared_enums_permission_level_enum__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../../../shared/enums/permission-level.enum */ "./Client/app/shared/enums/permission-level.enum.ts");
/* harmony import */ var _shared_components_confirmation_dialog_confirmation_dialog_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../../../shared/components/confirmation-dialog/confirmation-dialog.component */ "./Client/app/shared/components/confirmation-dialog/confirmation-dialog.component.ts");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_8__);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};









var CloseMonthEditDialogComponent = /** @class */ (function () {
    function CloseMonthEditDialogComponent(closeMonthDialogRef, data, datePipe, dialog, route, authorizationService) {
        this.closeMonthDialogRef = closeMonthDialogRef;
        this.data = data;
        this.datePipe = datePipe;
        this.dialog = dialog;
        this.route = route;
        this.authorizationService = authorizationService;
        this.numberOfOpenPeriodsCtrl = new _shared_entities_atlas_form_control__WEBPACK_IMPORTED_MODULE_5__["AtlasFormControl"]('numberOfOpenPeriods');
        this.youngestMonthCtrl = new _shared_entities_atlas_form_control__WEBPACK_IMPORTED_MODULE_5__["AtlasFormControl"]('youngestMonth');
        this.numberOfOpenFinancialYearsCtrl = new _shared_entities_atlas_form_control__WEBPACK_IMPORTED_MODULE_5__["AtlasFormControl"]('numberOfOpenFinancialYears');
        this.lastMonthFinancialYearCtrl = new _shared_entities_atlas_form_control__WEBPACK_IMPORTED_MODULE_5__["AtlasFormControl"]('lastMonthFinancialYear');
        this.lastFinancialYearClosedCtrl = new _shared_entities_atlas_form_control__WEBPACK_IMPORTED_MODULE_5__["AtlasFormControl"]('lastFinancialYearClosed');
        this.closeMonthDialogEdit = false;
        this.PermissionLevels = _shared_enums_permission_level_enum__WEBPACK_IMPORTED_MODULE_6__["PermissionLevels"];
        this.numberOfOpenPeriods = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];
        this.numberOfOpenFinancialYears = [2, 3];
        this.lastMonthFinancialYears = [
            { monthId: 1, description: 'Jan' },
            { monthId: 2, description: 'Feb' },
            { monthId: 3, description: 'Mar' },
            { monthId: 4, description: 'Apr' },
            { monthId: 5, description: 'May' },
            { monthId: 6, description: 'Jun' },
            { monthId: 7, description: 'Jul' },
            { monthId: 8, description: 'Aug' },
            { monthId: 9, description: 'Sep' },
            { monthId: 10, description: 'Oct' },
            { monthId: 11, description: 'Nov' },
            { monthId: 12, description: 'Dec' },
        ];
        this.accountingPeriods = [];
        this.editClosureSettingsDialogPrivilege = {
            profileId: null,
            privilegeName: 'EditClosureSettingsDialog',
            permission: _shared_enums_permission_level_enum__WEBPACK_IMPORTED_MODULE_6__["PermissionLevels"].Read,
            privilegeParentLevelOne: 'Financials',
            privilegeParentLevelTwo: 'CutOff',
        };
        this.closeMonthDialogData = data;
    }
    CloseMonthEditDialogComponent.prototype.ngOnInit = function () {
        var _this = this;
        if (this.closeMonthDialogData.model) {
            this.numberOfOpenPeriodsCtrl.patchValue(this.closeMonthDialogData.model.numberOfOpenPeriod);
            this.numberOfOpenFinancialYearsCtrl.patchValue(this.closeMonthDialogData.model.maximumNumberofOpenFinancialYears);
            this.lastMonthFinancialYearCtrl.patchValue(this.closeMonthDialogData.model.lastMonthofFinancialYear);
            if (this.closeMonthDialogData.model.lastFinancialYearClosed &&
                this.closeMonthDialogData.model.lastFinancialYearClosed !== 0) {
                this.lastFinancialYearClosedCtrl.patchValue(this.closeMonthDialogData.model.lastFinancialYearClosed);
            }
            else {
                this.lastFinancialYearClosedCtrl.patchValue(moment__WEBPACK_IMPORTED_MODULE_8__(new Date()).year());
            }
            this.updateAccountingPeriods(this.closeMonthDialogData.model.numberOfOpenPeriod);
        }
        this.numberOfOpenPeriodsCtrl.valueChanges.subscribe(function (value) {
            _this.updateAccountingPeriods(value);
        });
        this.closeMonthDialogEdit = this.checkIfUserHasRequiredPrivileges(this.editClosureSettingsDialogPrivilege);
    };
    CloseMonthEditDialogComponent.prototype.checkIfUserHasRequiredPrivileges = function (userCompanyPrivilege) {
        if (this.authorizationService.isUserAllowedForCompany(this.closeMonthDialogData.company)) {
            var userPermissionLevel = this.authorizationService.getPermissionLevel(this.closeMonthDialogData.company, userCompanyPrivilege.privilegeName, userCompanyPrivilege.privilegeParentLevelOne, userCompanyPrivilege.privilegeParentLevelTwo);
            if (userPermissionLevel <= userCompanyPrivilege.permission) {
                return true;
            }
        }
        return false;
    };
    CloseMonthEditDialogComponent.prototype.updateAccountingPeriods = function (numberOfMonths) {
        this.accountingPeriods = [];
        while (numberOfMonths !== 0) {
            this.accountingPeriods.push(new Date(new Date(this.closeMonthDialogData.model.lastMonthClosed).
                setMonth(new Date(this.closeMonthDialogData.model.lastMonthClosed).getMonth() + numberOfMonths)));
            numberOfMonths = numberOfMonths - 1;
        }
        this.youngestMonthCtrl.patchValue(this.datePipe.transform(this.accountingPeriods[0], 'MMM y'));
        this.accountingPeriods.reverse();
    };
    CloseMonthEditDialogComponent.prototype.onDiscardButtonClick = function () {
        var _this = this;
        var confirmDiscardDialog = this.dialog.open(_shared_components_confirmation_dialog_confirmation_dialog_component__WEBPACK_IMPORTED_MODULE_7__["ConfirmationDialogComponent"], {
            data: {
                title: 'Discard Changes',
                text: 'You have some modification pending. Close and lose changes?',
                okButton: 'Ok',
                cancelButton: 'Cancel',
            },
        });
        confirmDiscardDialog.afterClosed().subscribe(function (answer) {
            if (answer) {
                _this.closeMonthDialogRef.close(false);
            }
        });
    };
    CloseMonthEditDialogComponent.prototype.onSaveButtonClicked = function () {
        this.getClosureSettings();
        this.closeMonthDialogRef.close(this.closeMonthDialogData.model);
    };
    CloseMonthEditDialogComponent.prototype.getClosureSettings = function () {
        this.closeMonthDialogData.model.numberOfOpenPeriod = this.numberOfOpenPeriodsCtrl.value ? this.numberOfOpenPeriodsCtrl.value : null;
        if (this.closeMonthDialogData.model !== this.numberOfOpenPeriodsCtrl.value) {
            this.closeMonthDialogData.model.openPeriodCounter = 0;
        }
        this.closeMonthDialogData.model.maximumNumberofOpenFinancialYears = this.numberOfOpenFinancialYearsCtrl.value ? this.numberOfOpenFinancialYearsCtrl.value : null;
        this.closeMonthDialogData.model.lastMonthofFinancialYear = this.lastMonthFinancialYearCtrl.value ? this.lastMonthFinancialYearCtrl.value : null;
        this.closeMonthDialogData.model.lastFinancialYearClosed = this.lastFinancialYearClosedCtrl.value ? this.lastFinancialYearClosedCtrl.value : null;
    };
    CloseMonthEditDialogComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            providers: [_angular_common__WEBPACK_IMPORTED_MODULE_0__["DatePipe"]],
            selector: 'atlas-close-month-edit-dialog',
            template: __webpack_require__(/*! ./close-month-edit-dialog.component.html */ "./Client/app/financial/components/cut-off/close-month/dialog-boxes/close-month-edit-dialog/close-month-edit-dialog.component.html"),
            styles: [__webpack_require__(/*! ./close-month-edit-dialog.component.scss */ "./Client/app/financial/components/cut-off/close-month/dialog-boxes/close-month-edit-dialog/close-month-edit-dialog.component.scss")],
        }),
        __param(1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"])),
        __metadata("design:paramtypes", [_angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialogRef"], Object, _angular_common__WEBPACK_IMPORTED_MODULE_0__["DatePipe"],
            _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialog"],
            _angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"],
            _core_services_authorization_service__WEBPACK_IMPORTED_MODULE_4__["AuthorizationService"]])
    ], CloseMonthEditDialogComponent);
    return CloseMonthEditDialogComponent;
}());



/***/ }),

/***/ "./Client/app/financial/components/cut-off/close-month/dialog-boxes/close-month-warning-dialog/close-month-warning-dialog.component.html":
/*!***********************************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/cut-off/close-month/dialog-boxes/close-month-warning-dialog/close-month-warning-dialog.component.html ***!
  \***********************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<h1 mat-dialog-title\r\n    class=\"warning-uppercase\">{{dialogData.title}}</h1>\r\n<mat-dialog-content>\r\n    <div fxLayout=\"row\"\r\n         fxLayoutAlign=\"none center\"\r\n         fxLayoutWrap\r\n         fxLayoutGap=\"10px\">\r\n        <p>{{dialogData.text}}</p>\r\n    </div>\r\n</mat-dialog-content>\r\n<mat-dialog-actions class=\"warning-dialog-actions\">\r\n\r\n    <button *ngIf=\"dialogData.noButton\"\r\n            mat-button\r\n            (click)=\"onClose()\">{{dialogData.noButton}}</button>\r\n    <span class=\"fill-space\"></span>\r\n    <button *ngIf=\"dialogData.okButton\"\r\n            mat-button\r\n            (click)=\"onCloseConfirm()\">{{dialogData.okButton}}</button>\r\n</mat-dialog-actions>\r\n"

/***/ }),

/***/ "./Client/app/financial/components/cut-off/close-month/dialog-boxes/close-month-warning-dialog/close-month-warning-dialog.component.scss":
/*!***********************************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/cut-off/close-month/dialog-boxes/close-month-warning-dialog/close-month-warning-dialog.component.scss ***!
  \***********************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".warning-uppercase {\n  text-transform: uppercase;\n  margin-bottom: 0; }\n\nbutton {\n  margin-top: 0; }\n"

/***/ }),

/***/ "./Client/app/financial/components/cut-off/close-month/dialog-boxes/close-month-warning-dialog/close-month-warning-dialog.component.ts":
/*!*********************************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/cut-off/close-month/dialog-boxes/close-month-warning-dialog/close-month-warning-dialog.component.ts ***!
  \*********************************************************************************************************************************************/
/*! exports provided: CloseMonthWarningDialogComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CloseMonthWarningDialogComponent", function() { return CloseMonthWarningDialogComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};


var CloseMonthWarningDialogComponent = /** @class */ (function () {
    function CloseMonthWarningDialogComponent(thisDialogRef, data) {
        this.thisDialogRef = thisDialogRef;
        this.data = data;
        this.dialogData = data;
    }
    CloseMonthWarningDialogComponent.prototype.ngOnInit = function () {
    };
    CloseMonthWarningDialogComponent.prototype.onClose = function () {
        this.thisDialogRef.close(false);
    };
    CloseMonthWarningDialogComponent.prototype.onCloseConfirm = function () {
        this.thisDialogRef.close(true);
    };
    CloseMonthWarningDialogComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'atlas-close-month-warning-dialog',
            template: __webpack_require__(/*! ./close-month-warning-dialog.component.html */ "./Client/app/financial/components/cut-off/close-month/dialog-boxes/close-month-warning-dialog/close-month-warning-dialog.component.html"),
            styles: [__webpack_require__(/*! ./close-month-warning-dialog.component.scss */ "./Client/app/financial/components/cut-off/close-month/dialog-boxes/close-month-warning-dialog/close-month-warning-dialog.component.scss")],
        }),
        __param(1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_1__["MAT_DIALOG_DATA"])),
        __metadata("design:paramtypes", [_angular_material__WEBPACK_IMPORTED_MODULE_1__["MatDialogRef"], Object])
    ], CloseMonthWarningDialogComponent);
    return CloseMonthWarningDialogComponent;
}());



/***/ }),

/***/ "./Client/app/financial/components/cut-off/freeze/cards/grid/freeze-grid.component.html":
/*!**********************************************************************************************!*\
  !*** ./Client/app/financial/components/cut-off/freeze/cards/grid/freeze-grid.component.html ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<mat-card>\r\n    <div fxLayout=\"row\"\r\n         fxLayout.xs=\"column\"\r\n         fxLayoutAlign=\"space-between center\"\r\n         fxLayoutWrap\r\n         fxLayoutGap=\"10px\"\r\n         class=\"atlas-grid-card-title\">\r\n        <h2>Freezes</h2>\r\n        <span class=\"fill-space\"></span>\r\n        <button mat-icon-button\r\n                (click)=\"$event.stopPropagation()\"\r\n                [matMenuTriggerFor]=\"menu\">\r\n            <i class=\"material-icons\">more_vert</i>\r\n        </button>\r\n        <mat-menu #menu=\"matMenu\">\r\n            <div *ngIf=\"multipleSelection\">\r\n                <button *ngFor=\"let action of freezeGridContextualMenuActions\"\r\n                        mat-menu-item\r\n                        (click)=\"onBulkMenuActionClicked(action)\">\r\n                    <mat-icon>{{action.icon}}</mat-icon><span>{{ action.text }}</span>\r\n                </button>\r\n            </div>\r\n            <button mat-menu-item\r\n                    [matMenuTriggerFor]=\"exportMenu\"\r\n                    (mouseover)=\"OnExportButton()\">\r\n                <mat-icon>import_export</mat-icon><span>Export</span>\r\n            </button>\r\n        </mat-menu>\r\n        <mat-menu #exportMenu=\"matMenu\">\r\n            <button mat-menu-item\r\n                    (click)=\"onExportButtonClickedAsExcel()\">\r\n                <mat-icon>import_export</mat-icon><span>Export as Excel</span>\r\n            </button>\r\n            <button mat-menu-item\r\n                    (click)=\"onExportButtonClickedAsCSV()\">\r\n                <mat-icon>import_export</mat-icon><span>Export as CSV</span>\r\n            </button>\r\n        </mat-menu>\r\n    </div>\r\n    <mat-card-content>\r\n        <div fxLayout=\"row\"\r\n             fxLayoutAlign=\"center center\"\r\n             fxLayoutWrap\r\n             *ngIf=\"isLoading\"\r\n             class=\"loading\">\r\n            <mat-spinner color=\"accent\"></mat-spinner>\r\n        </div>\r\n        <div [ngClass]=\"{'hidden-during-loading':isLoading}\"\r\n             ag-grid=\"agGridOptions\"\r\n             class=\"ag-theme-material pointer-cursor\"\r\n             style=\"width: 100%; height: 100%\">\r\n            <ag-grid-angular style=\"height:100%;\"\r\n                             class=\"ag-theme-material\"\r\n                             [columnDefs]=\"columnDefs\"\r\n                             [rowData]=\"rowData\"\r\n                             enableColResize=true\r\n                             pagination=true\r\n                             singleClickEdit=true\r\n                             paginationPageSize=10\r\n                             rowSelection=\"multiple\"\r\n                             suppressRowClickSelection=true\r\n                             domLayout=\"autoHeight\"\r\n                             [excelStyles]=\"excelStyles\"\r\n                             enableSorting=true\r\n                             (gridReady)=\"onGridReady($event)\"\r\n                             enableFilter\r\n                             (firstDataRendered)=\"onFirstDataRendered($event)\"\r\n                             [rowHeight]=\"atlasAgGridParam.rowHeight\">\r\n            </ag-grid-angular>\r\n        </div>\r\n    </mat-card-content>\r\n</mat-card>\r\n"

/***/ }),

/***/ "./Client/app/financial/components/cut-off/freeze/cards/grid/freeze-grid.component.scss":
/*!**********************************************************************************************!*\
  !*** ./Client/app/financial/components/cut-off/freeze/cards/grid/freeze-grid.component.scss ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".atlas-grid-card-header {\n  min-height: 40px; }\n"

/***/ }),

/***/ "./Client/app/financial/components/cut-off/freeze/cards/grid/freeze-grid.component.ts":
/*!********************************************************************************************!*\
  !*** ./Client/app/financial/components/cut-off/freeze/cards/grid/freeze-grid.component.ts ***!
  \********************************************************************************************/
/*! exports provided: FreezeGridComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FreezeGridComponent", function() { return FreezeGridComponent; });
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var _core_services_authorization_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../../../core/services/authorization.service */ "./Client/app/core/services/authorization.service.ts");
/* harmony import */ var _shared_enums_freeze_type_enum__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../../shared/enums/freeze-type.enum */ "./Client/app/shared/enums/freeze-type.enum.ts");
/* harmony import */ var _shared_pipes_format_date_pipe_pipe__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../../../shared/pipes/format-date-pipe.pipe */ "./Client/app/shared/pipes/format-date-pipe.pipe.ts");
/* harmony import */ var _shared_services_ag_grid_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../../../shared/services/ag-grid.service */ "./Client/app/shared/services/ag-grid.service.ts");
/* harmony import */ var _shared_services_ui_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../../../shared/services/ui.service */ "./Client/app/shared/services/ui.service.ts");
/* harmony import */ var _shared_components_ag_contextual_menu_ag_contextual_menu_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./../../../../../../shared/components/ag-contextual-menu/ag-contextual-menu.component */ "./Client/app/shared/components/ag-contextual-menu/ag-contextual-menu.component.ts");
/* harmony import */ var _shared_services_snackbar_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./../../../../../../shared/services/snackbar.service */ "./Client/app/shared/services/snackbar.service.ts");
/* harmony import */ var _shared_services_title_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./../../../../../../shared/services/title.service */ "./Client/app/shared/services/title.service.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};












var FreezeGridComponent = /** @class */ (function () {
    function FreezeGridComponent(uiService, route, formatDate, datePipe, authorizationService, snackBarService, gridService, titleService) {
        var _this = this;
        this.uiService = uiService;
        this.route = route;
        this.formatDate = formatDate;
        this.datePipe = datePipe;
        this.authorizationService = authorizationService;
        this.snackBarService = snackBarService;
        this.gridService = gridService;
        this.titleService = titleService;
        this.freezeGridContextualMenuActions = [];
        this.menuActionClicked = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.multipleSelection = false;
        this.isLoading = false;
        this.checkExportedFormat = false;
        this.excelStyles = [
            {
                id: 'dateFormat',
                dataType: 'dateTime',
                numberFormat: {
                    format: 'dd/mm/yyyy',
                },
            },
        ];
        this.columnDefs = [
            {
                headerCheckboxSelection: true,
                checkboxSelection: true,
                width: 92,
                colId: 'checkbox',
                hide: !this.multipleSelection,
            },
            {
                headerName: 'Date of freeze',
                colId: 'freezeDate',
                field: 'freezeDate',
                valueFormatter: function (params) {
                    if (params.data) {
                        return params.data.dataVersionTypeId === _shared_enums_freeze_type_enum__WEBPACK_IMPORTED_MODULE_5__["FreezeType"].Monthly ?
                            _this.uiService.monthFormatter(params) : _this.uiService.dateFormatter(params);
                    }
                },
                cellClass: 'dateFormat',
                valueGetter: function (params) {
                    var dateFormat = _this.formatDate;
                    var val = dateFormat.transformdate(params.data.freezeDate);
                    if (val) {
                        if (val.indexOf('/') < 0) {
                            return val;
                        }
                        else {
                            var split = val.split('/');
                            return split[2] + '-' + split[1] + '-' + split[0];
                        }
                    }
                },
            },
            {
                headerName: 'User',
                colId: 'createdBy',
                field: 'createdBy',
            },
            {
                headerName: 'Date of run',
                colId: 'startDateTime',
                field: 'startDateTime',
                valueFormatter: function (params) { return _this.uiService.dateFormatter(params); },
                cellClass: 'dateFormat',
                valueGetter: function (params) {
                    var dateFormat = _this.formatDate;
                    var val = dateFormat.transformdate(params.data.startDateTime);
                    if (val) {
                        if (val.indexOf('/') < 0) {
                            return val;
                        }
                        else {
                            var split = val.split('/');
                            return split[2] + '-' + split[1] + '-' + split[0];
                        }
                    }
                },
            },
            {
                headerName: 'Time of run',
                colId: 'endDateTime',
                field: 'endDateTime',
                valueFormatter: this.uiService.timeFormatter,
            },
        ];
        this.rowData = [];
        this.isNew = false;
        this.destroy$ = new rxjs__WEBPACK_IMPORTED_MODULE_3__["Subject"]();
        this.company = route.snapshot.paramMap.get('company');
        this.isNew = this.route.snapshot.data.isNew;
        this.atlasAgGridParam = this.gridService.getAgGridParam();
        this.userActiveDirectoryName = this.authorizationService.getCurrentUser().samAccountName;
    }
    FreezeGridComponent.prototype.ngOnInit = function () {
        this.initMultipleSelection();
        this.titleService.setTitle('View Frozen Database');
    };
    FreezeGridComponent.prototype.initMenuAction = function () {
        if (this.freezeGridContextualMenuActions.length > 0 && !this.columnDefs.find(function (def) { return def.colId === 'menuAction'; })) {
            this.columnDefs.push({
                headerName: '',
                colId: 'menuAction',
                cellRendererFramework: _shared_components_ag_contextual_menu_ag_contextual_menu_component__WEBPACK_IMPORTED_MODULE_9__["AgContextualMenuComponent"],
                cellRendererParams: {
                    context: {
                        componentParent: this,
                    },
                    menuActions: this.freezeGridContextualMenuActions,
                },
                cellClass: 'ag-contextual-menu',
                width: 92,
            });
            if (this.gridOptions && this.gridOptions.api) {
                this.gridOptions.api.setColumnDefs(this.columnDefs);
            }
        }
    };
    FreezeGridComponent.prototype.initMultipleSelection = function () {
        var checkboxColumn = this.columnDefs.find(function (col) { return col.colId === 'checkbox'; });
        if (checkboxColumn) {
            checkboxColumn.hide = !this.multipleSelection;
        }
    };
    FreezeGridComponent.prototype.populateGrid = function (rowData) {
        if (this.gridOptions && this.gridOptions.api) {
            this.gridOptions.api.setRowData(rowData);
        }
    };
    FreezeGridComponent.prototype.onGridReady = function (params) {
        this.initMenuAction();
        params.columnDefs = this.columnDefs;
        this.gridOptions = params;
        this.gridOptions.api.setRowData(this.rowData);
        this.columnApi = params.columnApi;
    };
    FreezeGridComponent.prototype.onFirstDataRendered = function (params) {
        params.api.sizeColumnsToFit();
    };
    FreezeGridComponent.prototype.autoSizeGridHeader = function () {
        if (this.gridOptions && this.gridOptions.api) {
            this.gridOptions.api.sizeColumnsToFit();
        }
    };
    FreezeGridComponent.prototype.onGridSizeChanged = function (params) {
        this.autoSizeGridHeader();
    };
    FreezeGridComponent.prototype.ngOnDestroy = function () {
        this.destroy$.next();
        this.destroy$.complete();
    };
    FreezeGridComponent.prototype.handleAction = function (action, freeze) {
        this.menuActionClicked.emit([{ action: action, freeze: freeze }]);
    };
    FreezeGridComponent.prototype.OnExportButton = function () {
        var dateFormat = this.formatDate;
        if (!this.checkExportedFormat) {
            this.gridOptions.api.forEachNode(function (node) {
                if (node.data.endDateTime) {
                    node.data.endDateTime = dateFormat.transformtime(node.data.endDateTime);
                }
            });
            this.checkExportedFormat = true;
        }
    };
    FreezeGridComponent.prototype.onExportButtonClickedAsExcel = function () {
        var screenName = 'Freezes';
        var now = new Date();
        var todayDate = this.datePipe.transform(now, 'yyyyMMdd_hhmm').toString().toUpperCase();
        var params = {
            fileName: todayDate + '_' + this.company + '_' + screenName + '_' + this.userActiveDirectoryName + '.xlsx',
        };
        this.gridOptions.api.exportDataAsExcel(params);
    };
    FreezeGridComponent.prototype.onExportButtonClickedAsCSV = function () {
        var screenName = 'Freezes';
        var now = new Date();
        var todayDate = this.datePipe.transform(now, 'yyyyMMdd_hhmm').toString().toUpperCase();
        var params = {
            fileName: todayDate + '_' + this.company + '_' + screenName + '_' + this.userActiveDirectoryName + '.csv',
        };
        this.gridOptions.api.exportDataAsCsv(params);
    };
    FreezeGridComponent.prototype.onBulkMenuActionClicked = function (action) {
        var selectedRows = this.gridOptions.api.getSelectedRows();
        if (selectedRows.length === 0) {
            this.snackBarService.informationSnackBar('Please select at least one freeze');
        }
        else {
            this.menuActionClicked.emit(selectedRows.map(function (freeze) {
                return { action: action.action, freeze: freeze };
            }));
        }
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        __metadata("design:type", Object)
    ], FreezeGridComponent.prototype, "freezeMenuActions", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        __metadata("design:type", Array)
    ], FreezeGridComponent.prototype, "freezeGridContextualMenuActions", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(),
        __metadata("design:type", Object)
    ], FreezeGridComponent.prototype, "menuActionClicked", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        __metadata("design:type", Object)
    ], FreezeGridComponent.prototype, "multipleSelection", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        __metadata("design:type", Object)
    ], FreezeGridComponent.prototype, "isLoading", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        __metadata("design:type", Array)
    ], FreezeGridComponent.prototype, "rowData", void 0);
    FreezeGridComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'atlas-freeze-grid',
            template: __webpack_require__(/*! ./freeze-grid.component.html */ "./Client/app/financial/components/cut-off/freeze/cards/grid/freeze-grid.component.html"),
            styles: [__webpack_require__(/*! ./freeze-grid.component.scss */ "./Client/app/financial/components/cut-off/freeze/cards/grid/freeze-grid.component.scss")],
            providers: [_angular_common__WEBPACK_IMPORTED_MODULE_0__["DatePipe"]],
        }),
        __metadata("design:paramtypes", [_shared_services_ui_service__WEBPACK_IMPORTED_MODULE_8__["UiService"],
            _angular_router__WEBPACK_IMPORTED_MODULE_2__["ActivatedRoute"],
            _shared_pipes_format_date_pipe_pipe__WEBPACK_IMPORTED_MODULE_6__["FormatDatePipe"],
            _angular_common__WEBPACK_IMPORTED_MODULE_0__["DatePipe"],
            _core_services_authorization_service__WEBPACK_IMPORTED_MODULE_4__["AuthorizationService"],
            _shared_services_snackbar_service__WEBPACK_IMPORTED_MODULE_10__["SnackbarService"],
            _shared_services_ag_grid_service__WEBPACK_IMPORTED_MODULE_7__["AgGridService"],
            _shared_services_title_service__WEBPACK_IMPORTED_MODULE_11__["TitleService"]])
    ], FreezeGridComponent);
    return FreezeGridComponent;
}());



/***/ }),

/***/ "./Client/app/financial/components/cut-off/freeze/cards/header-filter/freeze-header-filter.component.html":
/*!****************************************************************************************************************!*\
  !*** ./Client/app/financial/components/cut-off/freeze/cards/header-filter/freeze-header-filter.component.html ***!
  \****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<mat-card>\r\n    <mat-card-header>\r\n        <div fxLayout=\"row\"\r\n             fxLayoutAlign=\"start center\"\r\n             fxLayoutGap=\"5%\"\r\n             fxFlex>\r\n            <h2 class=\"no-margin\">Display freezes</h2>\r\n            <mat-button-toggle-group class=\"toggle-group\"\r\n                                     [formControl]=\"freezeTypeCtrl\"\r\n                                     aria-label=\"Date\"\r\n                                     (change)=\"onDataVersionTypeChanged($event.value)\">\r\n                <mat-button-toggle [value]=\"FreezeType.Daily\">Day Freeze</mat-button-toggle>\r\n                <mat-button-toggle [value]=\"FreezeType.Monthly\">Month Freeze</mat-button-toggle>\r\n            </mat-button-toggle-group>\r\n        </div>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n        <form [formGroup]=\"formGroup\">\r\n            <div class=\"min-height\"\r\n                 fxLayout=\"row\"\r\n                 fxLayoutAlign=\"space-between center\"\r\n                 fxLayoutGap=\"5%\">\r\n                <div fxLayout=\"row\"\r\n                     fxLayoutAlign=\"start center\"\r\n                     fxLayoutGap=\"5%\">\r\n                    <atlas-date-picker *ngIf=\"freezeTypeCtrl.value === FreezeType.Daily\"\r\n                                       isEditable=true\r\n                                       [errorMap]=\"dailyErrorMap\"\r\n                                       label=\"From\"\r\n                                       [fieldControl]=\"dateFromCtrl\">\r\n                    </atlas-date-picker>\r\n                    <atlas-month-date-picker *ngIf=\"freezeTypeCtrl.value === FreezeType.Monthly\"\r\n                                             isEditable=true\r\n                                             label=\"From\"\r\n                                             [errorMap]=\"monthlyErrorMap\"\r\n                                             [fieldControl]=\"dateFromCtrl\">\r\n                    </atlas-month-date-picker>\r\n\r\n                    <atlas-date-picker *ngIf=\"freezeTypeCtrl.value === FreezeType.Daily\"\r\n                                       isEditable=true\r\n                                       [errorMap]=\"dailyErrorMap\"\r\n                                       label=\"To\"\r\n                                       [fieldControl]=\"dateToCtrl\">\r\n                    </atlas-date-picker>\r\n                    <atlas-month-date-picker *ngIf=\"freezeTypeCtrl.value === FreezeType.Monthly\"\r\n                                             isEditable=true\r\n                                             label=\"To\"\r\n                                             [errorMap]=\"monthlyErrorMap\"\r\n                                             [fieldControl]=\"dateToCtrl\">\r\n                    </atlas-month-date-picker>\r\n                    <mat-slide-toggle *ngIf=\"toogleText\"\r\n                                      [formControl]=\"toggleFormControl\"\r\n                                      mat-raised-button>{{ toogleText }}\r\n                    </mat-slide-toggle>\r\n                </div>\r\n\r\n                <button type=\"submit\"\r\n                        (click)=\"onDisplayButtonClicked()\"\r\n                        mat-raised-button>\r\n                    Display\r\n                </button>\r\n            </div>\r\n        </form>\r\n    </mat-card-content>\r\n</mat-card>"

/***/ }),

/***/ "./Client/app/financial/components/cut-off/freeze/cards/header-filter/freeze-header-filter.component.scss":
/*!****************************************************************************************************************!*\
  !*** ./Client/app/financial/components/cut-off/freeze/cards/header-filter/freeze-header-filter.component.scss ***!
  \****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "mat-card-content {\n  margin-top: 10px; }\n\nmat-button-toggle {\n  font-size: 14px; }\n\nmat-card-header {\n  margin-bottom: 2%; }\n"

/***/ }),

/***/ "./Client/app/financial/components/cut-off/freeze/cards/header-filter/freeze-header-filter.component.ts":
/*!**************************************************************************************************************!*\
  !*** ./Client/app/financial/components/cut-off/freeze/cards/header-filter/freeze-header-filter.component.ts ***!
  \**************************************************************************************************************/
/*! exports provided: FreezeHeaderFilterComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FreezeHeaderFilterComponent", function() { return FreezeHeaderFilterComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _core_services_company_manager_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../../core/services/company-manager.service */ "./Client/app/core/services/company-manager.service.ts");
/* harmony import */ var _shared_enums_freeze_type_enum__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./../../../../../../shared/enums/freeze-type.enum */ "./Client/app/shared/enums/freeze-type.enum.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





var FreezeHeaderFilterComponent = /** @class */ (function () {
    function FreezeHeaderFilterComponent(formBuilder, route, companyManager) {
        this.formBuilder = formBuilder;
        this.route = route;
        this.companyManager = companyManager;
        this.displayButtonClicked = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.dateFromCtrl = new _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormControl"]();
        this.dateToCtrl = new _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormControl"]();
        this.freezeTypeCtrl = new _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormControl"]();
        this.toggleFormControl = new _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormControl"](true);
        this.FreezeType = _shared_enums_freeze_type_enum__WEBPACK_IMPORTED_MODULE_4__["FreezeType"];
        this.dailyErrorMap = new Map();
        this.monthlyErrorMap = new Map();
        this.defaultDataVersionType = _shared_enums_freeze_type_enum__WEBPACK_IMPORTED_MODULE_4__["FreezeType"].Daily;
        this.company = this.route.snapshot.paramMap.get('company');
        this.now = this.companyManager.getCurrentCompanyDate();
        this.dailyDefault = this.now.clone().subtract(1, 'days').endOf('day').subtract(1, 'seconds');
        this.dailyFromDefault = this.now.clone().subtract(1, 'days').startOf('month');
        this.monthlyDefault = this.getLastClosedPeriod();
        this.monthlyFromDefault = this.getLastClosedPeriod(2);
    }
    FreezeHeaderFilterComponent.prototype.ngOnInit = function () {
        this.getFormGroup();
    };
    FreezeHeaderFilterComponent.prototype.getFormGroup = function () {
        this.formGroup = this.formBuilder.group({
            dateFromCtrl: this.dateFromCtrl,
            dateToCtrl: this.dateToCtrl,
            freezeTypeCtrl: this.freezeTypeCtrl,
        });
        this.setValidators();
        this.setDefaultValues();
        return this.formGroup;
    };
    FreezeHeaderFilterComponent.prototype.setDefaultValues = function () {
        this.freezeTypeCtrl.setValue(this.defaultDataVersionType);
        this.onDataVersionTypeChanged(this.defaultDataVersionType);
    };
    FreezeHeaderFilterComponent.prototype.setValidators = function () {
        if (this.freezeTypeCtrl.value === _shared_enums_freeze_type_enum__WEBPACK_IMPORTED_MODULE_4__["FreezeType"].Daily) {
            this.dateFromCtrl.setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required);
            this.dateToCtrl.setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required);
        }
        else {
            this.dateFromCtrl.setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required);
            this.dateToCtrl.setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required);
        }
    };
    FreezeHeaderFilterComponent.prototype.onDisplayButtonClicked = function () {
        this.displayButtonClicked.emit();
    };
    FreezeHeaderFilterComponent.prototype.onDataVersionTypeChanged = function (dataVersionType) {
        this.setValidators();
        switch (dataVersionType) {
            case _shared_enums_freeze_type_enum__WEBPACK_IMPORTED_MODULE_4__["FreezeType"].Daily:
                this.dateFromCtrl.patchValue(this.dailyFromDefault);
                this.dateToCtrl.patchValue(this.dailyDefault);
                break;
            case _shared_enums_freeze_type_enum__WEBPACK_IMPORTED_MODULE_4__["FreezeType"].Monthly:
                this.dateFromCtrl.patchValue(this.monthlyFromDefault);
                this.dateToCtrl.patchValue(this.monthlyDefault);
                break;
            default:
                break;
        }
        this.displayButtonClicked.emit();
    };
    // Last closed period for operations. This is the last month which has been closed for any operations to be done by the user.
    // It's the previous month currently. In the future it might come from the DB.
    FreezeHeaderFilterComponent.prototype.getLastClosedPeriod = function (numberMonths) {
        if (numberMonths === void 0) { numberMonths = 1; }
        var dateNow = this.now.clone();
        return dateNow.subtract(numberMonths, 'months').endOf('month').subtract(1, 'seconds');
    };
    FreezeHeaderFilterComponent.prototype.getDateFrom = function () {
        return this.dateFromCtrl.valid ? this.dateFromCtrl.value : null;
    };
    FreezeHeaderFilterComponent.prototype.getDateTo = function () {
        var date = this.dateToCtrl.valid ? this.dateToCtrl.value : null;
        if (this.freezeTypeCtrl.value === _shared_enums_freeze_type_enum__WEBPACK_IMPORTED_MODULE_4__["FreezeType"].Monthly && date) {
            return date.endOf('month').subtract(1, 'seconds');
        }
        return date;
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], FreezeHeaderFilterComponent.prototype, "displayButtonClicked", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", String)
    ], FreezeHeaderFilterComponent.prototype, "toogleText", void 0);
    FreezeHeaderFilterComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'atlas-freeze-header-filter',
            template: __webpack_require__(/*! ./freeze-header-filter.component.html */ "./Client/app/financial/components/cut-off/freeze/cards/header-filter/freeze-header-filter.component.html"),
            styles: [__webpack_require__(/*! ./freeze-header-filter.component.scss */ "./Client/app/financial/components/cut-off/freeze/cards/header-filter/freeze-header-filter.component.scss")],
        }),
        __metadata("design:paramtypes", [_angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormBuilder"],
            _angular_router__WEBPACK_IMPORTED_MODULE_2__["ActivatedRoute"],
            _core_services_company_manager_service__WEBPACK_IMPORTED_MODULE_3__["CompanyManagerService"]])
    ], FreezeHeaderFilterComponent);
    return FreezeHeaderFilterComponent;
}());



/***/ }),

/***/ "./Client/app/financial/components/cut-off/freeze/cards/header/freeze-header.component.html":
/*!**************************************************************************************************!*\
  !*** ./Client/app/financial/components/cut-off/freeze/cards/header/freeze-header.component.html ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<mat-card [ngClass]=\"{'hidden-during-loading':isSaving}\">\r\n    <mat-card-header>\r\n        <div fxLayout=\"row\"\r\n             fxLayoutAlign=\"start center\"\r\n             fxLayoutGap=\"5%\"\r\n             fxFlex>\r\n            <h2 class=\"no-margin\">Create a freeze</h2>\r\n            <mat-button-toggle-group class=\"toggle-group\"\r\n                                     [formControl]=\"freezeTypeCtrl\"\r\n                                     aria-label=\"Date\"\r\n                                     (change)=\"onDataVersionTypeChanged($event.value)\">\r\n                <mat-button-toggle [value]=\"FreezeType.Daily\">Day Freeze</mat-button-toggle>\r\n                <mat-button-toggle [value]=\"FreezeType.Monthly\">Month Freeze</mat-button-toggle>\r\n            </mat-button-toggle-group>\r\n        </div>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n        <form [formGroup]=\"formGroup\">\r\n            <div class=\"min-height\"\r\n                 fxLayout=\"row\"\r\n                 fxLayoutAlign=\"space-between\"\r\n                 fxLayoutGap=\"5%\">\r\n                <div class=\"custom-form\"\r\n                     [class.isEmpty]=\"!dateCtrl.value\"\r\n                     *ngIf=\"freezeTypeCtrl.value === FreezeType.Daily\"\r\n                     [class.required-field]=\"true\">\r\n                    <atlas-date-picker isEditable=true\r\n                                       [errorMap]=\"dailyErrorMap\"\r\n                                       label=\"Date\"\r\n                                       required\r\n                                       [fieldControl]=\"dateCtrl\">\r\n                    </atlas-date-picker>\r\n                </div>\r\n                <div class=\"custom-form\"\r\n                     [class.isEmpty]=\"!dateCtrl.value\"\r\n                     *ngIf=\"freezeTypeCtrl.value === FreezeType.Monthly\"\r\n                     [class.required-field]=\"true\">\r\n                    <atlas-month-date-picker isEditable=true\r\n                                             required\r\n                                             label=\"Date\"\r\n                                             [errorMap]=\"monthlyErrorMap\"\r\n                                             [fieldControl]=\"dateCtrl\">\r\n                    </atlas-month-date-picker>\r\n                </div>\r\n                <button type=\"submit\"\r\n                        *ifAuthorized=\"'Financials.CutOff.CreateFreeze',company:this.company,level: PermissionLevels.ReadWrite\"\r\n                        (click)=\"onSaveButtonClicked()\"\r\n                        mat-raised-button\r\n                        [disabled]=\"isSaving || isFrozen\">\r\n                    Create\r\n                </button>\r\n            </div>\r\n        </form>\r\n    </mat-card-content>\r\n</mat-card>\r\n<mat-card *ngIf=\"isSaving\">\r\n    <mat-card-header>\r\n        <mat-card-title>\r\n            <h2>Freeze creation in progress</h2>\r\n        </mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n        <div fxLayout=\"row\"\r\n             fxLayoutAlign=\"center center\"\r\n             fxLayoutWrap\r\n             fxLayoutGap=\"20px\">\r\n            <mat-spinner color=\"accent\"></mat-spinner>\r\n        </div>\r\n    </mat-card-content>\r\n</mat-card>"

/***/ }),

/***/ "./Client/app/financial/components/cut-off/freeze/cards/header/freeze-header.component.scss":
/*!**************************************************************************************************!*\
  !*** ./Client/app/financial/components/cut-off/freeze/cards/header/freeze-header.component.scss ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "mat-button-toggle {\n  font-size: 14px; }\n\nmat-card-header {\n  margin-bottom: 2%; }\n"

/***/ }),

/***/ "./Client/app/financial/components/cut-off/freeze/cards/header/freeze-header.component.ts":
/*!************************************************************************************************!*\
  !*** ./Client/app/financial/components/cut-off/freeze/cards/header/freeze-header.component.ts ***!
  \************************************************************************************************/
/*! exports provided: FreezeHeaderComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FreezeHeaderComponent", function() { return FreezeHeaderComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _core_services_company_manager_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../../../core/services/company-manager.service */ "./Client/app/core/services/company-manager.service.ts");
/* harmony import */ var _shared_enums_freeze_type_enum__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../../../shared/enums/freeze-type.enum */ "./Client/app/shared/enums/freeze-type.enum.ts");
/* harmony import */ var _shared_enums_permission_level_enum__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../../../shared/enums/permission-level.enum */ "./Client/app/shared/enums/permission-level.enum.ts");
/* harmony import */ var _shared_services_http_services_freeze_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../../../shared/services/http-services/freeze.service */ "./Client/app/shared/services/http-services/freeze.service.ts");
/* harmony import */ var _shared_validators_date_validators_validator__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../../../../shared/validators/date-validators.validator */ "./Client/app/shared/validators/date-validators.validator.ts");
/* harmony import */ var _shared_components_confirmation_dialog_confirmation_dialog_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./../../../../../../shared/components/confirmation-dialog/confirmation-dialog.component */ "./Client/app/shared/components/confirmation-dialog/confirmation-dialog.component.ts");
/* harmony import */ var _shared_services_snackbar_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./../../../../../../shared/services/snackbar.service */ "./Client/app/shared/services/snackbar.service.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};













var FreezeHeaderComponent = /** @class */ (function () {
    function FreezeHeaderComponent(formBuilder, route, freezeService, dialog, companyManager, snackbarService) {
        this.formBuilder = formBuilder;
        this.route = route;
        this.freezeService = freezeService;
        this.dialog = dialog;
        this.companyManager = companyManager;
        this.snackbarService = snackbarService;
        this.freezeCreated = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.dateCtrl = new _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormControl"]();
        this.freezeTypeCtrl = new _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormControl"]();
        this.FreezeType = _shared_enums_freeze_type_enum__WEBPACK_IMPORTED_MODULE_7__["FreezeType"];
        this.dailyErrorMap = new Map();
        this.monthlyErrorMap = new Map();
        this.isSaving = false;
        this.defaultDataVersionType = _shared_enums_freeze_type_enum__WEBPACK_IMPORTED_MODULE_7__["FreezeType"].Daily;
        this.PermissionLevels = _shared_enums_permission_level_enum__WEBPACK_IMPORTED_MODULE_8__["PermissionLevels"];
        this.errorMessageReversed = 'A freeze database already exists. Do you wish to proceed and supersede? Please check if the accounting documents associated to the TA have been properly interfaced in order to avoid loss of any information. (Interface status has to be ‘cancelled’ or ‘completed’).';
        this.company = this.route.snapshot.paramMap.get('company');
        this.dailyErrorMap
            .set('isDateValid', 'Cannot freeze for date greather or equal than today.');
        this.monthlyErrorMap
            .set('isDateValid', 'Cannot freeze for unclosed periods.');
        this.now = this.companyManager.getCurrentCompanyDate();
        this.dailyDefault = this.now.clone().subtract(1, 'days').endOf('day').subtract(1, 'seconds');
        this.monthlyDefault = this.getLastClosedPeriod();
    }
    FreezeHeaderComponent.prototype.ngOnInit = function () {
        this.getFormGroup();
        var isFrozen = this.companyManager.getCompany(this.company).isFrozen;
    };
    FreezeHeaderComponent.prototype.getFormGroup = function () {
        this.formGroup = this.formBuilder.group({
            dateCtrl: this.dateCtrl,
            freezeTypeCtrl: this.freezeTypeCtrl,
        });
        this.setValidators();
        this.setDefaultValues();
        return this.formGroup;
    };
    FreezeHeaderComponent.prototype.setDefaultValues = function () {
        this.dateCtrl.setValue(this.dailyDefault);
        this.freezeTypeCtrl.setValue(this.defaultDataVersionType);
        this.onDataVersionTypeChanged(this.defaultDataVersionType);
    };
    FreezeHeaderComponent.prototype.setValidators = function () {
        if (this.freezeTypeCtrl.value === _shared_enums_freeze_type_enum__WEBPACK_IMPORTED_MODULE_7__["FreezeType"].Daily) {
            this.dateCtrl.setValidators([Object(_shared_validators_date_validators_validator__WEBPACK_IMPORTED_MODULE_10__["isBeforeDate"])(this.companyManager.getCurrentCompanyDate().clone().subtract(1, 'days').endOf('day'), true),
                _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required]);
        }
        else {
            this.dateCtrl.setValidators([
                Object(_shared_validators_date_validators_validator__WEBPACK_IMPORTED_MODULE_10__["isBeforeDate"])(this.companyManager.getCurrentCompanyDate(), true, true),
                _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required
            ]);
        }
    };
    FreezeHeaderComponent.prototype.onSaveButtonClicked = function () {
        var _this = this;
        if (!this.dateCtrl.valid && this.dateCtrl.hasError('isDateValid')) {
            this.snackbarService.throwErrorSnackBar('Cannot freeze for date greater than current date');
            return;
        }
        this.dateCtrl.disable();
        this.isSaving = true;
        this.freezeService.checkFreezeExists(this.freezeTypeCtrl.value, this.getSelectedFreezeDate()).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_5__["finalize"])(function () {
            _this.dateCtrl.enable();
        })).subscribe(function (freeze) {
            if (freeze) {
                var confirmDialog = _this.dialog.open(_shared_components_confirmation_dialog_confirmation_dialog_component__WEBPACK_IMPORTED_MODULE_11__["ConfirmationDialogComponent"], {
                    data: {
                        title: 'Freeze Creation',
                        text: 'Snapshot already exists for this date/month. Do you wish to proceed and overwrite ?',
                        okButton: 'Yes',
                        cancelButton: 'No',
                    },
                });
                confirmDialog.afterClosed().subscribe(function (answer) {
                    if (answer) {
                        _this.createFreeze();
                    }
                    else {
                        _this.isSaving = false;
                    }
                });
            }
            else {
                _this.createFreeze();
            }
        });
    };
    FreezeHeaderComponent.prototype.getSelectedFreezeDate = function () {
        var freezeDate = this.dateCtrl.value;
        if (this.freezeTypeCtrl.value === _shared_enums_freeze_type_enum__WEBPACK_IMPORTED_MODULE_7__["FreezeType"].Monthly) {
            freezeDate.endOf('month').subtract(1, 'seconds');
        }
        var dateWithoutTimeZone = freezeDate.toDate();
        dateWithoutTimeZone.setUTCHours(0, 0, 0, 0);
        return dateWithoutTimeZone;
    };
    FreezeHeaderComponent.prototype.delayedRetry = function (delayMs, maxRetry) {
        if (maxRetry === void 0) { maxRetry = 1; }
        var retries = maxRetry;
        return function (src) {
            return src.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_5__["retryWhen"])(function (errors) { return errors.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_5__["delay"])(delayMs), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_5__["mergeMap"])(function (error) { return retries-- > 0 ? Object(rxjs__WEBPACK_IMPORTED_MODULE_4__["of"])(error) : Object(rxjs__WEBPACK_IMPORTED_MODULE_4__["throwError"])(error); })); }));
        };
    };
    FreezeHeaderComponent.prototype.createFreeze = function () {
        var _this = this;
        var freezeDate = this.getSelectedFreezeDate();
        this.isSaving = true;
        this.freezeService.createFreeze(this.freezeTypeCtrl.value, freezeDate).pipe(this.delayedRetry(1, 0), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_5__["finalize"])(function () {
            _this.isSaving = false;
        })).subscribe(function (monthEnd) {
            if (monthEnd) {
                if (monthEnd[0].isMonthEnd && monthEnd[0].isReversed) {
                    var confirmDialog = _this.dialog.open(_shared_components_confirmation_dialog_confirmation_dialog_component__WEBPACK_IMPORTED_MODULE_11__["ConfirmationDialogComponent"], {
                        data: {
                            title: 'TA Refreeze Creation',
                            text: _this.errorMessageReversed,
                            okButton: 'Proceed',
                            cancelButton: 'Cancel',
                        },
                    });
                    confirmDialog.afterClosed().subscribe(function (answer) {
                        if (answer) {
                            _this.freezeService.createFreeze(_this.freezeTypeCtrl.value, freezeDate).subscribe(function () {
                                _this.snackbarService.informationSnackBar('The Refreeze has been created');
                            });
                        }
                        else {
                            _this.isSaving = false;
                        }
                    });
                }
            }
            else {
                _this.snackbarService.informationSnackBar('The freeze has been created');
                _this.freezeCreated.emit();
            }
        }, function (err) {
            if (err.status === 504) {
                // Timeout
                _this.dialog.open(_shared_components_confirmation_dialog_confirmation_dialog_component__WEBPACK_IMPORTED_MODULE_11__["ConfirmationDialogComponent"], {
                    data: {
                        title: 'Freeze in progress',
                        text: 'The creation of the freeze is taking a long time and is still in progress. '
                            + 'Please refresh in some time to see your freeze in the list.',
                        okButton: 'Got it',
                    },
                });
            }
            else {
                _this.dialog.open(_shared_components_confirmation_dialog_confirmation_dialog_component__WEBPACK_IMPORTED_MODULE_11__["ConfirmationDialogComponent"], {
                    data: {
                        title: 'Error',
                        text: err.error.detail && err.error.detail.length > 0 ?
                            err.error.detail : 'Error during the completion of the freeze creation',
                        okButton: 'Got it',
                    },
                });
            }
            _this.freezeCreated.emit();
        });
    };
    FreezeHeaderComponent.prototype.onDataVersionTypeChanged = function (dataVersionType) {
        this.setValidators();
        switch (dataVersionType) {
            case _shared_enums_freeze_type_enum__WEBPACK_IMPORTED_MODULE_7__["FreezeType"].Daily:
                this.dateCtrl.patchValue(this.dailyDefault);
                break;
            case _shared_enums_freeze_type_enum__WEBPACK_IMPORTED_MODULE_7__["FreezeType"].Monthly:
                this.dateCtrl.patchValue(this.monthlyDefault);
                break;
            default:
                break;
        }
    };
    // Last closed period for operations. This is the last month which has been closed for any operations to be done by the user.
    // It's the previous month currently. In the future it might come from the DB.
    FreezeHeaderComponent.prototype.getLastClosedPeriod = function () {
        var dateNow = this.now.clone();
        return dateNow.subtract(1, 'months').endOf('month').subtract(1, 'seconds');
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], FreezeHeaderComponent.prototype, "freezeCreated", void 0);
    FreezeHeaderComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'atlas-freeze-header',
            template: __webpack_require__(/*! ./freeze-header.component.html */ "./Client/app/financial/components/cut-off/freeze/cards/header/freeze-header.component.html"),
            styles: [__webpack_require__(/*! ./freeze-header.component.scss */ "./Client/app/financial/components/cut-off/freeze/cards/header/freeze-header.component.scss")],
        }),
        __metadata("design:paramtypes", [_angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormBuilder"],
            _angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"],
            _shared_services_http_services_freeze_service__WEBPACK_IMPORTED_MODULE_9__["FreezeService"],
            _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialog"],
            _core_services_company_manager_service__WEBPACK_IMPORTED_MODULE_6__["CompanyManagerService"],
            _shared_services_snackbar_service__WEBPACK_IMPORTED_MODULE_12__["SnackbarService"]])
    ], FreezeHeaderComponent);
    return FreezeHeaderComponent;
}());



/***/ }),

/***/ "./Client/app/financial/components/cut-off/freeze/freeze.component.html":
/*!******************************************************************************!*\
  !*** ./Client/app/financial/components/cut-off/freeze/freeze.component.html ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<atlas-financial-tab-group hasAddButton=true\r\n                           buttonText=\"CUT-OFF ACTIONS\">\r\n</atlas-financial-tab-group>\r\n\r\n<div class=\"main-container\">\r\n    <atlas-freeze-header *ngIf=\"isNew\"\r\n                         (freezeCreated)=\"onCreated()\"></atlas-freeze-header>\r\n    <atlas-freeze-grid #grid\r\n                       [freezeMenuActions]=\"freezeMenuActions\"\r\n                       [freezeGridContextualMenuActions]=\"freezeGridContextualMenuActions\"\r\n                       (menuActionClicked)=\"onMenuActionClicked($event)\"\r\n                       [isLoading]=\"isLoading\"\r\n                       [rowData]=\"rowData\"></atlas-freeze-grid>\r\n</div>\r\n"

/***/ }),

/***/ "./Client/app/financial/components/cut-off/freeze/freeze.component.scss":
/*!******************************************************************************!*\
  !*** ./Client/app/financial/components/cut-off/freeze/freeze.component.scss ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ""

/***/ }),

/***/ "./Client/app/financial/components/cut-off/freeze/freeze.component.ts":
/*!****************************************************************************!*\
  !*** ./Client/app/financial/components/cut-off/freeze/freeze.component.ts ***!
  \****************************************************************************/
/*! exports provided: FreezeComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FreezeComponent", function() { return FreezeComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _core_services_authorization_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../core/services/authorization.service */ "./Client/app/core/services/authorization.service.ts");
/* harmony import */ var _shared_components_confirmation_dialog_confirmation_dialog_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./../../../../shared/components/confirmation-dialog/confirmation-dialog.component */ "./Client/app/shared/components/confirmation-dialog/confirmation-dialog.component.ts");
/* harmony import */ var _shared_enums_freeze_type_enum__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./../../../../shared/enums/freeze-type.enum */ "./Client/app/shared/enums/freeze-type.enum.ts");
/* harmony import */ var _shared_services_http_services_freeze_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./../../../../shared/services/http-services/freeze.service */ "./Client/app/shared/services/http-services/freeze.service.ts");
/* harmony import */ var _shared_services_http_services_preaccounting_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./../../../../shared/services/http-services/preaccounting.service */ "./Client/app/shared/services/http-services/preaccounting.service.ts");
/* harmony import */ var _shared_services_snackbar_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./../../../../shared/services/snackbar.service */ "./Client/app/shared/services/snackbar.service.ts");
/* harmony import */ var _shared_services_title_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./../../../../shared/services/title.service */ "./Client/app/shared/services/title.service.ts");
/* harmony import */ var _shared_services_ui_service__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./../../../../shared/services/ui.service */ "./Client/app/shared/services/ui.service.ts");
/* harmony import */ var _cards_grid_freeze_grid_component__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./cards/grid/freeze-grid.component */ "./Client/app/financial/components/cut-off/freeze/cards/grid/freeze-grid.component.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};















var FreezeComponent = /** @class */ (function () {
    function FreezeComponent(route, authorizationService, preAccountingService, freezeService, dialog, snackbarService, uiService, titleService) {
        this.route = route;
        this.authorizationService = authorizationService;
        this.preAccountingService = preAccountingService;
        this.freezeService = freezeService;
        this.dialog = dialog;
        this.snackbarService = snackbarService;
        this.uiService = uiService;
        this.titleService = titleService;
        this.isLoading = true;
        this.freezeMenuActions = {
            deleteFreeze: 'delete',
        };
        this.freezeGridContextualMenuActions = [];
        this.rowData = [];
        this.destroy$ = new rxjs__WEBPACK_IMPORTED_MODULE_4__["Subject"]();
        this.company = this.route.snapshot.paramMap.get('company');
        this.isNew = this.route.snapshot.data.isNew;
    }
    FreezeComponent.prototype.ngOnInit = function () {
        this.getClosedMonth();
        this.titleService.setTitle(this.route.snapshot.data.title);
    };
    FreezeComponent.prototype.initMenuAction = function () {
        if (this.authorizationService.isPrivilegeAllowed(this.company, 'CreateFreeze')) {
            this.freezeGridContextualMenuActions.push({
                icon: 'delete',
                text: 'Delete',
                action: this.freezeMenuActions.deleteFreeze,
                disabled: this.isDeleteDisabled.bind(this),
            });
            this.freezeGridComponent.freezeGridContextualMenuActions = this.freezeGridContextualMenuActions;
            this.freezeGridComponent.initMenuAction();
        }
    };
    FreezeComponent.prototype.isDeleteDisabled = function (params) {
        var freeze = params.data;
        if (!this.closedMonthDate) {
            return true;
        }
        if (moment__WEBPACK_IMPORTED_MODULE_3__(this.closedMonthDate).year() < moment__WEBPACK_IMPORTED_MODULE_3__(freeze.freezeDate).year()) {
            return false;
        }
        else if (moment__WEBPACK_IMPORTED_MODULE_3__(this.closedMonthDate).month() < moment__WEBPACK_IMPORTED_MODULE_3__(freeze.freezeDate).month()
            && moment__WEBPACK_IMPORTED_MODULE_3__(this.closedMonthDate).year() === moment__WEBPACK_IMPORTED_MODULE_3__(freeze.freezeDate).year()) {
            return false;
        }
        return true;
    };
    FreezeComponent.prototype.getClosedMonth = function () {
        var _this = this;
        this.preAccountingService.getAccountingSetupDetails().pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_5__["takeUntil"])(this.destroy$)).subscribe(function (detail) {
            _this.closedMonthDate = detail.lastMonthClosed;
            if (!_this.isNew) {
                _this.initMenuAction();
            }
            _this.getData();
        });
    };
    FreezeComponent.prototype.getData = function () {
        var _this = this;
        this.isLoading = true;
        this.freezeService.getFreezeList().pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_5__["map"])(function (data) { return data.value; }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_5__["finalize"])(function () {
            _this.isLoading = false;
        }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_5__["takeUntil"])(this.destroy$)).subscribe(function (freezeList) {
            _this.rowData = freezeList;
            _this.freezeGridComponent.populateGrid(freezeList);
        });
    };
    FreezeComponent.prototype.onCreated = function () {
        this.getData();
    };
    FreezeComponent.prototype.onMenuActionClicked = function (events) {
        var _this = this;
        if (events) {
            events.forEach(function (event) {
                var action = event.action;
                var freeze = event.freeze;
                switch (action) {
                    case _this.freezeMenuActions.deleteFreeze:
                        var freezeDate_1 = freeze.dataVersionTypeId === _shared_enums_freeze_type_enum__WEBPACK_IMPORTED_MODULE_8__["FreezeType"].Monthly ?
                            _this.uiService.monthFormatter({ value: freeze.freezeDate }) :
                            _this.uiService.dateFormatter({ value: freeze.freezeDate });
                        var confirmDialog = _this.dialog.open(_shared_components_confirmation_dialog_confirmation_dialog_component__WEBPACK_IMPORTED_MODULE_7__["ConfirmationDialogComponent"], {
                            data: {
                                title: 'Freeze Deletion',
                                text: 'Do you wish to delete the freeze for the date ' + freezeDate_1,
                                okButton: 'Yes',
                                cancelButton: 'No',
                            },
                        });
                        confirmDialog.afterClosed().subscribe(function (answer) {
                            if (answer) {
                                _this.freezeService.deleteFreeze(freeze.dataVersionId).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_5__["takeUntil"])(_this.destroy$)).subscribe(function () {
                                    _this.snackbarService.informationSnackBar('The freeze for the period '
                                        + freezeDate_1 + ' has been deleted.');
                                    _this.getData();
                                });
                            }
                        });
                        break;
                    default:
                        break;
                }
            });
        }
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('grid'),
        __metadata("design:type", _cards_grid_freeze_grid_component__WEBPACK_IMPORTED_MODULE_14__["FreezeGridComponent"])
    ], FreezeComponent.prototype, "freezeGridComponent", void 0);
    FreezeComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'atlas-freeze',
            template: __webpack_require__(/*! ./freeze.component.html */ "./Client/app/financial/components/cut-off/freeze/freeze.component.html"),
            styles: [__webpack_require__(/*! ./freeze.component.scss */ "./Client/app/financial/components/cut-off/freeze/freeze.component.scss")],
        }),
        __metadata("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_2__["ActivatedRoute"],
            _core_services_authorization_service__WEBPACK_IMPORTED_MODULE_6__["AuthorizationService"],
            _shared_services_http_services_preaccounting_service__WEBPACK_IMPORTED_MODULE_10__["PreaccountingService"],
            _shared_services_http_services_freeze_service__WEBPACK_IMPORTED_MODULE_9__["FreezeService"],
            _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatDialog"],
            _shared_services_snackbar_service__WEBPACK_IMPORTED_MODULE_11__["SnackbarService"],
            _shared_services_ui_service__WEBPACK_IMPORTED_MODULE_13__["UiService"],
            _shared_services_title_service__WEBPACK_IMPORTED_MODULE_12__["TitleService"]])
    ], FreezeComponent);
    return FreezeComponent;
}());



/***/ }),

/***/ "./Client/app/financial/components/cut-off/freeze/recalculate/freeze-recalculate.component.html":
/*!******************************************************************************************************!*\
  !*** ./Client/app/financial/components/cut-off/freeze/recalculate/freeze-recalculate.component.html ***!
  \******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<atlas-financial-tab-group hasAddButton=true\r\n                           buttonText=\"CUT-OFF ACTIONS\">\r\n</atlas-financial-tab-group>\r\n\r\n<div class=\"main-container\">\r\n    <atlas-freeze-header-filter (displayButtonClicked)=\"onDisplayButtonClicked()\"\r\n                                toogleText=\"Accounting data extraction\"\r\n                                #freezeHeaderFilterComponent>\r\n    </atlas-freeze-header-filter>\r\n    <atlas-freeze-grid #grid\r\n                       [freezeMenuActions]=\"freezeMenuActions\"\r\n                       [freezeGridContextualMenuActions]=\"freezeGridContextualMenuActions\"\r\n                       (menuActionClicked)=\"onMenuActionClicked($event)\"\r\n                       [rowData]=\"rowData\"\r\n                       [isLoading]=\"isLoading\"\r\n                       multipleSelection=true></atlas-freeze-grid>\r\n</div>\r\n"

/***/ }),

/***/ "./Client/app/financial/components/cut-off/freeze/recalculate/freeze-recalculate.component.scss":
/*!******************************************************************************************************!*\
  !*** ./Client/app/financial/components/cut-off/freeze/recalculate/freeze-recalculate.component.scss ***!
  \******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ""

/***/ }),

/***/ "./Client/app/financial/components/cut-off/freeze/recalculate/freeze-recalculate.component.ts":
/*!****************************************************************************************************!*\
  !*** ./Client/app/financial/components/cut-off/freeze/recalculate/freeze-recalculate.component.ts ***!
  \****************************************************************************************************/
/*! exports provided: FreezeRecalculateComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FreezeRecalculateComponent", function() { return FreezeRecalculateComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _core_services_authorization_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../../core/services/authorization.service */ "./Client/app/core/services/authorization.service.ts");
/* harmony import */ var _shared_components_confirmation_dialog_confirmation_dialog_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./../../../../../shared/components/confirmation-dialog/confirmation-dialog.component */ "./Client/app/shared/components/confirmation-dialog/confirmation-dialog.component.ts");
/* harmony import */ var _shared_enums_freeze_type_enum__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./../../../../../shared/enums/freeze-type.enum */ "./Client/app/shared/enums/freeze-type.enum.ts");
/* harmony import */ var _shared_services_http_services_freeze_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./../../../../../shared/services/http-services/freeze.service */ "./Client/app/shared/services/http-services/freeze.service.ts");
/* harmony import */ var _shared_services_http_services_preaccounting_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./../../../../../shared/services/http-services/preaccounting.service */ "./Client/app/shared/services/http-services/preaccounting.service.ts");
/* harmony import */ var _shared_services_security_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./../../../../../shared/services/security.service */ "./Client/app/shared/services/security.service.ts");
/* harmony import */ var _shared_services_snackbar_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./../../../../../shared/services/snackbar.service */ "./Client/app/shared/services/snackbar.service.ts");
/* harmony import */ var _shared_services_title_service__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./../../../../../shared/services/title.service */ "./Client/app/shared/services/title.service.ts");
/* harmony import */ var _shared_services_ui_service__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./../../../../../shared/services/ui.service */ "./Client/app/shared/services/ui.service.ts");
/* harmony import */ var _cards_grid_freeze_grid_component__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./../cards/grid/freeze-grid.component */ "./Client/app/financial/components/cut-off/freeze/cards/grid/freeze-grid.component.ts");
/* harmony import */ var _cards_header_filter_freeze_header_filter_component__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./../cards/header-filter/freeze-header-filter.component */ "./Client/app/financial/components/cut-off/freeze/cards/header-filter/freeze-header-filter.component.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

















var FreezeRecalculateComponent = /** @class */ (function () {
    function FreezeRecalculateComponent(route, authorizationService, preAccountingService, freezeService, dialog, snackbarService, uiService, securityService, titleService) {
        this.route = route;
        this.authorizationService = authorizationService;
        this.preAccountingService = preAccountingService;
        this.freezeService = freezeService;
        this.dialog = dialog;
        this.snackbarService = snackbarService;
        this.uiService = uiService;
        this.securityService = securityService;
        this.titleService = titleService;
        this.isLoading = true;
        this.freezeMenuActions = {
            recalculate: 'recalculate',
        };
        this.freezeGridContextualMenuActions = [];
        this.rowData = [];
        this.destroy$ = new rxjs__WEBPACK_IMPORTED_MODULE_4__["Subject"]();
        this.company = this.route.snapshot.paramMap.get('company');
    }
    FreezeRecalculateComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.securityService.isSecurityReady().subscribe(function () {
            _this.getClosedMonth();
        });
    };
    FreezeRecalculateComponent.prototype.initMenuAction = function () {
        if (this.authorizationService.isPrivilegeAllowed(this.company, 'RecalculateFrozenDatabase')) {
            this.freezeGridContextualMenuActions.push({
                icon: 'settings_backup_restore',
                text: 'Recalculate',
                action: this.freezeMenuActions.recalculate,
                disabled: this.isRecalculateDisabled.bind(this),
            });
            this.titleService.setTitle('Recalculate Frozen Database');
            this.freezeGridComponent.freezeGridContextualMenuActions = this.freezeGridContextualMenuActions;
            this.freezeGridComponent.initMenuAction();
        }
    };
    FreezeRecalculateComponent.prototype.isRecalculateDisabled = function (params) {
        var freeze = params.data;
        return this.isMonthClosed(freeze, this.closedMonthDate ? moment__WEBPACK_IMPORTED_MODULE_3__(this.closedMonthDate) : null);
    };
    FreezeRecalculateComponent.prototype.isMonthClosed = function (freeze, closedMonthDate) {
        if (!this.closedMonthDate) {
            return true;
        }
        if (closedMonthDate.year() < moment__WEBPACK_IMPORTED_MODULE_3__(freeze.freezeDate).year()) {
            return false;
        }
        else if (closedMonthDate.month() < moment__WEBPACK_IMPORTED_MODULE_3__(freeze.freezeDate).month()
            && closedMonthDate.year() === moment__WEBPACK_IMPORTED_MODULE_3__(freeze.freezeDate).year()) {
            return false;
        }
        return true;
    };
    FreezeRecalculateComponent.prototype.getClosedMonth = function () {
        var _this = this;
        this.preAccountingService.getAccountingSetupDetails().pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_5__["takeUntil"])(this.destroy$)).subscribe(function (detail) {
            _this.closedMonthDate = detail.lastMonthClosed;
            _this.initMenuAction();
        });
    };
    FreezeRecalculateComponent.prototype.getData = function () {
        var _this = this;
        this.isLoading = true;
        var dateFrom = null;
        var dateTo = null;
        var freezeType = null;
        if (this.freezeHeaderFilterComponent) {
            dateFrom = this.freezeHeaderFilterComponent.getDateFrom();
            dateTo = this.freezeHeaderFilterComponent.getDateTo();
            freezeType = this.freezeHeaderFilterComponent.freezeTypeCtrl.value;
        }
        this.freezeService.getFreezeList(dateFrom, dateTo, freezeType).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_5__["map"])(function (data) { return data.value; }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_5__["finalize"])(function () {
            _this.isLoading = false;
        }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_5__["takeUntil"])(this.destroy$)).subscribe(function (freezeList) {
            _this.rowData = freezeList;
            _this.freezeGridComponent.populateGrid(freezeList);
        });
    };
    FreezeRecalculateComponent.prototype.onDisplayButtonClicked = function () {
        this.getData();
    };
    FreezeRecalculateComponent.prototype.onMenuActionClicked = function (events) {
        var _this = this;
        if (events) {
            events.forEach(function (event) {
                var action = event.action;
                var freeze = event.freeze;
                var freezeDate = freeze.dataVersionTypeId === _shared_enums_freeze_type_enum__WEBPACK_IMPORTED_MODULE_8__["FreezeType"].Monthly ?
                    _this.uiService.monthFormatter({ value: freeze.freezeDate }) :
                    _this.uiService.dateFormatter({ value: freeze.freezeDate });
                switch (action) {
                    case _this.freezeMenuActions.recalculate:
                        if (_this.isMonthClosed(freeze, _this.closedMonthDate ? moment__WEBPACK_IMPORTED_MODULE_3__(_this.closedMonthDate) : null)) {
                            _this.snackbarService.throwErrorSnackBar('You cannot recalculate the freeze for the date '
                                + freezeDate + ' because the month is closed');
                        }
                        else {
                            var confirmDialog = _this.dialog.open(_shared_components_confirmation_dialog_confirmation_dialog_component__WEBPACK_IMPORTED_MODULE_7__["ConfirmationDialogComponent"], {
                                data: {
                                    title: 'Recalculate Frozen Database',
                                    text: 'Are you sure you want to recalculate the frozen database for the date ' + freezeDate + ' ?',
                                    okButton: 'Recalculate',
                                    cancelButton: 'Cancel',
                                },
                            });
                            confirmDialog.afterClosed().subscribe(function (answer) {
                                if (answer) {
                                    var recalculateAccEntries = true;
                                    if (_this.freezeHeaderFilterComponent) {
                                        recalculateAccEntries = _this.freezeHeaderFilterComponent.toggleFormControl.value;
                                    }
                                    _this.freezeService.recalculateFreeze(freeze.dataVersionId, recalculateAccEntries).subscribe(function () {
                                        _this.snackbarService.informationSnackBar('The freeze for the date ' + freezeDate
                                            + ' has been recalculated');
                                        _this.getData();
                                    });
                                }
                            });
                        }
                        break;
                    default:
                        break;
                }
            });
        }
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('grid'),
        __metadata("design:type", _cards_grid_freeze_grid_component__WEBPACK_IMPORTED_MODULE_15__["FreezeGridComponent"])
    ], FreezeRecalculateComponent.prototype, "freezeGridComponent", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('freezeHeaderFilterComponent'),
        __metadata("design:type", _cards_header_filter_freeze_header_filter_component__WEBPACK_IMPORTED_MODULE_16__["FreezeHeaderFilterComponent"])
    ], FreezeRecalculateComponent.prototype, "freezeHeaderFilterComponent", void 0);
    FreezeRecalculateComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'atlas-freeze-recalculate',
            template: __webpack_require__(/*! ./freeze-recalculate.component.html */ "./Client/app/financial/components/cut-off/freeze/recalculate/freeze-recalculate.component.html"),
            styles: [__webpack_require__(/*! ./freeze-recalculate.component.scss */ "./Client/app/financial/components/cut-off/freeze/recalculate/freeze-recalculate.component.scss")],
        }),
        __metadata("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_2__["ActivatedRoute"],
            _core_services_authorization_service__WEBPACK_IMPORTED_MODULE_6__["AuthorizationService"],
            _shared_services_http_services_preaccounting_service__WEBPACK_IMPORTED_MODULE_10__["PreaccountingService"],
            _shared_services_http_services_freeze_service__WEBPACK_IMPORTED_MODULE_9__["FreezeService"],
            _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatDialog"],
            _shared_services_snackbar_service__WEBPACK_IMPORTED_MODULE_12__["SnackbarService"],
            _shared_services_ui_service__WEBPACK_IMPORTED_MODULE_14__["UiService"],
            _shared_services_security_service__WEBPACK_IMPORTED_MODULE_11__["SecurityService"],
            _shared_services_title_service__WEBPACK_IMPORTED_MODULE_13__["TitleService"]])
    ], FreezeRecalculateComponent);
    return FreezeRecalculateComponent;
}());



/***/ }),

/***/ "./Client/app/financial/components/cut-off/generate-end-of-month/cards/end-of-month-selection/end-of-month-selection.component.html":
/*!******************************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/cut-off/generate-end-of-month/cards/end-of-month-selection/end-of-month-selection.component.html ***!
  \******************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<mat-card>\r\n    <mat-card-header>\r\n        <mat-card-title>\r\n            <h2>End of month selection</h2>\r\n        </mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n        <div fxLayout=\"row\"\r\n             fxLayoutAlign=\"left start\"\r\n             fxLayoutGap=\"5%\">\r\n            <atlas-dropdown-select fxFlex='30%'\r\n                                   [label]=\"'Database Snapshot'\"\r\n                                   [fieldControl]=\"snapshotsCtrl\"\r\n                                   isEditable=true\r\n                                   [options]=\"snapshotList\"\r\n                                   [errorMap]=\"snapshotErrorMap\"\r\n                                   displayProperty=\"freezeDate\"\r\n                                   [selectProperties]=\"['freezeDate']\"\r\n                                   (optionSelected)=\"onSnapshotSelected($event)\"></atlas-dropdown-select>\r\n\r\n            <atlas-dropdown-select fxFlex='30%'\r\n                                   [label]=\"'Type'\"\r\n                                   [fieldControl]=\"reportTypeCtrl\"\r\n                                   isEditable=true\r\n                                   [options]=\"reportTypeList\"\r\n                                   [errorMap]=\"reportTypeErrorMap\"\r\n                                   displayProperty=\"enumEntityValue\"\r\n                                   [selectProperties]=\"['enumEntityValue']\"\r\n                                   (optionSelected)=\"onReportTypeSelected($event)\"></atlas-dropdown-select>\r\n        </div>\r\n    </mat-card-content>\r\n</mat-card>"

/***/ }),

/***/ "./Client/app/financial/components/cut-off/generate-end-of-month/cards/end-of-month-selection/end-of-month-selection.component.scss":
/*!******************************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/cut-off/generate-end-of-month/cards/end-of-month-selection/end-of-month-selection.component.scss ***!
  \******************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ""

/***/ }),

/***/ "./Client/app/financial/components/cut-off/generate-end-of-month/cards/end-of-month-selection/end-of-month-selection.component.ts":
/*!****************************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/cut-off/generate-end-of-month/cards/end-of-month-selection/end-of-month-selection.component.ts ***!
  \****************************************************************************************************************************************/
/*! exports provided: EndOfMonthSelectionComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EndOfMonthSelectionComponent", function() { return EndOfMonthSelectionComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _shared_components_base_form_component_base_form_component_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../../shared/components/base-form-component/base-form-component.component */ "./Client/app/shared/components/base-form-component/base-form-component.component.ts");
/* harmony import */ var _shared_entities_atlas_form_control__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../../../shared/entities/atlas-form-control */ "./Client/app/shared/entities/atlas-form-control.ts");
/* harmony import */ var _shared_models_freeze_display_view__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../../../shared/models/freeze-display-view */ "./Client/app/shared/models/freeze-display-view.ts");
/* harmony import */ var _shared_services_form_configuration_provider_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../../../shared/services/form-configuration-provider.service */ "./Client/app/shared/services/form-configuration-provider.service.ts");
/* harmony import */ var _shared_services_http_services_freeze_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../../../shared/services/http-services/freeze.service */ "./Client/app/shared/services/http-services/freeze.service.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};










var EndOfMonthSelectionComponent = /** @class */ (function (_super) {
    __extends(EndOfMonthSelectionComponent, _super);
    function EndOfMonthSelectionComponent(formConfigurationProvider, freezeService, formBuilder, route) {
        var _this = _super.call(this, formConfigurationProvider) || this;
        _this.formConfigurationProvider = formConfigurationProvider;
        _this.freezeService = freezeService;
        _this.formBuilder = formBuilder;
        _this.route = route;
        _this.snapshotTypeSelected = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        _this.snapshotDate = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        _this.snapshotMonth = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        _this.reportTypeSelected = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        _this.reportTypeDescriptionSelected = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        _this.snapshotsCtrl = new _shared_entities_atlas_form_control__WEBPACK_IMPORTED_MODULE_6__["AtlasFormControl"]('snapshots');
        _this.reportTypeCtrl = new _shared_entities_atlas_form_control__WEBPACK_IMPORTED_MODULE_6__["AtlasFormControl"]('reportType');
        _this.selectedDB = 'Current Database';
        _this.selectedType = 'Realised Physicals';
        _this.snapshotList = [];
        _this.currentSnapshot = new _shared_models_freeze_display_view__WEBPACK_IMPORTED_MODULE_7__["FreezeDisplayView"](-1, 'Current Database');
        _this.snapshotErrorMap = new Map();
        _this.destroy$ = new rxjs__WEBPACK_IMPORTED_MODULE_3__["Subject"]();
        _this.reportTypeErrorMap = new Map();
        return _this;
    }
    EndOfMonthSelectionComponent.prototype.ngOnInit = function () {
        this.loadSnapshots();
        this.snapshotTypeSelected.emit({ dataVersionIdSelected: 0 });
        this.reportTypeList = this.route.snapshot.data.masterdata.monthEndReportType;
        this.reportTypeSelected.emit({ reportTypeSelected: this.route.snapshot.data.masterdata.monthEndReportType[0].enumEntityId });
        this.reportTypeDescriptionSelected.emit({ reportTypeDescriptionSelected: this.route.snapshot.data.masterdata.monthEndReportType[0].enumEntityValue });
    };
    EndOfMonthSelectionComponent.prototype.getFormGroup = function () {
        this.formGroup = this.formBuilder.group({
            snapshotsCtrl: this.snapshotsCtrl,
            reportTypeCtrl: this.reportTypeCtrl,
        });
        return _super.prototype.getFormGroup.call(this);
    };
    EndOfMonthSelectionComponent.prototype.initializeForm = function () {
        this.formGroup = this.formBuilder.group({
            snapshotsCtrl: this.snapshotsCtrl,
            reportTypeCtrl: this.reportTypeCtrl,
        });
        this.setDefaultValues();
        return this.formGroup;
    };
    EndOfMonthSelectionComponent.prototype.setDefaultValues = function () {
        this.snapshotsCtrl.patchValue(this.currentSnapshot);
        this.reportTypeCtrl.patchValue(this.route.snapshot.data.masterdata.monthEndReportType[0]);
    };
    EndOfMonthSelectionComponent.prototype.loadSnapshots = function () {
        var _this = this;
        this.freezeService.getFreezeList().pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])(function (data) {
            return data.value.filter(function (freeze) { return freeze.dataVersionTypeId === 2; }).map(function (freeze) {
                return new _shared_models_freeze_display_view__WEBPACK_IMPORTED_MODULE_7__["FreezeDisplayView"](freeze.dataVersionId, _this.freezeService.toFormattedDate(freeze.dataVersionTypeId, freeze.freezeDate), freeze.freezeDate);
            });
        }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["takeUntil"])(this.destroy$)).subscribe(function (snapshots) {
            _this.snapshotList = snapshots;
            _this.snapshotList.unshift(_this.currentSnapshot);
            _this.initializeForm();
        });
    };
    EndOfMonthSelectionComponent.prototype.onSnapshotSelected = function (value) {
        this.snapshotTypeSelected.emit({ dataVersionIdSelected: value.dataVersionId });
        this.snapshotDate.emit({ snapshotSelectedDate: value.actualfreezeDate });
        this.snapshotMonth.emit(value.freezeDate);
    };
    EndOfMonthSelectionComponent.prototype.onReportTypeSelected = function (value) {
        this.reportTypeSelected.emit({ reportTypeSelected: value.enumEntityId });
        this.reportTypeDescriptionSelected.emit({ reportTypeDescriptionSelected: value.enumEntityValue });
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], EndOfMonthSelectionComponent.prototype, "snapshotTypeSelected", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], EndOfMonthSelectionComponent.prototype, "snapshotDate", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], EndOfMonthSelectionComponent.prototype, "snapshotMonth", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], EndOfMonthSelectionComponent.prototype, "reportTypeSelected", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], EndOfMonthSelectionComponent.prototype, "reportTypeDescriptionSelected", void 0);
    EndOfMonthSelectionComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'atlas-end-of-month-selection',
            template: __webpack_require__(/*! ./end-of-month-selection.component.html */ "./Client/app/financial/components/cut-off/generate-end-of-month/cards/end-of-month-selection/end-of-month-selection.component.html"),
            styles: [__webpack_require__(/*! ./end-of-month-selection.component.scss */ "./Client/app/financial/components/cut-off/generate-end-of-month/cards/end-of-month-selection/end-of-month-selection.component.scss")],
        }),
        __metadata("design:paramtypes", [_shared_services_form_configuration_provider_service__WEBPACK_IMPORTED_MODULE_8__["FormConfigurationProviderService"],
            _shared_services_http_services_freeze_service__WEBPACK_IMPORTED_MODULE_9__["FreezeService"],
            _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormBuilder"],
            _angular_router__WEBPACK_IMPORTED_MODULE_2__["ActivatedRoute"]])
    ], EndOfMonthSelectionComponent);
    return EndOfMonthSelectionComponent;
}(_shared_components_base_form_component_base_form_component_component__WEBPACK_IMPORTED_MODULE_5__["BaseFormComponent"]));



/***/ }),

/***/ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/associated-client-dropdown/associated-client-dropdown.component.html":
/*!**************************************************************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/associated-client-dropdown/associated-client-dropdown.component.html ***!
  \**************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div [formGroup]=\"formGroup\">\r\n    <mat-form-field fxFlex=100%>\r\n        <input #input\r\n               matInput\r\n               [matAutocomplete]=\"autocomplete\"\r\n               [placeholder]=\"'Associated Client'\"\r\n               formControlName=\"formCtrl\"\r\n               (focus)=\"clearValueEvent()\"\r\n               (focusout)=\"setValueEvent($event, autocomplete)\"\r\n               (click)=\"openAutocompletePanel()\">\r\n        <mat-autocomplete #autocomplete=\"matAutocomplete\"\r\n                          (optionSelected)=\"selectionChanged($event); input.value=''\">\r\n            <mat-option *ngIf=\"allFilterOption.value.toString().startsWith(input.value)\"\r\n                        [value]=\"allFilterOption\">\r\n                <mat-checkbox [checked]=\"allSelected\">\r\n                    All\r\n                </mat-checkbox>\r\n            </mat-option>\r\n            <mat-option *ngFor=\"let object of filteredObjects\"\r\n                        [value]=\"object\">\r\n                <mat-checkbox [checked]=\"allSelected ? true : isSelected(object)\">\r\n                    <span *ngIf=\"displayCode\">{{ object[valueProperty] }}</span>\r\n                    <span *ngIf=\"object[valueProperty] !== null && displayCode\"> | </span>\r\n                    <span>{{ object[displayProperty] }}</span>\r\n                </mat-checkbox>\r\n            </mat-option>\r\n        </mat-autocomplete>\r\n    </mat-form-field>\r\n</div>"

/***/ }),

/***/ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/associated-client-dropdown/associated-client-dropdown.component.scss":
/*!**************************************************************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/associated-client-dropdown/associated-client-dropdown.component.scss ***!
  \**************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ""

/***/ }),

/***/ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/associated-client-dropdown/associated-client-dropdown.component.ts":
/*!************************************************************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/associated-client-dropdown/associated-client-dropdown.component.ts ***!
  \************************************************************************************************************************************************************************/
/*! exports provided: AssociatedClientDropdownComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AssociatedClientDropdownComponent", function() { return AssociatedClientDropdownComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _shared_components_select_multiple_autocomplete_select_multiple_autocomplete_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../../shared/components/select-multiple-autocomplete/select-multiple-autocomplete.component */ "./Client/app/shared/components/select-multiple-autocomplete/select-multiple-autocomplete.component.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __values = (undefined && undefined.__values) || function (o) {
    var m = typeof Symbol === "function" && o[Symbol.iterator], i = 0;
    if (m) return m.call(o);
    return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
};




var AssociatedClientDropdownComponent = /** @class */ (function (_super) {
    __extends(AssociatedClientDropdownComponent, _super);
    function AssociatedClientDropdownComponent(route) {
        var _this = _super.call(this) || this;
        _this.route = route;
        _this.objects = [];
        _this.allSelected = true;
        _this.formCtrl = new _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormControl"]();
        _this.valueProperty = 'value';
        _this.displayProperty = 'desc';
        _this.allFilterOption = {
            value: 0,
            desc: 'All',
        };
        _this.valueIds = [];
        return _this;
    }
    AssociatedClientDropdownComponent.prototype.ngOnInit = function () {
        if (this.allSelected) {
            this.selectedValues = this.objects.map(function (o) { return o; });
        }
        this.initForm();
        this.initAssociatedClient(true);
    };
    AssociatedClientDropdownComponent.prototype.selectionChanged = function (event) {
        if (!event.option) {
            return;
        }
        var object = event.option.value;
        if (object === this.allFilterOption) {
            this.allSelected = !this.allSelected;
            this.resetSelected();
        }
        else {
            if (!this.isSelected(object)) {
                this.selectedValues.push(object);
            }
            else {
                this.deselect(object);
            }
            this.allSelected = this.selectedValues.length === this.objects.length;
        }
    };
    AssociatedClientDropdownComponent.prototype.setValue = function () {
        var _this = this;
        var e_1, _a;
        this.valueIds = [];
        if (this.allSelected) {
            this.formCtrl.setValue(this.allFilterOption.desc);
        }
        else {
            this.formCtrl.setValue(this.selectedValues.map(function (s) { return s[_this.displayProperty].trim(); }).sort().join(', '));
        }
        try {
            for (var _b = __values(this.selectedValues), _c = _b.next(); !_c.done; _c = _b.next()) {
                var val = _c.value;
                this.valueIds.push(val['value']);
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
    };
    AssociatedClientDropdownComponent.prototype.setSelectedValue = function (allSelected, associatedClients) {
        if (associatedClients) {
            this.allSelected = allSelected;
            this.selectedValues = associatedClients;
            this.setValue();
            this.filteredObjects = this.selectedValues;
        }
    };
    AssociatedClientDropdownComponent.prototype.resetSelected = function () {
        this.selectedValues = this.allSelected ? this.objects.map(function (o) { return o; }) : [];
    };
    AssociatedClientDropdownComponent.prototype.initAssociatedClient = function (isLoad) {
        if (isLoad === void 0) { isLoad = false; }
        if (isLoad) {
            this.selectedValues = this.objects;
        }
        this.setData();
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Array)
    ], AssociatedClientDropdownComponent.prototype, "objects", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], AssociatedClientDropdownComponent.prototype, "allSelected", void 0);
    AssociatedClientDropdownComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'atlas-associated-client-dropdown',
            template: __webpack_require__(/*! ./associated-client-dropdown.component.html */ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/associated-client-dropdown/associated-client-dropdown.component.html"),
            styles: [__webpack_require__(/*! ./associated-client-dropdown.component.scss */ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/associated-client-dropdown/associated-client-dropdown.component.scss")],
        }),
        __metadata("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_2__["ActivatedRoute"]])
    ], AssociatedClientDropdownComponent);
    return AssociatedClientDropdownComponent;
}(_shared_components_select_multiple_autocomplete_select_multiple_autocomplete_component__WEBPACK_IMPORTED_MODULE_3__["SelectMultipleAutocompleteComponent"]));



/***/ }),

/***/ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/charter-dropdown/charter-dropdown.component.html":
/*!******************************************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/charter-dropdown/charter-dropdown.component.html ***!
  \******************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div [formGroup]=\"formGroup\">\r\n    <mat-form-field fxFlex=100%>\r\n        <input #input\r\n               matInput\r\n               [matAutocomplete]=\"autocomplete\"\r\n               [placeholder]=\"'Charter'\"\r\n               formControlName=\"formCtrl\"\r\n               (focus)=\"clearValueEvent()\"\r\n               (focusout)=\"setValueEvent($event, autocomplete)\"\r\n               (click)=\"openAutocompletePanel()\">\r\n        <mat-autocomplete #autocomplete=\"matAutocomplete\"\r\n                          (optionSelected)=\"selectionChanged($event); input.value=''\">\r\n            <mat-option *ngIf=\"allFilterOption.value.toString().startsWith(input.value)\"\r\n                        [value]=\"allFilterOption\">\r\n                <mat-checkbox [checked]=\"allSelected\">\r\n                    All\r\n                </mat-checkbox>\r\n            </mat-option>\r\n            <mat-option *ngFor=\"let object of filteredObjects\"\r\n                        [value]=\"object\">\r\n                <mat-checkbox [checked]=\"allSelected ? true : isSelected(object)\">\r\n                    <span *ngIf=\"displayCode\">{{ object[valueProperty] }}</span>\r\n                    <span *ngIf=\"object[valueProperty] !== null && displayCode\"> | </span>\r\n                    <span>{{ object[displayProperty] }}</span>\r\n                </mat-checkbox>\r\n            </mat-option>\r\n        </mat-autocomplete>\r\n    </mat-form-field>\r\n</div>"

/***/ }),

/***/ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/charter-dropdown/charter-dropdown.component.scss":
/*!******************************************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/charter-dropdown/charter-dropdown.component.scss ***!
  \******************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ""

/***/ }),

/***/ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/charter-dropdown/charter-dropdown.component.ts":
/*!****************************************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/charter-dropdown/charter-dropdown.component.ts ***!
  \****************************************************************************************************************************************************/
/*! exports provided: CharterDropdownComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CharterDropdownComponent", function() { return CharterDropdownComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _shared_components_select_multiple_autocomplete_select_multiple_autocomplete_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../../shared/components/select-multiple-autocomplete/select-multiple-autocomplete.component */ "./Client/app/shared/components/select-multiple-autocomplete/select-multiple-autocomplete.component.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __values = (undefined && undefined.__values) || function (o) {
    var m = typeof Symbol === "function" && o[Symbol.iterator], i = 0;
    if (m) return m.call(o);
    return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
};




var CharterDropdownComponent = /** @class */ (function (_super) {
    __extends(CharterDropdownComponent, _super);
    function CharterDropdownComponent(route) {
        var _this = _super.call(this) || this;
        _this.route = route;
        _this.objects = [];
        _this.allSelected = true;
        _this.charterSelectionChanged = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        _this.formCtrl = new _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormControl"]();
        _this.valueProperty = 'value';
        _this.displayProperty = 'desc';
        _this.allFilterOption = {
            value: 0,
            desc: 'All',
        };
        _this.valueIds = [];
        return _this;
    }
    CharterDropdownComponent.prototype.ngOnInit = function () {
        if (this.allSelected) {
            this.selectedValues = this.objects.map(function (o) { return o; });
        }
        this.initForm();
        this.initCharter(true);
    };
    CharterDropdownComponent.prototype.selectionChanged = function (event) {
        if (!event.option) {
            return;
        }
        var object = event.option.value;
        if (object === this.allFilterOption) {
            this.allSelected = !this.allSelected;
            this.resetSelected();
        }
        else {
            if (!this.isSelected(object)) {
                this.selectedValues.push(object);
            }
            else {
                this.deselect(object);
            }
            this.allSelected = this.selectedValues.length === this.objects.length;
        }
        this.charterSelectionChanged.emit();
    };
    CharterDropdownComponent.prototype.setValue = function () {
        var _this = this;
        var e_1, _a;
        this.valueIds = [];
        if (this.allSelected) {
            this.formCtrl.setValue(this.allFilterOption.desc);
        }
        else {
            this.formCtrl.setValue(this.selectedValues.map(function (s) { return s[_this.displayProperty].trim(); }).sort().join(', '));
        }
        try {
            for (var _b = __values(this.selectedValues), _c = _b.next(); !_c.done; _c = _b.next()) {
                var val = _c.value;
                this.valueIds.push(val['value']);
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
    };
    CharterDropdownComponent.prototype.setSelectedValue = function (allSelected, charters) {
        if (charters) {
            this.allSelected = allSelected;
            this.selectedValues = charters;
            this.setValue();
            this.filteredObjects = this.selectedValues;
        }
    };
    CharterDropdownComponent.prototype.resetSelected = function () {
        this.selectedValues = this.allSelected ? this.objects.map(function (o) { return o; }) : [];
    };
    CharterDropdownComponent.prototype.initCharter = function (isLoad) {
        if (isLoad === void 0) { isLoad = false; }
        if (isLoad) {
            this.selectedValues = this.objects;
        }
        this.setData();
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Array)
    ], CharterDropdownComponent.prototype, "objects", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], CharterDropdownComponent.prototype, "allSelected", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], CharterDropdownComponent.prototype, "charterSelectionChanged", void 0);
    CharterDropdownComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'atlas-charter-dropdown',
            template: __webpack_require__(/*! ./charter-dropdown.component.html */ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/charter-dropdown/charter-dropdown.component.html"),
            styles: [__webpack_require__(/*! ./charter-dropdown.component.scss */ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/charter-dropdown/charter-dropdown.component.scss")],
        }),
        __metadata("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_2__["ActivatedRoute"]])
    ], CharterDropdownComponent);
    return CharterDropdownComponent;
}(_shared_components_select_multiple_autocomplete_select_multiple_autocomplete_component__WEBPACK_IMPORTED_MODULE_3__["SelectMultipleAutocompleteComponent"]));



/***/ }),

/***/ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/cost-type-dropdown/cost-type-dropdown.component.html":
/*!**********************************************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/cost-type-dropdown/cost-type-dropdown.component.html ***!
  \**********************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div [formGroup]=\"formGroup\">\r\n    <mat-form-field fxFlex=100%>\r\n        <input #input\r\n               matInput\r\n               [matAutocomplete]=\"autocomplete\"\r\n               [placeholder]=\"'Cost Type'\"\r\n               formControlName=\"formCtrl\"\r\n               (focus)=\"clearValueEvent()\"\r\n               (focusout)=\"setValueEvent($event, autocomplete)\"\r\n               (click)=\"openAutocompletePanel()\">\r\n        <mat-autocomplete #autocomplete=\"matAutocomplete\"\r\n                          (optionSelected)=\"selectionChanged($event); input.value=''\">\r\n            <mat-option *ngIf=\"allFilterOption.value.toString().startsWith(input.value)\"\r\n                        [value]=\"allFilterOption\">\r\n                <mat-checkbox [checked]=\"allSelected\">\r\n                    All\r\n                </mat-checkbox>\r\n            </mat-option>\r\n            <mat-option *ngFor=\"let object of filteredObjects\"\r\n                        [value]=\"object\">\r\n                <mat-checkbox [checked]=\"allSelected ? true : isSelected(object)\">\r\n                    <span *ngIf=\"displayCode\">{{ object[valueProperty] }}</span>\r\n                    <span *ngIf=\"object[valueProperty] !== null && displayCode\"> | </span>\r\n                    <span>{{ object[displayProperty] }}</span>\r\n                </mat-checkbox>\r\n            </mat-option>\r\n        </mat-autocomplete>\r\n    </mat-form-field>\r\n</div>"

/***/ }),

/***/ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/cost-type-dropdown/cost-type-dropdown.component.scss":
/*!**********************************************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/cost-type-dropdown/cost-type-dropdown.component.scss ***!
  \**********************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ""

/***/ }),

/***/ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/cost-type-dropdown/cost-type-dropdown.component.ts":
/*!********************************************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/cost-type-dropdown/cost-type-dropdown.component.ts ***!
  \********************************************************************************************************************************************************/
/*! exports provided: CostTypeDropdownComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CostTypeDropdownComponent", function() { return CostTypeDropdownComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _shared_components_select_multiple_autocomplete_select_multiple_autocomplete_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../../shared/components/select-multiple-autocomplete/select-multiple-autocomplete.component */ "./Client/app/shared/components/select-multiple-autocomplete/select-multiple-autocomplete.component.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __values = (undefined && undefined.__values) || function (o) {
    var m = typeof Symbol === "function" && o[Symbol.iterator], i = 0;
    if (m) return m.call(o);
    return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
};




var CostTypeDropdownComponent = /** @class */ (function (_super) {
    __extends(CostTypeDropdownComponent, _super);
    function CostTypeDropdownComponent(route) {
        var _this = _super.call(this) || this;
        _this.route = route;
        _this.objects = [];
        _this.allSelected = true;
        _this.costTypeSelectionChanged = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        _this.formCtrl = new _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormControl"]();
        _this.valueProperty = 'value';
        _this.displayProperty = 'desc';
        _this.allFilterOption = {
            value: 0,
            desc: 'All',
        };
        _this.valueIds = [];
        return _this;
    }
    CostTypeDropdownComponent.prototype.ngOnInit = function () {
        if (this.allSelected) {
            this.selectedValues = this.objects.map(function (o) { return o; });
        }
        this.initForm();
        this.initCostType(true);
    };
    CostTypeDropdownComponent.prototype.selectionChanged = function (event) {
        if (!event.option) {
            return;
        }
        var object = event.option.value;
        if (object === this.allFilterOption) {
            this.allSelected = !this.allSelected;
            this.resetSelected();
        }
        else {
            if (!this.isSelected(object)) {
                this.selectedValues.push(object);
            }
            else {
                this.deselect(object);
            }
            this.allSelected = this.selectedValues.length === this.objects.length;
        }
        this.costTypeSelectionChanged.emit();
    };
    CostTypeDropdownComponent.prototype.setValue = function () {
        var _this = this;
        var e_1, _a;
        this.valueIds = [];
        if (this.allSelected) {
            this.formCtrl.setValue(this.allFilterOption.desc);
        }
        else {
            this.formCtrl.setValue(this.selectedValues.map(function (s) { return s[_this.displayProperty].trim(); }).sort().join(', '));
        }
        try {
            for (var _b = __values(this.selectedValues), _c = _b.next(); !_c.done; _c = _b.next()) {
                var val = _c.value;
                this.valueIds.push(val['value']);
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
    };
    CostTypeDropdownComponent.prototype.setSelectedValue = function (allSelected, costTypes) {
        if (costTypes) {
            this.allSelected = allSelected;
            this.selectedValues = costTypes;
            this.setValue();
            this.filteredObjects = this.selectedValues;
        }
    };
    CostTypeDropdownComponent.prototype.resetSelected = function () {
        this.selectedValues = this.allSelected ? this.objects.map(function (o) { return o; }) : [];
    };
    CostTypeDropdownComponent.prototype.initCostType = function (isLoad) {
        if (isLoad === void 0) { isLoad = false; }
        if (isLoad) {
            this.selectedValues = this.objects;
        }
        this.setData();
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Array)
    ], CostTypeDropdownComponent.prototype, "objects", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], CostTypeDropdownComponent.prototype, "allSelected", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], CostTypeDropdownComponent.prototype, "costTypeSelectionChanged", void 0);
    CostTypeDropdownComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'atlas-cost-type-dropdown',
            template: __webpack_require__(/*! ./cost-type-dropdown.component.html */ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/cost-type-dropdown/cost-type-dropdown.component.html"),
            styles: [__webpack_require__(/*! ./cost-type-dropdown.component.scss */ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/cost-type-dropdown/cost-type-dropdown.component.scss")],
        }),
        __metadata("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_2__["ActivatedRoute"]])
    ], CostTypeDropdownComponent);
    return CostTypeDropdownComponent;
}(_shared_components_select_multiple_autocomplete_select_multiple_autocomplete_component__WEBPACK_IMPORTED_MODULE_3__["SelectMultipleAutocompleteComponent"]));



/***/ }),

/***/ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/deal-number-dropdown/deal-number-dropdown.component.html":
/*!**************************************************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/deal-number-dropdown/deal-number-dropdown.component.html ***!
  \**************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div [formGroup]=\"formGroup\">\r\n    <mat-form-field>\r\n        <input #input\r\n               matInput\r\n               [matAutocomplete]=\"autocomplete\"\r\n               [placeholder]=\"'Deal No.'\"\r\n               formControlName=\"formCtrl\"\r\n               (focus)=\"clearValueEvent()\"\r\n               (focusout)=\"setValueEvent($event, autocomplete)\"\r\n               (click)=\"openAutocompletePanel()\">\r\n        <mat-autocomplete #autocomplete=\"matAutocomplete\"\r\n                          (optionSelected)=\"selectionChanged($event); input.value=''\">\r\n            <mat-option *ngIf=\"allFilterOption.value.toString().toUpperCase().startsWith(input.value)\"\r\n                        [value]=\"allFilterOption\">\r\n                <mat-checkbox [checked]=\"allSelected\">\r\n                    All\r\n                </mat-checkbox>\r\n            </mat-option>\r\n            <mat-option *ngFor=\"let object of filteredObjects\"\r\n                        [value]=\"object\">\r\n                <mat-checkbox [checked]=\"allSelected ? true : isSelected(object)\">\r\n                    <span *ngIf=\"displayCode\">{{ object[valueProperty] }}</span>\r\n                    <span *ngIf=\"object[valueProperty] !== null && displayCode\"> | </span>\r\n                    <span>{{ object[displayProperty] }}</span>\r\n                </mat-checkbox>\r\n            </mat-option>\r\n        </mat-autocomplete>\r\n    </mat-form-field>\r\n</div>"

/***/ }),

/***/ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/deal-number-dropdown/deal-number-dropdown.component.scss":
/*!**************************************************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/deal-number-dropdown/deal-number-dropdown.component.scss ***!
  \**************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ""

/***/ }),

/***/ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/deal-number-dropdown/deal-number-dropdown.component.ts":
/*!************************************************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/deal-number-dropdown/deal-number-dropdown.component.ts ***!
  \************************************************************************************************************************************************************/
/*! exports provided: DealNumberDropdownComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DealNumberDropdownComponent", function() { return DealNumberDropdownComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _shared_components_select_multiple_autocomplete_select_multiple_autocomplete_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../../shared/components/select-multiple-autocomplete/select-multiple-autocomplete.component */ "./Client/app/shared/components/select-multiple-autocomplete/select-multiple-autocomplete.component.ts");
/* harmony import */ var _shared_entities_atlas_form_control__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../../shared/entities/atlas-form-control */ "./Client/app/shared/entities/atlas-form-control.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __values = (undefined && undefined.__values) || function (o) {
    var m = typeof Symbol === "function" && o[Symbol.iterator], i = 0;
    if (m) return m.call(o);
    return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
};



var DealNumberDropdownComponent = /** @class */ (function (_super) {
    __extends(DealNumberDropdownComponent, _super);
    function DealNumberDropdownComponent() {
        var _this = _super.call(this) || this;
        _this.objects = [];
        _this.allSelected = true;
        _this.dealNumberSelectionChanged = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        _this.formCtrl = new _shared_entities_atlas_form_control__WEBPACK_IMPORTED_MODULE_2__["AtlasFormControl"]('formControl');
        _this.valueProperty = 'value';
        _this.displayProperty = 'desc';
        _this.allFilterOption = {
            value: 0,
            desc: 'All',
        };
        _this.valueIds = [];
        return _this;
    }
    DealNumberDropdownComponent.prototype.ngOnInit = function () {
        if (this.allSelected) {
            this.selectedValues = this.objects.map(function (o) { return o; });
        }
        this.initForm();
        this.initDealNumber(true);
    };
    DealNumberDropdownComponent.prototype.initDealNumber = function (isLoad) {
        if (isLoad === void 0) { isLoad = false; }
        if (isLoad) {
            this.selectedValues = this.objects;
        }
        this.setData();
    };
    DealNumberDropdownComponent.prototype.selectionChanged = function (event) {
        if (!event.option) {
            return;
        }
        var object = event.option.value;
        if (object === this.allFilterOption) {
            this.allSelected = !this.allSelected;
            this.resetSelected();
        }
        else {
            if (!this.isSelected(object)) {
                this.selectedValues.push(object);
            }
            else {
                this.deselect(object);
            }
            this.allSelected = this.selectedValues.length === this.objects.length;
        }
        this.dealNumberSelectionChanged.emit();
    };
    DealNumberDropdownComponent.prototype.setValue = function () {
        var _this = this;
        var e_1, _a;
        this.valueIds = [];
        if (this.allSelected) {
            this.formCtrl.setValue(this.allFilterOption.desc);
        }
        else {
            this.formCtrl.setValue(this.selectedValues.map(function (s) { return s[_this.displayProperty].trim(); }).sort().join(', '));
        }
        try {
            for (var _b = __values(this.selectedValues), _c = _b.next(); !_c.done; _c = _b.next()) {
                var val = _c.value;
                this.valueIds.push(val['value']);
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
    };
    DealNumberDropdownComponent.prototype.resetSelected = function () {
        this.selectedValues = this.allSelected ? this.objects.map(function (o) { return o; }) : [];
    };
    DealNumberDropdownComponent.prototype.setSelectedValue = function (allSelected, dealNumbers) {
        if (dealNumbers) {
            this.allSelected = allSelected;
            this.selectedValues = dealNumbers;
            this.setValue();
            this.filteredObjects = this.selectedValues;
        }
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Array)
    ], DealNumberDropdownComponent.prototype, "objects", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], DealNumberDropdownComponent.prototype, "allSelected", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], DealNumberDropdownComponent.prototype, "dealNumberSelectionChanged", void 0);
    DealNumberDropdownComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'atlas-deal-number-dropdown',
            template: __webpack_require__(/*! ./deal-number-dropdown.component.html */ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/deal-number-dropdown/deal-number-dropdown.component.html"),
            styles: [__webpack_require__(/*! ./deal-number-dropdown.component.scss */ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/deal-number-dropdown/deal-number-dropdown.component.scss")],
        }),
        __metadata("design:paramtypes", [])
    ], DealNumberDropdownComponent);
    return DealNumberDropdownComponent;
}(_shared_components_select_multiple_autocomplete_select_multiple_autocomplete_component__WEBPACK_IMPORTED_MODULE_1__["SelectMultipleAutocompleteComponent"]));



/***/ }),

/***/ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/dealt-currency-dropdown/dealt-currency-dropdown.component.html":
/*!********************************************************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/dealt-currency-dropdown/dealt-currency-dropdown.component.html ***!
  \********************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div [formGroup]=\"formGroup\">\r\n    <mat-form-field>\r\n        <input #input\r\n               matInput\r\n               [matAutocomplete]=\"autocomplete\"\r\n               [placeholder]=\"'Dealt Ccy'\"\r\n               formControlName=\"formCtrl\"\r\n               (focus)=\"clearValueEvent()\"\r\n               (focusout)=\"setValueEvent($event, autocomplete)\"\r\n               (click)=\"openAutocompletePanel()\">\r\n        <mat-autocomplete #autocomplete=\"matAutocomplete\"\r\n                          (optionSelected)=\"selectionChanged($event); input.value=''\">\r\n            <mat-option *ngIf=\"allFilterOption.value.toString().toUpperCase().startsWith(input.value)\"\r\n                        [value]=\"allFilterOption\">\r\n                <mat-checkbox [checked]=\"allSelected\">\r\n                    All\r\n                </mat-checkbox>\r\n            </mat-option>\r\n            <mat-option *ngFor=\"let object of filteredObjects\"\r\n                        [value]=\"object\">\r\n                <mat-checkbox [checked]=\"allSelected ? true : isSelected(object)\">\r\n                    <span *ngIf=\"displayCode\">{{ object[valueProperty] }}</span>\r\n                    <span *ngIf=\"object[valueProperty] !== null && displayCode\"> | </span>\r\n                    <span>{{ object[displayProperty] }}</span>\r\n                </mat-checkbox>\r\n            </mat-option>\r\n        </mat-autocomplete>\r\n    </mat-form-field>\r\n</div>"

/***/ }),

/***/ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/dealt-currency-dropdown/dealt-currency-dropdown.component.scss":
/*!********************************************************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/dealt-currency-dropdown/dealt-currency-dropdown.component.scss ***!
  \********************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ""

/***/ }),

/***/ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/dealt-currency-dropdown/dealt-currency-dropdown.component.ts":
/*!******************************************************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/dealt-currency-dropdown/dealt-currency-dropdown.component.ts ***!
  \******************************************************************************************************************************************************************/
/*! exports provided: DealtCurrencyDropdownComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DealtCurrencyDropdownComponent", function() { return DealtCurrencyDropdownComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _shared_components_select_multiple_autocomplete_select_multiple_autocomplete_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../../shared/components/select-multiple-autocomplete/select-multiple-autocomplete.component */ "./Client/app/shared/components/select-multiple-autocomplete/select-multiple-autocomplete.component.ts");
/* harmony import */ var _shared_entities_atlas_form_control__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../../shared/entities/atlas-form-control */ "./Client/app/shared/entities/atlas-form-control.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __values = (undefined && undefined.__values) || function (o) {
    var m = typeof Symbol === "function" && o[Symbol.iterator], i = 0;
    if (m) return m.call(o);
    return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
};



var DealtCurrencyDropdownComponent = /** @class */ (function (_super) {
    __extends(DealtCurrencyDropdownComponent, _super);
    function DealtCurrencyDropdownComponent() {
        var _this = _super.call(this) || this;
        _this.objects = [];
        _this.allSelected = true;
        _this.dealtCurrencySelectionChanged = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        _this.formCtrl = new _shared_entities_atlas_form_control__WEBPACK_IMPORTED_MODULE_2__["AtlasFormControl"]('formControl');
        _this.valueProperty = 'value';
        _this.displayProperty = 'desc';
        _this.allFilterOption = {
            value: 0,
            desc: 'All',
        };
        _this.valueIds = [];
        return _this;
    }
    DealtCurrencyDropdownComponent.prototype.ngOnInit = function () {
        if (this.allSelected) {
            this.selectedValues = this.objects.map(function (o) { return o; });
        }
        this.initForm();
        this.initDealtCurrency(true);
    };
    DealtCurrencyDropdownComponent.prototype.initDealtCurrency = function (isLoad) {
        if (isLoad === void 0) { isLoad = false; }
        if (isLoad) {
            this.selectedValues = this.objects;
        }
        this.setData();
    };
    DealtCurrencyDropdownComponent.prototype.selectionChanged = function (event) {
        if (!event.option) {
            return;
        }
        var object = event.option.value;
        if (object === this.allFilterOption) {
            this.allSelected = !this.allSelected;
            this.resetSelected();
        }
        else {
            if (!this.isSelected(object)) {
                this.selectedValues.push(object);
            }
            else {
                this.deselect(object);
            }
            this.allSelected = this.selectedValues.length === this.objects.length;
        }
        this.dealtCurrencySelectionChanged.emit();
    };
    DealtCurrencyDropdownComponent.prototype.setValue = function () {
        var _this = this;
        var e_1, _a;
        this.valueIds = [];
        if (this.allSelected) {
            this.formCtrl.setValue(this.allFilterOption.desc);
        }
        else {
            this.formCtrl.setValue(this.selectedValues.map(function (s) { return s[_this.displayProperty].trim(); }).sort().join(', '));
        }
        try {
            for (var _b = __values(this.selectedValues), _c = _b.next(); !_c.done; _c = _b.next()) {
                var val = _c.value;
                this.valueIds.push(val['value']);
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
    };
    DealtCurrencyDropdownComponent.prototype.resetSelected = function () {
        this.selectedValues = this.allSelected ? this.objects.map(function (o) { return o; }) : [];
    };
    DealtCurrencyDropdownComponent.prototype.setSelectedValue = function (allSelected, dealtCurrency) {
        if (dealtCurrency) {
            this.allSelected = allSelected;
            this.selectedValues = dealtCurrency;
            this.setValue();
            this.filteredObjects = this.selectedValues;
        }
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Array)
    ], DealtCurrencyDropdownComponent.prototype, "objects", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], DealtCurrencyDropdownComponent.prototype, "allSelected", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], DealtCurrencyDropdownComponent.prototype, "dealtCurrencySelectionChanged", void 0);
    DealtCurrencyDropdownComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'atlas-dealt-currency-dropdown',
            template: __webpack_require__(/*! ./dealt-currency-dropdown.component.html */ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/dealt-currency-dropdown/dealt-currency-dropdown.component.html"),
            styles: [__webpack_require__(/*! ./dealt-currency-dropdown.component.scss */ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/dealt-currency-dropdown/dealt-currency-dropdown.component.scss")],
        }),
        __metadata("design:paramtypes", [])
    ], DealtCurrencyDropdownComponent);
    return DealtCurrencyDropdownComponent;
}(_shared_components_select_multiple_autocomplete_select_multiple_autocomplete_component__WEBPACK_IMPORTED_MODULE_1__["SelectMultipleAutocompleteComponent"]));



/***/ }),

/***/ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/department-dropdown/department-dropdown.component.html":
/*!************************************************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/department-dropdown/department-dropdown.component.html ***!
  \************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div [formGroup]=\"formGroup\">\r\n    <mat-form-field>\r\n        <input #input\r\n               matInput\r\n               [matAutocomplete]=\"autocomplete\"\r\n               [placeholder]=\"'Department'\"\r\n               formControlName=\"formCtrl\"\r\n               (focus)=\"clearValueEvent()\"\r\n               (focusout)=\"setValueEvent($event, autocomplete)\"\r\n               (click)=\"openAutocompletePanel()\">\r\n        <mat-autocomplete #autocomplete=\"matAutocomplete\"\r\n                          (optionSelected)=\"selectionChanged($event); input.value=''\">\r\n            <mat-option *ngIf=\"allFilterOption.value.toString().toUpperCase().startsWith(input.value)\"\r\n                        [value]=\"allFilterOption\">\r\n                <mat-checkbox [checked]=\"allSelected\">\r\n                    All\r\n                </mat-checkbox>\r\n            </mat-option>\r\n            <mat-option *ngFor=\"let object of filteredObjects\"\r\n                        [value]=\"object\">\r\n                <mat-checkbox [checked]=\"allSelected ? true : isSelected(object)\">\r\n                    <span *ngIf=\"displayCode\">{{ object[valueProperty] }}</span>\r\n                    <span *ngIf=\"object[valueProperty] !== null && displayCode\"> | </span>\r\n                    <span>{{ object[displayProperty] }}</span>\r\n                </mat-checkbox>\r\n            </mat-option>\r\n        </mat-autocomplete>\r\n    </mat-form-field>\r\n</div>"

/***/ }),

/***/ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/department-dropdown/department-dropdown.component.scss":
/*!************************************************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/department-dropdown/department-dropdown.component.scss ***!
  \************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ""

/***/ }),

/***/ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/department-dropdown/department-dropdown.component.ts":
/*!**********************************************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/department-dropdown/department-dropdown.component.ts ***!
  \**********************************************************************************************************************************************************/
/*! exports provided: DepartmentDropdownComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DepartmentDropdownComponent", function() { return DepartmentDropdownComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _shared_components_select_multiple_autocomplete_select_multiple_autocomplete_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../../shared/components/select-multiple-autocomplete/select-multiple-autocomplete.component */ "./Client/app/shared/components/select-multiple-autocomplete/select-multiple-autocomplete.component.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __values = (undefined && undefined.__values) || function (o) {
    var m = typeof Symbol === "function" && o[Symbol.iterator], i = 0;
    if (m) return m.call(o);
    return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
};




var DepartmentDropdownComponent = /** @class */ (function (_super) {
    __extends(DepartmentDropdownComponent, _super);
    function DepartmentDropdownComponent(route) {
        var _this = _super.call(this) || this;
        _this.route = route;
        _this.objects = [];
        _this.allSelected = true;
        _this.departmentSelectionChanged = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        _this.formCtrl = new _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormControl"]();
        _this.valueProperty = 'value';
        _this.displayProperty = 'desc';
        _this.allFilterOption = {
            value: 0,
            desc: 'All',
        };
        _this.valueIds = [];
        return _this;
    }
    DepartmentDropdownComponent.prototype.ngOnInit = function () {
        if (this.allSelected) {
            this.selectedValues = this.objects.map(function (o) { return o; });
        }
        this.initForm();
        this.initDepartment(true);
    };
    DepartmentDropdownComponent.prototype.selectionChanged = function (event) {
        if (!event.option) {
            return;
        }
        var object = event.option.value;
        if (object === this.allFilterOption) {
            this.allSelected = !this.allSelected;
            this.resetSelected();
        }
        else {
            if (!this.isSelected(object)) {
                this.selectedValues.push(object);
            }
            else {
                this.deselect(object);
            }
            this.allSelected = this.selectedValues.length === this.objects.length;
        }
        this.departmentSelectionChanged.emit();
    };
    DepartmentDropdownComponent.prototype.setValue = function () {
        var _this = this;
        var e_1, _a;
        this.valueIds = [];
        if (this.allSelected) {
            this.formCtrl.setValue(this.allFilterOption.desc);
        }
        else {
            this.formCtrl.setValue(this.selectedValues.map(function (s) { return s[_this.displayProperty].trim(); }).sort().join(', '));
        }
        try {
            for (var _b = __values(this.selectedValues), _c = _b.next(); !_c.done; _c = _b.next()) {
                var val = _c.value;
                this.valueIds.push(val['value']);
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
    };
    DepartmentDropdownComponent.prototype.resetSelected = function () {
        this.selectedValues = this.allSelected ? this.objects.map(function (o) { return o; }) : [];
    };
    DepartmentDropdownComponent.prototype.initDepartment = function (isLoad) {
        if (isLoad === void 0) { isLoad = false; }
        if (isLoad) {
            this.selectedValues = this.objects;
        }
        this.setData();
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Array)
    ], DepartmentDropdownComponent.prototype, "objects", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], DepartmentDropdownComponent.prototype, "allSelected", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], DepartmentDropdownComponent.prototype, "departmentSelectionChanged", void 0);
    DepartmentDropdownComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'atlas-department-dropdown',
            template: __webpack_require__(/*! ./department-dropdown.component.html */ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/department-dropdown/department-dropdown.component.html"),
            styles: [__webpack_require__(/*! ./department-dropdown.component.scss */ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/department-dropdown/department-dropdown.component.scss")],
        }),
        __metadata("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_2__["ActivatedRoute"]])
    ], DepartmentDropdownComponent);
    return DepartmentDropdownComponent;
}(_shared_components_select_multiple_autocomplete_select_multiple_autocomplete_component__WEBPACK_IMPORTED_MODULE_3__["SelectMultipleAutocompleteComponent"]));



/***/ }),

/***/ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/generate-end-of-month-summary.component.html":
/*!**************************************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/generate-end-of-month-summary.component.html ***!
  \**************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"main-container\">\r\n    <mat-card>\r\n        <mat-card-content>\r\n            <div fxLayout=\"column\">\r\n                <div fxLayout=\"row\"\r\n                     fxLayoutAlign=\"space-between center\">\r\n                    <atlas-department-dropdown (departmentSelectionChanged)=\"onDepartmentSelectionChanges()\"\r\n                                               #departmentDropdownComponent>\r\n                    </atlas-department-dropdown>\r\n                    <atlas-charter-dropdown (charterSelectionChanged)=\"onCharterSelectionChanges()\"\r\n                                            #charterDropdownComponent>\r\n                    </atlas-charter-dropdown>\r\n                    <atlas-cost-type-dropdown (costTypeSelectionChanged)=\"onCostTypeSelectionChanges()\"\r\n                                              #costTypeDropdownComponent>\r\n                    </atlas-cost-type-dropdown>\r\n                    <atlas-associated-client-dropdown #associatedClientDropdownComponent>\r\n                    </atlas-associated-client-dropdown>\r\n                    <button (click)=\"onApplyButtonClicked()\"\r\n                            mat-button>\r\n                        APPLY\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </mat-card-content>\r\n    </mat-card>\r\n    <atlas-generate-end-of-month-tab-group (filtered)=\"filtered($event)\"\r\n                                           (stopPosting)=\"stopPosting($event)\"\r\n                                           (applyButton)=\"onApplyButtonClicked()\"\r\n                                           (tabIndexNumber)=\"onSelectedIndexChanged1($event)\"\r\n                                           (mappingErrorChange)=\"onMappingErrorChange($event)\"\r\n                                           [isFilterApplied]=\"isFilterApplied\"\r\n                                           #generateEndOfMonthTabGroup></atlas-generate-end-of-month-tab-group>\r\n    <div fxLayout=\"row\"\r\n         fxLayoutAlign=\"space-between start\"\r\n         class=\"button-details\">\r\n        <div fxLayout=\"column\"\r\n             fxLayoutAlign=\"start\">\r\n            <button (click)=\"onDiscardButtonClicked()\"\r\n                    mat-button>\r\n                DISCARD\r\n            </button>\r\n        </div>\r\n        <div fxLayout=\"column\"\r\n             fxLayoutAlign=\"start\">\r\n            <button mat-raised-button\r\n                    (click)=\"onGeneratePostingsButtonClicked()\"\r\n                    [disabled]=\"disableButton || (isMappingError || isCurrentDatabase)\">\r\n                GENERATE POSTINGS\r\n            </button>\r\n        </div>\r\n    </div>\r\n</div>"

/***/ }),

/***/ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/generate-end-of-month-summary.component.scss":
/*!**************************************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/generate-end-of-month-summary.component.scss ***!
  \**************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ""

/***/ }),

/***/ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/generate-end-of-month-summary.component.ts":
/*!************************************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/generate-end-of-month-summary.component.ts ***!
  \************************************************************************************************************************************************/
/*! exports provided: GenerateEndOfMonthSummaryComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GenerateEndOfMonthSummaryComponent", function() { return GenerateEndOfMonthSummaryComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _core_services_authorization_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../core/services/authorization.service */ "./Client/app/core/services/authorization.service.ts");
/* harmony import */ var _core_services_company_manager_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../core/services/company-manager.service */ "./Client/app/core/services/company-manager.service.ts");
/* harmony import */ var _shared_components_base_form_component_base_form_component_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../../shared/components/base-form-component/base-form-component.component */ "./Client/app/shared/components/base-form-component/base-form-component.component.ts");
/* harmony import */ var _shared_entities_filter_value_generate_end_month_entity__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../shared/entities/filter-value-generate-end-month.entity */ "./Client/app/shared/entities/filter-value-generate-end-month.entity.ts");
/* harmony import */ var _shared_enums_permission_level_enum__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../../shared/enums/permission-level.enum */ "./Client/app/shared/enums/permission-level.enum.ts");
/* harmony import */ var _shared_enums_report_type_enum__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../../shared/enums/report-type.enum */ "./Client/app/shared/enums/report-type.enum.ts");
/* harmony import */ var _shared_services_form_configuration_provider_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../../shared/services/form-configuration-provider.service */ "./Client/app/shared/services/form-configuration-provider.service.ts");
/* harmony import */ var _shared_services_title_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../../shared/services/title.service */ "./Client/app/shared/services/title.service.ts");
/* harmony import */ var _associated_client_dropdown_associated_client_dropdown_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./associated-client-dropdown/associated-client-dropdown.component */ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/associated-client-dropdown/associated-client-dropdown.component.ts");
/* harmony import */ var _charter_dropdown_charter_dropdown_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./charter-dropdown/charter-dropdown.component */ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/charter-dropdown/charter-dropdown.component.ts");
/* harmony import */ var _cost_type_dropdown_cost_type_dropdown_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./cost-type-dropdown/cost-type-dropdown.component */ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/cost-type-dropdown/cost-type-dropdown.component.ts");
/* harmony import */ var _department_dropdown_department_dropdown_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./department-dropdown/department-dropdown.component */ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/department-dropdown/department-dropdown.component.ts");
/* harmony import */ var _generate_end_of_month_tab_group_generate_end_of_month_tab_group_component__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./generate-end-of-month-tab-group/generate-end-of-month-tab-group.component */ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/generate-end-of-month-tab-group/generate-end-of-month-tab-group.component.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};















var GenerateEndOfMonthSummaryComponent = /** @class */ (function (_super) {
    __extends(GenerateEndOfMonthSummaryComponent, _super);
    function GenerateEndOfMonthSummaryComponent(formConfigurationProvider, route, router, authorizationService, companyManager, titleService) {
        var _this = _super.call(this, formConfigurationProvider) || this;
        _this.formConfigurationProvider = formConfigurationProvider;
        _this.route = route;
        _this.router = router;
        _this.authorizationService = authorizationService;
        _this.companyManager = companyManager;
        _this.titleService = titleService;
        _this.objects = [];
        _this.PermissionLevels = _shared_enums_permission_level_enum__WEBPACK_IMPORTED_MODULE_6__["PermissionLevels"];
        _this.buttonEditable = false;
        _this.buttonDisableForPrevilage = false;
        _this.disableButton = false;
        _this.isCurrentDatabase = true;
        _this.isMappingError = true;
        _this.isUnRealisedPhysical = true;
        _this.selectedDepartments = [];
        _this.selectedCharter = [];
        _this.selectedCostType = [];
        _this.selectedAssociatedClient = [];
        _this.tabIndex = 0;
        _this.isFilterApplied = false;
        _this.generatePostingsPrivilege = {
            profileId: null,
            privilegeName: 'GeneratePostings',
            permission: _shared_enums_permission_level_enum__WEBPACK_IMPORTED_MODULE_6__["PermissionLevels"].Read,
            privilegeParentLevelOne: 'Financials',
            privilegeParentLevelTwo: 'CutOff',
        };
        return _this;
    }
    GenerateEndOfMonthSummaryComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.company = this.route.snapshot.paramMap.get('company');
        this.titleService.setTitle('Generate End of Month');
        this.buttonDisableForPrevilage = this.checkIfUserHasRequiredPrivileges(this.generatePostingsPrivilege);
        this.route.queryParams.subscribe(function (params) {
            _this.dataVersionId = Number(params['dataVersionId']);
            _this.buttonEditable = (params['isPostingButtonEditable']).toLowerCase() === 'true' ? true : false;
            _this.reportTypeDescription = (params['reportTypeDescription']);
            _this.dataVersionDate = (params['dataVersionDate']);
            _this.dataVersionMonth = (params['dataVersionMonth']);
            _this.reportType = Number(params['reportType']);
        });
        if ((this.dataVersionDate === null
            || this.dataVersionDate === undefined)
            && (this.dataVersionMonth === 'Current Database'
                || this.dataVersionMonth === null
                || this.dataVersionMonth === undefined)) {
            this.isCurrentDatabase = true;
        }
        else {
            this.isCurrentDatabase = false;
        }
        if (this.reportTypeDescription.indexOf('Unrealized') > 0) {
            this.isUnRealisedPhysical = true;
        }
        else {
            this.isUnRealisedPhysical = false;
        }
        this.dataVersionMonth = this.dataVersionMonth ? this.dataVersionMonth : 'Current Database';
        this.generateEndOfMonthTabGroupComponent.reportType = this.reportType;
        if (this.generateEndOfMonthTabGroupComponent.overviewTabComponent) {
            this.generateEndOfMonthTabGroupComponent.overviewTabComponent.dataVersionID = this.dataVersionId;
            this.generateEndOfMonthTabGroupComponent.overviewTabComponent.dataVersionDate = this.dataVersionDate;
            this.generateEndOfMonthTabGroupComponent.overviewTabComponent.dataVersionMonth = this.dataVersionMonth;
            this.generateEndOfMonthTabGroupComponent.overviewTabComponent.reportType = this.reportType;
            this.generateEndOfMonthTabGroupComponent.overviewTabComponent.reportTypeDescription = this.reportTypeDescription;
        }
        if (this.generateEndOfMonthTabGroupComponent.postingsTabComponent) {
            this.generateEndOfMonthTabGroupComponent.postingsTabComponent.dataVersionID = this.dataVersionId;
            this.generateEndOfMonthTabGroupComponent.postingsTabComponent.dataVersionMonth = this.dataVersionMonth;
            this.generateEndOfMonthTabGroupComponent.postingsTabComponent.reportType = this.reportType;
            this.generateEndOfMonthTabGroupComponent.postingsTabComponent.reportTypeDescription = this.reportTypeDescription;
        }
        if (this.generateEndOfMonthTabGroupComponent.postingsTabComponent) {
            this.generateEndOfMonthTabGroupComponent.detailsTabComponent.dataVersionID = this.dataVersionId;
            this.generateEndOfMonthTabGroupComponent.detailsTabComponent.dataVersionMonth = this.dataVersionMonth;
            this.generateEndOfMonthTabGroupComponent.detailsTabComponent.reportType = this.reportType;
            this.generateEndOfMonthTabGroupComponent.detailsTabComponent.reportTypeDescription = this.reportTypeDescription;
        }
        if (this.generateEndOfMonthTabGroupComponent.unrealizedPostingsTabComponent) {
            this.generateEndOfMonthTabGroupComponent.unrealizedPostingsTabComponent.dataVersionID = this.dataVersionId;
            this.generateEndOfMonthTabGroupComponent.unrealizedPostingsTabComponent.dataVersionMonth = this.dataVersionMonth;
            this.generateEndOfMonthTabGroupComponent.unrealizedPostingsTabComponent.reportType = this.reportType;
            this.generateEndOfMonthTabGroupComponent.unrealizedPostingsTabComponent.reportTypeDescription = this.reportTypeDescription;
        }
        if (this.generateEndOfMonthTabGroupComponent.unrealizedDetailsTabComponent) {
            this.generateEndOfMonthTabGroupComponent.unrealizedDetailsTabComponent.dataVersionID = this.dataVersionId;
            this.generateEndOfMonthTabGroupComponent.unrealizedDetailsTabComponent.dataVersionMonth = this.dataVersionMonth;
            this.generateEndOfMonthTabGroupComponent.unrealizedDetailsTabComponent.reportType = this.reportType;
            this.generateEndOfMonthTabGroupComponent.unrealizedDetailsTabComponent.reportTypeDescription = this.reportTypeDescription;
        }
        this.generateEndOfMonthTabGroupComponent.updateCurrentDatabaseBitValue(this.isCurrentDatabase);
        if (this.buttonDisableForPrevilage) {
            this.disableButton = true;
        }
        else {
            this.disableButton = this.buttonEditable;
        }
        if (this.reportType === _shared_enums_report_type_enum__WEBPACK_IMPORTED_MODULE_7__["ReportType"].UnRealized) {
            this.generateEndOfMonthTabGroupComponent.overviewTabComponent.getTradeCostListPosting(this.dataVersionId);
        }
    };
    GenerateEndOfMonthSummaryComponent.prototype.filtered = function (filter) {
        this.departmentDropdownComponent.objects = this.getDistinctString(filter.departmentCode);
        this.charterDropdownComponent.objects = this.getDistinctString(filter.charterCode);
        this.costTypeDropdownComponent.objects = this.getDistinctString(filter.costType);
        this.associatedClientDropdownComponent.objects = this.getDistinctString(filter.associatedClient);
    };
    GenerateEndOfMonthSummaryComponent.prototype.stopPosting = function (generateMonthPosting) {
        this.disableButton = generateMonthPosting;
    };
    GenerateEndOfMonthSummaryComponent.prototype.getDistinctString = function (list) {
        var distinctList = [];
        var filteredList = [];
        list.forEach(function (item) {
            if (distinctList.indexOf(item.desc) === -1) {
                distinctList.push(item.desc);
                filteredList.push(item);
            }
        });
        return filteredList;
    };
    GenerateEndOfMonthSummaryComponent.prototype.checkIfUserHasRequiredPrivileges = function (userCompanyPrivilege) {
        if (this.authorizationService.isUserAllowedForCompany(this.company)) {
            var userPermissionLevel = this.authorizationService.getPermissionLevel(this.company, userCompanyPrivilege.privilegeName, userCompanyPrivilege.privilegeParentLevelOne, userCompanyPrivilege.privilegeParentLevelTwo);
            if (userPermissionLevel <= userCompanyPrivilege.permission) {
                return true;
            }
        }
        return false;
    };
    GenerateEndOfMonthSummaryComponent.prototype.onDiscardButtonClicked = function () {
        this.router.navigate(['/' + this.companyManager.getCurrentCompanyId() + '/financial/cut-off/generate-end-of-month']);
    };
    GenerateEndOfMonthSummaryComponent.prototype.onGeneratePostingsButtonClicked = function () {
        this.generateEndOfMonthTabGroupComponent.overviewTabComponent.onGenerateTADocument();
    };
    GenerateEndOfMonthSummaryComponent.prototype.onSelectedIndexChanged1 = function (tabIndex) {
        this.tabIndex = tabIndex;
    };
    GenerateEndOfMonthSummaryComponent.prototype.onApplyButtonClicked = function () {
        if (this.departmentDropdownComponent.allSelected &&
            this.charterDropdownComponent.allSelected &&
            this.costTypeDropdownComponent.allSelected &&
            this.associatedClientDropdownComponent.allSelected) {
            this.isFilterApplied = false;
            this.generateEndOfMonthTabGroupComponent.isFilterApplied = false;
        }
        else {
            this.isFilterApplied = true;
            this.generateEndOfMonthTabGroupComponent.isFilterApplied = true;
        }
        this.selectedFilters();
        if (this.reportType === _shared_enums_report_type_enum__WEBPACK_IMPORTED_MODULE_7__["ReportType"].Realized) {
            this.originalOverviewGridRows = this.generateEndOfMonthTabGroupComponent.overviewTabComponent.originalOverviewGridRows;
            this.originalDetailsGridRows = this.generateEndOfMonthTabGroupComponent.detailsTabComponent.originalDetailsGridRows;
            this.originalPostingsGridRows = this.generateEndOfMonthTabGroupComponent.postingsTabComponent.originalPostingsGridRows;
            switch (this.tabIndex) {
                case 0: {
                    this.generateEndOfMonthTabGroupComponent.
                        getFilteredData(0, this.applyFilter(this.originalOverviewGridRows));
                    this.generateEndOfMonthTabGroupComponent.overviewTabComponent.
                        calculateGrandTotal(this.applyFilter(this.originalOverviewGridRows));
                    break;
                }
                case 1: {
                    this.generateEndOfMonthTabGroupComponent.
                        getFilteredData(1, this.applyFilter(this.originalDetailsGridRows));
                    break;
                }
                case 2: {
                    this.generateEndOfMonthTabGroupComponent.
                        getFilteredData(2, this.applyFilter(this.originalPostingsGridRows));
                    break;
                }
            }
        }
        else {
            this.originalDetailsGridRows = this.generateEndOfMonthTabGroupComponent.unrealizedDetailsTabComponent.originalDetailsGridRows;
            this.originalPostingsGridRows = this.generateEndOfMonthTabGroupComponent.unrealizedPostingsTabComponent.originalPostingsGridRows;
            switch (this.tabIndex) {
                case 0: {
                    this.generateEndOfMonthTabGroupComponent.
                        getFilteredData(1, this.applyFilter(this.originalDetailsGridRows));
                    break;
                }
                case 1: {
                    this.generateEndOfMonthTabGroupComponent.
                        getFilteredData(2, this.applyFilter(this.originalPostingsGridRows));
                    break;
                }
            }
        }
    };
    GenerateEndOfMonthSummaryComponent.prototype.selectedFilters = function () {
        this.selectedDepartments = this.departmentDropdownComponent.allSelected ? this.departmentDropdownComponent.objects :
            this.departmentDropdownComponent.selectedValues;
        this.selectedCharter = this.charterDropdownComponent.allSelected ? this.charterDropdownComponent.objects :
            this.charterDropdownComponent.selectedValues;
        this.selectedCostType = this.costTypeDropdownComponent.allSelected ? this.costTypeDropdownComponent.objects :
            this.costTypeDropdownComponent.selectedValues;
        this.selectedAssociatedClient = this.associatedClientDropdownComponent.allSelected ?
            this.associatedClientDropdownComponent.objects :
            this.associatedClientDropdownComponent.selectedValues;
    };
    GenerateEndOfMonthSummaryComponent.prototype.applyFilter = function (filterRows) {
        var _this = this;
        if (this.isFilterApplied) {
            var deptFilter_1 = [];
            var charterFilter_1 = [];
            var costTypeFilter_1 = [];
            var associatedClientFilter_1 = [];
            filterRows.filter(function (x) {
                var deptCode = _this.selectedDepartments.find(function (y) { return y.desc === x.departmentCode; });
                if (deptCode) {
                    if (x.departmentCode === deptCode.desc) {
                        deptFilter_1.push(x);
                    }
                }
            });
            filterRows = deptFilter_1;
            filterRows.filter(function (x) {
                var charterCode = _this.selectedCharter.find(function (y) { return y.desc === x.charterCode; });
                if (charterCode) {
                    if (x.charterCode === charterCode.desc) {
                        charterFilter_1.push(x);
                    }
                }
                else {
                    if (x.charterCode === null) {
                        charterFilter_1.push(x);
                    }
                }
            });
            filterRows = charterFilter_1;
            filterRows.filter(function (x) {
                var costTypeCode = _this.selectedCostType.find(function (y) { return y.desc === x.costType; });
                if (costTypeCode) {
                    if (x.costType === costTypeCode.desc) {
                        costTypeFilter_1.push(x);
                    }
                }
            });
            filterRows = costTypeFilter_1;
            filterRows.filter(function (x) {
                var associatedClientCode = _this.selectedAssociatedClient.find(function (y) { return y.desc === x.associatedClient; });
                if (associatedClientCode) {
                    if (x.associatedClient === associatedClientCode.desc) {
                        associatedClientFilter_1.push(x);
                    }
                }
                else {
                    if (x.associatedClient === null) {
                        associatedClientFilter_1.push(x);
                    }
                }
            });
            filterRows = associatedClientFilter_1;
            return filterRows;
        }
        else {
            filterRows = [];
            return filterRows;
        }
    };
    GenerateEndOfMonthSummaryComponent.prototype.onDepartmentSelectionChanges = function () {
        var _this = this;
        var deptFilter = [];
        var charterFilter = [];
        var costTypeFilter = [];
        var associatedClientFilter = [];
        this.selectedFilters();
        this.originalOverviewGridRows = this.generateEndOfMonthTabGroupComponent.overviewTabComponent.originalOverviewGridRows;
        this.originalOverviewGridRows.filter(function (x) {
            var deptCode = _this.selectedDepartments.find(function (y) { return y.desc === x.departmentCode; });
            if (deptCode) {
                if (x.departmentCode === deptCode.desc) {
                    deptFilter.push(x);
                }
            }
        });
        this.charterDropdownComponent.formCtrl.reset();
        this.costTypeDropdownComponent.formCtrl.reset();
        this.associatedClientDropdownComponent.formCtrl.reset();
        var count = 1;
        deptFilter.forEach(function (x) {
            if (x.charterCode) {
                var charter = new _shared_entities_filter_value_generate_end_month_entity__WEBPACK_IMPORTED_MODULE_5__["FilterValueGenerateEndMonth"]();
                charter.desc = x.charterCode;
                charter.value = count;
                charterFilter.push(charter);
            }
            if (x.costType) {
                var cost = new _shared_entities_filter_value_generate_end_month_entity__WEBPACK_IMPORTED_MODULE_5__["FilterValueGenerateEndMonth"]();
                cost.desc = x.costType;
                cost.value = count;
                costTypeFilter.push(cost);
            }
            if (x.associatedClient) {
                var client = new _shared_entities_filter_value_generate_end_month_entity__WEBPACK_IMPORTED_MODULE_5__["FilterValueGenerateEndMonth"]();
                client.desc = x.associatedClient;
                client.value = count;
                associatedClientFilter.push(client);
            }
            count = count + 1;
        });
        this.charterDropdownComponent.objects = this.getDistinctString(charterFilter);
        this.costTypeDropdownComponent.objects = this.getDistinctString(costTypeFilter);
        this.associatedClientDropdownComponent.objects = this.getDistinctString(associatedClientFilter);
        if (this.departmentDropdownComponent.allSelected) {
            this.charterDropdownComponent.setSelectedValue(true, this.getDistinctString(charterFilter));
            this.costTypeDropdownComponent.setSelectedValue(true, this.getDistinctString(costTypeFilter));
            this.associatedClientDropdownComponent.setSelectedValue(true, this.getDistinctString(associatedClientFilter));
        }
        else {
            this.charterDropdownComponent.setSelectedValue(false, this.getDistinctString(charterFilter));
            this.costTypeDropdownComponent.setSelectedValue(false, this.getDistinctString(costTypeFilter));
            this.associatedClientDropdownComponent.setSelectedValue(false, this.getDistinctString(associatedClientFilter));
        }
    };
    GenerateEndOfMonthSummaryComponent.prototype.onCharterSelectionChanges = function () {
        var _this = this;
        var charterFilter = [];
        var costTypeFilter = [];
        var associatedClientFilter = [];
        this.selectedFilters();
        this.originalOverviewGridRows = this.generateEndOfMonthTabGroupComponent.overviewTabComponent.originalOverviewGridRows;
        this.originalPostingsGridRows = this.generateEndOfMonthTabGroupComponent.postingsTabComponent.originalPostingsGridRows;
        this.originalOverviewGridRows.filter(function (x) {
            var charterCode = _this.selectedCharter.find(function (y) { return y.desc === x.charterCode; });
            if (charterCode) {
                if (x.charterCode === charterCode.desc) {
                    charterFilter.push(x);
                }
            }
        });
        this.originalPostingsGridRows.filter(function (x) {
            var charterCode = _this.selectedCharter.find(function (y) { return y.desc === x.charterCode; });
            if (charterCode) {
                if (x.charterCode === charterCode.desc) {
                    charterFilter.push(x);
                }
            }
        });
        this.costTypeDropdownComponent.formCtrl.reset();
        this.associatedClientDropdownComponent.formCtrl.reset();
        var count = 1;
        charterFilter.forEach(function (x) {
            if (x.costType) {
                var cost = new _shared_entities_filter_value_generate_end_month_entity__WEBPACK_IMPORTED_MODULE_5__["FilterValueGenerateEndMonth"]();
                cost.desc = x.costType;
                cost.value = count;
                costTypeFilter.push(cost);
            }
            if (x.associatedClient) {
                var client = new _shared_entities_filter_value_generate_end_month_entity__WEBPACK_IMPORTED_MODULE_5__["FilterValueGenerateEndMonth"]();
                client.desc = x.associatedClient;
                client.value = count;
                associatedClientFilter.push(client);
            }
            count = count + 1;
        });
        this.costTypeDropdownComponent.objects = this.getDistinctString(costTypeFilter);
        this.associatedClientDropdownComponent.objects = this.getDistinctString(associatedClientFilter);
        if (this.charterDropdownComponent.allSelected) {
            this.costTypeDropdownComponent.setSelectedValue(true, this.getDistinctString(costTypeFilter));
            this.associatedClientDropdownComponent.setSelectedValue(true, this.getDistinctString(associatedClientFilter));
        }
        else {
            this.costTypeDropdownComponent.setSelectedValue(false, this.getDistinctString(costTypeFilter));
            this.associatedClientDropdownComponent.setSelectedValue(false, this.getDistinctString(associatedClientFilter));
        }
    };
    GenerateEndOfMonthSummaryComponent.prototype.onCostTypeSelectionChanges = function () {
        var _this = this;
        var costTypeFilter = [];
        var associatedClientFilter = [];
        this.selectedFilters();
        this.originalOverviewGridRows = this.generateEndOfMonthTabGroupComponent.overviewTabComponent.originalOverviewGridRows;
        this.originalPostingsGridRows = this.generateEndOfMonthTabGroupComponent.postingsTabComponent.originalPostingsGridRows;
        this.originalOverviewGridRows.filter(function (x) {
            var costTypeCode = _this.selectedCostType.find(function (y) { return y.desc === x.costType; });
            if (costTypeCode) {
                if (x.costType === costTypeCode.desc) {
                    costTypeFilter.push(x);
                }
            }
        });
        this.originalPostingsGridRows.filter(function (x) {
            var costTypeCode = _this.selectedCostType.find(function (y) { return y.desc === x.costType; });
            if (costTypeCode) {
                if (x.costType === costTypeCode.desc) {
                    costTypeFilter.push(x);
                }
            }
        });
        this.associatedClientDropdownComponent.formCtrl.reset();
        var count = 1;
        costTypeFilter.forEach(function (x) {
            if (x.associatedClient) {
                var client = new _shared_entities_filter_value_generate_end_month_entity__WEBPACK_IMPORTED_MODULE_5__["FilterValueGenerateEndMonth"]();
                client.desc = x.associatedClient;
                client.value = count;
                associatedClientFilter.push(client);
            }
            count = count + 1;
        });
        this.associatedClientDropdownComponent.objects = this.getDistinctString(associatedClientFilter);
        if (this.costTypeDropdownComponent.allSelected) {
            this.associatedClientDropdownComponent.setSelectedValue(true, this.getDistinctString(associatedClientFilter));
        }
        else {
            this.associatedClientDropdownComponent.setSelectedValue(false, this.getDistinctString(associatedClientFilter));
        }
    };
    GenerateEndOfMonthSummaryComponent.prototype.onMappingErrorChange = function (value) {
        this.isMappingError = value;
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('generateEndOfMonthTabGroup'),
        __metadata("design:type", _generate_end_of_month_tab_group_generate_end_of_month_tab_group_component__WEBPACK_IMPORTED_MODULE_14__["GenerateEndOfMonthTabGroupComponent"])
    ], GenerateEndOfMonthSummaryComponent.prototype, "generateEndOfMonthTabGroupComponent", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('departmentDropdownComponent'),
        __metadata("design:type", _department_dropdown_department_dropdown_component__WEBPACK_IMPORTED_MODULE_13__["DepartmentDropdownComponent"])
    ], GenerateEndOfMonthSummaryComponent.prototype, "departmentDropdownComponent", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('charterDropdownComponent'),
        __metadata("design:type", _charter_dropdown_charter_dropdown_component__WEBPACK_IMPORTED_MODULE_11__["CharterDropdownComponent"])
    ], GenerateEndOfMonthSummaryComponent.prototype, "charterDropdownComponent", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('costTypeDropdownComponent'),
        __metadata("design:type", _cost_type_dropdown_cost_type_dropdown_component__WEBPACK_IMPORTED_MODULE_12__["CostTypeDropdownComponent"])
    ], GenerateEndOfMonthSummaryComponent.prototype, "costTypeDropdownComponent", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('associatedClientDropdownComponent'),
        __metadata("design:type", _associated_client_dropdown_associated_client_dropdown_component__WEBPACK_IMPORTED_MODULE_10__["AssociatedClientDropdownComponent"])
    ], GenerateEndOfMonthSummaryComponent.prototype, "associatedClientDropdownComponent", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Array)
    ], GenerateEndOfMonthSummaryComponent.prototype, "objects", void 0);
    GenerateEndOfMonthSummaryComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'atlas-generate-end-of-month-summary',
            template: __webpack_require__(/*! ./generate-end-of-month-summary.component.html */ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/generate-end-of-month-summary.component.html"),
            styles: [__webpack_require__(/*! ./generate-end-of-month-summary.component.scss */ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/generate-end-of-month-summary.component.scss")],
        }),
        __metadata("design:paramtypes", [_shared_services_form_configuration_provider_service__WEBPACK_IMPORTED_MODULE_8__["FormConfigurationProviderService"],
            _angular_router__WEBPACK_IMPORTED_MODULE_1__["ActivatedRoute"],
            _angular_router__WEBPACK_IMPORTED_MODULE_1__["Router"],
            _core_services_authorization_service__WEBPACK_IMPORTED_MODULE_2__["AuthorizationService"],
            _core_services_company_manager_service__WEBPACK_IMPORTED_MODULE_3__["CompanyManagerService"],
            _shared_services_title_service__WEBPACK_IMPORTED_MODULE_9__["TitleService"]])
    ], GenerateEndOfMonthSummaryComponent);
    return GenerateEndOfMonthSummaryComponent;
}(_shared_components_base_form_component_base_form_component_component__WEBPACK_IMPORTED_MODULE_4__["BaseFormComponent"]));



/***/ }),

/***/ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/generate-end-of-month-tab-group/generate-end-of-month-tab-group.component.html":
/*!************************************************************************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/generate-end-of-month-tab-group/generate-end-of-month-tab-group.component.html ***!
  \************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"main-container\">\r\n    <div *ngIf=\"showErrorBanners && !isCurrentDataBase\">\r\n        <div *ngIf=\"clientAccountMappingErrorMessages.length > 0\">\r\n            <mat-card class=\"warning-card warning-banner-card\">\r\n                <div class=\"warning-circle-icon\">\r\n                    <mat-icon>warning_outline</mat-icon>\r\n                </div>\r\n                <mat-card-header>\r\n                    <mat-card-title>\r\n                        <h4 class=\"no-margin\">Mapping Error for C2C code(s)</h4>\r\n                    </mat-card-title>\r\n\r\n                    <mat-card-subtitle>\r\n                        This document cannot be posted due to missing C2C(s) for\r\n                        {{clientAccountMappingErrorMessages}}. Please contact the accountant.\r\n                    </mat-card-subtitle>\r\n                    <button class=\"remove-button\"\r\n                            mat-button\r\n                            (click)=\"onWarningRemoveButtonClicked($event)\">REMOVE\r\n                    </button>\r\n                </mat-card-header>\r\n            </mat-card>\r\n        </div>\r\n\r\n        <div *ngIf=\"costTypeMappingErrorMessages.length > 0\">\r\n            <mat-card class=\"warning-card warning-banner-card\">\r\n                <div class=\"warning-circle-icon\">\r\n                    <mat-icon>warning_outline</mat-icon>\r\n                </div>\r\n                <mat-card-header>\r\n                    <mat-card-title>\r\n                        <h4 class=\"no-margin\">Mapping Error for Cost Type code(s)</h4>\r\n                    </mat-card-title>\r\n\r\n                    <mat-card-subtitle>\r\n                        This document cannot be posted due to missing cost type code(s) for\r\n                        {{costTypeMappingErrorMessages}}. Please contact the accountant.\r\n                    </mat-card-subtitle>\r\n                    <button class=\"remove-button\"\r\n                            mat-button\r\n                            (click)=\"onWarningRemoveButtonClicked($event)\">REMOVE\r\n                    </button>\r\n                </mat-card-header>\r\n            </mat-card>\r\n        </div>\r\n\r\n        <div *ngIf=\"departmentMappingErrorMessages.length > 0\">\r\n            <mat-card class=\"warning-card warning-banner-card\">\r\n                <div class=\"warning-circle-icon\">\r\n                    <mat-icon>warning_outline</mat-icon>\r\n                </div>\r\n                <mat-card-header>\r\n                    <mat-card-title>\r\n                        <h4 class=\"no-margin\">Mapping Error for Department code(s)</h4>\r\n                    </mat-card-title>\r\n\r\n                    <mat-card-subtitle>\r\n                        This document cannot be posted due to department code(s) for\r\n                        {{departmentMappingErrorMessages}}. Please contact the accountant.\r\n                    </mat-card-subtitle>\r\n                    <button class=\"remove-button\"\r\n                            mat-button\r\n                            (click)=\"onWarningRemoveButtonClicked($event)\">REMOVE\r\n                    </button>\r\n                </mat-card-header>\r\n            </mat-card>\r\n        </div>\r\n\r\n        <div *ngIf=\"nominalAccountMappingErrorMessages.length > 0\">\r\n            <mat-card class=\"warning-card warning-banner-card\">\r\n                <div class=\"warning-circle-icon\">\r\n                    <mat-icon>warning_outline</mat-icon>\r\n                </div>\r\n                <mat-card-header>\r\n                    <mat-card-title>\r\n                        <h4 class=\"no-margin\">Mapping Error for Nominal Account code(s)</h4>\r\n                    </mat-card-title>\r\n\r\n                    <mat-card-subtitle>\r\n                        This document cannot be posted due to missing nominal account(s) for\r\n                        {{nominalAccountMappingErrorMessages}}.Please contact the accountant.\r\n                    </mat-card-subtitle>\r\n                    <button class=\"remove-button\"\r\n                            mat-button\r\n                            (click)=\"onWarningRemoveButtonClicked($event)\">REMOVE\r\n                    </button>\r\n                </mat-card-header>\r\n            </mat-card>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<div>\r\n    <div [ngClass]=\"{'hidden-during-loading':isOverviewEnable()}\">\r\n        <mat-tab-group [selectedIndex]=\"tabIndex\"\r\n                       (selectedIndexChange)=onSelectedIndexChanged($event)>\r\n            <mat-tab label=\"Overview\"></mat-tab>\r\n            <mat-tab label=\"Details\"></mat-tab>\r\n            <mat-tab label=\"Postings\"></mat-tab>\r\n        </mat-tab-group>\r\n\r\n        <div class=\"content-tab\">\r\n            <mat-tab-group [selectedIndex]=\"tabIndex\">\r\n                <mat-tab>\r\n                    <atlas-overview-tab (filteredGrid)=\"filteredGrid($event)\"\r\n                                        (disableGeneratePosting)=\"disableGeneratePosting($event)\"\r\n                                        (applyButtonClicked)=\"applyButtonClicked()\"\r\n                                        (mappingError)=\"generateMappingErrorForMonthEnd($event)\"\r\n                                        #overviewTabComponent></atlas-overview-tab>\r\n                </mat-tab>\r\n                <mat-tab>\r\n                    <atlas-details-tab #detailsTabComponent\r\n                                       (mappingError)=\"generateMappingErrorForMonthEnd($event)\"\r\n                                       (applyButtonClicked)=\"applyButtonClicked()\"></atlas-details-tab>\r\n                </mat-tab>\r\n                <mat-tab>\r\n                    <atlas-postings-tab #postingsTabComponent\r\n                                        (mappingError)=\"generateMappingErrorForMonthEnd($event)\"\r\n                                        (applyButtonClicked)=\"applyButtonClicked()\"></atlas-postings-tab>\r\n                </mat-tab>\r\n            </mat-tab-group>\r\n        </div>\r\n    </div>\r\n\r\n    <div [ngClass]=\"{'hidden-during-loading':!isOverviewEnable()}\">\r\n        <mat-tab-group [selectedIndex]=\"tabIndex\"\r\n                       (selectedIndexChange)=onSelectedIndexChanged($event)>\r\n\r\n            <mat-tab label=\"Details\"></mat-tab>\r\n            <mat-tab label=\"Postings\"></mat-tab>\r\n        </mat-tab-group>\r\n        <div class=\"content-tab\">\r\n            <mat-tab-group [selectedIndex]=\"tabIndex\">\r\n\r\n                <mat-tab>\r\n                    <atlas-details-tab #unrealizedDetailsTabComponent\r\n                                       (filteredGrid)=\"filteredGrid($event)\"\r\n                                       (mappingError)=\"generateMappingErrorForMonthEnd($event)\"\r\n                                       (applyButtonClicked)=\"applyButtonClicked()\"></atlas-details-tab>\r\n                </mat-tab>\r\n                <mat-tab>\r\n                    <atlas-postings-tab #unrealizedPostingsTabComponent\r\n                                        (mappingError)=\"generateMappingErrorForMonthEnd($event)\"\r\n                                        (applyButtonClicked)=\"applyButtonClicked()\"></atlas-postings-tab>\r\n                </mat-tab>\r\n            </mat-tab-group>\r\n        </div>\r\n    </div>\r\n</div>"

/***/ }),

/***/ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/generate-end-of-month-tab-group/generate-end-of-month-tab-group.component.scss":
/*!************************************************************************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/generate-end-of-month-tab-group/generate-end-of-month-tab-group.component.scss ***!
  \************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "mat-card.warning-card.mat-card {\n  padding: 0 !important;\n  height: 75px;\n  display: flex;\n  align-items: center; }\n  mat-card.warning-card.mat-card mat-card-header.mat-card-header mat-card-title.mat-card-title {\n    margin: 0;\n    padding: 8px 0; }\n  mat-card.warning-card.mat-card mat-card-header.mat-card-header h4 {\n    margin: 0; }\n  mat-card.warning-card.mat-card mat-card-header.mat-card-header mat-card-subtitle.mat-card-subtitle {\n    margin: 0; }\n  button.remove-button.mat-button {\n  position: absolute;\n  right: 10px;\n  bottom: 15px; }\n"

/***/ }),

/***/ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/generate-end-of-month-tab-group/generate-end-of-month-tab-group.component.ts":
/*!**********************************************************************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/generate-end-of-month-tab-group/generate-end-of-month-tab-group.component.ts ***!
  \**********************************************************************************************************************************************************************************/
/*! exports provided: GenerateEndOfMonthTabGroupComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GenerateEndOfMonthTabGroupComponent", function() { return GenerateEndOfMonthTabGroupComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _shared_enums_report_type_enum__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../../shared/enums/report-type.enum */ "./Client/app/shared/enums/report-type.enum.ts");
/* harmony import */ var _tabs_details_tab_details_tab_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../tabs/details-tab/details-tab.component */ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/tabs/details-tab/details-tab.component.ts");
/* harmony import */ var _tabs_overview_tab_overview_tab_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../tabs/overview-tab/overview-tab.component */ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/tabs/overview-tab/overview-tab.component.ts");
/* harmony import */ var _tabs_postings_tab_postings_tab_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../tabs/postings-tab/postings-tab.component */ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/tabs/postings-tab/postings-tab.component.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






var GenerateEndOfMonthTabGroupComponent = /** @class */ (function () {
    function GenerateEndOfMonthTabGroupComponent(route) {
        this.route = route;
        this.filtered = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.stopPosting = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.applyButton = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.tabIndexNumber = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.mappingErrorChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.isFilterApplied = false;
        this.tabIndex = 0;
        this.isCurrentDataBase = false;
        this.showErrorBanners = false;
        this.costTypeMappingErrorMessages = [];
        this.departmentMappingErrorMessages = [];
        this.nominalAccountMappingErrorMessages = [];
        this.clientAccountMappingErrorMessages = [];
    }
    GenerateEndOfMonthTabGroupComponent.prototype.ngOnInit = function () {
        this.company = this.route.snapshot.paramMap.get('company');
        if (this.reportType === _shared_enums_report_type_enum__WEBPACK_IMPORTED_MODULE_2__["ReportType"].Realized) {
            this.onSelectedButtonChanged(this.tabIndex);
        }
        else {
            this.onSelectedButtonChanged(this.tabIndex + 1);
        }
    };
    GenerateEndOfMonthTabGroupComponent.prototype.isOverviewEnable = function () {
        return ((this.reportType === _shared_enums_report_type_enum__WEBPACK_IMPORTED_MODULE_2__["ReportType"].Realized) ? false : true);
    };
    GenerateEndOfMonthTabGroupComponent.prototype.filteredGrid = function (filter) {
        this.filtered.emit(filter);
    };
    GenerateEndOfMonthTabGroupComponent.prototype.disableGeneratePosting = function (generateMonthPosting) {
        this.stopPosting.emit(generateMonthPosting);
    };
    GenerateEndOfMonthTabGroupComponent.prototype.applyButtonClicked = function () {
        this.applyButton.emit();
    };
    GenerateEndOfMonthTabGroupComponent.prototype.onSelectedIndexChanged = function (value) {
        this.tabIndex = value;
        this.tabIndexNumber.emit(this.tabIndex);
        if (this.reportType === _shared_enums_report_type_enum__WEBPACK_IMPORTED_MODULE_2__["ReportType"].Realized) {
            this.onSelectedButtonChanged(this.tabIndex);
        }
        else {
            this.onSelectedButtonChanged(this.tabIndex + 1);
        }
    };
    GenerateEndOfMonthTabGroupComponent.prototype.onSelectedButtonChanged = function (tabIndex) {
        switch (tabIndex) {
            case 0:
                this.overviewTabComponent.getTradeCostListOverview(null, this.isFilterApplied);
                break;
            case 1:
                if (this.reportType === _shared_enums_report_type_enum__WEBPACK_IMPORTED_MODULE_2__["ReportType"].Realized) {
                    this.detailsTabComponent.getTradeCostListDetails(null, this.isFilterApplied);
                }
                else if (this.reportType === _shared_enums_report_type_enum__WEBPACK_IMPORTED_MODULE_2__["ReportType"].UnRealized) {
                    this.unrealizedDetailsTabComponent.getTradeCostListDetails(null, this.isFilterApplied);
                }
                break;
            case 2:
                if (this.reportType === _shared_enums_report_type_enum__WEBPACK_IMPORTED_MODULE_2__["ReportType"].Realized) {
                    this.postingsTabComponent.getTradeCostListPostings(null, this.isFilterApplied);
                }
                else if (this.reportType === _shared_enums_report_type_enum__WEBPACK_IMPORTED_MODULE_2__["ReportType"].UnRealized) {
                    this.unrealizedPostingsTabComponent.getTradeCostListPostings(null, this.isFilterApplied);
                }
                break;
        }
    };
    GenerateEndOfMonthTabGroupComponent.prototype.getFilteredData = function (tabIndex, filteredGridRows) {
        switch (tabIndex) {
            case 0:
                this.overviewTabComponent.getTradeCostListOverview(filteredGridRows, this.isFilterApplied);
                break;
            case 1:
                if (this.reportType === _shared_enums_report_type_enum__WEBPACK_IMPORTED_MODULE_2__["ReportType"].Realized) {
                    this.detailsTabComponent.getTradeCostListDetails(filteredGridRows, this.isFilterApplied);
                }
                else if (this.reportType === _shared_enums_report_type_enum__WEBPACK_IMPORTED_MODULE_2__["ReportType"].UnRealized) {
                    this.unrealizedDetailsTabComponent.getTradeCostListDetails(filteredGridRows, this.isFilterApplied);
                }
                break;
            case 2:
                if (this.reportType === _shared_enums_report_type_enum__WEBPACK_IMPORTED_MODULE_2__["ReportType"].Realized) {
                    this.postingsTabComponent.getTradeCostListPostings(filteredGridRows, this.isFilterApplied);
                }
                else if (this.reportType === _shared_enums_report_type_enum__WEBPACK_IMPORTED_MODULE_2__["ReportType"].UnRealized) {
                    this.unrealizedPostingsTabComponent.getTradeCostListPostings(filteredGridRows, this.isFilterApplied);
                }
                break;
        }
    };
    GenerateEndOfMonthTabGroupComponent.prototype.generateMappingErrorForMonthEnd = function (tradeCostMonthEndMappingErrors) {
        var _this = this;
        var mappingErrors = tradeCostMonthEndMappingErrors.filter(function (t) { return t.isMappingError; });
        this.clientAccountMappingErrorMessages = [];
        this.departmentMappingErrorMessages = [];
        this.costTypeMappingErrorMessages = [];
        this.nominalAccountMappingErrorMessages = [];
        if (mappingErrors && mappingErrors.length > 0) {
            var errorMessage = '';
            mappingErrors.forEach(function (e) {
                if (e.c2CCodeIsInMappingError) {
                    _this.clientAccountMappingErrorMessages.push(e.accountingDocumentLineClientAccount);
                }
                if (e.costAlternativeCodeIsInMappingError) {
                    _this.costTypeMappingErrorMessages.push(e.accountingDocumentLineCostTypeCode);
                }
                if (e.departmentAlternativeCodeIsInMappingError) {
                    _this.departmentMappingErrorMessages.push(e.accountingDocumentLineDepartmentCode);
                }
                if (e.nominalAlternativeAccountIsInMappingError) {
                    _this.nominalAccountMappingErrorMessages.push(e.accountingDocumentLineAccountReference);
                }
            });
            if (this.clientAccountMappingErrorMessages.length > 0) {
                this.clientAccountMappingErrorMessages = this.clientAccountMappingErrorMessages.filter(function (x, i, a) { return x && a.indexOf(x) === i; });
            }
            if (this.costTypeMappingErrorMessages.length > 0) {
                this.costTypeMappingErrorMessages = this.costTypeMappingErrorMessages.filter(function (x, i, a) { return x && a.indexOf(x) === i; });
            }
            if (this.departmentMappingErrorMessages.length > 0) {
                this.departmentMappingErrorMessages = this.departmentMappingErrorMessages.filter(function (x, i, a) { return x && a.indexOf(x) === i; });
            }
            if (this.nominalAccountMappingErrorMessages.length > 0) {
                this.nominalAccountMappingErrorMessages = this.nominalAccountMappingErrorMessages.filter(function (x, i, a) { return x && a.indexOf(x) === i; });
            }
            if (this.clientAccountMappingErrorMessages.length > 0
                || this.costTypeMappingErrorMessages.length > 0
                || this.departmentMappingErrorMessages.length > 0
                || this.nominalAccountMappingErrorMessages.length > 0) {
                this.showErrorBanners = true;
            }
            else {
                this.showErrorBanners = false;
            }
        }
        else {
            this.showErrorBanners = false;
        }
        this.mappingErrorChange.emit(this.showErrorBanners);
    };
    GenerateEndOfMonthTabGroupComponent.prototype.onWarningRemoveButtonClicked = function (params) {
        if (params) {
            params.currentTarget.parentElement.parentElement.remove();
        }
    };
    GenerateEndOfMonthTabGroupComponent.prototype.updateCurrentDatabaseBitValue = function (value) {
        this.isCurrentDataBase = value;
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('overviewTabComponent'),
        __metadata("design:type", _tabs_overview_tab_overview_tab_component__WEBPACK_IMPORTED_MODULE_4__["OverviewTabComponent"])
    ], GenerateEndOfMonthTabGroupComponent.prototype, "overviewTabComponent", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('detailsTabComponent'),
        __metadata("design:type", _tabs_details_tab_details_tab_component__WEBPACK_IMPORTED_MODULE_3__["DetailsTabComponent"])
    ], GenerateEndOfMonthTabGroupComponent.prototype, "detailsTabComponent", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('postingsTabComponent'),
        __metadata("design:type", _tabs_postings_tab_postings_tab_component__WEBPACK_IMPORTED_MODULE_5__["PostingsTabComponent"])
    ], GenerateEndOfMonthTabGroupComponent.prototype, "postingsTabComponent", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('unrealizedDetailsTabComponent'),
        __metadata("design:type", _tabs_details_tab_details_tab_component__WEBPACK_IMPORTED_MODULE_3__["DetailsTabComponent"])
    ], GenerateEndOfMonthTabGroupComponent.prototype, "unrealizedDetailsTabComponent", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('unrealizedPostingsTabComponent'),
        __metadata("design:type", _tabs_postings_tab_postings_tab_component__WEBPACK_IMPORTED_MODULE_5__["PostingsTabComponent"])
    ], GenerateEndOfMonthTabGroupComponent.prototype, "unrealizedPostingsTabComponent", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], GenerateEndOfMonthTabGroupComponent.prototype, "filtered", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], GenerateEndOfMonthTabGroupComponent.prototype, "stopPosting", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], GenerateEndOfMonthTabGroupComponent.prototype, "applyButton", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], GenerateEndOfMonthTabGroupComponent.prototype, "tabIndexNumber", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], GenerateEndOfMonthTabGroupComponent.prototype, "mappingErrorChange", void 0);
    GenerateEndOfMonthTabGroupComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'atlas-generate-end-of-month-tab-group',
            template: __webpack_require__(/*! ./generate-end-of-month-tab-group.component.html */ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/generate-end-of-month-tab-group/generate-end-of-month-tab-group.component.html"),
            styles: [__webpack_require__(/*! ./generate-end-of-month-tab-group.component.scss */ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/generate-end-of-month-tab-group/generate-end-of-month-tab-group.component.scss")],
        }),
        __metadata("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_1__["ActivatedRoute"]])
    ], GenerateEndOfMonthTabGroupComponent);
    return GenerateEndOfMonthTabGroupComponent;
}());



/***/ }),

/***/ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/settlement-currency-dropdown/settlement-currency-dropdown.component.html":
/*!******************************************************************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/settlement-currency-dropdown/settlement-currency-dropdown.component.html ***!
  \******************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div [formGroup]=\"formGroup\">\r\n    <mat-form-field>\r\n        <input #input\r\n               matInput\r\n               [matAutocomplete]=\"autocomplete\"\r\n               [placeholder]=\"'Settlement Ccy'\"\r\n               formControlName=\"formCtrl\"\r\n               (focus)=\"clearValueEvent()\"\r\n               (focusout)=\"setValueEvent($event, autocomplete)\"\r\n               (click)=\"openAutocompletePanel()\">\r\n        <mat-autocomplete #autocomplete=\"matAutocomplete\"\r\n                          (optionSelected)=\"selectionChanged($event); input.value=''\">\r\n            <mat-option *ngIf=\"allFilterOption.value.toString().toUpperCase().startsWith(input.value)\"\r\n                        [value]=\"allFilterOption\">\r\n                <mat-checkbox [checked]=\"allSelected\">\r\n                    All\r\n                </mat-checkbox>\r\n            </mat-option>\r\n            <mat-option *ngFor=\"let object of filteredObjects\"\r\n                        [value]=\"object\">\r\n                <mat-checkbox [checked]=\"allSelected ? true : isSelected(object)\">\r\n                    <span *ngIf=\"displayCode\">{{ object[valueProperty] }}</span>\r\n                    <span *ngIf=\"object[valueProperty] !== null && displayCode\"> | </span>\r\n                    <span>{{ object[displayProperty] }}</span>\r\n                </mat-checkbox>\r\n            </mat-option>\r\n        </mat-autocomplete>\r\n    </mat-form-field>\r\n</div>"

/***/ }),

/***/ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/settlement-currency-dropdown/settlement-currency-dropdown.component.scss":
/*!******************************************************************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/settlement-currency-dropdown/settlement-currency-dropdown.component.scss ***!
  \******************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ""

/***/ }),

/***/ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/settlement-currency-dropdown/settlement-currency-dropdown.component.ts":
/*!****************************************************************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/settlement-currency-dropdown/settlement-currency-dropdown.component.ts ***!
  \****************************************************************************************************************************************************************************/
/*! exports provided: SettlementCurrencyDropdownComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SettlementCurrencyDropdownComponent", function() { return SettlementCurrencyDropdownComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _shared_components_select_multiple_autocomplete_select_multiple_autocomplete_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../../shared/components/select-multiple-autocomplete/select-multiple-autocomplete.component */ "./Client/app/shared/components/select-multiple-autocomplete/select-multiple-autocomplete.component.ts");
/* harmony import */ var _shared_entities_atlas_form_control__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../../shared/entities/atlas-form-control */ "./Client/app/shared/entities/atlas-form-control.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __values = (undefined && undefined.__values) || function (o) {
    var m = typeof Symbol === "function" && o[Symbol.iterator], i = 0;
    if (m) return m.call(o);
    return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
};



var SettlementCurrencyDropdownComponent = /** @class */ (function (_super) {
    __extends(SettlementCurrencyDropdownComponent, _super);
    function SettlementCurrencyDropdownComponent() {
        var _this = _super.call(this) || this;
        _this.objects = [];
        _this.allSelected = true;
        _this.settlementCurrencySelectionChanged = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        _this.formCtrl = new _shared_entities_atlas_form_control__WEBPACK_IMPORTED_MODULE_2__["AtlasFormControl"]('formControl');
        _this.valueProperty = 'value';
        _this.displayProperty = 'desc';
        _this.allFilterOption = {
            value: 0,
            desc: 'All',
        };
        _this.valueIds = [];
        return _this;
    }
    SettlementCurrencyDropdownComponent.prototype.ngOnInit = function () {
        if (this.allSelected) {
            this.selectedValues = this.objects.map(function (o) { return o; });
        }
        this.initForm();
        this.initSettlementCurrency(true);
    };
    SettlementCurrencyDropdownComponent.prototype.initSettlementCurrency = function (isLoad) {
        if (isLoad === void 0) { isLoad = false; }
        if (isLoad) {
            this.selectedValues = this.objects;
        }
        this.setData();
    };
    SettlementCurrencyDropdownComponent.prototype.selectionChanged = function (event) {
        if (!event.option) {
            return;
        }
        var object = event.option.value;
        if (object === this.allFilterOption) {
            this.allSelected = !this.allSelected;
            this.resetSelected();
        }
        else {
            if (!this.isSelected(object)) {
                this.selectedValues.push(object);
            }
            else {
                this.deselect(object);
            }
            this.allSelected = this.selectedValues.length === this.objects.length;
        }
        this.settlementCurrencySelectionChanged.emit();
    };
    SettlementCurrencyDropdownComponent.prototype.setValue = function () {
        var _this = this;
        var e_1, _a;
        this.valueIds = [];
        if (this.allSelected) {
            this.formCtrl.setValue(this.allFilterOption.desc);
        }
        else {
            this.formCtrl.setValue(this.selectedValues.map(function (s) { return s[_this.displayProperty].trim(); }).sort().join(', '));
        }
        try {
            for (var _b = __values(this.selectedValues), _c = _b.next(); !_c.done; _c = _b.next()) {
                var val = _c.value;
                this.valueIds.push(val['value']);
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
    };
    SettlementCurrencyDropdownComponent.prototype.resetSelected = function () {
        this.selectedValues = this.allSelected ? this.objects.map(function (o) { return o; }) : [];
    };
    SettlementCurrencyDropdownComponent.prototype.setSelectedValue = function (allSelected, settlementCurrency) {
        if (settlementCurrency) {
            this.allSelected = allSelected;
            this.selectedValues = settlementCurrency;
            this.setValue();
            this.filteredObjects = this.selectedValues;
        }
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Array)
    ], SettlementCurrencyDropdownComponent.prototype, "objects", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], SettlementCurrencyDropdownComponent.prototype, "allSelected", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], SettlementCurrencyDropdownComponent.prototype, "settlementCurrencySelectionChanged", void 0);
    SettlementCurrencyDropdownComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'atlas-settlement-currency-dropdown',
            template: __webpack_require__(/*! ./settlement-currency-dropdown.component.html */ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/settlement-currency-dropdown/settlement-currency-dropdown.component.html"),
            styles: [__webpack_require__(/*! ./settlement-currency-dropdown.component.scss */ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/settlement-currency-dropdown/settlement-currency-dropdown.component.scss")],
        }),
        __metadata("design:paramtypes", [])
    ], SettlementCurrencyDropdownComponent);
    return SettlementCurrencyDropdownComponent;
}(_shared_components_select_multiple_autocomplete_select_multiple_autocomplete_component__WEBPACK_IMPORTED_MODULE_1__["SelectMultipleAutocompleteComponent"]));



/***/ }),

/***/ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/tabs/details-tab/details-tab.component.html":
/*!*************************************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/tabs/details-tab/details-tab.component.html ***!
  \*************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<mat-card>\r\n    <div fxLayout=\"row\"\r\n         fxLayout.xs=\"column\"\r\n         fxLayoutAlign=\"space-between start\"\r\n         fxLayoutWrap\r\n         class=\"atlas-grid-card-header\">\r\n        <mat-card-title>End of Month Details</mat-card-title>\r\n        <mat-chip-list class=\"chip-list\">\r\n            <mat-chip selected\r\n                      disabled>\r\n                {{dataVersionMonth}}\r\n            </mat-chip>\r\n            <mat-chip selected\r\n                      disabled>\r\n                {{reportTypeDescription}}\r\n            </mat-chip>\r\n        </mat-chip-list>\r\n        <div fxLayout=\"row\"\r\n             fxLayoutAlign=\"end start\">\r\n            <atlas-ag-grid-user-preferences *ngIf=\"detailsGridOptions && detailsGridOptions.columnDefs\"\r\n                                            [gridOptions]=\"detailsGridOptions\"\r\n                                            [company]=\"company\"\r\n                                            [gridId]=\"gridId\"\r\n                                            [sharingEnabled]=\"false\"\r\n                                            [savingEnabled]=\"false\"\r\n                                            [hasColumnHandling]=\"false\"\r\n                                            #userPreferences>\r\n            </atlas-ag-grid-user-preferences>\r\n            <atlas-grid-enlargement *ngIf=\"detailsGridOptions && detailsGridOptions.columnDefs\"\r\n                                    [gridOptions]=\"detailsGridOptions\"\r\n                                    [userPreferencesParameters]=\"gridPreferencesParameters\"\r\n                                    #gridZoom>\r\n            </atlas-grid-enlargement>\r\n        </div>\r\n    </div>\r\n    <mat-card-content>\r\n        <div ag-grid=\"detailsGridOptions\"\r\n             class=\"ag-theme-material pointer-cursor\">\r\n            <ag-grid-angular style=\"height:100%;\"\r\n                             class=\"ag-theme-material\"\r\n                             [columnDefs]=\"detailsGridColumns\"\r\n                             [rowData]=\"detailsGridRows\"\r\n                             [gridOptions]=\"detailsGridOptions\"\r\n                             domLayout=\"autoHeight\"\r\n                             (gridReady)=\"onGridReady($event)\"\r\n                             (firstDataRendered)=\"autosizeColumns()\"\r\n                             rowSelection=\"multiple\"\r\n                             [pagination]=\"true\"\r\n                             [paginationPageSize]=\"10\"\r\n                             [singleClickEdit]=\"true\"\r\n                             [suppressRowClickSelection]=\"true\"\r\n                             [enableSorting]=\"true\"\r\n                             [enableColResize]=\"true\"\r\n                             [animateRows]=\"true\"\r\n                             [enableRangeSelection]=\"true\"\r\n                             [rowHeight]=\"atlasAgGridParam.rowHeight\"\r\n                             [excelStyles]=\"excelStyles\"\r\n                             enableFilter>\r\n            </ag-grid-angular>\r\n        </div>\r\n    </mat-card-content>\r\n</mat-card>"

/***/ }),

/***/ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/tabs/details-tab/details-tab.component.scss":
/*!*************************************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/tabs/details-tab/details-tab.component.scss ***!
  \*************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ""

/***/ }),

/***/ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/tabs/details-tab/details-tab.component.ts":
/*!***********************************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/tabs/details-tab/details-tab.component.ts ***!
  \***********************************************************************************************************************************************/
/*! exports provided: DetailsTabComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DetailsTabComponent", function() { return DetailsTabComponent; });
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _core_services_authorization_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../../../core/services/authorization.service */ "./Client/app/core/services/authorization.service.ts");
/* harmony import */ var _core_services_company_manager_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../../../core/services/company-manager.service */ "./Client/app/core/services/company-manager.service.ts");
/* harmony import */ var _execution_services_execution_cash_common_methods__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../../../../execution/services/execution-cash-common-methods */ "./Client/app/execution/services/execution-cash-common-methods.ts");
/* harmony import */ var _shared_components_base_form_component_base_form_component_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../../../shared/components/base-form-component/base-form-component.component */ "./Client/app/shared/components/base-form-component/base-form-component.component.ts");
/* harmony import */ var _shared_entities_filter_gem_entity__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../../../../shared/entities/filter-gem.entity */ "./Client/app/shared/entities/filter-gem.entity.ts");
/* harmony import */ var _shared_entities_filter_value_generate_end_month_entity__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../../../../shared/entities/filter-value-generate-end-month.entity */ "./Client/app/shared/entities/filter-value-generate-end-month.entity.ts");
/* harmony import */ var _shared_enums_generate_month_end_type_enum__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../../../../shared/enums/generate-month-end-type.enum */ "./Client/app/shared/enums/generate-month-end-type.enum.ts");
/* harmony import */ var _shared_enums_report_type_enum__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../../../../shared/enums/report-type.enum */ "./Client/app/shared/enums/report-type.enum.ts");
/* harmony import */ var _shared_models_overview_generate_end_of_month_display_view__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../../../../../shared/models/overview-generate-end-of-month-display-view */ "./Client/app/shared/models/overview-generate-end-of-month-display-view.ts");
/* harmony import */ var _shared_pipes_format_date_pipe_pipe__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../../../../../shared/pipes/format-date-pipe.pipe */ "./Client/app/shared/pipes/format-date-pipe.pipe.ts");
/* harmony import */ var _shared_services_ag_grid_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../../../../../shared/services/ag-grid.service */ "./Client/app/shared/services/ag-grid.service.ts");
/* harmony import */ var _shared_services_form_configuration_provider_service__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../../../../../../shared/services/form-configuration-provider.service */ "./Client/app/shared/services/form-configuration-provider.service.ts");
/* harmony import */ var _shared_services_http_services_trading_service__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../../../../../../shared/services/http-services/trading.service */ "./Client/app/shared/services/http-services/trading.service.ts");
/* harmony import */ var _shared_services_ui_service__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../../../../../../shared/services/ui.service */ "./Client/app/shared/services/ui.service.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
















var DetailsTabComponent = /** @class */ (function (_super) {
    __extends(DetailsTabComponent, _super);
    function DetailsTabComponent(formConfigurationProvider, uiService, companyManager, tradingService, formatDate, authorizationService, datePipe, gridService) {
        var _this = _super.call(this, formConfigurationProvider) || this;
        _this.formConfigurationProvider = formConfigurationProvider;
        _this.uiService = uiService;
        _this.companyManager = companyManager;
        _this.tradingService = tradingService;
        _this.formatDate = formatDate;
        _this.authorizationService = authorizationService;
        _this.datePipe = datePipe;
        _this.gridService = gridService;
        _this.applyButtonClicked = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        _this.detailsGridOptions = {};
        _this.filteredGrid = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        _this.mappingError = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        _this.detailsGridRows = [];
        _this.length = 0;
        _this.gridId = 'endOfMonthDetails';
        _this.excelStyles = [
            {
                id: 'dateFormat',
                dataType: 'dateTime',
                numberFormat: {
                    format: 'dd/mm/yyyy',
                },
            },
        ];
        _this.userActiveDirectoryName = _this.authorizationService.getCurrentUser().samAccountName;
        return _this;
    }
    Object.defineProperty(DetailsTabComponent.prototype, "reportTypeEnum", {
        get: function () { return _shared_enums_report_type_enum__WEBPACK_IMPORTED_MODULE_9__["ReportType"]; },
        enumerable: true,
        configurable: true
    });
    DetailsTabComponent.prototype.ngOnInit = function () {
        if (this.reportType !== _shared_enums_report_type_enum__WEBPACK_IMPORTED_MODULE_9__["ReportType"].MTMOpenFx) {
            this.atlasAgGridParam = this.gridService.getAgGridParam();
            var companyDetails = this.companyManager.getCurrentCompany();
            this.quantityWeightCode = '(in ' + companyDetails.weightCode + ')';
            this.company = this.companyManager.getCurrentCompanyId();
            this.initializeGridColumns();
            this.initDetailsGridRows();
            this.initializeSortModel();
            this.gridPreferencesParameters = {
                company: this.company,
                gridId: this.gridId,
                gridOptions: null,
                savingEnabled: false,
                sharingEnabled: false,
                showExport: true,
                hasColumnHandling: false,
            };
        }
    };
    DetailsTabComponent.prototype.onGridReady = function (params) {
        this.detailsGridOptions.columnDefs = this.detailsGridColumns;
        this.gridApi = this.detailsGridOptions.api;
        this.gridColumnApi = this.detailsGridOptions.columnApi;
        this.gridService.sizeColumns(this.detailsGridOptions);
    };
    DetailsTabComponent.prototype.autosizeColumns = function () {
        if (this.detailsGridOptions) {
            this.gridService.sizeColumns(this.detailsGridOptions);
        }
    };
    DetailsTabComponent.prototype.initializeSortModel = function () {
        var defaultSortModel = [
            {
                colId: 'currencyCode',
                sort: 'asc',
            },
            {
                colId: 'departmentCode',
                sort: 'asc',
            },
            {
                colId: 'charterCode',
                sort: 'asc',
            },
            {
                colId: 'costType',
                sort: 'asc',
            },
        ];
        this.gridApi.setSortModel(defaultSortModel);
    };
    DetailsTabComponent.prototype.initializeGridColumns = function () {
        var _this = this;
        this.detailsGridColumns = [
            {
                headerName: 'Accrual Number',
                field: 'accrualNumber',
                colId: 'accrualNumber',
                hide: false,
            },
            {
                headerName: 'Department',
                field: 'departmentCode',
                colId: 'departmentCode',
                hide: false,
                valueFormatter: this.stringFormatter.bind(this),
            },
            {
                headerName: 'Contract',
                field: 'contractNumber',
                colId: 'contractNumber',
                hide: false,
                valueFormatter: this.contractFormatter.bind(this),
            },
            {
                headerName: ' Cost Type',
                field: 'costType',
                colId: 'costType',
                hide: false,
                valueFormatter: this.stringFormatter.bind(this),
            },
            {
                headerName: 'Quantity ' + this.quantityWeightCode,
                field: 'quantity',
                colId: 'quantity',
                hide: false,
                valueFormatter: this.quantityFormatter.bind(this),
                cellStyle: { textAlign: 'right' },
            },
            {
                headerName: 'Currency',
                field: 'currencyCode',
                colId: 'currencyCode',
                hide: false,
                valueFormatter: this.currencyFormatter.bind(this),
            },
            {
                headerName: 'Full Value',
                field: 'fullValue',
                colId: 'fullValue',
                hide: (this.reportType === 1) ? false : true,
                valueFormatter: this.amountFormatter.bind(this),
                cellStyle: { textAlign: 'right' },
            },
            {
                headerName: 'Invoiced Value',
                field: 'invoicedAmount',
                colId: 'invoicedAmount',
                hide: false,
                valueFormatter: this.amountFormatter.bind(this),
                cellStyle: { textAlign: 'right' },
            },
            {
                headerName: '% Actualized',
                field: 'percentageActualized',
                colId: 'percentageActualized',
                hide: (this.reportType === 1) ? false : true,
                valueFormatter: this.amountFormatter.bind(this),
            },
            {
                headerName: 'Accrued Amount',
                field: 'accruedAmount',
                colId: 'accruedAmount',
                hide: (this.reportType === 1) ? false : true,
                valueFormatter: this.amountFormatter.bind(this),
                cellStyle: { textAlign: 'right' },
            },
            {
                headerName: 'Document Ref',
                field: 'documentReference',
                colId: 'documentReference',
                hide: (this.reportType !== 1) ? false : true,
                valueFormatter: this.charterFormatter.bind(this),
            },
            {
                headerName: 'Document Date',
                field: 'documentDate',
                colId: 'documentDate',
                hide: (this.reportType !== 1) ? false : true,
                valueFormatter: function (params) { return _this.uiService.dateFormatter(params); },
                cellClass: 'dateFormat',
                valueGetter: function (params) {
                    var dateFormat = _this.formatDate;
                    var val = dateFormat.transformdate(params.data.documentDate);
                    if (val) {
                        if (val.indexOf('/') < 0) {
                            return val;
                        }
                        else {
                            var split = val.split('/');
                            return split[2] + '-' + split[1] + '-' + split[0];
                        }
                    }
                },
            },
            {
                headerName: 'Associated Client',
                field: 'associatedClient',
                colId: 'associatedClient',
                hide: false,
                valueFormatter: this.stringFormatter.bind(this),
            },
            {
                headerName: 'Inhouse/External',
                field: 'inhouseOrExternal',
                colId: 'inhouseOrExternal',
                hide: (this.reportType !== 1) ? false : true,
                valueFormatter: this.charterFormatter.bind(this),
            },
            {
                headerName: 'Charter',
                field: 'charterCode',
                colId: 'charterCode',
                hide: false,
                valueFormatter: this.charterFormatter.bind(this),
            },
            {
                headerName: 'BL Date',
                field: 'blDate',
                colId: 'blDate',
                hide: (this.reportType === 1) ? false : true,
                valueFormatter: function (params) { return _this.uiService.dateFormatter(params); },
                cellClass: 'dateFormat',
                valueGetter: function (params) {
                    var dateFormat = _this.formatDate;
                    var val = dateFormat.transformdate(params.data.blDate);
                    if (val) {
                        if (val.indexOf('/') < 0) {
                            return val;
                        }
                        else {
                            var split = val.split('/');
                            return split[2] + '-' + split[1] + '-' + split[0];
                        }
                    }
                },
            },
        ];
    };
    DetailsTabComponent.prototype.initDetailsGridRows = function () {
        this.detailsGridRows = [];
    };
    DetailsTabComponent.prototype.getTradeCostListDetails = function (filteredDetailsGridRows, isFilteredApplied) {
        var _this = this;
        if (isFilteredApplied === void 0) { isFilteredApplied = false; }
        if (filteredDetailsGridRows && isFilteredApplied === true) {
            this.detailsGridRows = filteredDetailsGridRows;
        }
        else {
            this.tradingService.getTradeCostList(this.reportType, _shared_enums_generate_month_end_type_enum__WEBPACK_IMPORTED_MODULE_8__["GenerateMonthEndEnum"].Details, this.dataVersionID)
                .subscribe(function (data) {
                if (data && data.value.length > 0) {
                    var mappingErrorDetails = data.value[0].tradeCostMonthEndMappingErrors;
                    _this.mappingError.emit(mappingErrorDetails);
                }
                _this.detailsGridRows = data.value.map(function (CostTrade) {
                    return new _shared_models_overview_generate_end_of_month_display_view__WEBPACK_IMPORTED_MODULE_10__["OverviewGenerateEndOfMonthDisplayView"](CostTrade, _this.reportType);
                });
                if (_this.reportType === 2) {
                    _this.model = new _shared_entities_filter_gem_entity__WEBPACK_IMPORTED_MODULE_6__["FilterGem"]();
                    _this.model.departmentCode = [];
                    _this.model.charterCode = [];
                    _this.model.costType = [];
                    _this.model.associatedClient = [];
                    var count_1 = 1;
                    _this.detailsGridRows.forEach(function (x) {
                        if (x.departmentCode) {
                            var dept = new _shared_entities_filter_value_generate_end_month_entity__WEBPACK_IMPORTED_MODULE_7__["FilterValueGenerateEndMonth"]();
                            dept.desc = x.departmentCode;
                            dept.value = count_1;
                            _this.model.departmentCode.push(dept);
                        }
                        if (x.charterCode) {
                            var charter = new _shared_entities_filter_value_generate_end_month_entity__WEBPACK_IMPORTED_MODULE_7__["FilterValueGenerateEndMonth"]();
                            charter.desc = x.charterCode;
                            charter.value = count_1;
                            _this.model.charterCode.push(charter);
                        }
                        if (x.costType) {
                            var cost = new _shared_entities_filter_value_generate_end_month_entity__WEBPACK_IMPORTED_MODULE_7__["FilterValueGenerateEndMonth"]();
                            cost.desc = x.costType;
                            cost.value = count_1;
                            _this.model.costType.push(cost);
                        }
                        if (x.associatedClient) {
                            var client = new _shared_entities_filter_value_generate_end_month_entity__WEBPACK_IMPORTED_MODULE_7__["FilterValueGenerateEndMonth"]();
                            client.desc = x.associatedClient;
                            client.value = count_1;
                            _this.model.associatedClient.push(client);
                        }
                        count_1 = count_1 + 1;
                    });
                    _this.detailsGridRows.forEach(function (x) {
                        if (x.postingCostType) {
                            var cost = new _shared_entities_filter_value_generate_end_month_entity__WEBPACK_IMPORTED_MODULE_7__["FilterValueGenerateEndMonth"]();
                            cost.desc = x.postingCostType;
                            cost.value = count_1;
                            _this.model.costType.push(cost);
                        }
                        count_1 = count_1 + 1;
                    });
                    _this.filteredGrid.emit(_this.model);
                }
                _this.isLoading = false;
                _this.originalDetailsGridRows = _this.detailsGridRows;
                if (isFilteredApplied) {
                    _this.applyButtonClicked.emit();
                }
            });
        }
    };
    DetailsTabComponent.prototype.stringFormatter = function (param) {
        if (param.value) {
            return String(param.value).substr(0, 10);
        }
    };
    DetailsTabComponent.prototype.currencyFormatter = function (param) {
        if (param.value) {
            return String(param.value).substr(0, 3);
        }
    };
    DetailsTabComponent.prototype.amountFormatter = function (param) {
        if (param.value) {
            var commonMethods = new _execution_services_execution_cash_common_methods__WEBPACK_IMPORTED_MODULE_4__["CommonMethods"]();
            return commonMethods.getFormattedNumberValue(param.value, 2);
        }
    };
    DetailsTabComponent.prototype.quantityFormatter = function (param) {
        if (param.value) {
            var commonMethods = new _execution_services_execution_cash_common_methods__WEBPACK_IMPORTED_MODULE_4__["CommonMethods"]();
            return commonMethods.getFormattedNumberValue(param.value, 3);
        }
    };
    DetailsTabComponent.prototype.charterFormatter = function (param) {
        if (param.value) {
            return String(param.value).substr(0, 15);
        }
    };
    DetailsTabComponent.prototype.dateValueFormatter = function (param) {
        if (param.value) {
            return this.formatDate.transform(param.value);
        }
    };
    DetailsTabComponent.prototype.contractFormatter = function (param) {
        if (param.value) {
            return String(param.value).substr(0, 12);
        }
    };
    DetailsTabComponent.prototype.onExportButtonClickedAsExcel = function () {
        var screenName = 'EndofMonthDetails';
        var now = new Date();
        var todayDate = this.datePipe.transform(now, 'yyyyMMdd_hhmm').toString().toUpperCase();
        var params = {
            fileName: todayDate + '_' + this.company + '_' + screenName + '_' + this.userActiveDirectoryName + '.xlsx',
        };
        this.gridApi.exportDataAsExcel(params);
    };
    DetailsTabComponent.prototype.onExportButtonClickedAsCSV = function () {
        var screenName = 'EndofMonthDetails';
        var now = new Date();
        var todayDate = this.datePipe.transform(now, 'yyyyMMdd_hhmm').toString().toUpperCase();
        var params = {
            fileName: todayDate + '_' + this.company + '_' + screenName + '_' + this.userActiveDirectoryName + '.csv',
        };
        this.gridApi.exportDataAsCsv(params);
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        __metadata("design:type", Array)
    ], DetailsTabComponent.prototype, "filteredDetailsGridRows", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(),
        __metadata("design:type", Object)
    ], DetailsTabComponent.prototype, "applyButtonClicked", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(),
        __metadata("design:type", Object)
    ], DetailsTabComponent.prototype, "filteredGrid", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(),
        __metadata("design:type", Object)
    ], DetailsTabComponent.prototype, "mappingError", void 0);
    DetailsTabComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'atlas-details-tab',
            template: __webpack_require__(/*! ./details-tab.component.html */ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/tabs/details-tab/details-tab.component.html"),
            styles: [__webpack_require__(/*! ./details-tab.component.scss */ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/tabs/details-tab/details-tab.component.scss")],
            providers: [_angular_common__WEBPACK_IMPORTED_MODULE_0__["DatePipe"]],
        }),
        __metadata("design:paramtypes", [_shared_services_form_configuration_provider_service__WEBPACK_IMPORTED_MODULE_13__["FormConfigurationProviderService"],
            _shared_services_ui_service__WEBPACK_IMPORTED_MODULE_15__["UiService"],
            _core_services_company_manager_service__WEBPACK_IMPORTED_MODULE_3__["CompanyManagerService"],
            _shared_services_http_services_trading_service__WEBPACK_IMPORTED_MODULE_14__["TradingService"],
            _shared_pipes_format_date_pipe_pipe__WEBPACK_IMPORTED_MODULE_11__["FormatDatePipe"],
            _core_services_authorization_service__WEBPACK_IMPORTED_MODULE_2__["AuthorizationService"],
            _angular_common__WEBPACK_IMPORTED_MODULE_0__["DatePipe"],
            _shared_services_ag_grid_service__WEBPACK_IMPORTED_MODULE_12__["AgGridService"]])
    ], DetailsTabComponent);
    return DetailsTabComponent;
}(_shared_components_base_form_component_base_form_component_component__WEBPACK_IMPORTED_MODULE_5__["BaseFormComponent"]));



/***/ }),

/***/ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/tabs/details-tab/fx-deal-details-month-end/fx-deal-month-end.component.html":
/*!*********************************************************************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/tabs/details-tab/fx-deal-details-month-end/fx-deal-month-end.component.html ***!
  \*********************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<mat-card>\r\n    <div fxLayout=\"row\"\r\n         fxLayout.xs=\"column\"\r\n         fxLayoutAlign=\"space-between center\"\r\n         fxLayoutWrap\r\n         fxLayoutGap=\"20px\"\r\n         class=\"atlas-grid-card-header\">\r\n        <h2 class=\"no-margin\">End of Month Details</h2>\r\n        <mat-chip-list class=\"chip-list\">\r\n            <mat-chip selected\r\n                      disabled>\r\n                {{dataVersionMonth}}\r\n            </mat-chip>\r\n            <mat-chip selected\r\n                      disabled>{{reportTypeDescription}}\r\n            </mat-chip>\r\n        </mat-chip-list>\r\n        <span class=\"fill-space\"></span><button mat-icon-button\r\n                [matMenuTriggerFor]=\"menu1\">\r\n            <i class=\"material-icons\">more_vert</i>\r\n        </button>\r\n        <mat-menu #menu1=\"matMenu\">\r\n            <button mat-menu-item\r\n                    [matMenuTriggerFor]=\"exportMenu\">\r\n                <mat-icon>import_export</mat-icon><span>Export</span>\r\n            </button>\r\n        </mat-menu>\r\n        <mat-menu #exportMenu=\"matMenu\">\r\n            <button mat-menu-item\r\n                    (click)=\"onExportButtonClickedAsExcel()\">\r\n                <mat-icon>import_export</mat-icon><span>Export as Excel</span>\r\n            </button>\r\n            <button mat-menu-item\r\n                    (click)=\"onExportButtonClickedAsCSV()\">\r\n                <mat-icon>import_export</mat-icon><span>Export as CSV</span>\r\n            </button>\r\n        </mat-menu>\r\n    </div>\r\n    <mat-card-content>\r\n        <div ag-grid=\"fxDealDetailsGridOptions\"\r\n             class=\"ag-theme-material pointer-cursor\">\r\n            <ag-grid-angular style=\"height:100%;\"\r\n                             class=\"ag-theme-material\"\r\n                             [columnDefs]=\"fxDealDetailsGridColumns\"\r\n                             [rowData]=\"fxDealDetailsGridRows\"\r\n                             [gridOptions]=\"fxDealDetailsGridOptions\"\r\n                             domLayout=\"autoHeight\"\r\n                             (gridReady)=\"onGridReady($event)\"\r\n                             rowSelection=\"multiple\"\r\n                             [pagination]=\"true\"\r\n                             [paginationPageSize]=\"10\"\r\n                             [singleClickEdit]=\"true\"\r\n                             [suppressRowClickSelection]=\"true\"\r\n                             [enableSorting]=\"true\"\r\n                             [enableColResize]=\"true\"\r\n                             [animateRows]=\"true\"\r\n                             [enableRangeSelection]=\"true\"\r\n                             [rowHeight]=\"atlasAgGridParam.rowHeight\"\r\n                             [excelStyles]=\"excelStyles\"\r\n                             enableFilter>\r\n            </ag-grid-angular>\r\n        </div>\r\n    </mat-card-content>\r\n</mat-card>"

/***/ }),

/***/ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/tabs/details-tab/fx-deal-details-month-end/fx-deal-month-end.component.scss":
/*!*********************************************************************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/tabs/details-tab/fx-deal-details-month-end/fx-deal-month-end.component.scss ***!
  \*********************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ""

/***/ }),

/***/ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/tabs/details-tab/fx-deal-details-month-end/fx-deal-month-end.component.ts":
/*!*******************************************************************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/tabs/details-tab/fx-deal-details-month-end/fx-deal-month-end.component.ts ***!
  \*******************************************************************************************************************************************************************************/
/*! exports provided: DetailTabFxDealMonthEndComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DetailTabFxDealMonthEndComponent", function() { return DetailTabFxDealMonthEndComponent; });
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _core_services_authorization_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../../../../core/services/authorization.service */ "./Client/app/core/services/authorization.service.ts");
/* harmony import */ var _core_services_company_manager_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../../../../core/services/company-manager.service */ "./Client/app/core/services/company-manager.service.ts");
/* harmony import */ var _execution_services_execution_cash_common_methods__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../../../../../execution/services/execution-cash-common-methods */ "./Client/app/execution/services/execution-cash-common-methods.ts");
/* harmony import */ var _shared_components_base_form_component_base_form_component_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../../../../shared/components/base-form-component/base-form-component.component */ "./Client/app/shared/components/base-form-component/base-form-component.component.ts");
/* harmony import */ var _shared_pipes_format_date_pipe_pipe__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../../../../../shared/pipes/format-date-pipe.pipe */ "./Client/app/shared/pipes/format-date-pipe.pipe.ts");
/* harmony import */ var _shared_services_ag_grid_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../../../../../shared/services/ag-grid.service */ "./Client/app/shared/services/ag-grid.service.ts");
/* harmony import */ var _shared_services_form_configuration_provider_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../../../../../shared/services/form-configuration-provider.service */ "./Client/app/shared/services/form-configuration-provider.service.ts");
/* harmony import */ var _shared_services_ui_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../../../../../shared/services/ui.service */ "./Client/app/shared/services/ui.service.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};










var DetailTabFxDealMonthEndComponent = /** @class */ (function (_super) {
    __extends(DetailTabFxDealMonthEndComponent, _super);
    function DetailTabFxDealMonthEndComponent(formConfigurationProvider, uiService, companyManager, formatDate, authorizationService, datePipe, gridService) {
        var _this = _super.call(this, formConfigurationProvider) || this;
        _this.formConfigurationProvider = formConfigurationProvider;
        _this.uiService = uiService;
        _this.companyManager = companyManager;
        _this.formatDate = formatDate;
        _this.authorizationService = authorizationService;
        _this.datePipe = datePipe;
        _this.gridService = gridService;
        _this.applyButtonClicked = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        _this.filteredGrid = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        _this.fxDealDetailsGridOptions = {};
        _this.fxDealDetailsGridRows = [];
        _this.length = 0;
        _this.exportFileName = 'EndOfMonthDetails';
        _this.excelStyles = [
            {
                id: 'dateFormat',
                dataType: 'dateTime',
                numberFormat: {
                    format: 'dd/mm/yyyy',
                },
            },
            {
                id: 'leftAlignment',
                alignment: {
                    horizontal: 'Left', vertical: 'Bottom',
                },
            },
            {
                id: "twoDecimalPlaces",
                numberFormat: { format: "#,##0.00" },
            },
            {
                id: "fourDecimalPlaces",
                numberFormat: { format: "#,##0.0000" },
            }
        ];
        _this.userActiveDirectoryName = _this.authorizationService.getCurrentUser().samAccountName;
        return _this;
    }
    DetailTabFxDealMonthEndComponent.prototype.ngOnInit = function () {
        this.atlasAgGridParam = this.gridService.getAgGridParam();
        var companyDetails = this.companyManager.getCurrentCompany();
        this.quantityWeightCode = '(in ' + companyDetails.weightCode + ')';
        this.company = this.companyManager.getCurrentCompanyId();
        this.initializeGridColumns();
    };
    DetailTabFxDealMonthEndComponent.prototype.onGridReady = function (params) {
        var _this = this;
        params.columnDefs = this.fxDealDetailsGridColumns;
        this.fxDealDetailsGridOptions = params;
        this.gridApi = this.fxDealDetailsGridOptions.api;
        this.gridColumnApi = this.fxDealDetailsGridOptions.columnApi;
        this.gridService.sizeColumns(this.fxDealDetailsGridOptions);
        window.onresize = function () {
            _this.gridService.sizeColumns(_this.fxDealDetailsGridOptions);
        };
    };
    DetailTabFxDealMonthEndComponent.prototype.prepareData = function (detailsData) {
        var _this = this;
        this.fxDealDetailsGridRows = [];
        if (detailsData) {
            detailsData.forEach(function (row) {
                _this.fxDealDetailsGridRows.push(row);
            });
            this.fxDealDetailsGridOptions.api.setRowData(this.fxDealDetailsGridRows);
        }
    };
    DetailTabFxDealMonthEndComponent.prototype.initializeGridColumns = function () {
        var _this = this;
        this.fxDealDetailsGridColumns = [
            {
                headerName: 'Accrual Number',
                field: 'accrualNumber',
                colId: 'accrualNumber',
                cellClass: 'leftAlignment',
            },
            {
                headerName: 'Department',
                field: 'departmentCode',
                colId: 'departmentCode',
                cellClass: 'leftAlignment',
                valueFormatter: this.stringFormatter.bind(this),
            },
            {
                headerName: 'Deal No.',
                field: 'dealNumber',
                colId: 'dealNumber',
                cellClass: 'leftAlignment',
            },
            {
                headerName: ' Cost Type',
                field: 'costType',
                colId: 'costType',
                valueFormatter: this.stringFormatter.bind(this),
            },
            {
                headerName: 'Deal Ccy',
                field: 'dealCurrency',
                colId: 'dealCurrency',
                valueFormatter: this.currencyFormatter.bind(this),
            },
            {
                headerName: 'Settlement Ccy',
                field: 'settlementCurrency',
                colId: 'settlementCurrency',
                valueFormatter: this.currencyFormatter.bind(this),
            },
            {
                headerName: 'Deal Amount',
                field: 'dealAmount',
                colId: 'dealAmount',
                type: 'numericColumn',
                cellClass: 'twoDecimalPlaces',
                cellStyle: { 'text-align': 'right' },
                valueFormatter: function (params) { return _this.amountFormatter(params); },
            },
            {
                headerName: 'Settlement Amount',
                field: 'settlementAmount',
                colId: 'settlementAmount',
                cellClass: 'twoDecimalPlaces',
                cellStyle: { 'text-align': 'right' },
                valueFormatter: this.amountFormatter.bind(this),
                type: 'numericColumn',
            },
            {
                headerName: 'Associated Client',
                field: 'associatedClient',
                colId: 'associatedClient',
                hide: false,
                valueFormatter: this.stringFormatter.bind(this),
            },
            {
                headerName: 'Maturity Date',
                field: 'maturityDate',
                colId: 'maturityDate',
                valueFormatter: function (params) { return _this.uiService.dateFormatter(params); },
                cellClass: ['dateFormat', 'leftAlignment'],
                valueGetter: function (params) {
                    var dateFormat = _this.formatDate;
                    var val = dateFormat.transformdate(params.data.maturityDate);
                    if (val) {
                        if (val.indexOf('/') < 0) {
                            return val;
                        }
                        else {
                            var split = val.split('/');
                            return split[2] + '-' + split[1] + '-' + split[0];
                        }
                    }
                },
            },
            {
                headerName: 'Market Ccy RoE Dealt',
                field: 'marketCcyRoeDealt',
                colId: 'marketCcyRoeDealt',
                cellClass: 'fourDecimalPlaces',
                cellStyle: { 'text-align': 'right' },
                valueFormatter: this.roeFormatter.bind(this),
                type: 'numericColumn',
            },
            {
                headerName: 'Market Ccy RoE Settlement',
                field: 'marketCcyRoeSettlement',
                colId: 'marketCcyRoeSettlement',
                cellClass: 'fourDecimalPlaces',
                cellStyle: { 'text-align': 'right' },
                valueFormatter: this.roeFormatter.bind(this),
                type: 'numericColumn',
            },
            {
                headerName: 'Variation Margin',
                field: 'variationMargin',
                colId: 'variationMargin',
                cellClass: 'twoDecimalPlaces',
                cellStyle: { 'text-align': 'right' },
                valueFormatter: this.amountFormatter.bind(this),
                type: 'numericColumn',
            },
        ];
    };
    DetailTabFxDealMonthEndComponent.prototype.stringFormatter = function (param) {
        if (param.value) {
            return String(param.value).substr(0, 10);
        }
    };
    DetailTabFxDealMonthEndComponent.prototype.currencyFormatter = function (param) {
        if (param.value) {
            return String(param.value).substr(0, 3);
        }
    };
    DetailTabFxDealMonthEndComponent.prototype.amountFormatter = function (param) {
        if (param.value) {
            var commonMethods = new _execution_services_execution_cash_common_methods__WEBPACK_IMPORTED_MODULE_4__["CommonMethods"]();
            return commonMethods.getFormattedNumberValue(param.value, 2);
        }
    };
    DetailTabFxDealMonthEndComponent.prototype.roeFormatter = function (param) {
        if (param.value) {
            var commonMethods = new _execution_services_execution_cash_common_methods__WEBPACK_IMPORTED_MODULE_4__["CommonMethods"]();
            return commonMethods.getFormattedNumberValue(param.value, 4);
        }
    };
    DetailTabFxDealMonthEndComponent.prototype.dateValueFormatter = function (param) {
        if (param.value) {
            return this.formatDate.transform(param.value);
        }
    };
    DetailTabFxDealMonthEndComponent.prototype.onExportButtonClickedAsExcel = function () {
        var screenName = this.exportFileName;
        var now = new Date();
        var todayDate = this.datePipe.transform(now, 'yyyyMMdd_hhmm').toString().toUpperCase();
        var params = {
            fileName: todayDate + '_' + this.company + '_' + screenName + '_' + this.userActiveDirectoryName + '.xlsx',
        };
        this.gridApi.exportDataAsExcel(params);
    };
    DetailTabFxDealMonthEndComponent.prototype.onExportButtonClickedAsCSV = function () {
        var screenName = this.exportFileName;
        var now = new Date();
        var todayDate = this.datePipe.transform(now, 'yyyyMMdd_hhmm').toString().toUpperCase();
        var params = {
            fileName: todayDate + '_' + this.company + '_' + screenName + '_' + this.userActiveDirectoryName + '.csv',
        };
        this.gridApi.exportDataAsCsv(params);
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        __metadata("design:type", Array)
    ], DetailTabFxDealMonthEndComponent.prototype, "filteredDetailsGridRows", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(),
        __metadata("design:type", Object)
    ], DetailTabFxDealMonthEndComponent.prototype, "applyButtonClicked", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(),
        __metadata("design:type", Object)
    ], DetailTabFxDealMonthEndComponent.prototype, "filteredGrid", void 0);
    DetailTabFxDealMonthEndComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'atlas-detail-tab-fx-deal-month-end',
            template: __webpack_require__(/*! ./fx-deal-month-end.component.html */ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/tabs/details-tab/fx-deal-details-month-end/fx-deal-month-end.component.html"),
            styles: [__webpack_require__(/*! ./fx-deal-month-end.component.scss */ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/tabs/details-tab/fx-deal-details-month-end/fx-deal-month-end.component.scss")],
            providers: [_angular_common__WEBPACK_IMPORTED_MODULE_0__["DatePipe"]],
        }),
        __metadata("design:paramtypes", [_shared_services_form_configuration_provider_service__WEBPACK_IMPORTED_MODULE_8__["FormConfigurationProviderService"],
            _shared_services_ui_service__WEBPACK_IMPORTED_MODULE_9__["UiService"],
            _core_services_company_manager_service__WEBPACK_IMPORTED_MODULE_3__["CompanyManagerService"],
            _shared_pipes_format_date_pipe_pipe__WEBPACK_IMPORTED_MODULE_6__["FormatDatePipe"],
            _core_services_authorization_service__WEBPACK_IMPORTED_MODULE_2__["AuthorizationService"],
            _angular_common__WEBPACK_IMPORTED_MODULE_0__["DatePipe"],
            _shared_services_ag_grid_service__WEBPACK_IMPORTED_MODULE_7__["AgGridService"]])
    ], DetailTabFxDealMonthEndComponent);
    return DetailTabFxDealMonthEndComponent;
}(_shared_components_base_form_component_base_form_component_component__WEBPACK_IMPORTED_MODULE_5__["BaseFormComponent"]));



/***/ }),

/***/ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/tabs/fx-deal-month-end-summary/fx-deal-month-end-summary.component.html":
/*!*****************************************************************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/tabs/fx-deal-month-end-summary/fx-deal-month-end-summary.component.html ***!
  \*****************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"main-container\">\r\n    <mat-card>\r\n        <mat-card-content>\r\n            <div fxLayout=\"column\">\r\n                <div fxLayout=\"row\"\r\n                     fxLayoutAlign=\"space-between center\">\r\n                    <atlas-department-dropdown #departmentDropdownComponent\r\n                                               (departmentSelectionChanged)=\"onDepartmentSelectionChanges()\">\r\n                    </atlas-department-dropdown>\r\n                    <atlas-dealt-currency-dropdown #dealtCurrencyDropdownComponent\r\n                                                   (dealtCurrencySelectionChanged)=\"onDealNumberSelectionChanges()\">\r\n                    </atlas-dealt-currency-dropdown>\r\n                    <atlas-settlement-currency-dropdown #settlementCurrencyDropdownComponent\r\n                                                        (settlementCurrencySelectionChanged)=\"onSettlementCurrencySelectionChanges()\">\r\n                    </atlas-settlement-currency-dropdown>\r\n                    <atlas-deal-number-dropdown #dealNumberDropdownComponent>\r\n                    </atlas-deal-number-dropdown>\r\n                    <button (click)=\"onApplyButtonClicked()\"\r\n                            mat-button>\r\n                        APPLY\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </mat-card-content>\r\n    </mat-card>\r\n    <div>\r\n          <div *ngIf=\"isMappingError && !isCurrentDatabase\">\r\n            <div *ngIf=\"clientAccountMappingErrorMessages.length > 0\">\r\n                <mat-card class=\"warning-card warning-banner-card\">\r\n                    <div class=\"warning-circle-icon\">\r\n                        <mat-icon>warning_outline</mat-icon>\r\n                    </div>\r\n                    <mat-card-header>\r\n                        <mat-card-title>\r\n                            <h4 class=\"no-margin\">Mapping Error for C2C code(s)</h4>\r\n                        </mat-card-title>\r\n    \r\n                        <mat-card-subtitle>\r\n                            This document cannot be posted due to missing C2C(s) for\r\n                            {{clientAccountMappingErrorMessages}}. Please contact the accountant.\r\n                        </mat-card-subtitle>\r\n                        <button class=\"remove-button\"\r\n                                mat-button\r\n                                (click)=\"onWarningRemoveButtonClicked($event)\">REMOVE\r\n                        </button>\r\n                    </mat-card-header>\r\n                </mat-card>\r\n            </div>\r\n    \r\n            <div *ngIf=\"costTypeMappingErrorMessages.length > 0\">\r\n                <mat-card class=\"warning-card warning-banner-card\">\r\n                    <div class=\"warning-circle-icon\">\r\n                        <mat-icon>warning_outline</mat-icon>\r\n                    </div>\r\n                    <mat-card-header>\r\n                        <mat-card-title>\r\n                            <h4 class=\"no-margin\">Mapping Error for Cost Type code(s)</h4>\r\n                        </mat-card-title>\r\n    \r\n                        <mat-card-subtitle>\r\n                            This document cannot be posted due to missing cost type code(s) for\r\n                            {{costTypeMappingErrorMessages}}. Please contact the accountant.\r\n                        </mat-card-subtitle>\r\n                        <button class=\"remove-button\"\r\n                                mat-button\r\n                                (click)=\"onWarningRemoveButtonClicked($event)\">REMOVE\r\n                        </button>\r\n                    </mat-card-header>\r\n                </mat-card>\r\n            </div>\r\n    \r\n            <div *ngIf=\"departmentMappingErrorMessages.length > 0\">\r\n                <mat-card class=\"warning-card warning-banner-card\">\r\n                    <div class=\"warning-circle-icon\">\r\n                        <mat-icon>warning_outline</mat-icon>\r\n                    </div>\r\n                    <mat-card-header>\r\n                        <mat-card-title>\r\n                            <h4 class=\"no-margin\">Mapping Error for Department code(s)</h4>\r\n                        </mat-card-title>\r\n    \r\n                        <mat-card-subtitle>\r\n                            This document cannot be posted due to department code(s) for\r\n                            {{departmentMappingErrorMessages}}. Please contact the accountant.\r\n                        </mat-card-subtitle>\r\n                        <button class=\"remove-button\"\r\n                                mat-button\r\n                                (click)=\"onWarningRemoveButtonClicked($event)\">REMOVE\r\n                        </button>\r\n                    </mat-card-header>\r\n                </mat-card>\r\n            </div>\r\n    \r\n            <div *ngIf=\"nominalAccountMappingErrorMessages.length > 0\">\r\n                <mat-card class=\"warning-card warning-banner-card\">\r\n                    <div class=\"warning-circle-icon\">\r\n                        <mat-icon>warning_outline</mat-icon>\r\n                    </div>\r\n                    <mat-card-header>\r\n                        <mat-card-title>\r\n                            <h4 class=\"no-margin\">Mapping Error for Nominal Account code(s)</h4>\r\n                        </mat-card-title>\r\n    \r\n                        <mat-card-subtitle>\r\n                            This document cannot be posted due to missing nominal account(s) for\r\n                            {{nominalAccountMappingErrorMessages}}.Please contact the accountant.\r\n                        </mat-card-subtitle>\r\n                        <button class=\"remove-button\"\r\n                                mat-button\r\n                                (click)=\"onWarningRemoveButtonClicked($event)\">REMOVE\r\n                        </button>\r\n                    </mat-card-header>\r\n                </mat-card>\r\n            </div>\r\n    \r\n        </div>\r\n    </div>\r\n    <div>\r\n        <mat-tab-group [selectedIndex]=\"tabIndex\"\r\n                       (selectedIndexChange)=\"onSelectedIndexChanged($event)\">\r\n\r\n            <mat-tab label=\"Details\"></mat-tab>\r\n            <mat-tab label=\"Postings\"></mat-tab>\r\n        </mat-tab-group>\r\n        <div class=\"content-tab\">\r\n            <mat-tab-group [selectedIndex]=\"tabIndex\">\r\n\r\n                <mat-tab>\r\n                    <atlas-detail-tab-fx-deal-month-end #fxDealDetail>\r\n                    </atlas-detail-tab-fx-deal-month-end>\r\n                </mat-tab>\r\n                <mat-tab>\r\n                    <atlas-posting-tab-fx-deal-month-end #fxDealPosting>\r\n                    </atlas-posting-tab-fx-deal-month-end>\r\n                </mat-tab>\r\n            </mat-tab-group>\r\n        </div>\r\n    </div>\r\n    <div fxLayout=\"row\"\r\n         fxLayoutAlign=\"space-between start\"\r\n         class=\"button-details\">\r\n        <div fxLayout=\"column\"\r\n             fxLayoutAlign=\"start\">\r\n            <button (click)=\"onDiscardButtonClicked()\"\r\n                    mat-button>\r\n                DISCARD\r\n            </button>\r\n        </div>\r\n        <div fxLayout=\"column\"\r\n             fxLayoutAlign=\"start\">\r\n            <button mat-raised-button\r\n                    (click)=\"onGeneratePostingsButtonClicked()\"\r\n                    [disabled]=\"disableButton || (isMappingError || isCurrentDatabase)\">\r\n                GENERATE POSTINGS\r\n            </button>\r\n        </div>\r\n    </div>\r\n</div>"

/***/ }),

/***/ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/tabs/fx-deal-month-end-summary/fx-deal-month-end-summary.component.scss":
/*!*****************************************************************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/tabs/fx-deal-month-end-summary/fx-deal-month-end-summary.component.scss ***!
  \*****************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ""

/***/ }),

/***/ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/tabs/fx-deal-month-end-summary/fx-deal-month-end-summary.component.ts":
/*!***************************************************************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/tabs/fx-deal-month-end-summary/fx-deal-month-end-summary.component.ts ***!
  \***************************************************************************************************************************************************************************/
/*! exports provided: FxDealMonthEndSummaryComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FxDealMonthEndSummaryComponent", function() { return FxDealMonthEndSummaryComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _core_services_authorization_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../../../core/services/authorization.service */ "./Client/app/core/services/authorization.service.ts");
/* harmony import */ var _core_services_company_manager_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../../../core/services/company-manager.service */ "./Client/app/core/services/company-manager.service.ts");
/* harmony import */ var _shared_entities_filter_gem_entity__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../../../../shared/entities/filter-gem.entity */ "./Client/app/shared/entities/filter-gem.entity.ts");
/* harmony import */ var _shared_entities_filter_value_generate_end_month_entity__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../../../shared/entities/filter-value-generate-end-month.entity */ "./Client/app/shared/entities/filter-value-generate-end-month.entity.ts");
/* harmony import */ var _shared_enums_permission_level_enum__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../../../../shared/enums/permission-level.enum */ "./Client/app/shared/enums/permission-level.enum.ts");
/* harmony import */ var _shared_services_http_services_trading_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../../../../shared/services/http-services/trading.service */ "./Client/app/shared/services/http-services/trading.service.ts");
/* harmony import */ var _deal_number_dropdown_deal_number_dropdown_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../deal-number-dropdown/deal-number-dropdown.component */ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/deal-number-dropdown/deal-number-dropdown.component.ts");
/* harmony import */ var _dealt_currency_dropdown_dealt_currency_dropdown_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../dealt-currency-dropdown/dealt-currency-dropdown.component */ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/dealt-currency-dropdown/dealt-currency-dropdown.component.ts");
/* harmony import */ var _department_dropdown_department_dropdown_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../department-dropdown/department-dropdown.component */ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/department-dropdown/department-dropdown.component.ts");
/* harmony import */ var _settlement_currency_dropdown_settlement_currency_dropdown_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../settlement-currency-dropdown/settlement-currency-dropdown.component */ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/settlement-currency-dropdown/settlement-currency-dropdown.component.ts");
/* harmony import */ var _details_tab_fx_deal_details_month_end_fx_deal_month_end_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../details-tab/fx-deal-details-month-end/fx-deal-month-end.component */ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/tabs/details-tab/fx-deal-details-month-end/fx-deal-month-end.component.ts");
/* harmony import */ var _postings_tab_fx_deal_postings_month_end_fx_deal_month_end_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../postings-tab/fx-deal-postings-month-end/fx-deal-month-end.component */ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/tabs/postings-tab/fx-deal-postings-month-end/fx-deal-month-end.component.ts");
/* harmony import */ var _shared_services_execution_dtos_fxdeal_month_end_temporary_adjustment_list_command__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../../../../../../shared/services/execution/dtos/fxdeal-month-end-temporary-adjustment-list-command */ "./Client/app/shared/services/execution/dtos/fxdeal-month-end-temporary-adjustment-list-command.ts");
/* harmony import */ var _shared_services_http_services_execution_service__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../../../../../../shared/services/http-services/execution.service */ "./Client/app/shared/services/http-services/execution.service.ts");
/* harmony import */ var _shared_services_snackbar_service__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../../../../../../shared/services/snackbar.service */ "./Client/app/shared/services/snackbar.service.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

















var FxDealMonthEndSummaryComponent = /** @class */ (function () {
    function FxDealMonthEndSummaryComponent(route, router, executionService, snackbarService, authorizationService, companyManager, tradingService) {
        this.route = route;
        this.router = router;
        this.executionService = executionService;
        this.snackbarService = snackbarService;
        this.authorizationService = authorizationService;
        this.companyManager = companyManager;
        this.tradingService = tradingService;
        this.tabIndexNumber = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.disableGeneratePosting = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.PermissionLevels = _shared_enums_permission_level_enum__WEBPACK_IMPORTED_MODULE_6__["PermissionLevels"];
        this.buttonEditable = false;
        this.buttonDisableForPrevilage = false;
        this.disableButton = false;
        this.currentDataBase = 'Current Database';
        this.tabIndex = 0;
        this.isFilterApplied = false;
        this.generatePosting = true;
        this.selectedDepartments = [];
        this.selectedDealNumbers = [];
        this.selectedDealtCurrencies = [];
        this.selectedSettlementCurrencies = [];
        this.monthEndData = [];
        this.isCurrentDatabase = true;
        this.isMappingError = false;
        this.generatePostingsPrivilege = {
            profileId: null,
            privilegeName: 'GeneratePostings',
            permission: _shared_enums_permission_level_enum__WEBPACK_IMPORTED_MODULE_6__["PermissionLevels"].Read,
            privilegeParentLevelOne: 'Financials',
            privilegeParentLevelTwo: 'CutOff',
        };
    }
    FxDealMonthEndSummaryComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.company = this.route.snapshot.paramMap.get('company');
        this.buttonDisableForPrevilage = this.checkIfUserHasRequiredPrivileges(this.generatePostingsPrivilege);
        this.route.queryParams.subscribe(function (params) {
            _this.dataVersionId = Number(params['dataVersionId']);
            _this.buttonEditable = (params['isPostingButtonEditable']).toLowerCase() === 'true' ? true : false;
            _this.reportTypeDescription = (params['reportTypeDescription']);
            _this.dataVersionDate = (params['dataVersionDate']);
            _this.dataVersionMonth = (params['dataVersionMonth']);
            _this.reportType = Number(params['reportType']);
        });
        this.dataVersionMonth = this.dataVersionMonth ? this.dataVersionMonth : 'Current Database';
        if (this.buttonDisableForPrevilage) {
            this.disableButton = true;
        }
        else {
            this.disableButton = this.buttonEditable;
        }
        if ((this.dataVersionDate === null
            || this.dataVersionDate === undefined)
            && (this.dataVersionMonth === this.currentDataBase
                || this.dataVersionMonth === null
                || this.dataVersionMonth === undefined)) {
            this.isCurrentDatabase = true;
        }
        else {
            this.isCurrentDatabase = false;
        }
        this.getMonthEndFxDealDetails();
        if (this.fxDealDetail) {
            this.fxDealDetail.dataVersionId = this.dataVersionId;
            this.fxDealDetail.dataVersionMonth = this.dataVersionMonth;
            this.fxDealDetail.reportType = this.reportType;
            this.fxDealDetail.reportTypeDescription = this.reportTypeDescription;
        }
        if (this.fxDealPosting) {
            this.fxDealPosting.dataVersionID = this.dataVersionId;
            this.fxDealPosting.dataVersionMonth = this.dataVersionMonth;
            this.fxDealPosting.reportType = this.reportType;
            this.fxDealPosting.reportTypeDescription = this.reportTypeDescription;
        }
    };
    FxDealMonthEndSummaryComponent.prototype.onWarningRemoveButtonClicked = function (params) {
        if (params) {
            params.currentTarget.parentElement.parentElement.remove();
        }
    };
    FxDealMonthEndSummaryComponent.prototype.getMonthEndFxDealDetails = function () {
        var _this = this;
        this.tradingService.getFxDealForMonthEnd(this.dataVersionId)
            .subscribe(function (data) {
            var result = data.value;
            _this.monthEndData = data.value;
            if (_this.monthEndData.length > 0) {
                _this.generateMappingErrorForMonthEnd(_this.monthEndData[0].fxDealMonthEndMappingErrors);
            }
            _this.fxDealDetail.prepareData(data.value);
            _this.fxDealPosting.prepareData(data.value);
            _this.filterModel = new _shared_entities_filter_gem_entity__WEBPACK_IMPORTED_MODULE_4__["FilterGem"]();
            var count = 1;
            _this.filterModel.departmentCode = [];
            _this.filterModel.dealCurrency = [];
            _this.filterModel.settlementCurrency = [];
            _this.filterModel.dealNumber = [];
            result.forEach(function (x) {
                if (x.departmentCode) {
                    var dept = new _shared_entities_filter_value_generate_end_month_entity__WEBPACK_IMPORTED_MODULE_5__["FilterValueGenerateEndMonth"]();
                    dept.desc = x.departmentCode;
                    dept.value = count;
                    _this.filterModel.departmentCode.push(dept);
                }
                if (x.dealCurrency) {
                    var dealCurrency = new _shared_entities_filter_value_generate_end_month_entity__WEBPACK_IMPORTED_MODULE_5__["FilterValueGenerateEndMonth"]();
                    dealCurrency.desc = x.dealCurrency;
                    dealCurrency.value = count;
                    _this.filterModel.dealCurrency.push(dealCurrency);
                }
                if (x.settlementCurrency) {
                    var settlementCurrency = new _shared_entities_filter_value_generate_end_month_entity__WEBPACK_IMPORTED_MODULE_5__["FilterValueGenerateEndMonth"]();
                    settlementCurrency.desc = x.settlementCurrency;
                    settlementCurrency.value = count;
                    _this.filterModel.settlementCurrency.push(settlementCurrency);
                }
                if (x.dealNumber) {
                    var dealNumber = new _shared_entities_filter_value_generate_end_month_entity__WEBPACK_IMPORTED_MODULE_5__["FilterValueGenerateEndMonth"]();
                    dealNumber.desc = x.dealNumber;
                    dealNumber.value = count;
                    _this.filterModel.dealNumber.push(dealNumber);
                }
                count = count + 1;
            });
            _this.filtered(_this.filterModel);
        });
    };
    FxDealMonthEndSummaryComponent.prototype.selectedFilters = function () {
        this.selectedDepartments = this.departmentDropdownComponent.allSelected ? this.departmentDropdownComponent.objects :
            this.departmentDropdownComponent.selectedValues;
        this.selectedDealNumbers = this.dealNumberDropdownComponent.allSelected ? this.dealNumberDropdownComponent.objects :
            this.dealNumberDropdownComponent.selectedValues;
        this.selectedDealtCurrencies = this.dealtCurrencyDropdownComponent.allSelected ? this.dealtCurrencyDropdownComponent.objects :
            this.dealtCurrencyDropdownComponent.selectedValues;
        this.selectedSettlementCurrencies = this.settlementCurrencyDropdownComponent.allSelected ?
            this.settlementCurrencyDropdownComponent.objects :
            this.settlementCurrencyDropdownComponent.selectedValues;
    };
    FxDealMonthEndSummaryComponent.prototype.applyFilter = function (filterRows) {
        var _this = this;
        if (this.isFilterApplied) {
            var deptFilter_1 = [];
            var dealNoFilter_1 = [];
            var dealCcyFilter_1 = [];
            var settlementCcyFilter_1 = [];
            filterRows.filter(function (x) {
                var deptCode = _this.selectedDepartments.find(function (y) { return y.desc === x.departmentCode; });
                if (deptCode) {
                    if (x.departmentCode === deptCode.desc) {
                        deptFilter_1.push(x);
                    }
                }
            });
            filterRows = deptFilter_1;
            filterRows.filter(function (x) {
                var dealNumber = _this.selectedDealNumbers.find(function (y) { return y.desc === x.dealNumber; });
                if (dealNumber) {
                    if (x.dealNumber === dealNumber.desc) {
                        dealNoFilter_1.push(x);
                    }
                }
                else {
                    if (x.dealNumber === null) {
                        dealNoFilter_1.push(x);
                    }
                }
            });
            filterRows = dealNoFilter_1;
            filterRows.filter(function (x) {
                var dealCurrency = _this.selectedDealtCurrencies.find(function (y) { return y.desc === x.dealCurrency; });
                if (dealCurrency) {
                    if (x.dealCurrency === dealCurrency.desc) {
                        dealCcyFilter_1.push(x);
                    }
                }
            });
            filterRows = dealCcyFilter_1;
            filterRows.filter(function (x) {
                var settlementCurrency = _this.selectedSettlementCurrencies.find(function (y) { return y.desc === x.settlementCurrency; });
                if (settlementCurrency) {
                    if (x.settlementCurrency === settlementCurrency.desc) {
                        settlementCcyFilter_1.push(x);
                    }
                }
                else {
                    if (x.settlementCurrency === null) {
                        settlementCcyFilter_1.push(x);
                    }
                }
            });
            filterRows = settlementCcyFilter_1;
            return filterRows;
        }
        else {
            filterRows = this.monthEndData;
            return filterRows;
        }
    };
    FxDealMonthEndSummaryComponent.prototype.onDepartmentSelectionChanges = function () {
        var _this = this;
        var deptFilter = [];
        var dealNoFilter = [];
        var dealCcyFilter = [];
        var settlementCcyFilter = [];
        this.selectedFilters();
        this.monthEndData.filter(function (x) {
            var deptCode = _this.selectedDepartments.find(function (y) { return y.desc === x.departmentCode; });
            if (deptCode) {
                if (x.departmentCode === deptCode.desc) {
                    deptFilter.push(x);
                }
            }
        });
        this.dealNumberDropdownComponent.formCtrl.reset();
        this.dealtCurrencyDropdownComponent.formCtrl.reset();
        this.settlementCurrencyDropdownComponent.formCtrl.reset();
        var count = 1;
        deptFilter.forEach(function (x) {
            if (x.dealNumber) {
                var dealNo = new _shared_entities_filter_value_generate_end_month_entity__WEBPACK_IMPORTED_MODULE_5__["FilterValueGenerateEndMonth"]();
                dealNo.desc = x.dealNumber;
                dealNo.value = count;
                dealNoFilter.push(dealNo);
            }
            if (x.dealCurrency) {
                var dealCcy = new _shared_entities_filter_value_generate_end_month_entity__WEBPACK_IMPORTED_MODULE_5__["FilterValueGenerateEndMonth"]();
                dealCcy.desc = x.dealCurrency;
                dealCcy.value = count;
                dealCcyFilter.push(dealCcy);
            }
            if (x.settlementCurrency) {
                var settlementCcy = new _shared_entities_filter_value_generate_end_month_entity__WEBPACK_IMPORTED_MODULE_5__["FilterValueGenerateEndMonth"]();
                settlementCcy.desc = x.settlementCurrency;
                settlementCcy.value = count;
                settlementCcyFilter.push(settlementCcy);
            }
            count = count + 1;
        });
        this.dealNumberDropdownComponent.objects = this.getDistinctString(dealNoFilter);
        this.dealtCurrencyDropdownComponent.objects = this.getDistinctString(dealCcyFilter);
        this.settlementCurrencyDropdownComponent.objects = this.getDistinctString(settlementCcyFilter);
        if (this.departmentDropdownComponent.allSelected) {
            this.dealNumberDropdownComponent.setSelectedValue(true, this.getDistinctString(dealNoFilter));
            this.dealtCurrencyDropdownComponent.setSelectedValue(true, this.getDistinctString(dealCcyFilter));
            this.settlementCurrencyDropdownComponent.setSelectedValue(true, this.getDistinctString(settlementCcyFilter));
        }
        else {
            this.dealNumberDropdownComponent.setSelectedValue(false, this.getDistinctString(dealNoFilter));
            this.dealtCurrencyDropdownComponent.setSelectedValue(false, this.getDistinctString(dealCcyFilter));
            this.settlementCurrencyDropdownComponent.setSelectedValue(false, this.getDistinctString(settlementCcyFilter));
        }
    };
    FxDealMonthEndSummaryComponent.prototype.onDealNumberSelectionChanges = function () {
        var _this = this;
        var dealCurrencyFilter = [];
        var settlementCurrencyFilter = [];
        var dealNumberFilter = [];
        this.selectedFilters();
        this.monthEndData.filter(function (x) {
            var dealCurrency = _this.selectedDealtCurrencies.find(function (y) { return y.desc === x.dealCurrency; });
            if (dealCurrency) {
                if (x.dealCurrency === dealCurrency.desc) {
                    dealCurrencyFilter.push(x);
                }
            }
        });
        this.settlementCurrencyDropdownComponent.formCtrl.reset();
        this.dealNumberDropdownComponent.formCtrl.reset();
        var count = 1;
        dealCurrencyFilter.forEach(function (x) {
            if (x.settlementCurrency) {
                var settlementCcy = new _shared_entities_filter_value_generate_end_month_entity__WEBPACK_IMPORTED_MODULE_5__["FilterValueGenerateEndMonth"]();
                settlementCcy.desc = x.settlementCurrency;
                settlementCcy.value = count;
                settlementCurrencyFilter.push(settlementCcy);
            }
            if (x.dealNumber) {
                var dealNo = new _shared_entities_filter_value_generate_end_month_entity__WEBPACK_IMPORTED_MODULE_5__["FilterValueGenerateEndMonth"]();
                dealNo.desc = x.dealNumber;
                dealNo.value = count;
                dealNumberFilter.push(dealNo);
            }
            count = count + 1;
        });
        this.settlementCurrencyDropdownComponent.objects = this.getDistinctString(settlementCurrencyFilter);
        this.dealNumberDropdownComponent.objects = this.getDistinctString(dealNumberFilter);
        if (this.dealtCurrencyDropdownComponent.allSelected) {
            this.settlementCurrencyDropdownComponent.setSelectedValue(true, this.getDistinctString(settlementCurrencyFilter));
            this.dealNumberDropdownComponent.setSelectedValue(true, this.getDistinctString(dealNumberFilter));
        }
        else {
            this.settlementCurrencyDropdownComponent.setSelectedValue(false, this.getDistinctString(settlementCurrencyFilter));
            this.dealNumberDropdownComponent.setSelectedValue(false, this.getDistinctString(dealNumberFilter));
        }
    };
    FxDealMonthEndSummaryComponent.prototype.onSettlementCurrencySelectionChanges = function () {
        var _this = this;
        var settlementCurrencyFilter = [];
        var dealNumberFilter = [];
        this.selectedFilters();
        this.monthEndData.filter(function (x) {
            var settlementCcy = _this.selectedSettlementCurrencies.find(function (y) { return y.desc === x.settlementCurrency; });
            if (settlementCcy) {
                if (x.settlementCurrency === settlementCcy.desc) {
                    settlementCurrencyFilter.push(x);
                }
            }
        });
        this.dealNumberDropdownComponent.formCtrl.reset();
        var count = 1;
        settlementCurrencyFilter.forEach(function (x) {
            if (x.dealNumber) {
                var dealNo = new _shared_entities_filter_value_generate_end_month_entity__WEBPACK_IMPORTED_MODULE_5__["FilterValueGenerateEndMonth"]();
                dealNo.desc = x.dealNumber;
                dealNo.value = count;
                dealNumberFilter.push(dealNo);
            }
            count = count + 1;
        });
        this.dealNumberDropdownComponent.objects = this.getDistinctString(dealNumberFilter);
        if (this.settlementCurrencyDropdownComponent.allSelected) {
            this.dealNumberDropdownComponent.setSelectedValue(true, this.getDistinctString(dealNumberFilter));
        }
        else {
            this.dealNumberDropdownComponent.setSelectedValue(false, this.getDistinctString(dealNumberFilter));
        }
    };
    FxDealMonthEndSummaryComponent.prototype.checkIfUserHasRequiredPrivileges = function (userCompanyPrivilege) {
        if (this.authorizationService.isUserAllowedForCompany(this.company)) {
            var userPermissionLevel = this.authorizationService.getPermissionLevel(this.company, userCompanyPrivilege.privilegeName, userCompanyPrivilege.privilegeParentLevelOne, userCompanyPrivilege.privilegeParentLevelTwo);
            if (userPermissionLevel <= userCompanyPrivilege.permission) {
                return true;
            }
        }
        return false;
    };
    FxDealMonthEndSummaryComponent.prototype.onSelectedIndexChanged = function (value) {
        this.tabIndex = value;
        this.tabIndexNumber.emit(this.tabIndex);
    };
    FxDealMonthEndSummaryComponent.prototype.filtered = function (filter) {
        this.departmentDropdownComponent.objects = this.getDistinctString(filter.departmentCode);
        this.dealNumberDropdownComponent.objects = this.getDistinctString(filter.dealNumber);
        this.dealtCurrencyDropdownComponent.objects = this.getDistinctString(filter.dealCurrency);
        this.settlementCurrencyDropdownComponent.objects = this.getDistinctString(filter.settlementCurrency);
    };
    FxDealMonthEndSummaryComponent.prototype.stopPosting = function (generateMonthPosting) {
        this.disableButton = generateMonthPosting;
    };
    FxDealMonthEndSummaryComponent.prototype.getDistinctString = function (list) {
        var distinctList = [];
        var filteredList = [];
        list.forEach(function (item) {
            if (distinctList.indexOf(item.desc) === -1) {
                distinctList.push(item.desc);
                filteredList.push(item);
            }
        });
        return filteredList;
    };
    FxDealMonthEndSummaryComponent.prototype.onDiscardButtonClicked = function () {
        this.router.navigate(['/' + this.companyManager.getCurrentCompanyId() + '/financial/cut-off/generate-end-of-month']);
    };
    FxDealMonthEndSummaryComponent.prototype.onGeneratePostingsButtonClicked = function () {
        this.onGenerateFxDealDocument();
    };
    FxDealMonthEndSummaryComponent.prototype.onGenerateFxDealDocument = function () {
        var _this = this;
        if (this.monthEndData && this.monthEndData.length > 0) {
            var genetateMonthEndTACommand = new _shared_services_execution_dtos_fxdeal_month_end_temporary_adjustment_list_command__WEBPACK_IMPORTED_MODULE_14__["FXDealMonthEndTemporaryAdjustmentListCommand"]();
            genetateMonthEndTACommand.dataVersionId = this.dataVersionId;
            genetateMonthEndTACommand.dataVersionDate = this.dataVersionDate;
            genetateMonthEndTACommand.reportType = this.reportType;
            this.generateMonthEndSubscription = this.executionService
                .SaveFxDealMonthEndTemporaryAdjustment(genetateMonthEndTACommand)
                .subscribe((function (data) {
                _this.disableGeneratePosting.emit(_this.generatePosting);
                _this.snackbarService.informationAndCopySnackBar('The following Accrual and autoreversal have been created:' + data.monthEndTAReferenceNumber, data.monthEndTAReferenceNumber);
            }));
        }
        else {
            this.snackbarService.informationSnackBar('Please wait! Data is loading...');
        }
    };
    FxDealMonthEndSummaryComponent.prototype.onSelectedIndexChanged1 = function (tabIndex) {
        this.tabIndex = tabIndex;
    };
    FxDealMonthEndSummaryComponent.prototype.onApplyButtonClicked = function () {
        if (this.departmentDropdownComponent.allSelected &&
            this.dealNumberDropdownComponent.allSelected &&
            this.dealtCurrencyDropdownComponent.allSelected &&
            this.settlementCurrencyDropdownComponent.allSelected) {
            this.isFilterApplied = false;
        }
        else {
            this.isFilterApplied = true;
        }
        this.selectedFilters();
        var filteredData = this.applyFilter(this.monthEndData);
        this.fxDealDetail.prepareData(filteredData);
        this.fxDealPosting.prepareData(filteredData);
    };
    FxDealMonthEndSummaryComponent.prototype.generateMappingErrorForMonthEnd = function (tradeCostMonthEndMappingErrors) {
        var _this = this;
        var mappingErrors = tradeCostMonthEndMappingErrors.filter(function (mappingError) { return mappingError.isMappingError; });
        this.clientAccountMappingErrorMessages = [];
        this.departmentMappingErrorMessages = [];
        this.costTypeMappingErrorMessages = [];
        this.nominalAccountMappingErrorMessages = [];
        if (mappingErrors && mappingErrors.length > 0) {
            mappingErrors.forEach(function (error) {
                if (error.c2CCodeIsInMappingError) {
                    _this.clientAccountMappingErrorMessages.push(error.accountingDocumentLineClientAccount);
                }
                if (error.costAlternativeCodeIsInMappingError) {
                    _this.costTypeMappingErrorMessages.push(error.accountingDocumentLineCostTypeCode);
                }
                if (error.departmentAlternativeCodeIsInMappingError) {
                    _this.departmentMappingErrorMessages.push(error.accountingDocumentLineDepartmentCode);
                }
                if (error.nominalAlternativeAccountIsInMappingError) {
                    _this.nominalAccountMappingErrorMessages.push(error.accountingDocumentLineAccountReference);
                }
            });
            if (this.clientAccountMappingErrorMessages.length > 0) {
                this.clientAccountMappingErrorMessages = this.clientAccountMappingErrorMessages.filter(function (x, i, a) { return x && a.indexOf(x) === i; });
                this.isMappingError = true;
            }
            if (this.costTypeMappingErrorMessages.length > 0) {
                this.costTypeMappingErrorMessages = this.costTypeMappingErrorMessages.filter(function (x, i, a) { return x && a.indexOf(x) === i; });
                this.isMappingError = true;
            }
            if (this.departmentMappingErrorMessages.length > 0) {
                this.departmentMappingErrorMessages = this.departmentMappingErrorMessages.filter(function (x, i, a) { return x && a.indexOf(x) === i; });
                this.isMappingError = true;
            }
            if (this.nominalAccountMappingErrorMessages.length > 0) {
                this.nominalAccountMappingErrorMessages = this.nominalAccountMappingErrorMessages.filter(function (x, i, a) { return x && a.indexOf(x) === i; });
                this.isMappingError = true;
            }
        }
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('fxDealPosting'),
        __metadata("design:type", _postings_tab_fx_deal_postings_month_end_fx_deal_month_end_component__WEBPACK_IMPORTED_MODULE_13__["PostingTabFxDealMonthEndComponent"])
    ], FxDealMonthEndSummaryComponent.prototype, "fxDealPosting", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('fxDealDetail'),
        __metadata("design:type", _details_tab_fx_deal_details_month_end_fx_deal_month_end_component__WEBPACK_IMPORTED_MODULE_12__["DetailTabFxDealMonthEndComponent"])
    ], FxDealMonthEndSummaryComponent.prototype, "fxDealDetail", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('departmentDropdownComponent'),
        __metadata("design:type", _department_dropdown_department_dropdown_component__WEBPACK_IMPORTED_MODULE_10__["DepartmentDropdownComponent"])
    ], FxDealMonthEndSummaryComponent.prototype, "departmentDropdownComponent", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('dealNumberDropdownComponent'),
        __metadata("design:type", _deal_number_dropdown_deal_number_dropdown_component__WEBPACK_IMPORTED_MODULE_8__["DealNumberDropdownComponent"])
    ], FxDealMonthEndSummaryComponent.prototype, "dealNumberDropdownComponent", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('dealtCurrencyDropdownComponent'),
        __metadata("design:type", _dealt_currency_dropdown_dealt_currency_dropdown_component__WEBPACK_IMPORTED_MODULE_9__["DealtCurrencyDropdownComponent"])
    ], FxDealMonthEndSummaryComponent.prototype, "dealtCurrencyDropdownComponent", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('settlementCurrencyDropdownComponent'),
        __metadata("design:type", _settlement_currency_dropdown_settlement_currency_dropdown_component__WEBPACK_IMPORTED_MODULE_11__["SettlementCurrencyDropdownComponent"])
    ], FxDealMonthEndSummaryComponent.prototype, "settlementCurrencyDropdownComponent", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], FxDealMonthEndSummaryComponent.prototype, "tabIndexNumber", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], FxDealMonthEndSummaryComponent.prototype, "disableGeneratePosting", void 0);
    FxDealMonthEndSummaryComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'atlas-fx-deal-month-end-summary',
            template: __webpack_require__(/*! ./fx-deal-month-end-summary.component.html */ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/tabs/fx-deal-month-end-summary/fx-deal-month-end-summary.component.html"),
            styles: [__webpack_require__(/*! ./fx-deal-month-end-summary.component.scss */ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/tabs/fx-deal-month-end-summary/fx-deal-month-end-summary.component.scss")],
        }),
        __metadata("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_1__["ActivatedRoute"],
            _angular_router__WEBPACK_IMPORTED_MODULE_1__["Router"],
            _shared_services_http_services_execution_service__WEBPACK_IMPORTED_MODULE_15__["ExecutionService"],
            _shared_services_snackbar_service__WEBPACK_IMPORTED_MODULE_16__["SnackbarService"],
            _core_services_authorization_service__WEBPACK_IMPORTED_MODULE_2__["AuthorizationService"],
            _core_services_company_manager_service__WEBPACK_IMPORTED_MODULE_3__["CompanyManagerService"],
            _shared_services_http_services_trading_service__WEBPACK_IMPORTED_MODULE_7__["TradingService"]])
    ], FxDealMonthEndSummaryComponent);
    return FxDealMonthEndSummaryComponent;
}());



/***/ }),

/***/ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/tabs/overview-tab/overview-tab.component.html":
/*!***************************************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/tabs/overview-tab/overview-tab.component.html ***!
  \***************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<mat-card>\r\n    <div fxLayout=\"row\"\r\n         fxLayout.xs=\"column\"\r\n         fxLayoutAlign=\"space-between center\"\r\n         fxLayoutWrap\r\n         fxLayoutGap=\"20px\"\r\n         class=\"atlas-grid-card-header\">\r\n        <h2 class=\"no-margin\">End of Month Overview</h2>\r\n        <mat-chip-list class=\"chip-list\">\r\n            <mat-chip selected\r\n                      disabled>\r\n                {{dataVersionMonth}}\r\n            </mat-chip>\r\n            <mat-chip selected\r\n                      disabled>{{reportTypeDescription}}\r\n            </mat-chip>\r\n        </mat-chip-list>\r\n        <span class=\"fill-space\"></span><button mat-icon-button\r\n                [matMenuTriggerFor]=\"menu1\">\r\n            <i class=\"material-icons\">more_vert</i>\r\n        </button>\r\n        <mat-menu #menu1=\"matMenu\">\r\n            <button mat-menu-item\r\n                    [matMenuTriggerFor]=\"exportMenu\">\r\n                <mat-icon>import_export</mat-icon><span>Export</span>\r\n            </button>\r\n        </mat-menu>\r\n        <mat-menu #exportMenu=\"matMenu\">\r\n            <button mat-menu-item\r\n                    (click)=\"onExportButtonClickedAsExcel()\">\r\n                <mat-icon>import_export</mat-icon><span>Export as Excel</span>\r\n            </button>\r\n            <button mat-menu-item\r\n                    (click)=\"onExportButtonClickedAsCSV()\">\r\n                <mat-icon>import_export</mat-icon><span>Export as CSV</span>\r\n            </button>\r\n        </mat-menu>\r\n    </div>\r\n    <mat-card-content>\r\n        <div ag-grid=\"overviewGridOptions\"\r\n             class=\"ag-theme-material pointer-cursor\">\r\n            <ag-grid-angular style=\" height:100%;\"\r\n                             class=\"ag-theme-material\"\r\n                             [columnDefs]=\"overviewGridColumns\"\r\n                             [rowData]=\"overviewGridRows\"\r\n                             [gridOptions]=\"overviewGridOptions\"\r\n                             domLayout=\"autoHeight\"\r\n                             (gridReady)=\"onGridReady($event)\"\r\n                             rowSelection=\"multiple\"\r\n                             [singleClickEdit]=\"true\"\r\n                             [suppressRowClickSelection]=\"true\"\r\n                             [pagination]=\"false\"\r\n                             [paginationPageSize]=\"10\"\r\n                             [enableSorting]=\"true\"\r\n                             [enableColResize]=\"true\"\r\n                             [defaultColDef]=\"defaultColDef\"\r\n                             [animateRows]=\"true\"\r\n                             [enableRangeSelection]=\"true\"\r\n                             [groupMultiAutoColumn]=\"true\"\r\n                             [rowGroupPanelShow]=\"rowGroupPanelShow\"\r\n                             [suppressAggFuncInHeader]=\"true\"\r\n                             [rowHeight]=\"atlasAgGridParam.rowHeight\"\r\n                             enableFilter>\r\n            </ag-grid-angular>\r\n            <div fxLayout=\"row\"\r\n                 fxLayoutAlign=\"end center\"\r\n                 fxLayoutGap=\"1%\"\r\n                 class=\"footer-label\">\r\n                <h2>Grand Total</h2>\r\n                <h2>{{formattedInput}} </h2>\r\n            </div>\r\n        </div>\r\n    </mat-card-content>\r\n</mat-card>"

/***/ }),

/***/ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/tabs/overview-tab/overview-tab.component.scss":
/*!***************************************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/tabs/overview-tab/overview-tab.component.scss ***!
  \***************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".footer-label {\n  padding-top: 20px; }\n"

/***/ }),

/***/ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/tabs/overview-tab/overview-tab.component.ts":
/*!*************************************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/tabs/overview-tab/overview-tab.component.ts ***!
  \*************************************************************************************************************************************************/
/*! exports provided: OverviewTabComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OverviewTabComponent", function() { return OverviewTabComponent; });
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _core_services_authorization_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../../../core/services/authorization.service */ "./Client/app/core/services/authorization.service.ts");
/* harmony import */ var _core_services_company_manager_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../../../core/services/company-manager.service */ "./Client/app/core/services/company-manager.service.ts");
/* harmony import */ var _execution_services_execution_cash_common_methods__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../../../../execution/services/execution-cash-common-methods */ "./Client/app/execution/services/execution-cash-common-methods.ts");
/* harmony import */ var _shared_components_ag_grid_user_preferences_ag_grid_user_preferences_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../../../shared/components/ag-grid-user-preferences/ag-grid-user-preferences.component */ "./Client/app/shared/components/ag-grid-user-preferences/ag-grid-user-preferences.component.ts");
/* harmony import */ var _shared_components_base_form_component_base_form_component_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../../../../shared/components/base-form-component/base-form-component.component */ "./Client/app/shared/components/base-form-component/base-form-component.component.ts");
/* harmony import */ var _shared_entities_filter_gem_entity__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../../../../shared/entities/filter-gem.entity */ "./Client/app/shared/entities/filter-gem.entity.ts");
/* harmony import */ var _shared_entities_filter_value_generate_end_month_entity__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../../../../shared/entities/filter-value-generate-end-month.entity */ "./Client/app/shared/entities/filter-value-generate-end-month.entity.ts");
/* harmony import */ var _shared_enums_generate_month_end_type_enum__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../../../../shared/enums/generate-month-end-type.enum */ "./Client/app/shared/enums/generate-month-end-type.enum.ts");
/* harmony import */ var _shared_models_overview_generate_end_of_month_display_view__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../../../../../shared/models/overview-generate-end-of-month-display-view */ "./Client/app/shared/models/overview-generate-end-of-month-display-view.ts");
/* harmony import */ var _shared_services_ag_grid_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../../../../../shared/services/ag-grid.service */ "./Client/app/shared/services/ag-grid.service.ts");
/* harmony import */ var _shared_services_execution_dtos_month_end_temporary_adjustment_list_command__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../../../../../shared/services/execution/dtos/month-end-temporary-adjustment-list-command */ "./Client/app/shared/services/execution/dtos/month-end-temporary-adjustment-list-command.ts");
/* harmony import */ var _shared_services_form_configuration_provider_service__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../../../../../../shared/services/form-configuration-provider.service */ "./Client/app/shared/services/form-configuration-provider.service.ts");
/* harmony import */ var _shared_services_http_services_execution_service__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../../../../../../shared/services/http-services/execution.service */ "./Client/app/shared/services/http-services/execution.service.ts");
/* harmony import */ var _shared_services_http_services_trading_service__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../../../../../../shared/services/http-services/trading.service */ "./Client/app/shared/services/http-services/trading.service.ts");
/* harmony import */ var _shared_services_snackbar_service__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../../../../../../shared/services/snackbar.service */ "./Client/app/shared/services/snackbar.service.ts");
/* harmony import */ var _shared_services_ui_service__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../../../../../../shared/services/ui.service */ "./Client/app/shared/services/ui.service.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


















var OverviewTabComponent = /** @class */ (function (_super) {
    __extends(OverviewTabComponent, _super);
    function OverviewTabComponent(formConfigurationProvider, uiService, companyManager, tradingService, authorizationService, executionService, snackbarService, datePipe, gridService) {
        var _this = _super.call(this, formConfigurationProvider) || this;
        _this.formConfigurationProvider = formConfigurationProvider;
        _this.uiService = uiService;
        _this.companyManager = companyManager;
        _this.tradingService = tradingService;
        _this.authorizationService = authorizationService;
        _this.executionService = executionService;
        _this.snackbarService = snackbarService;
        _this.datePipe = datePipe;
        _this.gridService = gridService;
        _this.filteredGrid = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        _this.applyButtonClicked = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        _this.disableGeneratePosting = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        _this.mappingError = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        _this.overviewGridOptions = {};
        _this.dataLength = 0;
        _this.generatePosting = true;
        _this.userActiveDirectoryName = _this.authorizationService.getCurrentUser().samAccountName;
        return _this;
    }
    OverviewTabComponent.prototype.ngOnInit = function () {
        this.atlasAgGridParam = this.gridService.getAgGridParam();
        this.company = this.companyManager.getCurrentCompanyId();
        this.initializeGridColumns();
        this.initOverviewGridRows();
        this.initializSortModel();
    };
    OverviewTabComponent.prototype.onGridReady = function (params) {
        var _this = this;
        params.columnDefs = this.overviewGridColumns;
        this.overviewGridOptions = params;
        this.gridApi = params.api;
        this.gridColumnApi = params.columnApi;
        this.gridApi.showNoRowsOverlay();
        this.gridService.sizeColumns(this.overviewGridOptions);
        window.onresize = function () {
            _this.gridService.sizeColumns(_this.overviewGridOptions);
        };
    };
    OverviewTabComponent.prototype.initializSortModel = function () {
        var defaultSortModel = [
            {
                colId: "currencyCode",
                sort: "asc"
            },
            {
                colId: "departmentCode",
                sort: "asc"
            },
            {
                colId: "charterCode",
                sort: "asc"
            },
            {
                colId: "costType",
                sort: "asc"
            }
        ];
        this.gridApi.setSortModel(defaultSortModel);
    };
    OverviewTabComponent.prototype.initializeGridColumns = function () {
        this.overviewGridColumns = [
            {
                headerName: 'Currency',
                field: 'currencyCode',
                colId: 'currencyCode',
                enableRowGroup: true,
                hide: true,
                rowGroup: true,
                valueFormatter: this.currencyFormatter.bind(this),
            },
            {
                headerName: 'Department',
                field: 'departmentCode',
                colId: 'departmentCode',
                enableRowGroup: true,
                hide: true,
                rowGroup: true,
                valueFormatter: this.stringFormatter.bind(this),
            },
            {
                headerName: 'Charter',
                field: 'charterCode',
                colId: 'charterCode',
                enableRowGroup: true,
                hide: true,
                rowGroup: true,
                valueFormatter: this.charterFormatter.bind(this),
            },
            {
                headerName: ' Cost Type',
                field: 'costType',
                colId: 'costType',
                enableRowGroup: true,
                hide: true,
                rowGroup: true,
                valueFormatter: this.stringFormatter.bind(this),
            },
            {
                headerName: 'Associated Client',
                field: 'associatedClient',
                colId: 'associatedClient',
                hide: false,
                valueFormatter: this.stringFormatter.bind(this),
            },
            {
                headerName: 'Sum of Accrued Amount',
                field: 'accruedAmount',
                colId: 'accruedAmount',
                hide: false,
                valueFormatter: this.amountFormatter.bind(this),
                aggFunc: 'sum',
                cellStyle: { textAlign: 'right' },
            },
        ];
        this.rowGroupPanelShow = 'always';
        this.defaultColDef = { sortable: true };
    };
    OverviewTabComponent.prototype.initOverviewGridRows = function () {
        this.overviewGridRows = [];
    };
    OverviewTabComponent.prototype.getTradeCostListOverview = function (filteredOverviewGridRows, isFilteredApplied) {
        var _this = this;
        if (isFilteredApplied === void 0) { isFilteredApplied = false; }
        if (filteredOverviewGridRows && isFilteredApplied === true) {
            this.overviewGridRows = filteredOverviewGridRows;
        }
        else {
            this.getTradeCostListPosting(this.dataVersionID);
            this.tradingService.getTradeCostList(this.reportType, _shared_enums_generate_month_end_type_enum__WEBPACK_IMPORTED_MODULE_9__["GenerateMonthEndEnum"].Overview, this.dataVersionID)
                .subscribe(function (data) {
                if (data && data.value.length > 0) {
                    var mappingErrorDetails = data.value[0].tradeCostMonthEndMappingErrors;
                    _this.mappingError.emit(mappingErrorDetails);
                }
                _this.overviewGridRows = data.value.map(function (CostTrade) {
                    return new _shared_models_overview_generate_end_of_month_display_view__WEBPACK_IMPORTED_MODULE_10__["OverviewGenerateEndOfMonthDisplayView"](CostTrade, _this.reportType);
                });
                _this.model = new _shared_entities_filter_gem_entity__WEBPACK_IMPORTED_MODULE_7__["FilterGem"]();
                _this.model.departmentCode = [];
                _this.model.charterCode = [];
                _this.model.costType = [];
                _this.model.associatedClient = [];
                var count = 1;
                _this.overviewGridRows.forEach(function (x) {
                    if (x.departmentCode) {
                        var dept = new _shared_entities_filter_value_generate_end_month_entity__WEBPACK_IMPORTED_MODULE_8__["FilterValueGenerateEndMonth"]();
                        dept.desc = x.departmentCode;
                        dept.value = count;
                        _this.model.departmentCode.push(dept);
                    }
                    if (x.charterCode) {
                        var charter = new _shared_entities_filter_value_generate_end_month_entity__WEBPACK_IMPORTED_MODULE_8__["FilterValueGenerateEndMonth"]();
                        charter.desc = x.charterCode;
                        charter.value = count;
                        _this.model.charterCode.push(charter);
                    }
                    if (x.costType) {
                        var cost = new _shared_entities_filter_value_generate_end_month_entity__WEBPACK_IMPORTED_MODULE_8__["FilterValueGenerateEndMonth"]();
                        cost.desc = x.costType;
                        cost.value = count;
                        _this.model.costType.push(cost);
                    }
                    if (x.associatedClient) {
                        var client = new _shared_entities_filter_value_generate_end_month_entity__WEBPACK_IMPORTED_MODULE_8__["FilterValueGenerateEndMonth"]();
                        client.desc = x.associatedClient;
                        client.value = count;
                        _this.model.associatedClient.push(client);
                    }
                    count = count + 1;
                });
                _this.overviewGridRows.forEach(function (x) {
                    if (x.postingCostType) {
                        var cost = new _shared_entities_filter_value_generate_end_month_entity__WEBPACK_IMPORTED_MODULE_8__["FilterValueGenerateEndMonth"]();
                        cost.desc = x.postingCostType;
                        cost.value = count;
                        _this.model.costType.push(cost);
                    }
                    count = count + 1;
                });
                _this.filteredGrid.emit(_this.model);
                _this.isLoading = false;
                _this.calculateGrandTotal(_this.overviewGridRows);
                _this.originalOverviewGridRows = _this.overviewGridRows;
                if (isFilteredApplied) {
                    _this.applyButtonClicked.emit();
                }
            });
        }
    };
    OverviewTabComponent.prototype.calculateGrandTotal = function (amounts) {
        var _this = this;
        this.totalAmount = 0;
        amounts.forEach(function (amount) {
            _this.totalAmount = (_this.totalAmount + amount.accruedAmount);
            _this.formattedInput = _this.totalAmount.toLocaleString();
            return _this.formattedInput;
        });
    };
    OverviewTabComponent.prototype.currencyFormatter = function (param) {
        if (param.value) {
            return String(param.value).substr(0, 3);
        }
    };
    OverviewTabComponent.prototype.charterFormatter = function (param) {
        if (param.value) {
            return String(param.value).substr(0, 15);
        }
    };
    OverviewTabComponent.prototype.stringFormatter = function (param) {
        if (param.value) {
            return String(param.value).substr(0, 10);
        }
    };
    OverviewTabComponent.prototype.amountFormatter = function (param) {
        if (param.value) {
            var commonMethods = new _execution_services_execution_cash_common_methods__WEBPACK_IMPORTED_MODULE_4__["CommonMethods"]();
            return commonMethods.getFormattedNumberValue(param.value, 2);
        }
    };
    OverviewTabComponent.prototype.onGenerateTADocument = function () {
        var _this = this;
        if (this.postingsGridRows) {
            if (this.postingsGridRows.length > 0) {
                var genetateMonthEndTACommand = new _shared_services_execution_dtos_month_end_temporary_adjustment_list_command__WEBPACK_IMPORTED_MODULE_12__["MonthEndTemporaryAdjustmentListCommand"]();
                genetateMonthEndTACommand.dataVersionId = this.dataVersionID;
                genetateMonthEndTACommand.dataVersionDate = this.dataVersionDate;
                genetateMonthEndTACommand.reportType = this.reportType;
                this.generateMonthEndSubscription = this.executionService
                    .SaveMonthEndTemporaryAdjustment(genetateMonthEndTACommand)
                    .subscribe((function (data) {
                    _this.disableGeneratePosting.emit(_this.generatePosting);
                    _this.snackbarService.informationAndCopySnackBar('The following Accrual and autoreversal have been created:' + data.monthEndTAReferenceNumber, data.monthEndTAReferenceNumber);
                }));
            }
        }
        else {
            this.snackbarService.informationSnackBar('Please wait! Data is loading...');
        }
    };
    OverviewTabComponent.prototype.ngOnDestroy = function () {
        if (this.generateMonthEndSubscription) {
            this.generateMonthEndSubscription.unsubscribe();
        }
    };
    OverviewTabComponent.prototype.onExportButtonClickedAsExcel = function () {
        var screenName = 'EndofMonthOverview';
        var now = new Date();
        var todayDate = this.datePipe.transform(now, 'yyyyMMdd_hhmm').toString().toUpperCase();
        var params = {
            fileName: todayDate + '_' + this.company + '_' + screenName + '_' + this.userActiveDirectoryName + '.xlsx',
        };
        this.gridApi.exportDataAsExcel(params);
    };
    OverviewTabComponent.prototype.onExportButtonClickedAsCSV = function () {
        var screenName = 'EndofMonthOverview';
        var now = new Date();
        var todayDate = this.datePipe.transform(now, 'yyyyMMdd_hhmm').toString().toUpperCase();
        var params = {
            fileName: todayDate + '_' + this.company + '_' + screenName + '_' + this.userActiveDirectoryName + '.csv',
        };
        this.gridApi.exportDataAsCsv(params);
    };
    OverviewTabComponent.prototype.getTradeCostListPosting = function (dataVersionId) {
        var _this = this;
        this.tradingService.getTradeCostList(this.reportType, _shared_enums_generate_month_end_type_enum__WEBPACK_IMPORTED_MODULE_9__["GenerateMonthEndEnum"].Postings, this.dataVersionID)
            .subscribe(function (data) {
            _this.postingsGridRows = data.value.map(function (CostTrade) {
                return new _shared_models_overview_generate_end_of_month_display_view__WEBPACK_IMPORTED_MODULE_10__["OverviewGenerateEndOfMonthDisplayView"](CostTrade, _this.reportType);
            });
        });
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('userPreferences'),
        __metadata("design:type", _shared_components_ag_grid_user_preferences_ag_grid_user_preferences_component__WEBPACK_IMPORTED_MODULE_5__["AgGridUserPreferencesComponent"])
    ], OverviewTabComponent.prototype, "userPreferencesComponent", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(),
        __metadata("design:type", Object)
    ], OverviewTabComponent.prototype, "filteredGrid", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(),
        __metadata("design:type", Object)
    ], OverviewTabComponent.prototype, "applyButtonClicked", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(),
        __metadata("design:type", Object)
    ], OverviewTabComponent.prototype, "disableGeneratePosting", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(),
        __metadata("design:type", Object)
    ], OverviewTabComponent.prototype, "mappingError", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        __metadata("design:type", Array)
    ], OverviewTabComponent.prototype, "filteredOverviewGridRows", void 0);
    OverviewTabComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'atlas-overview-tab',
            template: __webpack_require__(/*! ./overview-tab.component.html */ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/tabs/overview-tab/overview-tab.component.html"),
            styles: [__webpack_require__(/*! ./overview-tab.component.scss */ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/tabs/overview-tab/overview-tab.component.scss")],
            providers: [_angular_common__WEBPACK_IMPORTED_MODULE_0__["DatePipe"]],
        }),
        __metadata("design:paramtypes", [_shared_services_form_configuration_provider_service__WEBPACK_IMPORTED_MODULE_13__["FormConfigurationProviderService"],
            _shared_services_ui_service__WEBPACK_IMPORTED_MODULE_17__["UiService"],
            _core_services_company_manager_service__WEBPACK_IMPORTED_MODULE_3__["CompanyManagerService"],
            _shared_services_http_services_trading_service__WEBPACK_IMPORTED_MODULE_15__["TradingService"],
            _core_services_authorization_service__WEBPACK_IMPORTED_MODULE_2__["AuthorizationService"],
            _shared_services_http_services_execution_service__WEBPACK_IMPORTED_MODULE_14__["ExecutionService"],
            _shared_services_snackbar_service__WEBPACK_IMPORTED_MODULE_16__["SnackbarService"],
            _angular_common__WEBPACK_IMPORTED_MODULE_0__["DatePipe"],
            _shared_services_ag_grid_service__WEBPACK_IMPORTED_MODULE_11__["AgGridService"]])
    ], OverviewTabComponent);
    return OverviewTabComponent;
}(_shared_components_base_form_component_base_form_component_component__WEBPACK_IMPORTED_MODULE_6__["BaseFormComponent"]));



/***/ }),

/***/ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/tabs/postings-tab/fx-deal-postings-month-end/fx-deal-month-end.component.html":
/*!***********************************************************************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/tabs/postings-tab/fx-deal-postings-month-end/fx-deal-month-end.component.html ***!
  \***********************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<mat-card>\r\n    <div fxLayout=\"row\"\r\n         fxLayout.xs=\"column\"\r\n         fxLayoutAlign=\"space-between center\"\r\n         fxLayoutWrap\r\n         fxLayoutGap=\"20px\"\r\n         class=\"atlas-grid-card-header\">\r\n        <h2 class=\"no-margin\">End of Month Postings</h2>\r\n        <mat-chip-list class=\"chip-list\">\r\n            <mat-chip selected\r\n                      disabled>\r\n                {{dataVersionMonth}}\r\n            </mat-chip>\r\n            <mat-chip selected\r\n                      disabled>{{reportTypeDescription}}\r\n            </mat-chip>\r\n        </mat-chip-list>\r\n        <span class=\"fill-space\"></span><button mat-icon-button\r\n                [matMenuTriggerFor]=\"menu1\">\r\n            <i class=\"material-icons\">more_vert</i>\r\n        </button>\r\n        <mat-menu #menu1=\"matMenu\">\r\n            <button mat-menu-item\r\n                    [matMenuTriggerFor]=\"exportMenu\">\r\n                <mat-icon>import_export</mat-icon><span>Export</span>\r\n            </button>\r\n        </mat-menu>\r\n        <mat-menu #exportMenu=\"matMenu\">\r\n            <button mat-menu-item\r\n                    (click)=\"onExportButtonClickedAsExcel()\">\r\n                <mat-icon>import_export</mat-icon><span>Export as Excel</span>\r\n            </button>\r\n            <button mat-menu-item\r\n                    (click)=\"onExportButtonClickedAsCSV()\">\r\n                <mat-icon>import_export</mat-icon><span>Export as CSV</span>\r\n            </button>\r\n        </mat-menu>\r\n    </div>\r\n    <mat-card-content>\r\n        <div ag-grid=\"detailsGridOptions\"\r\n             class=\"ag-theme-material pointer-cursor\">\r\n            <ag-grid-angular style=\" height:100%;\"\r\n                             class=\"ag-theme-material\"\r\n                             [columnDefs]=\"fxDealPostingsGridColumns\"\r\n                             [rowData]=\"fxDealPostingsGridRows\"\r\n                             [gridOptions]=\"fxDealPostingsGridOptions\"\r\n                             domLayout=\"autoHeight\"\r\n                             (gridReady)=\"onGridReady($event)\"\r\n                             rowSelection=\"multiple\"\r\n                             [singleClickEdit]=\"true\"\r\n                             [pagination]=\"true\"\r\n                             [paginationPageSize]=\"10\"\r\n                             [suppressRowClickSelection]=\"true\"\r\n                             [enableSorting]=\"true\"\r\n                             [enableColResize]=\"true\"\r\n                             [animateRows]=\"true\"\r\n                             [enableRangeSelection]=\"true\"\r\n                             [rowHeight]=\"atlasAgGridParam.rowHeight\"\r\n                             [excelStyles]=\"excelStyles\"\r\n                             enableFilter>\r\n            </ag-grid-angular>\r\n        </div>\r\n    </mat-card-content>\r\n</mat-card>"

/***/ }),

/***/ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/tabs/postings-tab/fx-deal-postings-month-end/fx-deal-month-end.component.scss":
/*!***********************************************************************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/tabs/postings-tab/fx-deal-postings-month-end/fx-deal-month-end.component.scss ***!
  \***********************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ""

/***/ }),

/***/ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/tabs/postings-tab/fx-deal-postings-month-end/fx-deal-month-end.component.ts":
/*!*********************************************************************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/tabs/postings-tab/fx-deal-postings-month-end/fx-deal-month-end.component.ts ***!
  \*********************************************************************************************************************************************************************************/
/*! exports provided: PostingTabFxDealMonthEndComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PostingTabFxDealMonthEndComponent", function() { return PostingTabFxDealMonthEndComponent; });
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _core_services_authorization_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../../../../core/services/authorization.service */ "./Client/app/core/services/authorization.service.ts");
/* harmony import */ var _core_services_company_manager_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../../../../core/services/company-manager.service */ "./Client/app/core/services/company-manager.service.ts");
/* harmony import */ var _execution_services_execution_cash_common_methods__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../../../../../execution/services/execution-cash-common-methods */ "./Client/app/execution/services/execution-cash-common-methods.ts");
/* harmony import */ var _shared_components_base_form_component_base_form_component_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../../../../shared/components/base-form-component/base-form-component.component */ "./Client/app/shared/components/base-form-component/base-form-component.component.ts");
/* harmony import */ var _shared_models_fx_deal_generate_end_of_month_display_view__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../../../../../shared/models/fx-deal-generate-end-of-month-display-view */ "./Client/app/shared/models/fx-deal-generate-end-of-month-display-view.ts");
/* harmony import */ var _shared_pipes_format_date_pipe_pipe__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../../../../../shared/pipes/format-date-pipe.pipe */ "./Client/app/shared/pipes/format-date-pipe.pipe.ts");
/* harmony import */ var _shared_services_ag_grid_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../../../../../shared/services/ag-grid.service */ "./Client/app/shared/services/ag-grid.service.ts");
/* harmony import */ var _shared_services_form_configuration_provider_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../../../../../shared/services/form-configuration-provider.service */ "./Client/app/shared/services/form-configuration-provider.service.ts");
/* harmony import */ var _shared_services_ui_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../../../../../../shared/services/ui.service */ "./Client/app/shared/services/ui.service.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};











var PostingTabFxDealMonthEndComponent = /** @class */ (function (_super) {
    __extends(PostingTabFxDealMonthEndComponent, _super);
    function PostingTabFxDealMonthEndComponent(formConfigurationProvider, uiService, companyManager, formatDate, authorizationService, datePipe, gridService) {
        var _this = _super.call(this, formConfigurationProvider) || this;
        _this.formConfigurationProvider = formConfigurationProvider;
        _this.uiService = uiService;
        _this.companyManager = companyManager;
        _this.formatDate = formatDate;
        _this.authorizationService = authorizationService;
        _this.datePipe = datePipe;
        _this.gridService = gridService;
        _this.applyButtonClicked = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        _this.filteredGrid = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        _this.fxDealPostingsGridOptions = {};
        _this.fxDealPostingsGridRows = [];
        _this.length = 0;
        _this.exportFileName = 'EndOfMonthPostings';
        _this.excelStyles = [
            {
                id: 'dateFormat',
                dataType: 'dateTime',
                numberFormat: {
                    format: 'dd/mm/yyyy',
                },
            },
            {
                id: 'leftAlignment',
                alignment: {
                    horizontal: 'Left', vertical: 'Bottom',
                },
            },
            {
                id: "twoDecimalPlaces",
                numberFormat: { format: "#,##0.00" },
            },
        ];
        _this.userActiveDirectoryName = _this.authorizationService.getCurrentUser().samAccountName;
        return _this;
    }
    PostingTabFxDealMonthEndComponent.prototype.ngOnInit = function () {
        this.atlasAgGridParam = this.gridService.getAgGridParam();
        var companyDetails = this.companyManager.getCurrentCompany();
        this.quantityWeightCode = '(in ' + companyDetails.weightCode + ')';
        this.company = this.companyManager.getCurrentCompanyId();
        this.initializeGridColumns();
    };
    PostingTabFxDealMonthEndComponent.prototype.onGridReady = function (params) {
        var _this = this;
        params.columnDefs = this.fxDealPostingsGridColumns;
        this.fxDealPostingsGridOptions = params;
        this.gridApi = this.fxDealPostingsGridOptions.api;
        this.gridColumnApi = this.fxDealPostingsGridOptions.columnApi;
        this.gridColumnApi.autoSizeAllColumns();
        this.gridService.sizeColumns(this.fxDealPostingsGridOptions);
        window.onresize = function () {
            _this.gridService.sizeColumns(_this.fxDealPostingsGridOptions);
        };
    };
    PostingTabFxDealMonthEndComponent.prototype.prepareData = function (postingData) {
        var _this = this;
        this.fxDealPostingsGridRows = [];
        if (postingData) {
            var firstRow_1 = [];
            var secondRow_1 = [];
            postingData.forEach(function (data) {
                firstRow_1.push(new _shared_models_fx_deal_generate_end_of_month_display_view__WEBPACK_IMPORTED_MODULE_6__["FxDealGenerateEndOfMonthDisplayView"](data));
            });
            postingData.forEach(function (data) {
                secondRow_1.push(new _shared_models_fx_deal_generate_end_of_month_display_view__WEBPACK_IMPORTED_MODULE_6__["FxDealGenerateEndOfMonthDisplayView"](data));
            });
            firstRow_1.forEach(function (row) {
                row.variationMargin = -row.variationMargin;
                row.accountNumber = row.line1NominalAccountCode;
                row.accountDescription = row.line1NominalAccountDesc;
                _this.fxDealPostingsGridRows.push(row);
            });
            secondRow_1.forEach(function (row) {
                row.accountNumber = row.line2NominalAccountCode;
                row.accountDescription = row.line2NominalAccountDesc;
                _this.fxDealPostingsGridRows.push(row);
            });
            this.fxDealPostingsGridOptions.api.setRowData(this.fxDealPostingsGridRows);
        }
    };
    PostingTabFxDealMonthEndComponent.prototype.initializeGridColumns = function () {
        this.fxDealPostingsGridColumns = [
            {
                headerName: 'Accrual Number',
                field: 'accrualNumber',
                colId: 'accrualNumber',
                sort: 'asc',
                cellClass: 'leftAlignment',
                minWidth: 180,
            },
            {
                headerName: 'Nom. Account',
                field: 'accountNumber',
                colId: 'accountNumber',
                cellClass: 'leftAlignment',
                valueFormatter: this.stringFormatter.bind(this),
            },
            {
                headerName: 'Nom. Description',
                field: 'accountDescription',
                colId: 'accountDescription',
                width: 300,
            },
            {
                headerName: ' Cost Type',
                field: 'costType',
                colId: 'costType',
                valueFormatter: this.stringFormatter.bind(this),
                maxWidth: 250,
            },
            {
                headerName: 'Department',
                field: 'departmentCode',
                colId: 'departmentCode',
                cellClass: 'leftAlignment',
                valueFormatter: this.stringFormatter.bind(this),
            },
            {
                headerName: 'Deal No.',
                field: 'dealNumber',
                colId: 'dealNumber',
                cellClass: 'leftAlignment',
            },
            {
                headerName: 'Associated Client',
                field: 'associatedClient',
                colId: 'associatedClient',
                hide: false,
                valueFormatter: this.stringFormatter.bind(this),
            },
            {
                headerName: 'Func Ccy',
                field: 'currencyCode',
                colId: 'currencyCode',
                valueFormatter: this.currencyFormatter.bind(this),
            },
            {
                headerName: 'Variation Margin',
                field: 'variationMargin',
                colId: 'variationMargin',
                cellClass: 'twoDecimalPlaces',
                cellStyle: { 'text-align': 'right' },
                valueFormatter: this.amountFormatter.bind(this),
                type: 'numericColumn',
            },
        ];
    };
    PostingTabFxDealMonthEndComponent.prototype.onExportButtonClickedAsExcel = function () {
        var screenName = this.exportFileName;
        var now = new Date();
        var todayDate = this.datePipe.transform(now, 'yyyyMMdd_hhmm').toString().toUpperCase();
        var params = {
            fileName: todayDate + '_' + this.company + '_' + screenName + '_' + this.userActiveDirectoryName + '.xlsx',
        };
        this.gridApi.exportDataAsExcel(params);
    };
    PostingTabFxDealMonthEndComponent.prototype.onExportButtonClickedAsCSV = function () {
        var screenName = this.exportFileName;
        var now = new Date();
        var todayDate = this.datePipe.transform(now, 'yyyyMMdd_hhmm').toString().toUpperCase();
        var params = {
            fileName: todayDate + '_' + this.company + '_' + screenName + '_' + this.userActiveDirectoryName + '.csv',
        };
        this.gridApi.exportDataAsCsv(params);
    };
    PostingTabFxDealMonthEndComponent.prototype.stringFormatter = function (param) {
        if (param.value) {
            return String(param.value).substr(0, 10);
        }
    };
    PostingTabFxDealMonthEndComponent.prototype.currencyFormatter = function (param) {
        if (param.value) {
            return String(param.value).substr(0, 3);
        }
    };
    PostingTabFxDealMonthEndComponent.prototype.amountFormatter = function (param) {
        if (param.value) {
            var commonMethods = new _execution_services_execution_cash_common_methods__WEBPACK_IMPORTED_MODULE_4__["CommonMethods"]();
            return commonMethods.getFormattedNumberValue(param.value, 2);
        }
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        __metadata("design:type", Array)
    ], PostingTabFxDealMonthEndComponent.prototype, "filteredDetailsGridRows", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(),
        __metadata("design:type", Object)
    ], PostingTabFxDealMonthEndComponent.prototype, "applyButtonClicked", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(),
        __metadata("design:type", Object)
    ], PostingTabFxDealMonthEndComponent.prototype, "filteredGrid", void 0);
    PostingTabFxDealMonthEndComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'atlas-posting-tab-fx-deal-month-end',
            template: __webpack_require__(/*! ./fx-deal-month-end.component.html */ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/tabs/postings-tab/fx-deal-postings-month-end/fx-deal-month-end.component.html"),
            styles: [__webpack_require__(/*! ./fx-deal-month-end.component.scss */ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/tabs/postings-tab/fx-deal-postings-month-end/fx-deal-month-end.component.scss")],
            providers: [_angular_common__WEBPACK_IMPORTED_MODULE_0__["DatePipe"]],
        }),
        __metadata("design:paramtypes", [_shared_services_form_configuration_provider_service__WEBPACK_IMPORTED_MODULE_9__["FormConfigurationProviderService"],
            _shared_services_ui_service__WEBPACK_IMPORTED_MODULE_10__["UiService"],
            _core_services_company_manager_service__WEBPACK_IMPORTED_MODULE_3__["CompanyManagerService"],
            _shared_pipes_format_date_pipe_pipe__WEBPACK_IMPORTED_MODULE_7__["FormatDatePipe"],
            _core_services_authorization_service__WEBPACK_IMPORTED_MODULE_2__["AuthorizationService"],
            _angular_common__WEBPACK_IMPORTED_MODULE_0__["DatePipe"],
            _shared_services_ag_grid_service__WEBPACK_IMPORTED_MODULE_8__["AgGridService"]])
    ], PostingTabFxDealMonthEndComponent);
    return PostingTabFxDealMonthEndComponent;
}(_shared_components_base_form_component_base_form_component_component__WEBPACK_IMPORTED_MODULE_5__["BaseFormComponent"]));



/***/ }),

/***/ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/tabs/postings-tab/postings-tab.component.html":
/*!***************************************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/tabs/postings-tab/postings-tab.component.html ***!
  \***************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<mat-card>\r\n    <div fxLayout=\"row\"\r\n         fxLayout.xs=\"column\"\r\n         fxLayoutAlign=\"space-between center\"\r\n         fxLayoutWrap\r\n         fxLayoutGap=\"20px\">\r\n        <h2 class=\"no-margin\">End of Month Postings</h2>\r\n        <mat-chip-list class=\"chip-list\">\r\n            <mat-chip selected\r\n                      disabled>\r\n                {{dataVersionMonth}}\r\n            </mat-chip>\r\n            <mat-chip selected\r\n                      disabled>\r\n                {{reportTypeDescription}}\r\n            </mat-chip>\r\n        </mat-chip-list>\r\n        <div fxLayout=\"row\"\r\n             fxLayoutAlign=\"end start\">\r\n            <atlas-ag-grid-user-preferences *ngIf=\"postingsGridOptions && postingsGridOptions.columnDefs\"\r\n                                            [gridOptions]=\"postingsGridOptions\"\r\n                                            [company]=\"company\"\r\n                                            [gridId]=\"gridId\"\r\n                                            [sharingEnabled]=\"false\"\r\n                                            [savingEnabled]=\"false\"\r\n                                            [hasColumnHandling]=\"false\"\r\n                                            #userPreferences>\r\n            </atlas-ag-grid-user-preferences>\r\n            <atlas-grid-enlargement *ngIf=\"postingsGridOptions && postingsGridOptions.columnDefs\"\r\n                                    [gridOptions]=\"postingsGridOptions\"\r\n                                    [userPreferencesParameters]=\"gridPreferencesParameters\"\r\n                                    #gridZoom>\r\n            </atlas-grid-enlargement>\r\n        </div>\r\n\r\n    </div>\r\n    <mat-card-content>\r\n        <div ag-grid=\"detailsGridOptions\"\r\n             class=\"ag-theme-material pointer-cursor\">\r\n            <ag-grid-angular style=\" height:100%;\"\r\n                             class=\"ag-theme-material\"\r\n                             [columnDefs]=\"postingsGridColumns\"\r\n                             [rowData]=\"postingsGridRows\"\r\n                             [gridOptions]=\"postingsGridOptions\"\r\n                             domLayout=\"autoHeight\"\r\n                             (gridReady)=\"onGridReady($event)\"\r\n                             (firstDataRendered)=\"autosizeColumns()\"\r\n                             rowSelection=\"multiple\"\r\n                             [singleClickEdit]=\"true\"\r\n                             [pagination]=\"true\"\r\n                             [paginationPageSize]=\"10\"\r\n                             [suppressRowClickSelection]=\"true\"\r\n                             [enableSorting]=\"true\"\r\n                             [enableColResize]=\"true\"\r\n                             [animateRows]=\"true\"\r\n                             [enableRangeSelection]=\"true\"\r\n                             [rowHeight]=\"atlasAgGridParam.rowHeight\"\r\n                             enableFilter>\r\n            </ag-grid-angular>\r\n        </div>\r\n    </mat-card-content>\r\n</mat-card>\r\n"

/***/ }),

/***/ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/tabs/postings-tab/postings-tab.component.scss":
/*!***************************************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/tabs/postings-tab/postings-tab.component.scss ***!
  \***************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ""

/***/ }),

/***/ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/tabs/postings-tab/postings-tab.component.ts":
/*!*************************************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/tabs/postings-tab/postings-tab.component.ts ***!
  \*************************************************************************************************************************************************/
/*! exports provided: PostingsTabComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PostingsTabComponent", function() { return PostingsTabComponent; });
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _core_services_authorization_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../../../core/services/authorization.service */ "./Client/app/core/services/authorization.service.ts");
/* harmony import */ var _core_services_company_manager_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../../../core/services/company-manager.service */ "./Client/app/core/services/company-manager.service.ts");
/* harmony import */ var _execution_services_execution_cash_common_methods__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../../../../execution/services/execution-cash-common-methods */ "./Client/app/execution/services/execution-cash-common-methods.ts");
/* harmony import */ var _shared_components_base_form_component_base_form_component_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../../../shared/components/base-form-component/base-form-component.component */ "./Client/app/shared/components/base-form-component/base-form-component.component.ts");
/* harmony import */ var _shared_enums_generate_month_end_type_enum__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../../../../shared/enums/generate-month-end-type.enum */ "./Client/app/shared/enums/generate-month-end-type.enum.ts");
/* harmony import */ var _shared_enums_report_type_enum__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../../../../shared/enums/report-type.enum */ "./Client/app/shared/enums/report-type.enum.ts");
/* harmony import */ var _shared_models_overview_generate_end_of_month_display_view__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../../../../shared/models/overview-generate-end-of-month-display-view */ "./Client/app/shared/models/overview-generate-end-of-month-display-view.ts");
/* harmony import */ var _shared_services_ag_grid_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../../../../shared/services/ag-grid.service */ "./Client/app/shared/services/ag-grid.service.ts");
/* harmony import */ var _shared_services_form_configuration_provider_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../../../../../shared/services/form-configuration-provider.service */ "./Client/app/shared/services/form-configuration-provider.service.ts");
/* harmony import */ var _shared_services_http_services_trading_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../../../../../shared/services/http-services/trading.service */ "./Client/app/shared/services/http-services/trading.service.ts");
/* harmony import */ var _shared_services_ui_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../../../../../shared/services/ui.service */ "./Client/app/shared/services/ui.service.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};













var PostingsTabComponent = /** @class */ (function (_super) {
    __extends(PostingsTabComponent, _super);
    function PostingsTabComponent(formConfigurationProvider, uiService, companyManager, tradingService, authorizationService, datePipe, gridService) {
        var _this = _super.call(this, formConfigurationProvider) || this;
        _this.formConfigurationProvider = formConfigurationProvider;
        _this.uiService = uiService;
        _this.companyManager = companyManager;
        _this.tradingService = tradingService;
        _this.authorizationService = authorizationService;
        _this.datePipe = datePipe;
        _this.gridService = gridService;
        _this.applyButtonClicked = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        _this.mappingError = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        _this.postingsGridOptions = {};
        _this.length = 0;
        _this.gridId = 'endOfMonthPostings';
        _this.userActiveDirectoryName = _this.authorizationService.getCurrentUser().samAccountName;
        return _this;
    }
    PostingsTabComponent.prototype.ngOnInit = function () {
        if (this.reportType !== _shared_enums_report_type_enum__WEBPACK_IMPORTED_MODULE_7__["ReportType"].MTMOpenFx) {
            this.atlasAgGridParam = this.gridService.getAgGridParam();
            var companyDetails = this.companyManager.getCurrentCompany();
            this.quantityWeightCode = '(in ' + companyDetails.weightCode + ')';
            this.company = this.companyManager.getCurrentCompanyId();
            this.initializeGridColumns();
            this.initPostingsGridRows();
            this.gridPreferencesParameters = {
                company: this.company,
                gridId: this.gridId,
                gridOptions: null,
                savingEnabled: false,
                sharingEnabled: false,
                showExport: true,
                hasColumnHandling: false,
            };
        }
    };
    PostingsTabComponent.prototype.onGridReady = function (params) {
        this.postingsGridOptions.columnDefs = this.postingsGridColumns;
        this.gridApi = this.postingsGridOptions.api;
        this.gridColumnApi = this.postingsGridOptions.columnApi;
        this.gridApi.showNoRowsOverlay();
        this.autosizeColumns();
    };
    PostingsTabComponent.prototype.autosizeColumns = function () {
        if (this.postingsGridOptions) {
            this.gridService.sizeColumns(this.postingsGridOptions);
        }
    };
    PostingsTabComponent.prototype.initializeGridColumns = function () {
        this.postingsGridColumns = [
            {
                colId: 'sectionId',
                hide: true,
            },
            {
                colId: 'costId',
                hide: true,
            },
            {
                headerName: 'Accrual Number',
                field: 'accrualNumber',
                colId: 'accrualNumber',
                hide: false,
            },
            {
                headerName: 'Nom. Account',
                field: 'accountNumber',
                colId: 'accountNumber',
                hide: false,
                valueFormatter: this.stringFormatter.bind(this),
            },
            {
                headerName: 'Description',
                field: 'description',
                colId: 'description',
                hide: false,
            },
            {
                headerName: ' Cost Type',
                field: 'costType',
                colId: 'costType',
                hide: false,
                valueFormatter: this.stringFormatter.bind(this),
            },
            {
                headerName: 'Department',
                field: 'departmentCode',
                colId: 'departmentCode',
                hide: false,
                valueFormatter: this.stringFormatter.bind(this),
            },
            {
                headerName: 'Charter',
                field: 'charterCode',
                colId: 'charterCode',
                hide: false,
                valueFormatter: this.charterFormatter.bind(this),
            },
            {
                headerName: 'Contract',
                field: 'contractNumber',
                colId: 'contractNumber',
                hide: false,
                valueFormatter: this.contractFormatter.bind(this),
            },
            {
                headerName: 'Associated Account',
                field: 'associatedClient',
                colId: 'associatedClient',
                hide: false,
                valueFormatter: this.stringFormatter.bind(this),
            },
            {
                headerName: 'Currency',
                field: 'currencyCode',
                colId: 'currencyCode',
                hide: false,
                valueFormatter: this.currencyFormatter.bind(this),
            },
            {
                headerName: 'Amount',
                field: 'accruedAmount',
                colId: 'accruedAmount',
                hide: false,
                valueFormatter: this.amountFormatter.bind(this),
                cellStyle: { textAlign: 'right' },
            },
            {
                headerName: 'Quantity ' + this.quantityWeightCode,
                field: 'quantity',
                colId: 'quantity',
                hide: false,
                valueFormatter: this.quantityFormatter.bind(this),
                cellStyle: { textAlign: 'right' },
            },
            {
                headerName: 'Inhouse/External',
                field: 'inhouseOrExternal',
                colId: 'inhouseOrExternal',
                hide: (this.reportType !== 1) ? false : true,
                valueFormatter: this.charterFormatter.bind(this),
            },
        ];
    };
    PostingsTabComponent.prototype.initPostingsGridRows = function () {
        this.postingsGridRows = [];
    };
    PostingsTabComponent.prototype.getTradeCostListPostings = function (filteredPostingsGridRows, isFilteredApplied) {
        var _this = this;
        if (isFilteredApplied === void 0) { isFilteredApplied = false; }
        if (filteredPostingsGridRows && isFilteredApplied === true) {
            this.postingsGridRows = filteredPostingsGridRows;
        }
        else {
            this.tradingService.getTradeCostList(this.reportType, _shared_enums_generate_month_end_type_enum__WEBPACK_IMPORTED_MODULE_6__["GenerateMonthEndEnum"].Postings, this.dataVersionID)
                .subscribe(function (data) {
                if (data && data.value.length > 0) {
                    var mappingErrorDetails = data.value[0].tradeCostMonthEndMappingErrors;
                    _this.mappingError.emit(mappingErrorDetails);
                }
                _this.postingsGridRows = data.value.map(function (CostTrade) {
                    return new _shared_models_overview_generate_end_of_month_display_view__WEBPACK_IMPORTED_MODULE_8__["OverviewGenerateEndOfMonthDisplayView"](CostTrade, _this.reportType);
                });
                _this.isLoading = false;
                _this.originalPostingsGridRows = _this.postingsGridRows;
                if (isFilteredApplied) {
                    _this.applyButtonClicked.emit();
                }
            });
        }
    };
    PostingsTabComponent.prototype.stringFormatter = function (param) {
        if (param.value) {
            return String(param.value).substr(0, 10);
        }
    };
    PostingsTabComponent.prototype.charterFormatter = function (param) {
        if (param.value) {
            return String(param.value).substr(0, 15);
        }
    };
    PostingsTabComponent.prototype.contractFormatter = function (param) {
        if (param.value) {
            return String(param.value).substr(0, 12);
        }
    };
    PostingsTabComponent.prototype.currencyFormatter = function (param) {
        if (param.value) {
            return String(param.value).substr(0, 3);
        }
    };
    PostingsTabComponent.prototype.amountFormatter = function (param) {
        if (param.value) {
            var commonMethods = new _execution_services_execution_cash_common_methods__WEBPACK_IMPORTED_MODULE_4__["CommonMethods"]();
            return commonMethods.getFormattedNumberValue(param.value, 2);
        }
    };
    PostingsTabComponent.prototype.quantityFormatter = function (param) {
        if (param.value) {
            var commonMethods = new _execution_services_execution_cash_common_methods__WEBPACK_IMPORTED_MODULE_4__["CommonMethods"]();
            return commonMethods.getFormattedNumberValue(param.value, 3);
        }
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        __metadata("design:type", Array)
    ], PostingsTabComponent.prototype, "filteredPostingsGridRows", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(),
        __metadata("design:type", Object)
    ], PostingsTabComponent.prototype, "applyButtonClicked", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(),
        __metadata("design:type", Object)
    ], PostingsTabComponent.prototype, "mappingError", void 0);
    PostingsTabComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'atlas-postings-tab',
            template: __webpack_require__(/*! ./postings-tab.component.html */ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/tabs/postings-tab/postings-tab.component.html"),
            styles: [__webpack_require__(/*! ./postings-tab.component.scss */ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/tabs/postings-tab/postings-tab.component.scss")],
            providers: [_angular_common__WEBPACK_IMPORTED_MODULE_0__["DatePipe"]],
        }),
        __metadata("design:paramtypes", [_shared_services_form_configuration_provider_service__WEBPACK_IMPORTED_MODULE_10__["FormConfigurationProviderService"],
            _shared_services_ui_service__WEBPACK_IMPORTED_MODULE_12__["UiService"],
            _core_services_company_manager_service__WEBPACK_IMPORTED_MODULE_3__["CompanyManagerService"],
            _shared_services_http_services_trading_service__WEBPACK_IMPORTED_MODULE_11__["TradingService"],
            _core_services_authorization_service__WEBPACK_IMPORTED_MODULE_2__["AuthorizationService"],
            _angular_common__WEBPACK_IMPORTED_MODULE_0__["DatePipe"],
            _shared_services_ag_grid_service__WEBPACK_IMPORTED_MODULE_9__["AgGridService"]])
    ], PostingsTabComponent);
    return PostingsTabComponent;
}(_shared_components_base_form_component_base_form_component_component__WEBPACK_IMPORTED_MODULE_5__["BaseFormComponent"]));



/***/ }),

/***/ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month.component.html":
/*!************************************************************************************************************!*\
  !*** ./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month.component.html ***!
  \************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"main-container\">\r\n    <div fxLayout=\"row\"\r\n         fxLayout.md=\"column\"\r\n         fxLayoutAlign=\"space-between start\">\r\n        <div fxLayout=\"column\"\r\n             fxLayoutAlign=\"start left\"\r\n             fxFlex=\"100\">\r\n            <atlas-end-of-month-selection #endOfMonthSelectionComponent\r\n                                          (snapshotTypeSelected)=\"onsnapshotTypeChange($event)\"\r\n                                          (snapshotDate)=\"onsnapshotDate($event)\"\r\n                                          (snapshotMonth)=\"onsnapshotMonth($event)\"\r\n                                          (reportTypeSelected)=\"onReportTypeSelected($event)\"\r\n                                          (reportTypeDescriptionSelected)=\"onReportTypeDescriptionSelected($event)\">\r\n            </atlas-end-of-month-selection>\r\n        </div>\r\n    </div>\r\n    <div fxLayout=\"row\"\r\n         fxLayoutAlign=\"space-between start\"\r\n         class=\"button-details\">\r\n        <div fxLayout=\"column\"\r\n             fxLayoutAlign=\"start\">\r\n            <button (click)=\"onDiscardButtonClicked()\"\r\n                    mat-button>\r\n                DISCARD\r\n            </button>\r\n        </div>\r\n        <div fxLayout=\"column\"\r\n             fxLayoutAlign=\"start\">\r\n            <button mat-raised-button\r\n                    (click)=\"onNextButtonClicked()\"\r\n                    [disabled]=\"isCompanyFrozen\">\r\n                NEXT\r\n            </button>\r\n        </div>\r\n    </div>\r\n</div>"

/***/ }),

/***/ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month.component.scss":
/*!************************************************************************************************************!*\
  !*** ./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month.component.scss ***!
  \************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ""

/***/ }),

/***/ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month.component.ts":
/*!**********************************************************************************************************!*\
  !*** ./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month.component.ts ***!
  \**********************************************************************************************************/
/*! exports provided: GenerateEndOfMonthComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GenerateEndOfMonthComponent", function() { return GenerateEndOfMonthComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _core_services_company_manager_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../core/services/company-manager.service */ "./Client/app/core/services/company-manager.service.ts");
/* harmony import */ var _shared_components_base_form_component_base_form_component_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../shared/components/base-form-component/base-form-component.component */ "./Client/app/shared/components/base-form-component/base-form-component.component.ts");
/* harmony import */ var _shared_components_confirmation_dialog_confirmation_dialog_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../shared/components/confirmation-dialog/confirmation-dialog.component */ "./Client/app/shared/components/confirmation-dialog/confirmation-dialog.component.ts");
/* harmony import */ var _shared_enums_report_type_enum__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../shared/enums/report-type.enum */ "./Client/app/shared/enums/report-type.enum.ts");
/* harmony import */ var _shared_services_form_configuration_provider_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../shared/services/form-configuration-provider.service */ "./Client/app/shared/services/form-configuration-provider.service.ts");
/* harmony import */ var _shared_services_http_services_preaccounting_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../../shared/services/http-services/preaccounting.service */ "./Client/app/shared/services/http-services/preaccounting.service.ts");
/* harmony import */ var _shared_services_title_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../../shared/services/title.service */ "./Client/app/shared/services/title.service.ts");
/* harmony import */ var _generate_end_of_month_cards_end_of_month_selection_end_of_month_selection_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../generate-end-of-month/cards/end-of-month-selection/end-of-month-selection.component */ "./Client/app/financial/components/cut-off/generate-end-of-month/cards/end-of-month-selection/end-of-month-selection.component.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};













var GenerateEndOfMonthComponent = /** @class */ (function (_super) {
    __extends(GenerateEndOfMonthComponent, _super);
    function GenerateEndOfMonthComponent(formConfigurationProvider, router, formBuilder, route, dialog, preaccountingService, companyManager, titleService) {
        var _this = _super.call(this, formConfigurationProvider) || this;
        _this.formConfigurationProvider = formConfigurationProvider;
        _this.router = router;
        _this.formBuilder = formBuilder;
        _this.route = route;
        _this.dialog = dialog;
        _this.preaccountingService = preaccountingService;
        _this.companyManager = companyManager;
        _this.titleService = titleService;
        _this.formComponents = [];
        _this.subscriptions = [];
        _this.isPostingButtonEditable = false;
        _this.isPostingExist = true;
        _this.isCompanyFrozen = false;
        return _this;
    }
    GenerateEndOfMonthComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.company = this.route.snapshot.paramMap.get('company');
        this.titleService.setTitle(this.route.snapshot.data.title);
        this.subscriptions.push(this.preaccountingService.getAccountingSetupDetails()
            .subscribe(function (data) {
            _this.accountingSetupModel = data;
        }));
        this.createFormGroup = this.formBuilder.group({
            EndOfMonthSelectionComponent: this.EndOfMonthSelectionComponent.getFormGroup(),
        });
        this.formComponents.push(this.EndOfMonthSelectionComponent);
        this.isCompanyFrozen = this.companyManager.getCompany(this.company).isFrozen;
    };
    GenerateEndOfMonthComponent.prototype.onDiscardButtonClicked = function () {
        var _this = this;
        var confirmDiscardDialog = this.dialog.open(_shared_components_confirmation_dialog_confirmation_dialog_component__WEBPACK_IMPORTED_MODULE_7__["ConfirmationDialogComponent"], {
            data: {
                title: 'Discard Changes',
                text: 'You have some modification pending. Close and lose changes?',
                okButton: 'Ok',
                cancelButton: 'Cancel',
            },
        });
        confirmDiscardDialog.afterClosed().subscribe(function (answer) {
            if (answer) {
                _this.createFormGroup.controls.EndOfMonthSelectionComponent.get('snapshotsCtrl').reset();
                _this.createFormGroup.controls.EndOfMonthSelectionComponent.get('snapshotsCtrl').setValue(-1, 'Current Database');
            }
        });
    };
    GenerateEndOfMonthComponent.prototype.onNextButtonClicked = function () {
        var _this = this;
        if (this.dataVersionId === 0) {
            this.isPostingButtonEditable = true;
            this.callSummaryRoute();
        }
        else {
            var momentLastMonthClosed = moment__WEBPACK_IMPORTED_MODULE_4__(this.accountingSetupModel.lastMonthClosed);
            var momentSelectedDate = moment__WEBPACK_IMPORTED_MODULE_4__(this.snapShotSelectedDate);
            this.monthDifference = momentSelectedDate.diff(momentLastMonthClosed, 'months');
            if (this.monthDifference <= 0) {
                this.isPostingButtonEditable = true;
                this.popupForAccounting();
            }
            else {
                this.isPostingButtonEditable = false;
                this.preaccountingService.
                    GetTADocmentDetails(this.dataVersionId, this.reportType).subscribe(function (message) {
                    _this.isPostingExist = message;
                    if (_this.isPostingExist) {
                        _this.popupForPosting();
                    }
                    else {
                        _this.callSummaryRoute();
                    }
                });
            }
        }
    };
    GenerateEndOfMonthComponent.prototype.onsnapshotTypeChange = function (model) {
        this.dataVersionId = model.dataVersionIdSelected;
    };
    GenerateEndOfMonthComponent.prototype.onReportTypeSelected = function (model) {
        this.reportType = model.reportTypeSelected;
    };
    GenerateEndOfMonthComponent.prototype.onReportTypeDescriptionSelected = function (model) {
        this.reportTypeDescription = model.reportTypeDescriptionSelected;
    };
    GenerateEndOfMonthComponent.prototype.onsnapshotDate = function (model) {
        this.snapShotSelectedDate = model.snapshotSelectedDate;
    };
    GenerateEndOfMonthComponent.prototype.onsnapshotMonth = function (model) {
        this.snapShotSelectedMonth = model;
    };
    GenerateEndOfMonthComponent.prototype.popupForAccounting = function () {
        var _this = this;
        var confirmDiscardDialog = this.dialog.open(_shared_components_confirmation_dialog_confirmation_dialog_component__WEBPACK_IMPORTED_MODULE_7__["ConfirmationDialogComponent"], {
            data: {
                text: 'This month is closed for accounting. No accounting transactions will be produced. Do you want to proceed?',
                okButton: 'CONFIRM',
                cancelButton: 'CANCEL',
            },
        });
        confirmDiscardDialog.afterClosed().subscribe(function (answer) {
            if (answer) {
                _this.callSummaryRoute();
            }
        });
    };
    GenerateEndOfMonthComponent.prototype.popupForPosting = function () {
        var _this = this;
        var confirmDiscardDialog = this.dialog.open(_shared_components_confirmation_dialog_confirmation_dialog_component__WEBPACK_IMPORTED_MODULE_7__["ConfirmationDialogComponent"], {
            data: {
                text: 'Posting for this month have already been created, do you want to proceed?',
                okButton: 'CONFIRM',
                cancelButton: 'CANCEL',
            },
        });
        confirmDiscardDialog.afterClosed().subscribe(function (answer) {
            if (answer) {
                _this.callSummaryRoute();
            }
        });
    };
    GenerateEndOfMonthComponent.prototype.callSummaryRoute = function () {
        if (this.reportType !== _shared_enums_report_type_enum__WEBPACK_IMPORTED_MODULE_8__["ReportType"].MTMOpenFx) {
            this.router.navigate(['/' + this.companyManager.getCurrentCompanyId() + '/financial/cut-off/generate-end-of-month/summary'], {
                queryParams: {
                    dataVersionId: this.dataVersionId,
                    reportTypeDescription: this.reportTypeDescription,
                    dataVersionDate: this.snapShotSelectedDate,
                    dataVersionMonth: this.snapShotSelectedMonth,
                    isPostingButtonEditable: this.isPostingButtonEditable,
                    reportType: this.reportType,
                },
                skipLocationChange: true,
            });
        }
        else {
            this.router.navigate(['/' + this.companyManager.getCurrentCompanyId() + '/financial/cut-off/fx-deal-generate-end-of-month/summary'], {
                queryParams: {
                    dataVersionId: this.dataVersionId,
                    reportTypeDescription: this.reportTypeDescription,
                    dataVersionDate: this.snapShotSelectedDate,
                    dataVersionMonth: this.snapShotSelectedMonth,
                    isPostingButtonEditable: this.isPostingButtonEditable,
                    reportType: this.reportType,
                },
                skipLocationChange: true,
            });
        }
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('endOfMonthSelectionComponent'),
        __metadata("design:type", _generate_end_of_month_cards_end_of_month_selection_end_of_month_selection_component__WEBPACK_IMPORTED_MODULE_12__["EndOfMonthSelectionComponent"])
    ], GenerateEndOfMonthComponent.prototype, "EndOfMonthSelectionComponent", void 0);
    GenerateEndOfMonthComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'atlas-generate-end-of-month',
            template: __webpack_require__(/*! ./generate-end-of-month.component.html */ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month.component.html"),
            styles: [__webpack_require__(/*! ./generate-end-of-month.component.scss */ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month.component.scss")],
        }),
        __metadata("design:paramtypes", [_shared_services_form_configuration_provider_service__WEBPACK_IMPORTED_MODULE_9__["FormConfigurationProviderService"],
            _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"],
            _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormBuilder"],
            _angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"],
            _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialog"],
            _shared_services_http_services_preaccounting_service__WEBPACK_IMPORTED_MODULE_10__["PreaccountingService"],
            _core_services_company_manager_service__WEBPACK_IMPORTED_MODULE_5__["CompanyManagerService"],
            _shared_services_title_service__WEBPACK_IMPORTED_MODULE_11__["TitleService"]])
    ], GenerateEndOfMonthComponent);
    return GenerateEndOfMonthComponent;
}(_shared_components_base_form_component_base_form_component_component__WEBPACK_IMPORTED_MODULE_6__["BaseFormComponent"]));



/***/ }),

/***/ "./Client/app/financial/components/cut-off/generate-end-of-year/cards/generate-end-of-year-warning-message/generate-end-of-year-warning-message.component.html":
/*!*********************************************************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/cut-off/generate-end-of-year/cards/generate-end-of-year-warning-message/generate-end-of-year-warning-message.component.html ***!
  \*********************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<h1 mat-dialog-title>YEP Generated documents </h1>\r\n<mat-dialog-content>\r\n    <div fxLayout=\"row\"\r\n         fxLayoutAlign=\"center center\"\r\n         fxLayoutWrap\r\n         *ngIf=\"isLoading\"\r\n         class=\"loading\">\r\n        <mat-spinner color=\"accent\"></mat-spinner>\r\n    </div>\r\n    <div fxLayout=\"column\">\r\n        <div>\r\n            <div fxLayout=\"row\">\r\n            </div>\r\n            <mat-divider></mat-divider>\r\n            <div class=\"info\"\r\n                 fxLayout=\"row\">\r\n\r\n                <div>\r\n                    <p><B>Documents</B> </p>\r\n                    <div *ngFor=\"let document of documentsGenerated\">\r\n                        <h3>{{document.reportName}}</h3>\r\n                        <mat-divider></mat-divider>\r\n                        <mat-chip-list class=\"chip-list\">\r\n                            <mat-chip selected\r\n                                      disabled\r\n                                      *ngFor=\"let response of document.yearEndProcessResponses\">\r\n                                {{response.documentReference}}\r\n                            </mat-chip>\r\n                        </mat-chip-list>\r\n                        <mat-divider></mat-divider>\r\n                    </div>\r\n                    <B>have been generated</B>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</mat-dialog-content>\r\n<mat-dialog-actions>\r\n\r\n    <span class=\"fill-space\"></span>\r\n    <button mat-button\r\n            (click)=\"onOkButtonClicked()\">CLOSE</button>\r\n\r\n</mat-dialog-actions>"

/***/ }),

/***/ "./Client/app/financial/components/cut-off/generate-end-of-year/cards/generate-end-of-year-warning-message/generate-end-of-year-warning-message.component.scss":
/*!*********************************************************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/cut-off/generate-end-of-year/cards/generate-end-of-year-warning-message/generate-end-of-year-warning-message.component.scss ***!
  \*********************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".mat-dialog-title {\n  margin-bottom: 16px; }\n\n.manual-import p {\n  font-weight: bold;\n  font-size: 14px; }\n\n.mat-divider {\n  margin-top: 16px;\n  margin-bottom: 16px; }\n\nbutton {\n  margin: 0; }\n"

/***/ }),

/***/ "./Client/app/financial/components/cut-off/generate-end-of-year/cards/generate-end-of-year-warning-message/generate-end-of-year-warning-message.component.ts":
/*!*******************************************************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/cut-off/generate-end-of-year/cards/generate-end-of-year-warning-message/generate-end-of-year-warning-message.component.ts ***!
  \*******************************************************************************************************************************************************************/
/*! exports provided: GenerateEndOfYearWarningMessageComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GenerateEndOfYearWarningMessageComponent", function() { return GenerateEndOfYearWarningMessageComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _shared_services_form_configuration_provider_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../../../shared/services/form-configuration-provider.service */ "./Client/app/shared/services/form-configuration-provider.service.ts");
/* harmony import */ var _shared_components_base_form_component_base_form_component_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../../shared/components/base-form-component/base-form-component.component */ "./Client/app/shared/components/base-form-component/base-form-component.component.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};






var GenerateEndOfYearWarningMessageComponent = /** @class */ (function (_super) {
    __extends(GenerateEndOfYearWarningMessageComponent, _super);
    function GenerateEndOfYearWarningMessageComponent(thisDialogRef, formBuilder, route, data, formConfigurationProvider) {
        var _this = _super.call(this, formConfigurationProvider) || this;
        _this.thisDialogRef = thisDialogRef;
        _this.formBuilder = formBuilder;
        _this.route = route;
        _this.data = data;
        _this.formConfigurationProvider = formConfigurationProvider;
        _this.isLoading = true;
        _this.documentsGenerated = [];
        _this.dialogData = data;
        return _this;
    }
    GenerateEndOfYearWarningMessageComponent.prototype.ngOnInit = function () {
        this.isLoading = false;
        if (this.dialogData && this.dialogData.length > 0) {
            this.documentsGenerated = this.dialogData;
        }
    };
    GenerateEndOfYearWarningMessageComponent.prototype.onOkButtonClicked = function () {
        this.thisDialogRef.close();
    };
    GenerateEndOfYearWarningMessageComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'atlas-generate-end-of-year-warning-message',
            template: __webpack_require__(/*! ./generate-end-of-year-warning-message.component.html */ "./Client/app/financial/components/cut-off/generate-end-of-year/cards/generate-end-of-year-warning-message/generate-end-of-year-warning-message.component.html"),
            styles: [__webpack_require__(/*! ./generate-end-of-year-warning-message.component.scss */ "./Client/app/financial/components/cut-off/generate-end-of-year/cards/generate-end-of-year-warning-message/generate-end-of-year-warning-message.component.scss")]
        }),
        __param(3, Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_1__["MAT_DIALOG_DATA"])),
        __metadata("design:paramtypes", [_angular_material__WEBPACK_IMPORTED_MODULE_1__["MatDialogRef"],
            _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"],
            _angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"], Object, _shared_services_form_configuration_provider_service__WEBPACK_IMPORTED_MODULE_4__["FormConfigurationProviderService"]])
    ], GenerateEndOfYearWarningMessageComponent);
    return GenerateEndOfYearWarningMessageComponent;
}(_shared_components_base_form_component_base_form_component_component__WEBPACK_IMPORTED_MODULE_5__["BaseFormComponent"]));



/***/ }),

/***/ "./Client/app/financial/components/cut-off/generate-end-of-year/generate-end-of-year.component.html":
/*!**********************************************************************************************************!*\
  !*** ./Client/app/financial/components/cut-off/generate-end-of-year/generate-end-of-year.component.html ***!
  \**********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"main-container\">\r\n    <div fxLayout=\"column\"\r\n         class=\"margin-top\">\r\n        <div fxLayout=\"row\"\r\n             fxLayoutGap=\"6px\"\r\n             fxLayoutAlign=\"left start\"\r\n             class=\"margin-yep\">\r\n            <div fxFlex=\"18%\">\r\n                <h5>\r\n                    Run Year End Process for\r\n                </h5>\r\n            </div>\r\n            <div class=\"custom-form\"\r\n                 fxLayout=\"column\"\r\n                 fxLayoutAlign=\"end start\"\r\n                 fxLayoutGap=\"10px\">\r\n                <atlas-year-picker [isEditable]=\"true\"\r\n                                   label=\"Year\"\r\n                                   [max]=\"maxYear\"\r\n                                   [errorMap]=\"yearErrorMap\"\r\n                                   [fieldControl]=\"yearCtrl\">\r\n                </atlas-year-picker>\r\n            </div>\r\n            <div fxFlex=\"10%\"\r\n                 class=\"margin-fn\">\r\n                <mat-slide-toggle (click)=\"onFinalRunButtonClicked()\"\r\n                                  [formControl]=\"\r\n                              finalRunCtrl\">Final Run</mat-slide-toggle>\r\n            </div>\r\n            <div fxFlex=\"15%\">\r\n                <atlas-masterdata-user-preferences-input class=\"contextual-search-for-control\"\r\n                                                         isEditable=\"true\"\r\n                                                         [fieldControl]=\"reserveAccountCtrl\"\r\n                                                         label=\"B/S Reserve Account\"\r\n                                                         [options]=\"filteredReserveAccounts\"\r\n                                                         displayProperty=\"accountNumber\"\r\n                                                         [errorMap]=\"reserveAccountErrorMap\"\r\n                                                         [selectProperties]=\"['accountNumber','mainAccountTitle']\"\r\n                                                         lightBoxTitle=\"Results for DealNominal Account\"\r\n                                                         gridId=\"nominalAccountsGrid\">\r\n                </atlas-masterdata-user-preferences-input>\r\n            </div>\r\n            <div>\r\n                <button mat-raised-button\r\n                        (click)=\"onDisplayPLClearanceButtonClicked()\">\r\n                    Display P&L Clearance\r\n                </button>\r\n            </div>\r\n            <div>\r\n                <button mat-raised-button\r\n                        [disabled]=\"!isDisplayButtonClicked\"\r\n                        (click)=\"onPostingButtonClicked()\">\r\n                    Generate Posting\r\n                </button>\r\n            </div>\r\n        </div>\r\n\r\n        <div ag-grid=\"yearEndGridOptions\"\r\n             class=\"ag-theme-material pointer-cursor\"\r\n             class=\"margin-top\">\r\n            <ag-grid-angular class=\"ag-theme-material grid-size\"\r\n                             [rowData]=\"yearEndGridRows\"\r\n                             [columnDefs]=\"yearEndGridColumns\"\r\n                             domLayout=\"autoHeight\"\r\n                             (gridReady)=\"onGridReady($event)\"\r\n                             [pagination]=\"true\"\r\n                             [paginationPageSize]=\"20\"\r\n                             [enableSorting]=\"true\"\r\n                             [enableColResize]=\"true\"\r\n                             enableFilter\r\n                             [rowHeight]=\"atlasAgGridParam.rowHeight\">\r\n            </ag-grid-angular>\r\n        </div>\r\n    </div>"

/***/ }),

/***/ "./Client/app/financial/components/cut-off/generate-end-of-year/generate-end-of-year.component.scss":
/*!**********************************************************************************************************!*\
  !*** ./Client/app/financial/components/cut-off/generate-end-of-year/generate-end-of-year.component.scss ***!
  \**********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".margin-top {\n  margin-top: 45px; }\n\n.margin-yep {\n  margin-top: 20px; }\n\n.margin-fn {\n  margin-top: 15px; }\n"

/***/ }),

/***/ "./Client/app/financial/components/cut-off/generate-end-of-year/generate-end-of-year.component.ts":
/*!********************************************************************************************************!*\
  !*** ./Client/app/financial/components/cut-off/generate-end-of-year/generate-end-of-year.component.ts ***!
  \********************************************************************************************************/
/*! exports provided: GenerateEndOfYearComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GenerateEndOfYearComponent", function() { return GenerateEndOfYearComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _core_services_company_manager_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../core/services/company-manager.service */ "./Client/app/core/services/company-manager.service.ts");
/* harmony import */ var _shared_directives_autocomplete_dropdown_directive__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../shared/directives/autocomplete-dropdown.directive */ "./Client/app/shared/directives/autocomplete-dropdown.directive.ts");
/* harmony import */ var _shared_entities_atlas_form_control__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../shared/entities/atlas-form-control */ "./Client/app/shared/entities/atlas-form-control.ts");
/* harmony import */ var _shared_services_ag_grid_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../shared/services/ag-grid.service */ "./Client/app/shared/services/ag-grid.service.ts");
/* harmony import */ var _shared_services_execution_year_end_process_command__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../shared/services/execution/year-end-process-command */ "./Client/app/shared/services/execution/year-end-process-command.ts");
/* harmony import */ var _shared_services_http_services_execution_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../shared/services/http-services/execution.service */ "./Client/app/shared/services/http-services/execution.service.ts");
/* harmony import */ var _shared_services_snackbar_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../../shared/services/snackbar.service */ "./Client/app/shared/services/snackbar.service.ts");
/* harmony import */ var _shared_services_util_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../../shared/services/util.service */ "./Client/app/shared/services/util.service.ts");
/* harmony import */ var _cards_generate_end_of_year_warning_message_generate_end_of_year_warning_message_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./cards/generate-end-of-year-warning-message/generate-end-of-year-warning-message.component */ "./Client/app/financial/components/cut-off/generate-end-of-year/cards/generate-end-of-year-warning-message/generate-end-of-year-warning-message.component.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};













var GenerateEndOfYearComponent = /** @class */ (function () {
    function GenerateEndOfYearComponent(route, companyManager, executionService, snackbarService, dialog, gridService) {
        this.route = route;
        this.companyManager = companyManager;
        this.executionService = executionService;
        this.snackbarService = snackbarService;
        this.dialog = dialog;
        this.gridService = gridService;
        this.yearCtrl = new _shared_entities_atlas_form_control__WEBPACK_IMPORTED_MODULE_6__["AtlasFormControl"]('year');
        this.finalRunCtrl = new _shared_entities_atlas_form_control__WEBPACK_IMPORTED_MODULE_6__["AtlasFormControl"]('finalRunCtrl');
        this.reserveAccountCtrl = new _shared_entities_atlas_form_control__WEBPACK_IMPORTED_MODULE_6__["AtlasFormControl"]('reserveAccountCtrl');
        this.maxYear = new Date(2019, 12, 31);
        this.yearEndGridOptions = {};
        this.isDisplayButtonClicked = false;
        this.isFinalRunEnable = false;
        this.isCompanyFrozen = false;
        this.yearErrorMap = new Map()
            .set('required', 'Required *');
        this.reserveAccountErrorMap = new Map()
            .set('required', 'Required *')
            .set('inDropdownList', 'Invalid entry. Department not in the list or not authorized.');
        this.company = this.companyManager.getCurrentCompanyId();
        this.atlasAgGridParam = this.gridService.getAgGridParam();
    }
    GenerateEndOfYearComponent.prototype.ngOnInit = function () {
        this.masterdata = this.route.snapshot.data.masterdata;
        var value;
        value = this.masterdata.nominalAccounts.find(function (e) { return e.accountNumber === '32001000'; });
        this.reserveAccountCtrl.patchValue(value.accountNumber);
        this.filteredNominalAccounts = this.masterdata.nominalAccounts.filter(function (e) { return e.accountType !== 'P'; });
        this.filteredNominalAccounts = this.filteredNominalAccounts.map(function (nominal) {
            nominal.accountNumber = nominal.accountNumber;
            nominal.mainAccountTitle = nominal.shortDescription;
            return nominal;
        });
        this.filteredReserveAccounts = this.filteredNominalAccounts;
        this.setValidators();
        this.initializeGridColumns();
        this.isCompanyFrozen = this.companyManager.getCompany(this.company).isFrozen;
    };
    GenerateEndOfYearComponent.prototype.onFinalRunButtonClicked = function () {
        this.isFinalRunEnable = this.isFinalRunEnable ? false : true;
    };
    GenerateEndOfYearComponent.prototype.onGridReady = function (params) {
        this.yearEndGridOptions.api = params.api;
        this.gridColumnApi = params.columnApi;
        params.columnDefs = this.yearEndGridColumns;
        this.yearEndGridOptions = params;
        this.gridService.sizeColumns(params);
    };
    GenerateEndOfYearComponent.prototype.initializeGridColumns = function () {
        this.yearEndGridColumns = [
            {
                headerName: 'Nominal Account',
                field: 'accountNumber',
                colId: 'accountNumber',
                hide: false,
                editable: false,
            },
            {
                headerName: 'Account Description',
                field: 'mainAccountTitle',
                colId: 'mainAccountTitle',
                hide: false,
                editable: false,
            },
            {
                headerName: 'Ccy',
                field: 'currencyCode',
                colId: 'currencyCode',
                hide: false,
                editable: false,
            },
            {
                headerName: 'USD EQ',
                field: 'valueInFunctionalCurrency',
                colId: 'valueInFunctionalCurrency',
                hide: false,
                editable: false,
            },
            {
                headerName: 'CHF EQ',
                field: 'valueInStatutoryCurrency',
                colId: 'valueInStatutoryCurrency',
                type: 'numericColumn',
                hide: false,
                editable: false,
            },
            {
                headerName: 'Department',
                field: 'departmentId',
                colId: 'departmentId',
                hide: false,
                editable: false,
                valueFormatter: this.departmentFormatter.bind(this),
            },
        ];
    };
    GenerateEndOfYearComponent.prototype.departmentFormatter = function (params) {
        var department = this.masterdata.departments.find(function (dept) { return dept.departmentId === params.value; });
        return department ? department.description : '';
    };
    GenerateEndOfYearComponent.prototype.setValidators = function () {
        this.reserveAccountCtrl.setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required,
            Object(_shared_directives_autocomplete_dropdown_directive__WEBPACK_IMPORTED_MODULE_5__["inDropdownListValidator"])(this.masterdata.nominalAccounts, Object(_shared_services_util_service__WEBPACK_IMPORTED_MODULE_11__["nameof"])('accountNumber')),
        ]));
        this.yearCtrl.setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required);
    };
    GenerateEndOfYearComponent.prototype.onDisplayPLClearanceButtonClicked = function () {
        var _this = this;
        if (this.yearCtrl.value) {
            this.year = this.yearCtrl.value._i.year;
            this.executionService
                .GetYearEndProcessLines(this.year)
                .subscribe((function (data) {
                if (data.value) {
                    _this.yearEndGridRows = data.value;
                    if (!_this.isCompanyFrozen) {
                        _this.isDisplayButtonClicked = true;
                    }
                }
            }));
        }
    };
    GenerateEndOfYearComponent.prototype.onPostingButtonClicked = function () {
        var _this = this;
        var yearEndProcessCommand = new _shared_services_execution_year_end_process_command__WEBPACK_IMPORTED_MODULE_8__["YearEndProcessCommand"]();
        yearEndProcessCommand.year = this.year;
        yearEndProcessCommand.isFinalRun = this.isFinalRunEnable;
        if (this.reserveAccountCtrl.value) {
            var nominalAccount = this.filteredNominalAccounts.find(function (value) {
                return value.accountNumber === _this.reserveAccountCtrl.value;
            });
            if (nominalAccount) {
                yearEndProcessCommand.bsReserveAccountId = nominalAccount.nominalAccountId;
            }
        }
        this.executionService
            .GenerateYearEndProcessPostingReport(yearEndProcessCommand)
            .subscribe((function (data) {
            if (data) {
                var accountingImportReportMsgDialog = _this.dialog.open(_cards_generate_end_of_year_warning_message_generate_end_of_year_warning_message_component__WEBPACK_IMPORTED_MODULE_12__["GenerateEndOfYearWarningMessageComponent"], {
                    data: data,
                    width: '80%',
                    height: '80%',
                });
            }
        }));
    };
    GenerateEndOfYearComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'atlas-generate-end-of-year',
            template: __webpack_require__(/*! ./generate-end-of-year.component.html */ "./Client/app/financial/components/cut-off/generate-end-of-year/generate-end-of-year.component.html"),
            styles: [__webpack_require__(/*! ./generate-end-of-year.component.scss */ "./Client/app/financial/components/cut-off/generate-end-of-year/generate-end-of-year.component.scss")],
        }),
        __metadata("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"],
            _core_services_company_manager_service__WEBPACK_IMPORTED_MODULE_4__["CompanyManagerService"],
            _shared_services_http_services_execution_service__WEBPACK_IMPORTED_MODULE_9__["ExecutionService"],
            _shared_services_snackbar_service__WEBPACK_IMPORTED_MODULE_10__["SnackbarService"],
            _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialog"],
            _shared_services_ag_grid_service__WEBPACK_IMPORTED_MODULE_7__["AgGridService"]])
    ], GenerateEndOfYearComponent);
    return GenerateEndOfYearComponent;
}());



/***/ }),

/***/ "./Client/app/financial/components/foreign-exchange/market-data-tab-group/market-data-tab-group.component.html":
/*!*********************************************************************************************************************!*\
  !*** ./Client/app/financial/components/foreign-exchange/market-data-tab-group/market-data-tab-group.component.html ***!
  \*********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"dark-tab header-tab mat-elevation-z6\">\r\n    <div class=\"header-tab-container\">\r\n        <nav mat-tab-nav-bar>\r\n            <div>\r\n                <a mat-tab-link\r\n                   *ifAuthorized=\"routeLinks[0].privilege,company:this.company\"\r\n                   routerLinkActive\r\n                   #rla=\"routerLinkActive\"\r\n                   [active]=\"isActive(routeLinks[0])\">\r\n                    {{ routeLinks[0].label }}\r\n                </a>\r\n            </div>\r\n            <div *ngFor=\"let routeLink of routeLinks | slice:2\">\r\n                <a mat-tab-link\r\n                   *ifAuthorized=\"routeLink.privilege,company:this.company\"\r\n                   [routerLink]=\"routeLink.link\"\r\n                   routerLinkActive\r\n                   #rla=\"routerLinkActive\"\r\n                   [active]=\"isActive(routeLink)\">\r\n                    {{ routeLink.label }}\r\n                </a>\r\n            </div>\r\n            <div>\r\n                <button mat-button\r\n                        class=\"report-option\"\r\n                        [matMenuTriggerFor]=\"fxReport\">\r\n                    <a mat-tab-link\r\n                       *ifAuthorized=\"routeLinks[0].privilege,company:this.company\"\r\n                       routerLinkActive\r\n                       #rla=\"routerLinkActive\"\r\n                       [active]=\"isActive(routeLinks[0])\">\r\n                        {{ routeLinks[1].label }}\r\n                    </a>\r\n                </button>\r\n                <mat-menu #fxReport=\"matMenu\"\r\n                          [overlapTrigger]=\"false\"\r\n                          xPosition=\"after\">\r\n                    <button mat-menu-item\r\n                            (click)=\"onExchangeButtonClicked()\">Exchange Rate Reports</button>\r\n                </mat-menu>\r\n            </div>\r\n        </nav>\r\n    </div>\r\n</div>"

/***/ }),

/***/ "./Client/app/financial/components/foreign-exchange/market-data-tab-group/market-data-tab-group.component.scss":
/*!*********************************************************************************************************************!*\
  !*** ./Client/app/financial/components/foreign-exchange/market-data-tab-group/market-data-tab-group.component.scss ***!
  \*********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".header-tab {\n  margin-bottom: 0px;\n  margin-top: -19px;\n  background-color: white !important; }\n\n.menu-header {\n  background-color: #53c234;\n  color: white; }\n\n.menu-header mat-icon {\n    color: white; }\n\n.mat-menu-content {\n  padding-top: 0 !important; }\n\n.floating-menu {\n  top: -1px; }\n\n::ng-deep.dark-tab.mat-tab-nav-bar.mat-primary,\n.dark-tab .mat-tab-link,\n.dark-tab .mat-tab-label .mat-tab-label-content {\n  text-transform: none !important;\n  color: #332f30 !important;\n  opacity: 0.6; }\n\n.report-option {\n  margin-top: 0px;\n  height: 100%;\n  color: #332f30 !important; }\n"

/***/ }),

/***/ "./Client/app/financial/components/foreign-exchange/market-data-tab-group/market-data-tab-group.component.ts":
/*!*******************************************************************************************************************!*\
  !*** ./Client/app/financial/components/foreign-exchange/market-data-tab-group/market-data-tab-group.component.ts ***!
  \*******************************************************************************************************************/
/*! exports provided: MarketDataTabGroupComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MarketDataTabGroupComponent", function() { return MarketDataTabGroupComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _core_services_company_manager_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../core/services/company-manager.service */ "./Client/app/core/services/company-manager.service.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var MarketDataTabGroupComponent = /** @class */ (function () {
    function MarketDataTabGroupComponent(router, companyManager, route) {
        var _this = this;
        this.router = router;
        this.companyManager = companyManager;
        this.route = route;
        this.routeLinks = [
            {
                label: 'EXCHANGE RATES',
                index: 0,
                privilege: 'Financials.AccountingEntries',
                link: '/' + this.companyManager.getCurrentCompanyId() + '/financial/fx/rates',
            },
            {
                label: 'REPORTS',
                link: '/' + this.companyManager.getCurrentCompanyId() + '/reporting/globalreports/historicalrates',
                index: 1,
                privilege: 'Financials',
            },
            {
                label: 'MARKET PRICES',
                index: 2,
                privilege: 'Financials.AccountingEntries.CreateDeleteMatchFlag',
            },
            {
                label: 'CASH MARKET PRICES',
                index: 3,
                privilege: 'Financials.POSTINGMGT',
            },
        ];
        this.activeLinkIndex = 0;
        this.activeLinkIndex = this.routeLinks.indexOf(this.routeLinks.find(function (tab) { return _this.router.url.includes(tab.link); }));
    }
    MarketDataTabGroupComponent.prototype.ngOnInit = function () {
        this.company = this.route.snapshot.paramMap.get('company');
    };
    MarketDataTabGroupComponent.prototype.isActive = function (routeLink) {
        return this.activeLinkIndex === routeLink.index;
    };
    MarketDataTabGroupComponent.prototype.onExchangeButtonClicked = function () {
        this.router.navigate(['/' + this.companyManager.getCurrentCompanyId() + '/reporting/globalreports/historicalrates/']);
    };
    MarketDataTabGroupComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'atlas-market-data-tab-group',
            template: __webpack_require__(/*! ./market-data-tab-group.component.html */ "./Client/app/financial/components/foreign-exchange/market-data-tab-group/market-data-tab-group.component.html"),
            styles: [__webpack_require__(/*! ./market-data-tab-group.component.scss */ "./Client/app/financial/components/foreign-exchange/market-data-tab-group/market-data-tab-group.component.scss")],
        }),
        __metadata("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_1__["Router"],
            _core_services_company_manager_service__WEBPACK_IMPORTED_MODULE_2__["CompanyManagerService"],
            _angular_router__WEBPACK_IMPORTED_MODULE_1__["ActivatedRoute"]])
    ], MarketDataTabGroupComponent);
    return MarketDataTabGroupComponent;
}());



/***/ }),

/***/ "./Client/app/financial/components/foreign-exchange/rates/cards/grid/foreign-exchange-rates-grid.component.html":
/*!**********************************************************************************************************************!*\
  !*** ./Client/app/financial/components/foreign-exchange/rates/cards/grid/foreign-exchange-rates-grid.component.html ***!
  \**********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<mat-card>\r\n    <div fxLayout=\"row\"\r\n         fxLayout.xs=\"column\"\r\n         fxLayoutAlign=\"space-between center\"\r\n         fxLayoutWrap\r\n         fxLayoutGap=\"20px\"\r\n         class=\"atlas-grid-card-header\">\r\n        <h2 class=\"no-margin\">FX Rates</h2>\r\n        <span class=\"fill-space\"></span> <button mat-icon-button\r\n                [matMenuTriggerFor]=\"menu1\">\r\n            <i class=\"material-icons\">more_vert</i>\r\n        </button>\r\n        <mat-menu #menu1=\"matMenu\">\r\n            <button mat-menu-item\r\n                    [matMenuTriggerFor]=\"exportMenu\">\r\n                <mat-icon>import_export</mat-icon><span>Export</span>\r\n            </button>\r\n        </mat-menu>\r\n        <mat-menu #exportMenu=\"matMenu\">\r\n            <button mat-menu-item\r\n                    (click)=\"onExportButtonClickedAsExcel()\">\r\n                <mat-icon>import_export</mat-icon><span>Export as Excel</span>\r\n            </button>\r\n            <button mat-menu-item\r\n                    (click)=\"onExportButtonClickedAsCSV()\">\r\n                <mat-icon>import_export</mat-icon><span>Export as CSV</span>\r\n            </button>\r\n        </mat-menu>\r\n        <div fxFlex=\"3%\">\r\n            <div *ngIf=\"selectedViewParams.type === ForeignExchangeRateViewMode.Daily\">\r\n                <button mat-icon-button\r\n                        *ifAuthorized=\"'Financials.MarketData',company:company, level: PermissionLevels.ReadWrite\"\r\n                        matTooltip=\"Edit\"\r\n                        (click)=\"onEditButtonClicked()\">\r\n                    <mat-icon [ngClass]=\"{'is-selected':editMode}\">edit</mat-icon>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <mat-card-content>\r\n        <div ag-grid=\"agGridOptions\"\r\n             class=\"ag-theme-material pointer-cursor\"\r\n             style=\"width: 100%; height: 100%\">\r\n            <ag-grid-angular style=\" height: 100%;\"\r\n                             class=\"ag-theme-material\"\r\n                             [columnDefs]=\"columnDefs\"\r\n                             [rowData]=\"rowData\"\r\n                             enableColResize=true\r\n                             pagination=true\r\n                             singleClickEdit=true\r\n                             paginationPageSize=10\r\n                             enableSorting=true\r\n                             domLayout=autoHeight\r\n                             (gridReady)=\"onGridReady($event)\"\r\n                             (cellValueChanged)=\"onCellValueChanged($event)\"\r\n                             [rowClassRules]=\"rowClassRules\"\r\n                             [excelStyles]=\"excelStyles\"\r\n                             [frameworkComponents]=\"gridComponents\"\r\n                             enableFilter\r\n                             [rowHeight]=\"atlasAgGridParam.rowHeight\">\r\n            </ag-grid-angular>\r\n        </div>\r\n        <div fxLayout=\"row\"\r\n             fxLayoutAlign=\"center center\"\r\n             fxLayoutWrap\r\n             *ngIf=\"isLoading\"\r\n             class=\"loading\">\r\n            <mat-spinner color=\"accent\"></mat-spinner>\r\n        </div>\r\n    </mat-card-content>\r\n</mat-card>"

/***/ }),

/***/ "./Client/app/financial/components/foreign-exchange/rates/cards/grid/foreign-exchange-rates-grid.component.scss":
/*!**********************************************************************************************************************!*\
  !*** ./Client/app/financial/components/foreign-exchange/rates/cards/grid/foreign-exchange-rates-grid.component.scss ***!
  \**********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".is-selected {\n  color: #185b9d; }\n\n.atlas-grid-card-header {\n  min-height: 40px; }\n"

/***/ }),

/***/ "./Client/app/financial/components/foreign-exchange/rates/cards/grid/foreign-exchange-rates-grid.component.ts":
/*!********************************************************************************************************************!*\
  !*** ./Client/app/financial/components/foreign-exchange/rates/cards/grid/foreign-exchange-rates-grid.component.ts ***!
  \********************************************************************************************************************/
/*! exports provided: ForeignExchangeRatesGridComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ForeignExchangeRatesGridComponent", function() { return ForeignExchangeRatesGridComponent; });
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _core_services_authorization_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../../core/services/authorization.service */ "./Client/app/core/services/authorization.service.ts");
/* harmony import */ var _shared_pipes_format_date_pipe_pipe__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../../../shared/pipes/format-date-pipe.pipe */ "./Client/app/shared/pipes/format-date-pipe.pipe.ts");
/* harmony import */ var _shared_services_ag_grid_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../../../shared/services/ag-grid.service */ "./Client/app/shared/services/ag-grid.service.ts");
/* harmony import */ var _shared_components_cell_editor_numeric_cell_editor_atlas_numeric_cell_editor_atlas_numeric_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./../../../../../../shared/components/cell-editor-numeric/cell-editor-atlas-numeric/cell-editor-atlas-numeric.component */ "./Client/app/shared/components/cell-editor-numeric/cell-editor-atlas-numeric/cell-editor-atlas-numeric.component.ts");
/* harmony import */ var _shared_components_confirmation_dialog_confirmation_dialog_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./../../../../../../shared/components/confirmation-dialog/confirmation-dialog.component */ "./Client/app/shared/components/confirmation-dialog/confirmation-dialog.component.ts");
/* harmony import */ var _shared_entities_atlas_number_entity__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./../../../../../../shared/entities/atlas-number.entity */ "./Client/app/shared/entities/atlas-number.entity.ts");
/* harmony import */ var _shared_entities_foreign_exchange_rate_display_view_entity__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./../../../../../../shared/entities/foreign-exchange-rate-display-view.entity */ "./Client/app/shared/entities/foreign-exchange-rate-display-view.entity.ts");
/* harmony import */ var _shared_enums_foreign_exchange_rate_creationmode_enum__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./../../../../../../shared/enums/foreign-exchange-rate-creationmode.enum */ "./Client/app/shared/enums/foreign-exchange-rate-creationmode.enum.ts");
/* harmony import */ var _shared_enums_foreign_exchange_rate_viewmode_enum__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./../../../../../../shared/enums/foreign-exchange-rate-viewmode.enum */ "./Client/app/shared/enums/foreign-exchange-rate-viewmode.enum.ts");
/* harmony import */ var _shared_enums_permission_level_enum__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./../../../../../../shared/enums/permission-level.enum */ "./Client/app/shared/enums/permission-level.enum.ts");
/* harmony import */ var _shared_numberMask__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./../../../../../../shared/numberMask */ "./Client/app/shared/numberMask.ts");
/* harmony import */ var _shared_services_http_services_foreign_exchange_service__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./../../../../../../shared/services/http-services/foreign-exchange.service */ "./Client/app/shared/services/http-services/foreign-exchange.service.ts");
/* harmony import */ var _shared_services_snackbar_service__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./../../../../../../shared/services/snackbar.service */ "./Client/app/shared/services/snackbar.service.ts");
/* harmony import */ var _shared_services_ui_service__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./../../../../../../shared/services/ui.service */ "./Client/app/shared/services/ui.service.ts");
/* harmony import */ var _entities_fx_rates_selected_type_entity__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./../../../../../entities/fx-rates-selected-type.entity */ "./Client/app/financial/entities/fx-rates-selected-type.entity.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




















var ForeignExchangeRatesGridComponent = /** @class */ (function () {
    function ForeignExchangeRatesGridComponent(uiService, foreignExchangeService, route, snackbarService, formatDate, datePipe, dialog, authorizationService, gridService) {
        var _this = this;
        this.uiService = uiService;
        this.foreignExchangeService = foreignExchangeService;
        this.route = route;
        this.snackbarService = snackbarService;
        this.formatDate = formatDate;
        this.datePipe = datePipe;
        this.dialog = dialog;
        this.authorizationService = authorizationService;
        this.gridService = gridService;
        this.selectedViewParams = new _entities_fx_rates_selected_type_entity__WEBPACK_IMPORTED_MODULE_19__["FxRatesSelectedType"]();
        this.editMode = false;
        this.editClicked = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.checkExportedFormat = false;
        this.PermissionLevels = _shared_enums_permission_level_enum__WEBPACK_IMPORTED_MODULE_14__["PermissionLevels"];
        this.gridComponents = {
            atlasNumericCellEditor: _shared_components_cell_editor_numeric_cell_editor_atlas_numeric_cell_editor_atlas_numeric_component__WEBPACK_IMPORTED_MODULE_8__["CellEditorAtlasNumericComponent"],
        };
        this.cellEditorParamsPositif = {
            displayMask: Object(_shared_numberMask__WEBPACK_IMPORTED_MODULE_15__["CustomNumberMask"])(12, 10, false),
            isRightAligned: false,
        };
        this.cellEditorParamsPositifAndNegatif = {
            displayMask: Object(_shared_numberMask__WEBPACK_IMPORTED_MODULE_15__["CustomNumberMask"])(12, 10, true),
            isRightAligned: false,
        };
        this.rowClassRules = {
            bold: function (params) {
                return params.data.highlight;
            },
        };
        this.columnDefs = [
            {
                headerName: 'Currency',
                colId: 'currencyCode',
                field: 'currencyCode',
            },
            {
                headerName: 'Description',
                colId: 'description',
                field: 'currencyDescription',
            },
            {
                headerName: 'Rate Type',
                colId: 'rateType',
                field: 'rateType',
            },
            {
                headerName: 'Date',
                colId: 'date',
                field: 'date',
                valueFormatter: function (params) { return _this.uiService.dateFormatter(params); },
                cellClass: 'dateFormat',
                valueGetter: function (params) {
                    var dateFormat = _this.formatDate;
                    var val = dateFormat.transformdate(params.data.date);
                    if (val) {
                        if (val.indexOf('/') < 0) {
                            return val;
                        }
                        else {
                            var split = val.split('/');
                            return split[2] + '-' + split[1] + '-' + split[0];
                        }
                    }
                },
            },
            {
                headerName: 'ROE to USD',
                colId: 'exchangeRate',
                field: 'exchangeRate',
                cellEditor: 'atlasNumericCellEditor',
                cellEditorParams: this.cellEditorParamsPositif,
                editable: this.isCellEditable.bind(this),
                cellStyle: { textAlign: 'left' },
            },
            {
                headerName: '1 month',
                colId: 'oneMonthForwardPeriodPoints',
                field: 'oneMonthForwardPeriodPoints',
                cellEditor: 'atlasNumericCellEditor',
                cellEditorParams: this.cellEditorParamsPositifAndNegatif,
                editable: this.isCellEditable.bind(this),
                cellStyle: { textAlign: 'left' },
            },
            {
                headerName: '2 month',
                colId: 'twoMonthsForwardPeriodPoints',
                field: 'twoMonthsForwardPeriodPoints',
                cellEditor: 'atlasNumericCellEditor',
                cellEditorParams: this.cellEditorParamsPositifAndNegatif,
                editable: this.isCellEditable.bind(this),
                cellStyle: { textAlign: 'left' },
            },
            {
                headerName: '3 month',
                colId: 'threeMonthsForwardPeriodPoints',
                field: 'threeMonthsForwardPeriodPoints',
                cellEditor: 'atlasNumericCellEditor',
                cellEditorParams: this.cellEditorParamsPositifAndNegatif,
                editable: this.isCellEditable.bind(this),
                cellStyle: { textAlign: 'left' },
            },
            {
                headerName: '6 month',
                colId: 'sixMonthsForwardPeriodPoints',
                field: 'sixMonthsForwardPeriodPoints',
                cellEditor: 'atlasNumericCellEditor',
                cellEditorParams: this.cellEditorParamsPositifAndNegatif,
                editable: this.isCellEditable.bind(this),
                cellStyle: { textAlign: 'left' },
            },
            {
                headerName: '1 year',
                colId: 'oneYearForwardPeriodPoints',
                field: 'oneYearForwardPeriodPoints',
                cellEditor: 'atlasNumericCellEditor',
                cellEditorParams: this.cellEditorParamsPositifAndNegatif,
                editable: this.isCellEditable.bind(this),
                cellStyle: { textAlign: 'left' },
            },
            {
                headerName: '2 year',
                colId: 'twoYearForwardPeriodPoints',
                field: 'twoYearForwardPeriodPoints',
                cellEditor: 'atlasNumericCellEditor',
                cellEditorParams: this.cellEditorParamsPositifAndNegatif,
                editable: this.isCellEditable.bind(this),
                cellStyle: { textAlign: 'left' },
            },
            {
                headerName: 'Time',
                colId: 'time',
                field: 'time',
            },
            {
                headerName: 'Creation Mode',
                colId: 'creationMode',
                field: 'creationMode',
            },
            {
                headerName: 'Last Amended by',
                colId: 'lastAmendmentBy',
                field: 'lastAmendmentBy',
            },
            {
                headerName: 'Last Amended on',
                colId: 'lastAmendmentOn',
                field: 'lastAmendmentOn',
                valueFormatter: this.uiService.dateFormatter,
                cellClass: 'dateFormat',
                valueGetter: function (params) {
                    var dateFormat = _this.formatDate;
                    var val = dateFormat.transformdate(params.data.lastAmendmentOn);
                    if (val) {
                        if (val.indexOf('/') < 0) {
                            return val;
                        }
                        else {
                            var split = val.split('/');
                            return split[2] + '-' + split[1] + '-' + split[0];
                        }
                    }
                },
            },
        ];
        this.fxRates = [];
        this.rowData = [];
        this.ForeignExchangeRateViewMode = _shared_enums_foreign_exchange_rate_viewmode_enum__WEBPACK_IMPORTED_MODULE_13__["ForeignExchangeRateViewMode"];
        this.isLoading = true;
        this.excelStyles = [
            {
                id: 'dateFormat',
                dataType: 'dateTime',
                numberFormat: {
                    format: 'dd/mm/yyyy',
                },
            },
        ];
        this.userActiveDirectoryName = this.authorizationService.getCurrentUser().samAccountName;
        this.company = route.snapshot.paramMap.get('company');
    }
    ForeignExchangeRatesGridComponent.prototype.ngOnInit = function () {
        this.atlasAgGridParam = this.gridService.getAgGridParam();
    };
    ForeignExchangeRatesGridComponent.prototype.onGridReady = function (params) {
        params.columnDefs = this.columnDefs;
        this.gridOptions = params;
        this.gridOptions.api.setRowData(this.rowData);
        this.columnApi = params.columnApi;
        this.autoSizeGridHeader();
    };
    ForeignExchangeRatesGridComponent.prototype.autoSizeGridHeader = function () {
        this.columnApi.autoSizeColumns(this.columnDefs.map(function (column) { return column.field; }));
    };
    ForeignExchangeRatesGridComponent.prototype.onGridSizeChanged = function (params) {
        this.autoSizeGridHeader();
    };
    ForeignExchangeRatesGridComponent.prototype.updateGrid = function (selectedViewParams) {
        var dataHasToBeLoaded = this.selectedViewParams.date !== selectedViewParams.date ||
            this.selectedViewParams.type !== selectedViewParams.type;
        this.selectedViewParams = selectedViewParams;
        if (dataHasToBeLoaded) {
            this.getData();
        }
        else {
            this.viewChanged();
        }
    };
    /* dateHide(): void {
         if (this.gridOptions && this.gridOptions.columnApi) {
             this.columnDefs.filter((column) => column.colId === 'date')
                 .map((column) => column.hide = this.selectedViewParams.type === ForeignExchangeRateViewMode.Daily);
             this.gridOptions.columnApi.setColumnVisible('date', this.selectedViewParams.type !== ForeignExchangeRateViewMode.Daily);
         }
     }*/
    ForeignExchangeRatesGridComponent.prototype.getData = function (dataToHilight) {
        var _this = this;
        if (dataToHilight === void 0) { dataToHilight = []; }
        this.isLoading = true;
        this.rowData = [];
        this.foreignExchangeService.getForeignExchangeRates(this.selectedViewParams.date.toDate(), this.selectedViewParams.type, this.selectedViewParams.inactiveCurrencies)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])(function (result) {
            _this.fxRates = result.value
                .map(function (foreignExchangeRate) {
                var rateLoaded = new _shared_entities_foreign_exchange_rate_display_view_entity__WEBPACK_IMPORTED_MODULE_11__["ForeignExchangeRateDisplayView"](foreignExchangeRate);
                if (dataToHilight.filter(function (data) { return data.currencyCode === rateLoaded.currencyCode; }).length > 0) {
                    rateLoaded.highlight = true;
                }
                return rateLoaded;
            });
        }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["finalize"])(function () {
            _this.isLoading = false;
        })).subscribe(function () {
            _this.viewChanged();
        });
    };
    ForeignExchangeRatesGridComponent.prototype.viewChanged = function () {
        this.rowData = !this.selectedViewParams.inactiveCurrencies ?
            this.fxRates.filter(function (rate) { return !rate.isInactive; }) : this.fxRates;
        if (this.gridOptions && this.gridOptions.api) {
            this.gridOptions.api.setRowData(this.rowData);
        }
    };
    ForeignExchangeRatesGridComponent.prototype.isCellEditable = function (params) {
        if (!this.editMode || params.colDef.colId === 'exchangeRate') {
            return this.editMode;
        }
        var result = false;
        var rowData = params.data;
        if (rowData.exchangeRate) {
            var exchangeRate = new _shared_entities_atlas_number_entity__WEBPACK_IMPORTED_MODULE_10__["AtlasNumber"](rowData.exchangeRate);
            if (exchangeRate.strictlyBiggerThan(0)) {
                result = true;
            }
        }
        return result;
    };
    ForeignExchangeRatesGridComponent.prototype.onEditButtonClicked = function () {
        this.editMode = !this.editMode;
        this.editClicked.emit(this.editMode);
        if (this.editMode) {
            this.viewChanged();
        }
        else {
            this.getData();
        }
    };
    ForeignExchangeRatesGridComponent.prototype.onSaveButtonClicked = function () {
        var _this = this;
        this.editMode = false;
        var rowsToSave = this.rowData
            .filter(function (row) { return row.isTouched; })
            .map(function (row) {
            var rate = {
                currencyCode: row.currencyCode,
                currencyDescription: row.currencyDescription,
                currencyRoeType: row.rateType,
                date: _this.selectedViewParams.date.toDate(),
                rate: row.exchangeRate,
                fwdMonth1: row.oneMonthForwardPeriodPoints,
                fwdMonth2: row.twoMonthsForwardPeriodPoints,
                fwdMonth3: row.threeMonthsForwardPeriodPoints,
                fwdMonth6: row.sixMonthsForwardPeriodPoints,
                fwdYear1: row.oneYearForwardPeriodPoints,
                fwdYear2: row.twoYearForwardPeriodPoints,
                currencyIsDeactivated: row.isInactive,
                createdBy: null,
                createdDateTime: null,
                modifiedBy: null,
                modifiedDateTime: null,
                creationMode: _shared_enums_foreign_exchange_rate_creationmode_enum__WEBPACK_IMPORTED_MODULE_12__["ForeignExchangeRateCreationMode"][_shared_enums_foreign_exchange_rate_creationmode_enum__WEBPACK_IMPORTED_MODULE_12__["ForeignExchangeRateCreationMode"].Manual],
                time: null,
            };
            return rate;
        });
        this.foreignExchangeService.importForeignExchangeRates(rowsToSave).subscribe(function () {
            _this.getData(rowsToSave);
        });
    };
    ForeignExchangeRatesGridComponent.prototype.onDiscardButtonClicked = function () {
        var _this = this;
        var confirmDiscardDialog = this.dialog.open(_shared_components_confirmation_dialog_confirmation_dialog_component__WEBPACK_IMPORTED_MODULE_9__["ConfirmationDialogComponent"], {
            data: {
                title: 'Discard Changes',
                text: 'You have some modification pending. Close and lose changes?',
                okButton: 'Ok',
                cancelButton: 'Cancel',
            },
        });
        confirmDiscardDialog.afterClosed().subscribe(function (answer) {
            if (answer) {
                _this.editMode = false;
                _this.getData();
            }
        });
    };
    ForeignExchangeRatesGridComponent.prototype.onCellValueChanged = function (event) {
        var row = event.data;
        var isBiggerThanZero = (new _shared_entities_atlas_number_entity__WEBPACK_IMPORTED_MODULE_10__["AtlasNumber"](row.exchangeRate)).strictlyBiggerThan(0);
        if (!row.exchangeRate || !isBiggerThanZero) {
            row.oneMonthForwardPeriodPoints = null;
            row.oneYearForwardPeriodPoints = null;
            row.sixMonthsForwardPeriodPoints = null;
            row.threeMonthsForwardPeriodPoints = null;
            row.twoMonthsForwardPeriodPoints = null;
            row.twoYearForwardPeriodPoints = null;
        }
        row.isTouched = true;
        this.gridOptions.api.setRowData(this.fxRates);
    };
    ForeignExchangeRatesGridComponent.prototype.onExportButtonClickedAsExcel = function () {
        var screenName = 'FX Rates';
        var now = new Date();
        var todayDate = this.datePipe.transform(now, 'yyyyMMdd_hhmm').toString().toUpperCase();
        var params = {
            fileName: todayDate + '_' + this.company + '_' + screenName + '_' + this.userActiveDirectoryName + '.xlsx',
        };
        this.gridOptions.api.exportDataAsExcel(params);
    };
    ForeignExchangeRatesGridComponent.prototype.onExportButtonClickedAsCSV = function () {
        var screenName = 'FX Rates';
        var now = new Date();
        var todayDate = this.datePipe.transform(now, 'yyyyMMdd_hhmm').toString().toUpperCase();
        var params = {
            fileName: todayDate + '_' + this.company + '_' + screenName + '_' + this.userActiveDirectoryName + '.csv',
        };
        this.gridOptions.api.exportDataAsCsv(params);
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(),
        __metadata("design:type", Object)
    ], ForeignExchangeRatesGridComponent.prototype, "editClicked", void 0);
    ForeignExchangeRatesGridComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'atlas-foreign-exchange-rates-grid',
            template: __webpack_require__(/*! ./foreign-exchange-rates-grid.component.html */ "./Client/app/financial/components/foreign-exchange/rates/cards/grid/foreign-exchange-rates-grid.component.html"),
            styles: [__webpack_require__(/*! ./foreign-exchange-rates-grid.component.scss */ "./Client/app/financial/components/foreign-exchange/rates/cards/grid/foreign-exchange-rates-grid.component.scss")],
            providers: [_angular_common__WEBPACK_IMPORTED_MODULE_0__["DatePipe"]],
        }),
        __metadata("design:paramtypes", [_shared_services_ui_service__WEBPACK_IMPORTED_MODULE_18__["UiService"],
            _shared_services_http_services_foreign_exchange_service__WEBPACK_IMPORTED_MODULE_16__["ForeignExchangeService"],
            _angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"],
            _shared_services_snackbar_service__WEBPACK_IMPORTED_MODULE_17__["SnackbarService"],
            _shared_pipes_format_date_pipe_pipe__WEBPACK_IMPORTED_MODULE_6__["FormatDatePipe"],
            _angular_common__WEBPACK_IMPORTED_MODULE_0__["DatePipe"],
            _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialog"],
            _core_services_authorization_service__WEBPACK_IMPORTED_MODULE_5__["AuthorizationService"],
            _shared_services_ag_grid_service__WEBPACK_IMPORTED_MODULE_7__["AgGridService"]])
    ], ForeignExchangeRatesGridComponent);
    return ForeignExchangeRatesGridComponent;
}());



/***/ }),

/***/ "./Client/app/financial/components/foreign-exchange/rates/cards/select-types/foreign-exchange-rates-select-types.component.html":
/*!**************************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/foreign-exchange/rates/cards/select-types/foreign-exchange-rates-select-types.component.html ***!
  \**************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<mat-card>\r\n    <mat-card-header>\r\n        <div fxFlex=\"50\"\r\n             fxLayout=\"row\"\r\n             fxAlignLayout=\"start start\">\r\n            <h2>View Options</h2>\r\n        </div>\r\n        <div fxFlex=\"50\"\r\n             fxLayout=\"row\"\r\n             fxAlignLayout=\"start end\">\r\n            <span class=\"fill-space\"></span>\r\n            <div *ngIf=\"foreignExchangeTypeCtrl.value === ForeignExchangeRateViewMode.Daily\">\r\n                <atlas-file-upload-dialog-box *ifAuthorized=\"'Financials.MarketData',company:company, level: PermissionLevels.ReadWrite\"\r\n                                              #fileUploadDialogBoxComponent\r\n                                              [docType]=\"selectedDocType\"\r\n                                              (documentSelected)=\"ondocumentSelected($event)\">\r\n                </atlas-file-upload-dialog-box>\r\n            </div>\r\n        </div>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n        <div class=\"min-height\"\r\n             fxLayout=\"row\"\r\n             fxLayoutAlign=\"start center\"\r\n             fxLayoutGap=\"5%\">\r\n            <mat-button-toggle-group class=\"toggle-group\"\r\n                                     [formControl]=\"foreignExchangeTypeCtrl\"\r\n                                     aria-label=\"Date / Period rates to be maintained\"\r\n                                     [disabled]=\"editMode\">\r\n                <mat-button-toggle [value]=\"ForeignExchangeRateViewMode.Spot\"\r\n                                   [disabled]=\"editMode\">{{ForeignExchangeRateViewMode.Spot}}</mat-button-toggle>\r\n                <mat-button-toggle [value]=\"ForeignExchangeRateViewMode.Daily\"\r\n                                   [disabled]=\"editMode\">{{ForeignExchangeRateViewMode.Daily}}</mat-button-toggle>\r\n                <mat-button-toggle [value]=\"ForeignExchangeRateViewMode.Monthly\"\r\n                                   [disabled]=\"editMode\">{{ForeignExchangeRateViewMode.Monthly}}</mat-button-toggle>\r\n            </mat-button-toggle-group>\r\n            <div class=\"custom-form\"\r\n                 [class.isEmpty]=\"!dateCtrl.value\"\r\n                 *ngIf=\"foreignExchangeTypeCtrl.value === ForeignExchangeRateViewMode.Daily\"\r\n                 [class.required-field]=\"dateCtrl.isRequired\">\r\n                <atlas-date-picker isEditable=true\r\n                                   [disabled]=\"editMode\"\r\n                                   label=\"Date\"\r\n                                   [fieldControl]=\"dateCtrl\">\r\n                </atlas-date-picker>\r\n            </div>\r\n            <atlas-month-date-picker *ngIf=\"foreignExchangeTypeCtrl.value === ForeignExchangeRateViewMode.Monthly\"\r\n                                     isEditable=true\r\n                                     [disabled]=\"editMode\"\r\n                                     label=\"Date\"\r\n                                     [fieldControl]=\"dateCtrl\">\r\n            </atlas-month-date-picker>\r\n\r\n            <mat-slide-toggle [formControl]=\"inactiveCurrenciesCtrl\"\r\n                              [disabled]=\"editMode\"\r\n                              mat-raised-button>Inactive Currencies\r\n            </mat-slide-toggle>\r\n        </div>\r\n    </mat-card-content>\r\n</mat-card>"

/***/ }),

/***/ "./Client/app/financial/components/foreign-exchange/rates/cards/select-types/foreign-exchange-rates-select-types.component.scss":
/*!**************************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/foreign-exchange/rates/cards/select-types/foreign-exchange-rates-select-types.component.scss ***!
  \**************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".min-height {\n  min-height: 57px; }\n"

/***/ }),

/***/ "./Client/app/financial/components/foreign-exchange/rates/cards/select-types/foreign-exchange-rates-select-types.component.ts":
/*!************************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/foreign-exchange/rates/cards/select-types/foreign-exchange-rates-select-types.component.ts ***!
  \************************************************************************************************************************************/
/*! exports provided: ForeignExchangeRatesSelectTypesComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ForeignExchangeRatesSelectTypesComponent", function() { return ForeignExchangeRatesSelectTypesComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _core_services_company_manager_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../../core/services/company-manager.service */ "./Client/app/core/services/company-manager.service.ts");
/* harmony import */ var _warning_error_msg_dialog_warning_error_msg_dialog_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../warning-error-msg-dialog/warning-error-msg-dialog.component */ "./Client/app/financial/components/foreign-exchange/warning-error-msg-dialog/warning-error-msg-dialog.component.ts");
/* harmony import */ var _shared_components_file_upload_dialog_box_file_upload_dialog_box_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./../../../../../../shared/components/file-upload-dialog-box/file-upload-dialog-box.component */ "./Client/app/shared/components/file-upload-dialog-box/file-upload-dialog-box.component.ts");
/* harmony import */ var _shared_entities_atlas_form_control__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./../../../../../../shared/entities/atlas-form-control */ "./Client/app/shared/entities/atlas-form-control.ts");
/* harmony import */ var _shared_enums_foreign_exchange_rate_viewmode_enum__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./../../../../../../shared/enums/foreign-exchange-rate-viewmode.enum */ "./Client/app/shared/enums/foreign-exchange-rate-viewmode.enum.ts");
/* harmony import */ var _shared_enums_permission_level_enum__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./../../../../../../shared/enums/permission-level.enum */ "./Client/app/shared/enums/permission-level.enum.ts");
/* harmony import */ var _shared_services_http_services_foreign_exchange_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./../../../../../../shared/services/http-services/foreign-exchange.service */ "./Client/app/shared/services/http-services/foreign-exchange.service.ts");
/* harmony import */ var _shared_services_snackbar_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./../../../../../../shared/services/snackbar.service */ "./Client/app/shared/services/snackbar.service.ts");
/* harmony import */ var _entities_fx_rates_selected_type_entity__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./../../../../../entities/fx-rates-selected-type.entity */ "./Client/app/financial/entities/fx-rates-selected-type.entity.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};














var moment = moment__WEBPACK_IMPORTED_MODULE_4__;
var ForeignExchangeRatesSelectTypesComponent = /** @class */ (function () {
    function ForeignExchangeRatesSelectTypesComponent(router, formBuilder, route, dialog, companyManager, snackbarService, foreignExchangeService) {
        this.router = router;
        this.formBuilder = formBuilder;
        this.route = route;
        this.dialog = dialog;
        this.companyManager = companyManager;
        this.snackbarService = snackbarService;
        this.foreignExchangeService = foreignExchangeService;
        this.dateCtrl = new _shared_entities_atlas_form_control__WEBPACK_IMPORTED_MODULE_8__["AtlasFormControl"]('Date', this.companyManager.getCurrentCompanyDate(), _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required);
        this.foreignExchangeTypeCtrl = new _shared_entities_atlas_form_control__WEBPACK_IMPORTED_MODULE_8__["AtlasFormControl"]('ForeignExchangeTypeCtrl');
        this.inactiveCurrenciesCtrl = new _shared_entities_atlas_form_control__WEBPACK_IMPORTED_MODULE_8__["AtlasFormControl"]('InactiveCurrencies');
        this.ForeignExchangeRateViewMode = _shared_enums_foreign_exchange_rate_viewmode_enum__WEBPACK_IMPORTED_MODULE_9__["ForeignExchangeRateViewMode"];
        this.selectedDocType = '.csv';
        this.objectKeys = Object.keys;
        this.disableConfirmImport = false;
        this.PermissionLevels = _shared_enums_permission_level_enum__WEBPACK_IMPORTED_MODULE_10__["PermissionLevels"];
        this.editMode = false;
        this.selectedViewParams = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.company = this.route.snapshot.paramMap.get('company');
    }
    ForeignExchangeRatesSelectTypesComponent.prototype.ngOnInit = function () {
        this.getFormGroup();
    };
    ForeignExchangeRatesSelectTypesComponent.prototype.getFormGroup = function () {
        var _this = this;
        this.formGroup = this.formBuilder.group({
            dateCtrl: this.dateCtrl,
            foreignExchangeTypeCtrl: this.foreignExchangeTypeCtrl,
            inactiveCurrenciesCtrl: this.inactiveCurrenciesCtrl,
        });
        this.setDefaultValues();
        this.formGroup.valueChanges.subscribe(function () {
            if ((_this.foreignExchangeTypeCtrl.value === _shared_enums_foreign_exchange_rate_viewmode_enum__WEBPACK_IMPORTED_MODULE_9__["ForeignExchangeRateViewMode"].Daily ||
                _this.foreignExchangeTypeCtrl.value === _shared_enums_foreign_exchange_rate_viewmode_enum__WEBPACK_IMPORTED_MODULE_9__["ForeignExchangeRateViewMode"].Monthly) &&
                !_this.dateCtrl.valid) {
                return;
            }
            _this.selectedViewParams.emit(_this.getValuesFromForm());
        });
        // we need to emit one during initialization
        this.selectedViewParams.emit(this.getValuesFromForm());
        return this.formGroup;
    };
    ForeignExchangeRatesSelectTypesComponent.prototype.setDefaultValues = function () {
        var selectedViewParams = new _entities_fx_rates_selected_type_entity__WEBPACK_IMPORTED_MODULE_13__["FxRatesSelectedType"]();
        this.dateCtrl.setValue(selectedViewParams.date);
        this.foreignExchangeTypeCtrl.setValue(selectedViewParams.type);
        this.inactiveCurrenciesCtrl.setValue(selectedViewParams.inactiveCurrencies);
    };
    ForeignExchangeRatesSelectTypesComponent.prototype.getValuesFromForm = function () {
        var selectedViewParams = new _entities_fx_rates_selected_type_entity__WEBPACK_IMPORTED_MODULE_13__["FxRatesSelectedType"]();
        selectedViewParams.date = moment(this.dateCtrl.value);
        selectedViewParams.type = this.foreignExchangeTypeCtrl.value;
        selectedViewParams.inactiveCurrencies = this.inactiveCurrenciesCtrl.value;
        return selectedViewParams;
    };
    ForeignExchangeRatesSelectTypesComponent.prototype.onImportExchangeRatesClicked = function () {
        this.fileUploadDialogBoxComponent.docType = this.selectedDocType;
    };
    ForeignExchangeRatesSelectTypesComponent.prototype.ondocumentSelected = function (file) {
        var _this = this;
        var fileName = file.name;
        var importId;
        var fileType = fileName.substr(fileName.lastIndexOf('.') + 1);
        if (fileType === 'csv') {
            this.foreignExchangeService.fileUpload(file).subscribe(function (data) {
                _this.progressbar = false;
                if (data) {
                    importId = data.importId;
                    var goodDataResult = _this.objectKeys(data.goodData.lineNumberWithCurrency);
                    if (data.warningData.length === 0 && goodDataResult.length === 0 && data.blockerData.length > 0) {
                        _this.disableConfirmImport = true;
                        data.disableConfirmImport = _this.disableConfirmImport;
                    }
                    else {
                        _this.disableConfirmImport = false;
                        data.disableConfirmImport = _this.disableConfirmImport;
                    }
                    var manualImportReportMsgDialog_1 = _this.dialog.open(_warning_error_msg_dialog_warning_error_msg_dialog_component__WEBPACK_IMPORTED_MODULE_6__["WarningErrorMsgDialogComponent"], {
                        data: data,
                        width: '80%',
                        height: '80%',
                    });
                    manualImportReportMsgDialog_1.afterClosed().subscribe(function (answer) {
                        if (answer) {
                            if (answer.toBeImported) {
                                _this.foreignExchangeService.confirmImport(importId).subscribe(function () { });
                                var goodDataResult_1 = _this.objectKeys(data.goodData.lineNumberWithCurrency);
                                var result = _this.objectKeys(data.blockerData.length);
                                if (data.blockerData.length > 0 && (data.warningData.length > 0 || goodDataResult_1.length > 0)) {
                                    _this.snackbarService.informationSnackBar('Import was successful. Please note that some rates could not have been imported.');
                                }
                                else if (data.blockerData.length === 0 && (goodDataResult_1.length > 0 || data.warningData.length > 0)) {
                                    _this.snackbarService.informationSnackBar('Import was successful.');
                                }
                                else if (goodDataResult_1.length === 0 && data.warningData.length === 0) {
                                    _this.snackbarService.informationSnackBar('Import was unsuccessful.');
                                }
                            }
                            else {
                                _this.foreignExchangeService.cancelImport(importId).subscribe(function () { });
                            }
                            _this.router.navigate(['/' + _this.companyManager.getCurrentCompanyId() +
                                    '/financial/fx/rates']);
                            _this.progressbar = false;
                        }
                        else {
                            manualImportReportMsgDialog_1.close();
                        }
                    });
                }
            });
        }
        else {
            this.snackbarService.informationSnackBar('Only csv files are allowed to be selected');
        }
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('fileUploadDialogBoxComponent'),
        __metadata("design:type", _shared_components_file_upload_dialog_box_file_upload_dialog_box_component__WEBPACK_IMPORTED_MODULE_7__["FileUploadDialogBoxComponent"])
    ], ForeignExchangeRatesSelectTypesComponent.prototype, "fileUploadDialogBoxComponent", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], ForeignExchangeRatesSelectTypesComponent.prototype, "editMode", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], ForeignExchangeRatesSelectTypesComponent.prototype, "selectedViewParams", void 0);
    ForeignExchangeRatesSelectTypesComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'atlas-foreign-exchange-rates-select-types',
            template: __webpack_require__(/*! ./foreign-exchange-rates-select-types.component.html */ "./Client/app/financial/components/foreign-exchange/rates/cards/select-types/foreign-exchange-rates-select-types.component.html"),
            styles: [__webpack_require__(/*! ./foreign-exchange-rates-select-types.component.scss */ "./Client/app/financial/components/foreign-exchange/rates/cards/select-types/foreign-exchange-rates-select-types.component.scss")],
        }),
        __metadata("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"],
            _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormBuilder"],
            _angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"],
            _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialog"],
            _core_services_company_manager_service__WEBPACK_IMPORTED_MODULE_5__["CompanyManagerService"],
            _shared_services_snackbar_service__WEBPACK_IMPORTED_MODULE_12__["SnackbarService"],
            _shared_services_http_services_foreign_exchange_service__WEBPACK_IMPORTED_MODULE_11__["ForeignExchangeService"]])
    ], ForeignExchangeRatesSelectTypesComponent);
    return ForeignExchangeRatesSelectTypesComponent;
}());



/***/ }),

/***/ "./Client/app/financial/components/foreign-exchange/rates/foreign-exchange-rates.component.html":
/*!******************************************************************************************************!*\
  !*** ./Client/app/financial/components/foreign-exchange/rates/foreign-exchange-rates.component.html ***!
  \******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<atlas-financial-tab-group></atlas-financial-tab-group>\r\n<atlas-market-data-tab-group></atlas-market-data-tab-group>\r\n\r\n<div class=\"main-container\">\r\n    <atlas-foreign-exchange-rates-select-types (selectedViewParams)=\"onSelectedViewParamsChanged($event)\"\r\n                                               [editMode]=\"editMode\"></atlas-foreign-exchange-rates-select-types>\r\n    <atlas-foreign-exchange-rates-grid #grid\r\n                                       (editClicked)=\"onEditButtonClicked($event)\"></atlas-foreign-exchange-rates-grid>\r\n\r\n    <div *ngIf=\"editMode\"\r\n         fxLayout=\"row\"\r\n         fxAlignLayout=\"space-between start\">\r\n        <button type=\"button\"\r\n                (click)=\"onDiscardButtonClicked()\"\r\n                mat-button>Discard</button>\r\n        <span class=\"fill-space\"></span>\r\n        <button type=\"submit\"\r\n                (click)=\"onSaveButtonClicked()\"\r\n                mat-raised-button>Save</button>\r\n    </div>\r\n</div>"

/***/ }),

/***/ "./Client/app/financial/components/foreign-exchange/rates/foreign-exchange-rates.component.scss":
/*!******************************************************************************************************!*\
  !*** ./Client/app/financial/components/foreign-exchange/rates/foreign-exchange-rates.component.scss ***!
  \******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ""

/***/ }),

/***/ "./Client/app/financial/components/foreign-exchange/rates/foreign-exchange-rates.component.ts":
/*!****************************************************************************************************!*\
  !*** ./Client/app/financial/components/foreign-exchange/rates/foreign-exchange-rates.component.ts ***!
  \****************************************************************************************************/
/*! exports provided: ForeignExchangeRatesComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ForeignExchangeRatesComponent", function() { return ForeignExchangeRatesComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _cards_grid_foreign_exchange_rates_grid_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cards/grid/foreign-exchange-rates-grid.component */ "./Client/app/financial/components/foreign-exchange/rates/cards/grid/foreign-exchange-rates-grid.component.ts");
/* harmony import */ var _shared_components_confirmation_dialog_confirmation_dialog_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../shared/components/confirmation-dialog/confirmation-dialog.component */ "./Client/app/shared/components/confirmation-dialog/confirmation-dialog.component.ts");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var ForeignExchangeRatesComponent = /** @class */ (function () {
    function ForeignExchangeRatesComponent(dialog) {
        this.dialog = dialog;
        this.editMode = false;
    }
    ForeignExchangeRatesComponent.prototype.ngOnInit = function () {
    };
    ForeignExchangeRatesComponent.prototype.onSelectedViewParamsChanged = function (selectedViewParams) {
        this.foreignExchangeRatesGridComponent.updateGrid(selectedViewParams);
    };
    ForeignExchangeRatesComponent.prototype.onEditButtonClicked = function (editMode) {
        this.editMode = editMode;
    };
    ForeignExchangeRatesComponent.prototype.onSaveButtonClicked = function () {
        this.editMode = false;
        this.foreignExchangeRatesGridComponent.onSaveButtonClicked();
    };
    ForeignExchangeRatesComponent.prototype.onDiscardButtonClicked = function () {
        var _this = this;
        var confirmDiscardDialog = this.dialog.open(_shared_components_confirmation_dialog_confirmation_dialog_component__WEBPACK_IMPORTED_MODULE_2__["ConfirmationDialogComponent"], {
            data: {
                title: 'Discard Changes',
                text: 'You have some modification pending. Close and lose changes?',
                okButton: 'Ok',
                cancelButton: 'Cancel',
            },
        });
        confirmDiscardDialog.afterClosed().subscribe(function (answer) {
            if (answer) {
                _this.editMode = false;
                _this.foreignExchangeRatesGridComponent.onDiscardButtonClicked();
            }
        });
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('grid'),
        __metadata("design:type", _cards_grid_foreign_exchange_rates_grid_component__WEBPACK_IMPORTED_MODULE_1__["ForeignExchangeRatesGridComponent"])
    ], ForeignExchangeRatesComponent.prototype, "foreignExchangeRatesGridComponent", void 0);
    ForeignExchangeRatesComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'atlas-foreign-exchange-rates',
            template: __webpack_require__(/*! ./foreign-exchange-rates.component.html */ "./Client/app/financial/components/foreign-exchange/rates/foreign-exchange-rates.component.html"),
            styles: [__webpack_require__(/*! ./foreign-exchange-rates.component.scss */ "./Client/app/financial/components/foreign-exchange/rates/foreign-exchange-rates.component.scss")],
        }),
        __metadata("design:paramtypes", [_angular_material__WEBPACK_IMPORTED_MODULE_3__["MatDialog"]])
    ], ForeignExchangeRatesComponent);
    return ForeignExchangeRatesComponent;
}());



/***/ }),

/***/ "./Client/app/financial/components/foreign-exchange/warning-error-msg-dialog/warning-error-msg-dialog.component.html":
/*!***************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/foreign-exchange/warning-error-msg-dialog/warning-error-msg-dialog.component.html ***!
  \***************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<h1 mat-dialog-title>Import Exchange Rates</h1>\r\n<mat-dialog-content>\r\n    <div fxLayout=\"row\"\r\n         fxLayoutAlign=\"center center\"\r\n         fxLayoutWrap\r\n         *ngIf=\"isLoading\"\r\n         class=\"loading\">\r\n        <mat-spinner color=\"accent\"></mat-spinner>\r\n    </div>\r\n    <div fxLayout=\"column\"\r\n         *ngIf=\"!isLoading\">\r\n        <div class=\"manual-import information-banner-card\">\r\n            <div class=\"error\"\r\n                 fxLayout=\"row\">\r\n                <div *ngIf=\"data.blockerData.length > 0\">\r\n                    <div fxLayoutAlign=\"start center\"\r\n                         fxLayout=\"row\">\r\n                        <div class=\"error-circle-icon\"\r\n                             fxLayout=\"column\">\r\n                            <mat-icon>remove_circle</mat-icon>\r\n                        </div>\r\n                        <div fxLayout=\"column\">\r\n                            <h4>Blocked for Import</h4>\r\n                        </div>\r\n                    </div>\r\n                    <div *ngFor=\"let data of dialogData.blockerData\">\r\n                        <p>{{data.errorMessage}}</p>\r\n                        <mat-chip-list class=\"chip-list\">\r\n                            <mat-chip selected\r\n                                      disabled\r\n                                      *ngFor=\"let key of objectKeys(data.lineNumberWithCurrency)\">\r\n                                {{'L.No: ' + key + ' - Currency: ' + data.lineNumberWithCurrency[key]}}\r\n                            </mat-chip>\r\n                        </mat-chip-list>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <mat-divider></mat-divider>\r\n            <div class=\"warning\"\r\n                 fxLayout=\"row\">\r\n                <div *ngIf=\"data.warningData.length> 0\">\r\n                    <div fxLayoutAlign=\"start center\"\r\n                         fxLayout=\"row\">\r\n                        <div class=\"warning-circle-icon\"\r\n                             fxLayout=\"column\">\r\n                            <mat-icon>warning_outline</mat-icon>\r\n                        </div>\r\n                        <div fxLayout=\"column\">\r\n                            <h4>Warning for Import</h4>\r\n                        </div>\r\n                    </div>\r\n                    <div *ngFor=\"let data of dialogData.warningData\">\r\n                        <p>{{data.errorMessage}} </p>\r\n                        <mat-chip-list class=\"chip-list\">\r\n                            <mat-chip selected\r\n                                      disabled\r\n                                      *ngFor=\"let key of objectKeys(data.lineNumberWithCurrency)\">\r\n                                {{'L.No: ' + key + ' - Currency: ' + data.lineNumberWithCurrency[key]}}\r\n                            </mat-chip>\r\n                        </mat-chip-list>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <mat-divider></mat-divider>\r\n            <div class=\"info\"\r\n                 fxLayout=\"row\">\r\n                <div *ngIf=\"goodDataCount > 0\">\r\n                    <div fxLayoutAlign=\"start center\"\r\n                         fxLayout=\"row\">\r\n                        <div class=\"info-circle-green-icon\"\r\n                             fxLayout=\"column\">\r\n                            <mat-icon>check_circle</mat-icon>\r\n                        </div>\r\n                        <div fxLayout=\"column\">\r\n                            <h4>Ready for Import</h4>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <p>{{dialogData.goodData.errorMessage}} </p>\r\n                        <mat-chip-list class=\"chip-list\">\r\n                            <mat-chip selected\r\n                                      disabled\r\n                                      *ngFor=\"let key of objectKeys(dialogData.goodData.lineNumberWithCurrency)\">\r\n                                {{'L.No: ' + key + ' - Currency: ' + dialogData.goodData.lineNumberWithCurrency[key]}}\r\n                            </mat-chip>\r\n                        </mat-chip-list>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</mat-dialog-content>\r\n<mat-dialog-actions>\r\n\r\n    <button mat-button\r\n            (click)=\"onDiscardButtonClicked()\">Discard</button>\r\n    <span class=\"fill-space\"></span>\r\n    <button mat-button\r\n            disabled=\"{{this.dialogData.disableConfirmImport}}\"\r\n            (click)=\"onConfirmButtonClicked()\">Confirm Import</button>\r\n\r\n</mat-dialog-actions>"

/***/ }),

/***/ "./Client/app/financial/components/foreign-exchange/warning-error-msg-dialog/warning-error-msg-dialog.component.scss":
/*!***************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/foreign-exchange/warning-error-msg-dialog/warning-error-msg-dialog.component.scss ***!
  \***************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".mat-dialog-title {\n  margin-bottom: 16px; }\n\n.manual-import p {\n  font-weight: bold;\n  font-size: 14px; }\n\n.mat-divider {\n  margin-top: 16px;\n  margin-bottom: 16px; }\n\nbutton {\n  margin: 0; }\n"

/***/ }),

/***/ "./Client/app/financial/components/foreign-exchange/warning-error-msg-dialog/warning-error-msg-dialog.component.ts":
/*!*************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/foreign-exchange/warning-error-msg-dialog/warning-error-msg-dialog.component.ts ***!
  \*************************************************************************************************************************/
/*! exports provided: WarningErrorMsgDialogComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WarningErrorMsgDialogComponent", function() { return WarningErrorMsgDialogComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _shared_components_base_form_component_base_form_component_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../shared/components/base-form-component/base-form-component.component */ "./Client/app/shared/components/base-form-component/base-form-component.component.ts");
/* harmony import */ var _shared_entities_manualImportReport_entity__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../shared/entities/manualImportReport.entity */ "./Client/app/shared/entities/manualImportReport.entity.ts");
/* harmony import */ var _shared_services_form_configuration_provider_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../shared/services/form-configuration-provider.service */ "./Client/app/shared/services/form-configuration-provider.service.ts");
/* harmony import */ var _shared_services_snackbar_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../shared/services/snackbar.service */ "./Client/app/shared/services/snackbar.service.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};








var WarningErrorMsgDialogComponent = /** @class */ (function (_super) {
    __extends(WarningErrorMsgDialogComponent, _super);
    function WarningErrorMsgDialogComponent(thisDialogRef, formBuilder, route, snackbarService, data, formConfigurationProvider) {
        var _this = _super.call(this, formConfigurationProvider) || this;
        _this.thisDialogRef = thisDialogRef;
        _this.formBuilder = formBuilder;
        _this.route = route;
        _this.snackbarService = snackbarService;
        _this.data = data;
        _this.formConfigurationProvider = formConfigurationProvider;
        _this.isLoading = true;
        _this.objectKeys = Object.keys;
        _this.dialogData = data;
        return _this;
    }
    WarningErrorMsgDialogComponent.prototype.ngOnInit = function () {
        this.isLoading = false;
        this.goodDataCount = Object.keys(this.dialogData.goodData.lineNumberWithCurrency).length;
        this.getDataFromObjects();
    };
    WarningErrorMsgDialogComponent.prototype.getDataFromObjects = function () {
    };
    WarningErrorMsgDialogComponent.prototype.onDiscardButtonClicked = function () {
        this.thisDialogRef.close({ toBeImported: false });
    };
    WarningErrorMsgDialogComponent.prototype.onConfirmButtonClicked = function () {
        this.thisDialogRef.close({ toBeImported: true });
    };
    WarningErrorMsgDialogComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'atlas-warning-error-msg-dialog',
            template: __webpack_require__(/*! ./warning-error-msg-dialog.component.html */ "./Client/app/financial/components/foreign-exchange/warning-error-msg-dialog/warning-error-msg-dialog.component.html"),
            styles: [__webpack_require__(/*! ./warning-error-msg-dialog.component.scss */ "./Client/app/financial/components/foreign-exchange/warning-error-msg-dialog/warning-error-msg-dialog.component.scss")],
        }),
        __param(4, Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"])),
        __metadata("design:paramtypes", [_angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialogRef"],
            _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormBuilder"],
            _angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"],
            _shared_services_snackbar_service__WEBPACK_IMPORTED_MODULE_7__["SnackbarService"],
            _shared_entities_manualImportReport_entity__WEBPACK_IMPORTED_MODULE_5__["ManualImportReport"],
            _shared_services_form_configuration_provider_service__WEBPACK_IMPORTED_MODULE_6__["FormConfigurationProviderService"]])
    ], WarningErrorMsgDialogComponent);
    return WarningErrorMsgDialogComponent;
}(_shared_components_base_form_component_base_form_component_component__WEBPACK_IMPORTED_MODULE_4__["BaseFormComponent"]));



/***/ }),

/***/ "./Client/app/financial/components/home/home.component.html":
/*!******************************************************************!*\
  !*** ./Client/app/financial/components/home/home.component.html ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<atlas-financial-tab-group #tabGroup>\r\n</atlas-financial-tab-group>\r\n\r\n<div class=\"main-container\">\r\n    <mat-expansion-panel disabled=true>\r\n        <div fxLayout=\"row\"\r\n             fxLayoutAlign=\"center center\"\r\n             fxLayoutWrap\r\n             *ngIf=\"isLoading\"\r\n             class=\"loading\">\r\n            <mat-spinner color=\"accent\"></mat-spinner>\r\n\r\n        </div>\r\n    </mat-expansion-panel>\r\n</div>\r\n"

/***/ }),

/***/ "./Client/app/financial/components/home/home.component.scss":
/*!******************************************************************!*\
  !*** ./Client/app/financial/components/home/home.component.scss ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ""

/***/ }),

/***/ "./Client/app/financial/components/home/home.component.ts":
/*!****************************************************************!*\
  !*** ./Client/app/financial/components/home/home.component.ts ***!
  \****************************************************************/
/*! exports provided: HomeComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HomeComponent", function() { return HomeComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _core_services_authorization_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../core/services/authorization.service */ "./Client/app/core/services/authorization.service.ts");
/* harmony import */ var _tab_group_financial_tab_group_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../tab-group/financial-tab-group.component */ "./Client/app/financial/components/tab-group/financial-tab-group.component.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var HomeComponent = /** @class */ (function () {
    function HomeComponent(route, router, authorizationService) {
        this.route = route;
        this.router = router;
        this.authorizationService = authorizationService;
        this.isLoading = true;
    }
    HomeComponent.prototype.ngOnInit = function () {
        this.company = this.route.snapshot.paramMap.get('company');
        var numberOfTabs = this.tabGroupComponent.routeLinks.length;
        var i = 0;
        while (i < numberOfTabs) {
            var route = this.tabGroupComponent.routeLinks[i];
            var privileges = route.privilege ? route.privilege.split('.') : [];
            var privilege = privileges.length > 0 ? privileges[privileges.length - 1] : '';
            if (privilege !== '' && this.authorizationService.isPrivilegeAllowed(this.company, privilege)) {
                i = numberOfTabs;
                this.router.navigate([route.link]);
            }
            i = i + 1;
        }
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('tabGroup'),
        __metadata("design:type", _tab_group_financial_tab_group_component__WEBPACK_IMPORTED_MODULE_3__["FinancialTabGroupComponent"])
    ], HomeComponent.prototype, "tabGroupComponent", void 0);
    HomeComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'atlas-home',
            template: __webpack_require__(/*! ./home.component.html */ "./Client/app/financial/components/home/home.component.html"),
            styles: [__webpack_require__(/*! ./home.component.scss */ "./Client/app/financial/components/home/home.component.scss")],
        }),
        __metadata("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_1__["ActivatedRoute"],
            _angular_router__WEBPACK_IMPORTED_MODULE_1__["Router"],
            _core_services_authorization_service__WEBPACK_IMPORTED_MODULE_2__["AuthorizationService"]])
    ], HomeComponent);
    return HomeComponent;
}());



/***/ }),

/***/ "./Client/app/financial/components/interface/accounting-error-management/accounting-error-management.component.html":
/*!**************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/interface/accounting-error-management/accounting-error-management.component.html ***!
  \**************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div matToolbarHighlight\r\n     class=\"dark-tab header-tab mat-elevation-z6\">\r\n    <div class=\"header-tab-container\">\r\n        <div>\r\n            <mat-tab-group [selectedIndex]=\"tabIndex\"\r\n                           (selectedIndexChange)=onSelectedIndexChanged($event)>\r\n                <mat-tab label=\"Functional Errors\"></mat-tab>\r\n                <mat-tab label=\"Technical Errors\"></mat-tab>\r\n            </mat-tab-group>\r\n        </div>\r\n        <div class=\"content-tab\">\r\n            <mat-tab-group [selectedIndex]=\"tabIndex\">\r\n                <mat-tab>\r\n                    <atlas-functional-errors #functionalErrorsComponent></atlas-functional-errors>\r\n                </mat-tab>\r\n                <mat-tab>\r\n                    <atlas-technical-errors #technicalErrorsComponent></atlas-technical-errors>\r\n                </mat-tab>\r\n            </mat-tab-group>\r\n        </div>\r\n    </div>\r\n</div>"

/***/ }),

/***/ "./Client/app/financial/components/interface/accounting-error-management/accounting-error-management.component.scss":
/*!**************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/interface/accounting-error-management/accounting-error-management.component.scss ***!
  \**************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ""

/***/ }),

/***/ "./Client/app/financial/components/interface/accounting-error-management/accounting-error-management.component.ts":
/*!************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/interface/accounting-error-management/accounting-error-management.component.ts ***!
  \************************************************************************************************************************/
/*! exports provided: AccountingErrorManagementComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AccountingErrorManagementComponent", function() { return AccountingErrorManagementComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _shared_components_base_form_component_base_form_component_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../shared/components/base-form-component/base-form-component.component */ "./Client/app/shared/components/base-form-component/base-form-component.component.ts");
/* harmony import */ var _shared_enums_interface_status_enum__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../shared/enums/interface-status.enum */ "./Client/app/shared/enums/interface-status.enum.ts");
/* harmony import */ var _shared_services_form_configuration_provider_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../shared/services/form-configuration-provider.service */ "./Client/app/shared/services/form-configuration-provider.service.ts");
/* harmony import */ var _shared_services_http_services_accounting_interface_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../shared/services/http-services/accounting-interface.service */ "./Client/app/shared/services/http-services/accounting-interface.service.ts");
/* harmony import */ var _shared_services_title_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../shared/services/title.service */ "./Client/app/shared/services/title.service.ts");
/* harmony import */ var _functional_errors_functional_errors_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../functional-errors/functional-errors.component */ "./Client/app/financial/components/interface/functional-errors/functional-errors.component.ts");
/* harmony import */ var _technical_errors_technical_errors_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../technical-errors/technical-errors.component */ "./Client/app/financial/components/interface/technical-errors/technical-errors.component.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};










var AccountingErrorManagementComponent = /** @class */ (function (_super) {
    __extends(AccountingErrorManagementComponent, _super);
    function AccountingErrorManagementComponent(formConfigurationProvider, route, accountingInterfaceService, formBuilder, titleService) {
        var _this = _super.call(this, formConfigurationProvider) || this;
        _this.formConfigurationProvider = formConfigurationProvider;
        _this.route = route;
        _this.accountingInterfaceService = accountingInterfaceService;
        _this.formBuilder = formBuilder;
        _this.titleService = titleService;
        _this.tabIndex = 0;
        _this.formComponents = [];
        return _this;
    }
    AccountingErrorManagementComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.company = this.route.snapshot.paramMap.get('company');
        this.titleService.setTitle(this.route.snapshot.data.title);
        this.tabIndex = 0;
        this.route.queryParams.subscribe(function (params) {
            _this.tabIndex = Number(params['index']);
        });
        this.formComponents.push(this.functionalErrorsComponent, this.technicalErrorsComponent);
        this.getListOfErrors();
    };
    AccountingErrorManagementComponent.prototype.onSelectedIndexChanged = function (value) {
        this.tabIndex = value;
        if (this.tabIndex === 0) {
            this.functionalErrorsComponent.getListOfErrors();
        }
        else if (this.tabIndex === 1) {
            this.technicalErrorsComponent.getListOfErrors();
        }
    };
    AccountingErrorManagementComponent.prototype.getListOfErrors = function () {
        var _this = this;
        this.accountingInterfaceService.listErrorsForErrorManagement()
            .subscribe(function (data) {
            if (data) {
                var functionalErrors = data.value.filter(function (errorRows) {
                    return errorRows.interfaceStatusId === _shared_enums_interface_status_enum__WEBPACK_IMPORTED_MODULE_4__["InterfaceStatus"].NotPosted;
                });
                var technicalErrors = data.value.filter(function (errorRows) {
                    return errorRows.interfaceStatusId === _shared_enums_interface_status_enum__WEBPACK_IMPORTED_MODULE_4__["InterfaceStatus"].Rejected ||
                        errorRows.interfaceStatusId === _shared_enums_interface_status_enum__WEBPACK_IMPORTED_MODULE_4__["InterfaceStatus"].TransmitError;
                });
                _this.functionalErrorsComponent.getFunctionalErrors(functionalErrors);
                _this.technicalErrorsComponent.getTechnicalErrors(technicalErrors);
            }
        });
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])(_functional_errors_functional_errors_component__WEBPACK_IMPORTED_MODULE_8__["FunctionalErrorsComponent"]),
        __metadata("design:type", _functional_errors_functional_errors_component__WEBPACK_IMPORTED_MODULE_8__["FunctionalErrorsComponent"])
    ], AccountingErrorManagementComponent.prototype, "functionalErrorsComponent", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])(_technical_errors_technical_errors_component__WEBPACK_IMPORTED_MODULE_9__["TechnicalErrorsComponent"]),
        __metadata("design:type", _technical_errors_technical_errors_component__WEBPACK_IMPORTED_MODULE_9__["TechnicalErrorsComponent"])
    ], AccountingErrorManagementComponent.prototype, "technicalErrorsComponent", void 0);
    AccountingErrorManagementComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'atlas-accounting-error-management',
            template: __webpack_require__(/*! ./accounting-error-management.component.html */ "./Client/app/financial/components/interface/accounting-error-management/accounting-error-management.component.html"),
            styles: [__webpack_require__(/*! ./accounting-error-management.component.scss */ "./Client/app/financial/components/interface/accounting-error-management/accounting-error-management.component.scss")],
        }),
        __metadata("design:paramtypes", [_shared_services_form_configuration_provider_service__WEBPACK_IMPORTED_MODULE_5__["FormConfigurationProviderService"],
            _angular_router__WEBPACK_IMPORTED_MODULE_2__["ActivatedRoute"],
            _shared_services_http_services_accounting_interface_service__WEBPACK_IMPORTED_MODULE_6__["AccountingInterfaceService"],
            _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormBuilder"],
            _shared_services_title_service__WEBPACK_IMPORTED_MODULE_7__["TitleService"]])
    ], AccountingErrorManagementComponent);
    return AccountingErrorManagementComponent;
}(_shared_components_base_form_component_base_form_component_component__WEBPACK_IMPORTED_MODULE_3__["BaseFormComponent"]));



/***/ }),

/***/ "./Client/app/financial/components/interface/functional-errors/functional-errors.component.html":
/*!******************************************************************************************************!*\
  !*** ./Client/app/financial/components/interface/functional-errors/functional-errors.component.html ***!
  \******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"main-container\">\r\n    <mat-card>\r\n        <div *ngIf=\"isLoading\">\r\n            <div fxLayout=\"row\"\r\n                 fxLayoutAlign=\"center center\"\r\n                 fxLayoutWrap\r\n                 class=\"loading\">\r\n                <mat-spinner color=\"accent\"></mat-spinner>\r\n            </div>\r\n        </div>\r\n        <div ag-grid=\"interfaceErrorsGridOptions\"\r\n             class=\"ag-theme-material pointer-cursor\">\r\n            <ag-grid-angular style=\"width: 100%; height:100%;\"\r\n                             class=\"ag-theme-material\"\r\n                             [rowData]=\"interfaceErrorsGridRows\"\r\n                             [columnDefs]=\"interfaceErrorsGridColumns\"\r\n                             domLayout=\"autoHeight\"\r\n                             (gridReady)=\"onGridReady($event)\"\r\n                             rowSelection='multiple'\r\n                             [singleClickEdit]=\"true\"\r\n                             [suppressRowClickSelection]=\"true\"\r\n                             (rowSelected)=\"onSelectionChanged($event)\"\r\n                             [pagination]=\"true\"\r\n                             [paginationPageSize]=\"10\"\r\n                             [enableSorting]=\"true\"\r\n                             [enableColResize]=\"true\"\r\n                             enableFilter\r\n                             [rowHeight]=atlasAgGridParam.rowHeight>\r\n            </ag-grid-angular>\r\n        </div>\r\n    </mat-card>\r\n    <div fxLayout=\"row\"\r\n         fxLayoutAlign=\"space-between center\"\r\n         class=\"button-details\">\r\n        <button mat-button\r\n                (click)=\"onRefreshButtonClicked()\">\r\n            REFRESH\r\n        </button>\r\n        <div fxLayout=\"column\"\r\n             fxLayoutAlign=\"start end\">\r\n            <div fxLayout=\"row\"\r\n                 fxLayoutAlign=\"end start\">\r\n                <button mat-raised-button\r\n                        *ifAuthorized=\"'Financials.InterfaceErrors.TagCancel', company:company, level: PermissionLevels.ReadWrite\"\r\n                        (click)=\"onCancelButtonClicked()\">\r\n                    TAG TO CANCEL\r\n                </button>\r\n                <button mat-raised-button\r\n                        *ifAuthorized=\"'Financials.InterfaceErrors.ResendNotPosted', company:company, level: PermissionLevels.ReadWrite\"\r\n                        (click)=\"onResendButtonClicked()\">\r\n                    TAG TO RESEND\r\n                </button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>"

/***/ }),

/***/ "./Client/app/financial/components/interface/functional-errors/functional-errors.component.scss":
/*!******************************************************************************************************!*\
  !*** ./Client/app/financial/components/interface/functional-errors/functional-errors.component.scss ***!
  \******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ""

/***/ }),

/***/ "./Client/app/financial/components/interface/functional-errors/functional-errors.component.ts":
/*!****************************************************************************************************!*\
  !*** ./Client/app/financial/components/interface/functional-errors/functional-errors.component.ts ***!
  \****************************************************************************************************/
/*! exports provided: FunctionalErrorsComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FunctionalErrorsComponent", function() { return FunctionalErrorsComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _shared_components_base_form_component_base_form_component_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../shared/components/base-form-component/base-form-component.component */ "./Client/app/shared/components/base-form-component/base-form-component.component.ts");
/* harmony import */ var _shared_enums_interface_status_enum__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../shared/enums/interface-status.enum */ "./Client/app/shared/enums/interface-status.enum.ts");
/* harmony import */ var _shared_enums_permission_level_enum__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../shared/enums/permission-level.enum */ "./Client/app/shared/enums/permission-level.enum.ts");
/* harmony import */ var _shared_services_ag_grid_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../shared/services/ag-grid.service */ "./Client/app/shared/services/ag-grid.service.ts");
/* harmony import */ var _shared_services_form_configuration_provider_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../shared/services/form-configuration-provider.service */ "./Client/app/shared/services/form-configuration-provider.service.ts");
/* harmony import */ var _shared_services_http_services_accounting_interface_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../shared/services/http-services/accounting-interface.service */ "./Client/app/shared/services/http-services/accounting-interface.service.ts");
/* harmony import */ var _shared_services_snackbar_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../shared/services/snackbar.service */ "./Client/app/shared/services/snackbar.service.ts");
/* harmony import */ var _shared_services_ui_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../shared/services/ui.service */ "./Client/app/shared/services/ui.service.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};










var FunctionalErrorsComponent = /** @class */ (function (_super) {
    __extends(FunctionalErrorsComponent, _super);
    function FunctionalErrorsComponent(formConfigurationProvider, accountingInterfaceService, route, uiService, snackbarService, gridService) {
        var _this = _super.call(this, formConfigurationProvider) || this;
        _this.formConfigurationProvider = formConfigurationProvider;
        _this.accountingInterfaceService = accountingInterfaceService;
        _this.route = route;
        _this.uiService = uiService;
        _this.snackbarService = snackbarService;
        _this.gridService = gridService;
        _this.interfaceErrorsGridOptions = {};
        _this.componentId = 'interfaceFunctionalErrors';
        _this.isAnyRowSelected = false;
        _this.PermissionLevels = _shared_enums_permission_level_enum__WEBPACK_IMPORTED_MODULE_4__["PermissionLevels"];
        _this.atlasAgGridParam = _this.gridService.getAgGridParam();
        return _this;
    }
    FunctionalErrorsComponent.prototype.ngOnInit = function () {
        this.company = this.route.snapshot.paramMap.get('company');
        this.isLoading = true;
    };
    FunctionalErrorsComponent.prototype.onGridReady = function (params) {
        params.columnDefs = this.interfaceErrorsGridColumns;
        this.interfaceErrorsGridOptions = params;
        this.gridApi = params.api;
        this.gridColumnApi = params.columnApi;
        this.gridApi.showNoRowsOverlay();
        this.autoSizeGrid();
    };
    FunctionalErrorsComponent.prototype.onGridSizeChanged = function (params) {
        this.autoSizeGrid();
    };
    FunctionalErrorsComponent.prototype.autoSizeGrid = function () {
        if (this.gridColumnApi) {
            var allColumnIds_1 = [];
            if (this.interfaceErrorsGridColumns) {
                this.interfaceErrorsGridColumns.forEach(function (columnDefs) {
                    allColumnIds_1.push(columnDefs.field);
                });
            }
            this.gridColumnApi.autoSizeColumns(allColumnIds_1);
        }
    };
    FunctionalErrorsComponent.prototype.initializeGridColumns = function () {
        this.interfaceErrorsGridColumns = [
            {
                headerName: 'Document Reference',
                field: 'documentReference',
                colId: 'documentReference',
                hide: false,
                headerCheckboxSelection: true,
                checkboxSelection: true,
            },
            {
                headerName: 'TransactionDocumentId',
                field: 'transactionDocumentId',
                colId: 'transactionDocumentId',
                hide: true,
            },
            {
                headerName: 'AccountingId',
                field: 'accountingId',
                colId: 'accountingId',
                hide: true,
            },
            {
                headerName: 'TransactionDocumentTypeId',
                field: 'transactionDocumentTypeId',
                colId: 'transactionDocumentTypeId',
                hide: true,
            },
            {
                headerName: 'Sent Date to BO',
                field: 'boInterfaceDate',
                colId: 'boInterfaceDate',
            },
            {
                headerName: 'Received Date from BO',
                field: 'backInterfaceDate',
                colId: 'backInterfaceDate',
                valueFormatter: this.uiService.dateFormatter,
                cellEditor: 'atrDate',
                hide: false,
            },
            {
                headerName: 'Profile',
                field: 'profile',
                colId: 'profile',
                hide: false,
            },
            {
                headerName: 'BO Doc ID',
                field: 'boDocID',
                colId: 'boDocID',
                hide: false,
            },
            {
                headerName: 'BO Journal ID',
                field: 'boJournalID',
                colId: 'boJournalID',
                hide: false,
            },
            {
                headerName: 'InterfaceStatusId',
                field: 'interfaceStatusId',
                colId: 'interfaceStatusId',
                hide: true,
            },
            {
                headerName: 'Status',
                field: 'status',
                colId: 'status',
                hide: true,
            },
            {
                headerName: 'Accrual Number',
                field: 'accrualNumber',
                colId: 'accrualNumber',
                hide: false,
            },
            {
                headerName: 'Error Description',
                field: 'errorDescription',
                colId: 'errorDescription',
                hide: false,
            },
        ];
    };
    FunctionalErrorsComponent.prototype.getFunctionalErrors = function (data) {
        if (data) {
            this.interfaceErrorsGridRows = data;
            this.initializeGridColumns();
            this.isLoading = false;
        }
    };
    FunctionalErrorsComponent.prototype.onSelectionChanged = function (event) {
        var selectedRows = this.gridApi.getSelectedRows();
        this.isAnyRowSelected = selectedRows.length > 0;
    };
    FunctionalErrorsComponent.prototype.onRefreshButtonClicked = function () {
        this.getListOfErrors();
        this.snackbarService.informationSnackBar('Grid is refreshed with the latest data');
    };
    FunctionalErrorsComponent.prototype.getListOfErrors = function () {
        var _this = this;
        this.accountingInterfaceService.listErrorsForErrorManagement()
            .subscribe(function (errorData) {
            if (errorData) {
                var functionalErrors = errorData.value.filter(function (errorRows) {
                    return errorRows.interfaceStatusId === _shared_enums_interface_status_enum__WEBPACK_IMPORTED_MODULE_3__["InterfaceStatus"].NotPosted;
                });
                _this.getFunctionalErrors(functionalErrors);
            }
        });
    };
    FunctionalErrorsComponent.prototype.onCancelButtonClicked = function () {
        this.updateAccountingErrorStatus(_shared_enums_interface_status_enum__WEBPACK_IMPORTED_MODULE_3__["InterfaceStatus"][_shared_enums_interface_status_enum__WEBPACK_IMPORTED_MODULE_3__["InterfaceStatus"].NotInterfaced]);
    };
    FunctionalErrorsComponent.prototype.onResendButtonClicked = function () {
        this.updateAccountingErrorStatus(_shared_enums_interface_status_enum__WEBPACK_IMPORTED_MODULE_3__["InterfaceStatus"][_shared_enums_interface_status_enum__WEBPACK_IMPORTED_MODULE_3__["InterfaceStatus"].InterfaceReady]);
    };
    FunctionalErrorsComponent.prototype.updateAccountingErrorStatus = function (status) {
        var _this = this;
        if (!this.isAnyRowSelected) {
            this.snackbarService.informationSnackBar('Select at least one accounting error to resend');
        }
        else {
            var selectedRows = this.gridApi.getSelectedRows();
            this.updateInterfaceError = selectedRows.map(function (item) {
                return {
                    documentReference: item.documentReference, transactionDocumentId: item.transactionDocumentId,
                    accountingId: item.accountingId, transactionDocumentTypeId: item.transactionDocumentTypeId,
                };
            });
            this.isLoading = true;
            this.accountingInterfaceService.updateAccountingErrorStatus(this.updateInterfaceError, status)
                .subscribe(function (data) {
                if (data) {
                    _this.accountingInterfaceService.listErrorsForErrorManagement()
                        .subscribe(function (errorData) {
                        if (errorData) {
                            var functionalErrors = errorData.value.filter(function (errorRows) {
                                return errorRows.interfaceStatusId === _shared_enums_interface_status_enum__WEBPACK_IMPORTED_MODULE_3__["InterfaceStatus"].NotPosted;
                            });
                            _this.getFunctionalErrors(functionalErrors);
                        }
                        if (status === _shared_enums_interface_status_enum__WEBPACK_IMPORTED_MODULE_3__["InterfaceStatus"][_shared_enums_interface_status_enum__WEBPACK_IMPORTED_MODULE_3__["InterfaceStatus"].Rejected]) {
                            _this.snackbarService.informationSnackBar('Document status is updated to Rejected');
                        }
                        else {
                            _this.snackbarService.informationSnackBar('Document successfully sent to accounting interface');
                        }
                    });
                }
            });
        }
    };
    FunctionalErrorsComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'atlas-functional-errors',
            template: __webpack_require__(/*! ./functional-errors.component.html */ "./Client/app/financial/components/interface/functional-errors/functional-errors.component.html"),
            styles: [__webpack_require__(/*! ./functional-errors.component.scss */ "./Client/app/financial/components/interface/functional-errors/functional-errors.component.scss")],
        }),
        __metadata("design:paramtypes", [_shared_services_form_configuration_provider_service__WEBPACK_IMPORTED_MODULE_6__["FormConfigurationProviderService"],
            _shared_services_http_services_accounting_interface_service__WEBPACK_IMPORTED_MODULE_7__["AccountingInterfaceService"],
            _angular_router__WEBPACK_IMPORTED_MODULE_1__["ActivatedRoute"],
            _shared_services_ui_service__WEBPACK_IMPORTED_MODULE_9__["UiService"],
            _shared_services_snackbar_service__WEBPACK_IMPORTED_MODULE_8__["SnackbarService"],
            _shared_services_ag_grid_service__WEBPACK_IMPORTED_MODULE_5__["AgGridService"]])
    ], FunctionalErrorsComponent);
    return FunctionalErrorsComponent;
}(_shared_components_base_form_component_base_form_component_component__WEBPACK_IMPORTED_MODULE_2__["BaseFormComponent"]));



/***/ }),

/***/ "./Client/app/financial/components/interface/technical-errors/technical-errors.component.html":
/*!****************************************************************************************************!*\
  !*** ./Client/app/financial/components/interface/technical-errors/technical-errors.component.html ***!
  \****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"main-container\">\r\n    <mat-card>\r\n        <div *ngIf=\"isLoading\">\r\n            <div fxLayout=\"row\"\r\n                 fxLayoutAlign=\"center center\"\r\n                 fxLayoutWrap\r\n                 class=\"loading\">\r\n                <mat-spinner color=\"accent\"></mat-spinner>\r\n            </div>\r\n        </div>\r\n        <div ag-grid=\"interfaceErrorsGridOptions\"\r\n             class=\"ag-theme-material pointer-cursor\">\r\n            <ag-grid-angular style=\"width: 100%; height:100%;\"\r\n                             class=\"ag-theme-material\"\r\n                             [rowData]=\"interfaceErrorsGridRows\"\r\n                             [columnDefs]=\"interfaceErrorsGridColumns\"\r\n                             domLayout=\"autoHeight\"\r\n                             (gridReady)=\"onGridReady($event)\"\r\n                             rowSelection='multiple'\r\n                             [singleClickEdit]=\"true\"\r\n                             [suppressRowClickSelection]=\"true\"\r\n                             (rowSelected)=\"onSelectionChanged($event)\"\r\n                             [pagination]=\"true\"\r\n                             [paginationPageSize]=\"10\"\r\n                             [enableSorting]=\"true\"\r\n                             [enableColResize]=\"true\"\r\n                             enableFilter\r\n                             [rowHeight]=atlasAgGridParam.rowHeight>\r\n            </ag-grid-angular>\r\n        </div>\r\n    </mat-card>\r\n    <div fxLayout=\"row\"\r\n         fxLayoutAlign=\"space-between center\"\r\n         class=\"button-details\">\r\n        <button mat-button\r\n                (click)=\"onRefreshButtonClicked()\">\r\n            REFRESH\r\n        </button>\r\n        <div fxLayout=\"column\"\r\n             fxLayoutAlign=\"start end\">\r\n            <div fxLayout=\"row\"\r\n                 fxLayoutAlign=\"end start\">\r\n                <button mat-raised-button\r\n                        *ifAuthorized=\"'Financials.InterfaceErrors.TagCancel', company:company, level: PermissionLevels.ReadWrite\"\r\n                        (click)=\"onCancelButtonClicked()\">\r\n                    TAG TO CANCEL\r\n                </button>\r\n                <button mat-raised-button\r\n                        *ifAuthorized=\"'Financials.InterfaceErrors.ResendError', company:company, level: PermissionLevels.ReadWrite\"\r\n                        (click)=\"onResendButtonClicked()\">\r\n                    TAG TO RESEND\r\n                </button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>"

/***/ }),

/***/ "./Client/app/financial/components/interface/technical-errors/technical-errors.component.scss":
/*!****************************************************************************************************!*\
  !*** ./Client/app/financial/components/interface/technical-errors/technical-errors.component.scss ***!
  \****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ""

/***/ }),

/***/ "./Client/app/financial/components/interface/technical-errors/technical-errors.component.ts":
/*!**************************************************************************************************!*\
  !*** ./Client/app/financial/components/interface/technical-errors/technical-errors.component.ts ***!
  \**************************************************************************************************/
/*! exports provided: TechnicalErrorsComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TechnicalErrorsComponent", function() { return TechnicalErrorsComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _shared_components_base_form_component_base_form_component_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../shared/components/base-form-component/base-form-component.component */ "./Client/app/shared/components/base-form-component/base-form-component.component.ts");
/* harmony import */ var _shared_enums_interface_status_enum__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../shared/enums/interface-status.enum */ "./Client/app/shared/enums/interface-status.enum.ts");
/* harmony import */ var _shared_enums_permission_level_enum__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../shared/enums/permission-level.enum */ "./Client/app/shared/enums/permission-level.enum.ts");
/* harmony import */ var _shared_services_ag_grid_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../shared/services/ag-grid.service */ "./Client/app/shared/services/ag-grid.service.ts");
/* harmony import */ var _shared_services_form_configuration_provider_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../shared/services/form-configuration-provider.service */ "./Client/app/shared/services/form-configuration-provider.service.ts");
/* harmony import */ var _shared_services_http_services_accounting_interface_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../shared/services/http-services/accounting-interface.service */ "./Client/app/shared/services/http-services/accounting-interface.service.ts");
/* harmony import */ var _shared_services_snackbar_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../shared/services/snackbar.service */ "./Client/app/shared/services/snackbar.service.ts");
/* harmony import */ var _shared_services_ui_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../shared/services/ui.service */ "./Client/app/shared/services/ui.service.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};










var TechnicalErrorsComponent = /** @class */ (function (_super) {
    __extends(TechnicalErrorsComponent, _super);
    function TechnicalErrorsComponent(formConfigurationProvider, accountingInterfaceService, route, uiService, snackbarService, gridService) {
        var _this = _super.call(this, formConfigurationProvider) || this;
        _this.formConfigurationProvider = formConfigurationProvider;
        _this.accountingInterfaceService = accountingInterfaceService;
        _this.route = route;
        _this.uiService = uiService;
        _this.snackbarService = snackbarService;
        _this.gridService = gridService;
        _this.interfaceErrorsGridOptions = {};
        _this.componentId = 'interfaceTechnicalErrors';
        _this.isAnyRowSelected = false;
        _this.PermissionLevels = _shared_enums_permission_level_enum__WEBPACK_IMPORTED_MODULE_4__["PermissionLevels"];
        _this.atlasAgGridParam = _this.gridService.getAgGridParam();
        return _this;
    }
    TechnicalErrorsComponent.prototype.ngOnInit = function () {
        this.company = this.route.snapshot.paramMap.get('company');
        this.isLoading = true;
        this.initializeGridColumns();
    };
    TechnicalErrorsComponent.prototype.onGridReady = function (params) {
        params.columnDefs = this.interfaceErrorsGridColumns;
        this.interfaceErrorsGridOptions = params;
        this.gridApi = params.api;
        this.gridColumnApi = params.columnApi;
        this.gridApi.showNoRowsOverlay();
        this.autoSizeGrid();
    };
    TechnicalErrorsComponent.prototype.onGridSizeChanged = function (params) {
        this.autoSizeGrid();
    };
    TechnicalErrorsComponent.prototype.autoSizeGrid = function () {
        if (this.gridColumnApi) {
            var allColumnIds_1 = [];
            if (this.interfaceErrorsGridColumns) {
                this.interfaceErrorsGridColumns.forEach(function (columnDefs) {
                    allColumnIds_1.push(columnDefs.field);
                });
            }
            this.gridColumnApi.autoSizeColumns(allColumnIds_1);
        }
    };
    TechnicalErrorsComponent.prototype.initializeGridColumns = function () {
        this.interfaceErrorsGridColumns = [
            {
                headerName: 'Document Reference',
                field: 'documentReference',
                colId: 'documentReference',
                hide: false,
                headerCheckboxSelection: true,
                checkboxSelection: true,
                minWidth: 200,
                maxWidth: 200,
            },
            {
                headerName: 'TransactionDocumentId',
                field: 'transactionDocumentId',
                colId: 'transactionDocumentId',
                hide: true,
            },
            {
                headerName: 'AccountingId',
                field: 'accountingId',
                colId: 'accountingId',
                hide: true,
            },
            {
                headerName: 'TransactionDocumentTypeId',
                field: 'transactionDocumentTypeId',
                colId: 'transactionDocumentTypeId',
                hide: true,
            },
            {
                headerName: 'Sent Date to BO',
                field: 'boInterfaceDate',
                colId: 'boInterfaceDate',
                hide: false,
            },
            {
                headerName: 'Received Date from BO',
                field: 'backInterfaceDate',
                colId: 'backInterfaceDate',
                valueFormatter: this.uiService.dateFormatter,
                cellEditor: 'atrDate',
                hide: false,
            },
            {
                headerName: 'Profile',
                field: 'profile',
                colId: 'profile',
                hide: false,
            },
            {
                headerName: 'BO Doc ID',
                field: 'boDocID',
                colId: 'boDocID',
                hide: false,
            },
            {
                headerName: 'BO Journal ID',
                field: 'boJournalID',
                colId: 'boJournalID',
                hide: false,
            },
            {
                headerName: 'InterfaceStatusId',
                field: 'interfaceStatusId',
                colId: 'interfaceStatusId',
                hide: true,
            },
            {
                headerName: 'Status',
                field: 'status',
                colId: 'status',
                hide: true,
            },
            {
                headerName: 'Accrual Number',
                field: 'accrualNumber',
                colId: 'accrualNumber',
                hide: false,
            },
            {
                headerName: 'Error Description',
                field: 'errorDescription',
                colId: 'errorDescription',
                hide: false,
            },
        ];
    };
    TechnicalErrorsComponent.prototype.getTechnicalErrors = function (data) {
        if (data) {
            this.interfaceErrorsGridRows = data;
            this.autoSizeGrid();
            this.isLoading = false;
        }
    };
    TechnicalErrorsComponent.prototype.onSelectionChanged = function (event) {
        var selectedRows = this.gridApi.getSelectedRows();
        this.isAnyRowSelected = selectedRows.length > 0;
    };
    TechnicalErrorsComponent.prototype.onRefreshButtonClicked = function () {
        this.getListOfErrors();
        this.snackbarService.informationSnackBar('Grid is refreshed with the latest data');
    };
    TechnicalErrorsComponent.prototype.getListOfErrors = function () {
        var _this = this;
        this.accountingInterfaceService.listErrorsForErrorManagement()
            .subscribe(function (errorData) {
            if (errorData) {
                var technicalErrors = errorData.value.filter(function (errorRows) {
                    return errorRows.interfaceStatusId === _shared_enums_interface_status_enum__WEBPACK_IMPORTED_MODULE_3__["InterfaceStatus"].Rejected ||
                        errorRows.interfaceStatusId === _shared_enums_interface_status_enum__WEBPACK_IMPORTED_MODULE_3__["InterfaceStatus"].TransmitError;
                });
                _this.getTechnicalErrors(technicalErrors);
            }
        });
    };
    TechnicalErrorsComponent.prototype.onCancelButtonClicked = function () {
        this.updateAccountingErrorStatus(_shared_enums_interface_status_enum__WEBPACK_IMPORTED_MODULE_3__["InterfaceStatus"][_shared_enums_interface_status_enum__WEBPACK_IMPORTED_MODULE_3__["InterfaceStatus"].NotInterfaced]);
    };
    TechnicalErrorsComponent.prototype.onResendButtonClicked = function () {
        this.updateAccountingErrorStatus(_shared_enums_interface_status_enum__WEBPACK_IMPORTED_MODULE_3__["InterfaceStatus"][_shared_enums_interface_status_enum__WEBPACK_IMPORTED_MODULE_3__["InterfaceStatus"].InterfaceReady]);
    };
    TechnicalErrorsComponent.prototype.updateAccountingErrorStatus = function (status) {
        var _this = this;
        if (!this.isAnyRowSelected) {
            this.snackbarService.informationSnackBar('Select at least one accounting error to resend');
        }
        else {
            var selectedRows = this.gridApi.getSelectedRows();
            this.updateInterfaceError = selectedRows.map(function (item) {
                return {
                    documentReference: item.documentReference, transactionDocumentId: item.transactionDocumentId,
                    accountingId: item.accountingId, transactionDocumentTypeId: item.transactionDocumentTypeId,
                };
            });
            this.isLoading = true;
            this.accountingInterfaceService.updateAccountingErrorStatus(this.updateInterfaceError, status)
                .subscribe(function (data) {
                if (data) {
                    _this.accountingInterfaceService.listErrorsForErrorManagement()
                        .subscribe(function (errorData) {
                        if (errorData) {
                            var technicalErrors = errorData.value.filter(function (errorRows) {
                                return errorRows.interfaceStatusId === _shared_enums_interface_status_enum__WEBPACK_IMPORTED_MODULE_3__["InterfaceStatus"].Rejected ||
                                    errorRows.interfaceStatusId === _shared_enums_interface_status_enum__WEBPACK_IMPORTED_MODULE_3__["InterfaceStatus"].TransmitError;
                            });
                            _this.getTechnicalErrors(technicalErrors);
                        }
                        if (status === _shared_enums_interface_status_enum__WEBPACK_IMPORTED_MODULE_3__["InterfaceStatus"][_shared_enums_interface_status_enum__WEBPACK_IMPORTED_MODULE_3__["InterfaceStatus"].Rejected]) {
                            _this.snackbarService.informationSnackBar('Document status is updated to Rejected');
                        }
                        else {
                            _this.snackbarService.informationSnackBar('Document successfully sent to accounting interface');
                        }
                    });
                }
            });
        }
    };
    TechnicalErrorsComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'atlas-technical-errors',
            template: __webpack_require__(/*! ./technical-errors.component.html */ "./Client/app/financial/components/interface/technical-errors/technical-errors.component.html"),
            styles: [__webpack_require__(/*! ./technical-errors.component.scss */ "./Client/app/financial/components/interface/technical-errors/technical-errors.component.scss")],
        }),
        __metadata("design:paramtypes", [_shared_services_form_configuration_provider_service__WEBPACK_IMPORTED_MODULE_6__["FormConfigurationProviderService"],
            _shared_services_http_services_accounting_interface_service__WEBPACK_IMPORTED_MODULE_7__["AccountingInterfaceService"],
            _angular_router__WEBPACK_IMPORTED_MODULE_1__["ActivatedRoute"],
            _shared_services_ui_service__WEBPACK_IMPORTED_MODULE_9__["UiService"],
            _shared_services_snackbar_service__WEBPACK_IMPORTED_MODULE_8__["SnackbarService"],
            _shared_services_ag_grid_service__WEBPACK_IMPORTED_MODULE_5__["AgGridService"]])
    ], TechnicalErrorsComponent);
    return TechnicalErrorsComponent;
}(_shared_components_base_form_component_base_form_component_component__WEBPACK_IMPORTED_MODULE_2__["BaseFormComponent"]));



/***/ }),

/***/ "./Client/app/financial/components/posting-process/accounting-creation/accounting-creation.component.html":
/*!****************************************************************************************************************!*\
  !*** ./Client/app/financial/components/posting-process/accounting-creation/accounting-creation.component.html ***!
  \****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<header class=\"header-background-creation\">\r\n    <div class=\"header-content\">\r\n        <div fxLayout=\"row\"\r\n             fxLayoutAlign=\"center center\"\r\n             fxLayoutWrap\r\n             *ngIf=\"isLoadingassignOnLoad\"\r\n             class=\"loading\">\r\n            <mat-spinner color=\"accent\"></mat-spinner>\r\n        </div>\r\n        <div class=\"create-toggle-control\"\r\n             *ngIf=\"!isLoadingassignOnLoad\">\r\n            <mat-button-toggle-group *ngIf=\"!isSummaryView\"\r\n                                     name=\"toggleStyle\"\r\n                                     aria-label=\"Contract Document\"\r\n                                     [formControl]='accountingEntryTypeCtrl'\r\n                                     [value]=\"accountingDocTypeSelected\"\r\n                                     [disabled]=\"isSummaryView\"\r\n                                     (change)=\"accountingEntryTypeChanged($event)\">\r\n                <mat-button-toggle value=\"regularJournal\">Regular Journal</mat-button-toggle>\r\n                <mat-button-toggle value=\"accrual\">Accrual</mat-button-toggle>\r\n                <mat-button-toggle value=\"mtm\">MTM</mat-button-toggle>\r\n            </mat-button-toggle-group>\r\n        </div>\r\n        <div *ngIf=\"!isLoadingassignOnLoad\"\r\n             class=\"create-accounting-document-fields\">\r\n            <div fxLayout=\"row\"\r\n                 fxLayoutGap=\"8px\"\r\n                 fxLayoutAlign=\"left start\">\r\n                <div class=\"custom-form\"\r\n                     [class.isEmpty]=\"!docDateFormCtrl.value\"\r\n                     [class.required-field]=\"docDateFormCtrl.isRequired\"\r\n                     fxFlex=\"15\">\r\n                    <mat-form-field>\r\n                        <input matInput\r\n                               [matDatepicker]=\"documentDatePicker\"\r\n                               placeholder=\"Document date\"\r\n                               [matTooltip]=\"'Document date'\"\r\n                               [required]=\"docDateFormCtrl.isRequired\"\r\n                               [disabled]=\"isSummaryView\"\r\n                               (dateChange)=\"documentDateChanged($event)\"\r\n                               [formControl]='docDateFormCtrl'\r\n                               autocomplete=\"off\">\r\n                        <mat-datepicker-toggle matSuffix\r\n                                               [for]=\"documentDatePicker\"></mat-datepicker-toggle>\r\n                        <mat-datepicker #documentDatePicker></mat-datepicker>\r\n                        <mat-error *ngIf=\"docDateFormCtrl.hasError('required')\">\r\n                            This field is required\r\n                        </mat-error>\r\n                        <mat-hint *ngIf=\"docDateFormCtrl.isRequired\">\r\n                            Required *\r\n                        </mat-hint>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"custom-form\"\r\n                    [class.isEmpty]=\"!valueDateFormCtrl.value\"\r\n                    [class.required-field]=\"valueDateFormCtrl.isRequired\"\r\n                    fxFlex=\"15\">\r\n                    <mat-form-field>\r\n                        <input matInput\r\n                            [matDatepicker]=\"valueDatePicker\"\r\n                            placeholder=\"Value Date\"\r\n                            value=\"valueDatePicker\"\r\n                            [disabled]=\"isSummaryView\"\r\n                            [formControl]='valueDateFormCtrl'\r\n                            autocomplete=\"off\">\r\n                        <mat-datepicker-toggle matSuffix\r\n                                            [for]=\"valueDatePicker\"></mat-datepicker-toggle>\r\n                        <mat-datepicker #valueDatePicker></mat-datepicker>\r\n                        <mat-hint class=\"value-date-warning\"\r\n                                *ngIf=\"isValueDateBeforeDocumentDate()\">Value date is before the document date\r\n                        </mat-hint>\r\n                        <mat-hint *ngIf=\"valueDateFormCtrl.isRequired\">\r\n                            Required *\r\n                        </mat-hint>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"custom-form\"\r\n                     fxFlex=\"15\"\r\n                     [class.isEmpty]=\"!accPeriodFormCtrl.value\"\r\n                     [class.required-field]=\"accPeriodFormCtrl.isRequired\">\r\n                    <atlas-month-date-picker #monthDatePicker\r\n                                             class=\"month-date-picker\"\r\n                                             [fieldControl]=\"accPeriodFormCtrl\"\r\n                                             isEditable=true\r\n                                             [disabled]=\"isSummaryView\"\r\n                                             (monthChanged)=\"accountPeriodChanged($event)\"\r\n                                             [label]=\"'Accounting Period'\">\r\n                    </atlas-month-date-picker>\r\n                </div>\r\n                <atlas-masterdata-user-preferences-input fxFlex=\"15\"\r\n                                                         class=\"contextual-search-for-currency\"\r\n                                                         [isEditable]=\"!isSummaryView\"\r\n                                                         [fieldControl]=\"currencyCtrl\"\r\n                                                         [options]=\"filteredCurrencyList\"\r\n                                                         label=\"Currency\"\r\n                                                         displayProperty=\"currencyCode\"\r\n                                                         tooltip=\"description\"\r\n                                                         [selectProperties]=\"['currencyCode', 'description']\"\r\n                                                         [errorMap]=\"currencyErrorMap\"\r\n                                                         lightBoxTitle=\"Results for Currency\"\r\n                                                         gridId=\"currenciesGrid\">\r\n                </atlas-masterdata-user-preferences-input>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div fxFlex=\"50\"\r\n         fxLayout=\"row\"\r\n         fxAlignLayout=\"start end\">\r\n        <span class=\"fill-space\"></span>\r\n        <div>\r\n            <atlas-accounting-file-upload-dialog-box #accountingFileUploadDialogBoxComponent\r\n                                                     [docType]=\"selectedDocType\"\r\n                                                     (documentSelected)=\"ondocumentSelected($event)\">\r\n            </atlas-accounting-file-upload-dialog-box>\r\n        </div>\r\n    </div>\r\n</header>\r\n\r\n<mat-toolbar class=\"menu-bar\"\r\n             *ngIf=\"!isLoadingassignOnLoad && isSummaryView\">\r\n    <div>\r\n        <button mat-menu-item\r\n                [matMenuTriggerFor]=\"exportMenu\">\r\n            <mat-icon>import_export</mat-icon><span>Export</span>\r\n        </button>\r\n        <mat-menu #exportMenu=\"matMenu\">\r\n            <button mat-menu-item\r\n                    (click)=\"onExportButtonClickedAsExcel()\">\r\n                <mat-icon>import_export</mat-icon><span>Export as Excel</span>\r\n            </button>\r\n            <button mat-menu-item\r\n                    (click)=\"onExportButtonClickedAsCSV()\">\r\n                <mat-icon>import_export</mat-icon><span>Export as CSV</span>\r\n            </button>\r\n        </mat-menu>\r\n    </div>\r\n</mat-toolbar>\r\n\r\n<div class=\"main-container\">\r\n    <div *ngIf=\"!isSummaryView &&  !isLoadingassignOnLoad\"\r\n         fxLayout=\"row\"\r\n         fxLayoutAlign=\"start center\"\r\n         fxLayoutGap=\"10px\"\r\n         class=\"add-line-container\">\r\n        <div fxLayout=\"column\"\r\n             fxLayoutAlign=\"start start\">\r\n            <h6>Add new lines:</h6>\r\n        </div>\r\n        <div fxLayout=\"column\"\r\n             fxLayoutAlign=\"start start\"\r\n             fxFlex=\"2\">\r\n            <mat-form-field>\r\n                <input matInput\r\n                       [formControl]=\"addNewLineCtrl\"\r\n                       autocomplete=\"off\">\r\n            </mat-form-field>\r\n        </div>\r\n        <div fxLayout=\"column\"\r\n             fxLayoutAlign=\"start start\">\r\n            <button mat-button\r\n                    (click)=\"onAddAccountingLineButtonClicked(addNewLineCtrl.value)\">PROCEED</button>\r\n        </div>\r\n    </div>\r\n    <div fxLayout=\"row\"\r\n         fxLayoutAlign=\"center center\"\r\n         fxLayoutWrap\r\n         *ngIf=\"isLoadingassign\"\r\n         class=\"loading\">\r\n        <mat-spinner color=\"accent\"></mat-spinner>\r\n    </div>\r\n    <div fxLayout=\"row\"\r\n         fxLayoutAlign=\"space-around start\">\r\n        <div fxLayout=\"column\"\r\n             fxFlex=\"98.5\">\r\n            <mat-card>\r\n                <div fxLayout=\"row\"\r\n                     fxLayoutAlign=\"space-between start\">\r\n                    <mat-card-title class=\"atlas-grid-card-title mat-card-title\">Accounting Entries</mat-card-title>\r\n                    <atlas-grid-enlargement *ngIf=\"agGridOptions\"\r\n                                            [gridOptions]=\"agGridOptions\"\r\n                                            [userPreferencesParameters]=\"gridPreferencesParameters\"\r\n                                            (cellValueChanged)=\"onCellValueChanged($event)\"\r\n                                            #gridZoom>\r\n                    </atlas-grid-enlargement>\r\n                </div>\r\n                <mat-card-content>\r\n                    <div *ngIf=\"accountCreationConfiguration?.length > 0\"\r\n                         ag-grid=\"agGridOptions\">\r\n                        <ag-grid-angular class=\"ag-theme-material atr-ag-grid\"\r\n                                         [rowData]=\"createAccountingDocumentLines\"\r\n                                         [columnDefs]=\"columnDefs\"\r\n                                         domLayout=\"autoHeight\"\r\n                                         (gridReady)=\"onGridReady($event)\"\r\n                                         [pagination]=\"true\"\r\n                                         [gridOptions]=\"agGridOptions\"\r\n                                         [paginationPageSize]=\"15\"\r\n                                         [suppressDragLeaveHidesColumns]=\"true\"\r\n                                         [suppressMovable]=\"true\"\r\n                                         [enableSorting]=\"true\"\r\n                                         [enableColResize]=\"false\"\r\n                                         [singleClickEdit]=true\r\n                                         [enableRangeSelection]=\"true\"\r\n                                         (cellValueChanged)=\"onCellValueChanged($event)\"\r\n                                         [frameworkComponents]=\"gridComponents\"\r\n                                         [processCellForClipboard]=\"processCellForClipboard\"\r\n                                         [rowHeight]=\"atlasAgGridParam.rowHeight\">\r\n                        </ag-grid-angular>\r\n                    </div>\r\n                    <span class=\"fill-space\"></span>\r\n                    <div fxLayout=\"column\"\r\n                         fxLayoutAlign=\"start end\"\r\n                         class=\"total-amount-content\">\r\n                        <mat-card-subtitle class=\"total-figure\">Total Amount: <span\r\n                                  class=\"total-figure-value\">{{formatAmountValue(totalAmount)}}\r\n                            </span> </mat-card-subtitle>\r\n                    </div>\r\n                </mat-card-content>\r\n            </mat-card>\r\n        </div>\r\n    </div>\r\n\r\n    <div fxLayout=\"row\"\r\n         *ngIf=\"!isLoadingassignOnLoad\"\r\n         fxLayoutAlign=\"end\">\r\n        <div  fxLayout=\"column\"\r\n              class=\"value-legs-total-figure\">\r\n            <mat-slide-toggle class=\"mat-toggle-creation\"\r\n                              *ifAuthorized=\"'Financials.POSTINGMGT.PostingInterface',company:this.company\"\r\n                              [formControl]=\"interfaceCtrl\"\r\n                              [disabled]=\"isSummaryView\">To interface</mat-slide-toggle>\r\n\r\n            <mat-slide-toggle class=\"mat-toggle-creation\"\r\n                              *ifAuthorized=\"'Financials.POSTINGMGT.AUTHORIZEPOSTING',company:this.company\"\r\n                              [formControl]=\"authForCtrl\"\r\n                              [disabled]=\"isSummaryView\">Authorize for posting</mat-slide-toggle>\r\n        </div>\r\n    </div>\r\n\r\n    <div fxLayout=\"row\"\r\n         *ngIf=\"!isLoadingassignOnLoad\">\r\n        <button mat-button\r\n                class='mat-button-discard'\r\n                *ngIf=\"!isLoadingassign\"\r\n                (click)=\"onDiscardButtonClicked()\">\r\n            DISCARD\r\n        </button>\r\n        <span class=\"fill-space\"></span>\r\n        <button *ngIf=\"!isSummaryView && !isLoadingassign\"\r\n                mat-raised-button\r\n                (click)=\"onSaveButtonClicked()\">\r\n            SAVE\r\n        </button>\r\n    </div>\r\n</div>\r\n"

/***/ }),

/***/ "./Client/app/financial/components/posting-process/accounting-creation/accounting-creation.component.scss":
/*!****************************************************************************************************************!*\
  !*** ./Client/app/financial/components/posting-process/accounting-creation/accounting-creation.component.scss ***!
  \****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".mat-select-style {\n  width: 200px;\n  margin-top: 30px;\n  margin-bottom: 30px;\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n  font-size: 16px;\n  font-weight: 500; }\n\nmat-toolbar.mat-toolbar {\n  height: 40px !important; }\n\n.create-toggle-control {\n  margin-bottom: 1%; }\n\n.value-legs-total-figure {\n  margin-top: 8px; }\n\n.month-date-picker,\n.total-amount-content,\n.contextual-search-for-currency {\n  width: 100%; }\n\n.total-amount-content {\n  margin-top: 14px; }\n\n.contextual-search-for-currency {\n  margin-right: 8px; }\n\n.add-line-container {\n  height: 28px;\n  margin-left: 10px; }\n\n.value-date-warning {\n  color: #ec8d2d; }\n\n:host ::ng-deep .ag-theme-material .mat-form-field-appearance-legacy .mat-form-field-wrapper {\n  padding-bottom: 0px !important; }\n"

/***/ }),

/***/ "./Client/app/financial/components/posting-process/accounting-creation/accounting-creation.component.ts":
/*!**************************************************************************************************************!*\
  !*** ./Client/app/financial/components/posting-process/accounting-creation/accounting-creation.component.ts ***!
  \**************************************************************************************************************/
/*! exports provided: AccountingCreationComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AccountingCreationComponent", function() { return AccountingCreationComponent; });
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _core_services_authorization_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../core/services/authorization.service */ "./Client/app/core/services/authorization.service.ts");
/* harmony import */ var _core_services_company_manager_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../core/services/company-manager.service */ "./Client/app/core/services/company-manager.service.ts");
/* harmony import */ var _shared_components_ag_grid_contextual_search_ag_grid_contextual_search_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../shared/components/ag-grid/contextual-search/ag-grid-contextual-search.component */ "./Client/app/shared/components/ag-grid/contextual-search/ag-grid-contextual-search.component.ts");
/* harmony import */ var _shared_components_cell_editor_numeric_cell_editor_numeric_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../shared/components/cell-editor-numeric/cell-editor-numeric.component */ "./Client/app/shared/components/cell-editor-numeric/cell-editor-numeric.component.ts");
/* harmony import */ var _shared_components_confirmation_dialog_confirmation_dialog_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../../shared/components/confirmation-dialog/confirmation-dialog.component */ "./Client/app/shared/components/confirmation-dialog/confirmation-dialog.component.ts");
/* harmony import */ var _shared_directives_autocomplete_dropdown_directive__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../../shared/directives/autocomplete-dropdown.directive */ "./Client/app/shared/directives/autocomplete-dropdown.directive.ts");
/* harmony import */ var _shared_entities_atlas_form_control__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../../shared/entities/atlas-form-control */ "./Client/app/shared/entities/atlas-form-control.ts");
/* harmony import */ var _shared_entities_atlas_number_entity__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../../../shared/entities/atlas-number.entity */ "./Client/app/shared/entities/atlas-number.entity.ts");
/* harmony import */ var _shared_entities_manual_journal_document_line_entity__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../../../shared/entities/manual-journal-document-line.entity */ "./Client/app/shared/entities/manual-journal-document-line.entity.ts");
/* harmony import */ var _shared_entities_manual_journal_document_entity__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../../../shared/entities/manual-journal-document.entity */ "./Client/app/shared/entities/manual-journal-document.entity.ts");
/* harmony import */ var _shared_enums_permission_level_enum__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../../../shared/enums/permission-level.enum */ "./Client/app/shared/enums/permission-level.enum.ts");
/* harmony import */ var _shared_enums_posting_document_type_enum__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../../../shared/enums/posting-document-type.enum */ "./Client/app/shared/enums/posting-document-type.enum.ts");
/* harmony import */ var _shared_services_ag_grid_service__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../../../../shared/services/ag-grid.service */ "./Client/app/shared/services/ag-grid.service.ts");
/* harmony import */ var _shared_services_execution_charter_data_loader__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../../../../shared/services/execution/charter-data-loader */ "./Client/app/shared/services/execution/charter-data-loader.ts");
/* harmony import */ var _shared_services_form_configuration_provider_service__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../../../../shared/services/form-configuration-provider.service */ "./Client/app/shared/services/form-configuration-provider.service.ts");
/* harmony import */ var _shared_services_http_services_execution_service__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../../../../shared/services/http-services/execution.service */ "./Client/app/shared/services/http-services/execution.service.ts");
/* harmony import */ var _shared_services_http_services_preaccounting_service__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../../../../shared/services/http-services/preaccounting.service */ "./Client/app/shared/services/http-services/preaccounting.service.ts");
/* harmony import */ var _shared_services_list_and_search_trade_data_loader__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ../../../../shared/services/list-and-search/trade-data-loader */ "./Client/app/shared/services/list-and-search/trade-data-loader.ts");
/* harmony import */ var _shared_services_preaccounting_transaction_document_data_loader__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ../../../../shared/services/preaccounting/transaction-document-data-loader */ "./Client/app/shared/services/preaccounting/transaction-document-data-loader.ts");
/* harmony import */ var _shared_services_snackbar_service__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ../../../../shared/services/snackbar.service */ "./Client/app/shared/services/snackbar.service.ts");
/* harmony import */ var _shared_services_title_service__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ../../../../shared/services/title.service */ "./Client/app/shared/services/title.service.ts");
/* harmony import */ var _shared_services_ui_service__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ../../../../shared/services/ui.service */ "./Client/app/shared/services/ui.service.ts");
/* harmony import */ var _shared_services_util_service__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ../../../../shared/services/util.service */ "./Client/app/shared/services/util.service.ts");
/* harmony import */ var _shared_validators_date_validators_validator__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ../../../../shared/validators/date-validators.validator */ "./Client/app/shared/validators/date-validators.validator.ts");
/* harmony import */ var _accounting_file_upload_accounting_file_upload_dialog_box_accounting_file_upload_dialog_box_component__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ../accounting-file-upload/accounting-file-upload-dialog-box/accounting-file-upload-dialog-box.component */ "./Client/app/financial/components/posting-process/accounting-file-upload/accounting-file-upload-dialog-box/accounting-file-upload-dialog-box.component.ts");
/* harmony import */ var _shared_components_ag_contextual_menu_ag_contextual_menu_component__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./../../../../shared/components/ag-contextual-menu/ag-contextual-menu.component */ "./Client/app/shared/components/ag-contextual-menu/ag-contextual-menu.component.ts");
/* harmony import */ var _shared_components_ag_grid_accrual_number_ag_grid_accrual_number_component__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./../../../../shared/components/ag-grid-accrual-number/ag-grid-accrual-number.component */ "./Client/app/shared/components/ag-grid-accrual-number/ag-grid-accrual-number.component.ts");
/* harmony import */ var _shared_services_list_and_search_fxDeal_data_loader__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./../../../../shared/services/list-and-search/fxDeal-data-loader */ "./Client/app/shared/services/list-and-search/fxDeal-data-loader.ts");
/* harmony import */ var _shared_numberMask__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./../../../../shared/numberMask */ "./Client/app/shared/numberMask.ts");
/* harmony import */ var _shared_services_http_services_accounting_document_service__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./../../../../shared/services/http-services/accounting-document.service */ "./Client/app/shared/services/http-services/accounting-document.service.ts");
/* harmony import */ var _shared_services_http_services_form_configuration_service__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./../../../../shared/services/http-services/form-configuration.service */ "./Client/app/shared/services/http-services/form-configuration.service.ts");
/* harmony import */ var _accounting_edit_base_accounting_edit_base_component__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./../accounting-edit-base/accounting-edit-base.component */ "./Client/app/financial/components/posting-process/accounting-edit-base/accounting-edit-base.component.ts");
/* harmony import */ var _accounting_warning_error_msg_dialog_accounting_warning_error_msg_dialog_component__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./accounting-warning-error-msg-dialog/accounting-warning-error-msg-dialog.component */ "./Client/app/financial/components/posting-process/accounting-creation/accounting-warning-error-msg-dialog/accounting-warning-error-msg-dialog.component.ts");
/* harmony import */ var _shared_components_grid_enlargement_grid_enlargement_component__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ../../../../shared/components/grid-enlargement/grid-enlargement.component */ "./Client/app/shared/components/grid-enlargement/grid-enlargement.component.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};








































var moment = moment__WEBPACK_IMPORTED_MODULE_5__;
var AccountingCreationComponent = /** @class */ (function (_super) {
    __extends(AccountingCreationComponent, _super);
    function AccountingCreationComponent(route, formBuilder, utilService, companyManager, uiService, formConfigurationProvider, tradeDataLoader, fxDealLoader, charterDataLoader, transactionDocumentDataLoader, snackbarService, executionService, preaccountingService, dialog, router, location, authorizationService, datePipe, formConfigurationService, gridService, titleService, accountingDocumentService) {
        var _this = _super.call(this, formConfigurationProvider) || this;
        _this.route = route;
        _this.formBuilder = formBuilder;
        _this.utilService = utilService;
        _this.companyManager = companyManager;
        _this.uiService = uiService;
        _this.formConfigurationProvider = formConfigurationProvider;
        _this.tradeDataLoader = tradeDataLoader;
        _this.fxDealLoader = fxDealLoader;
        _this.charterDataLoader = charterDataLoader;
        _this.transactionDocumentDataLoader = transactionDocumentDataLoader;
        _this.snackbarService = snackbarService;
        _this.executionService = executionService;
        _this.preaccountingService = preaccountingService;
        _this.dialog = dialog;
        _this.router = router;
        _this.location = location;
        _this.authorizationService = authorizationService;
        _this.datePipe = datePipe;
        _this.formConfigurationService = formConfigurationService;
        _this.gridService = gridService;
        _this.titleService = titleService;
        _this.accountingDocumentService = accountingDocumentService;
        _this.accountingEntryTypeCtrl = new _shared_entities_atlas_form_control__WEBPACK_IMPORTED_MODULE_12__["AtlasFormControl"]('accountingEntryTypeCtrl');
        _this.docDateFormCtrl = new _shared_entities_atlas_form_control__WEBPACK_IMPORTED_MODULE_12__["AtlasFormControl"]('docDateFormCtrl');
        _this.valueDateFormCtrl = new _shared_entities_atlas_form_control__WEBPACK_IMPORTED_MODULE_12__["AtlasFormControl"]('valueDateFormCtrl');
        _this.accPeriodFormCtrl = new _shared_entities_atlas_form_control__WEBPACK_IMPORTED_MODULE_12__["AtlasFormControl"]('accPeriodFormCtrl');
        _this.currencyCtrl = new _shared_entities_atlas_form_control__WEBPACK_IMPORTED_MODULE_12__["AtlasFormControl"]('currencyCtrl');
        _this.addNewLineCtrl = new _shared_entities_atlas_form_control__WEBPACK_IMPORTED_MODULE_12__["AtlasFormControl"]('addNewLineCtrl');
        _this.interfaceCtrl = new _shared_entities_atlas_form_control__WEBPACK_IMPORTED_MODULE_12__["AtlasFormControl"]('interfaceCtrl');
        _this.authForCtrl = new _shared_entities_atlas_form_control__WEBPACK_IMPORTED_MODULE_12__["AtlasFormControl"]('authForCtrl');
        _this.createAccountingDocumentLines = [];
        _this.accountingDocTypeSelected = 'regularJournal';
        _this.accrualDocTypeSelected = 'accrual';
        _this.accrualNumberColumn = 'accrualNumber';
        _this.dealNumberColumn = 'dealNumber';
        _this.settlementCurrencyColumn = 'settlementCurrency';
        _this.clientAccountColumn = 'clientAccountId';
        _this.secondaryDocumentReferenceColumn = 'secondaryDocumentReference';
        _this.externalDocumentReferenceColumn = 'externalDocumentReference';
        _this.costCenterColumn = 'costCenter';
        _this.provinceColumn = 'provinceId';
        _this.branchColumn = 'branchId';
        _this.amountColumn = 'amount';
        _this.quantityColumn = 'quantity';
        _this.requiredString = 'Required*';
        _this.nominalAccount = 'accountReferenceId';
        _this.isAccrualSelected = false;
        _this.isMtmSelected = false;
        _this.isSave = false;
        _this.noErrorMessage = 'noError';
        _this.createLineMenu = 'createLineMenu';
        _this.isLoadingassign = false;
        _this.screenName = 'ManualDocumentCreation';
        _this.filteredAccountLineTypeForMtm = [];
        _this.mappingFields = new Array();
        _this.isLoadingassignOnLoad = true;
        _this.defaultLines = 20;
        _this.totalAmount = 0;
        _this.isSummaryView = false;
        _this.accountCreationConfiguration = new Array();
        _this.selectedAccountingDate = _this.companyManager.getCurrentCompanyDate();
        _this.postOpClosedPrivilege = {
            profileId: null,
            privilegeName: 'POSTOPCLOSED',
            permission: _shared_enums_permission_level_enum__WEBPACK_IMPORTED_MODULE_16__["PermissionLevels"].ReadWrite,
            privilegeParentLevelOne: 'Financials',
            privilegeParentLevelTwo: 'POSTINGMGT',
        };
        _this.monthNames = ['January', 'February', 'March', 'April', 'May', 'June',
            'July', 'August', 'September', 'October', 'November', 'December'];
        _this.currencyErrorMap = new Map()
            .set('required', 'This field is required')
            .set('inDropdownList', 'Invalid entry. Currency not in the list.');
        _this.createDocumentMenuActions = {
            copyDocumentLine: 'copy',
            deleteDocumentLine: 'delete',
        };
        _this.subscription = [];
        _this.agGridOptions = {};
        _this.gridComponents = {
            atlasNumeric: _shared_components_cell_editor_numeric_cell_editor_numeric_component__WEBPACK_IMPORTED_MODULE_9__["CellEditorNumericComponent"],
        };
        _this.selectedDocType = '.csv';
        _this.objectKeys = Object.keys;
        _this.disableConfirmImport = false;
        _this.userActiveDirectoryName = _this.authorizationService.getCurrentUser().samAccountName;
        return _this;
    }
    AccountingCreationComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.formConfigurationService.getMandatoryFieldsConfigurationForFinancial().subscribe(function (templates) {
            _this.accountCreationConfiguration = templates.value;
            _this.company = _this.route.snapshot.paramMap.get('company');
            _this.titleService.setTitle(_this.route.snapshot.data.title);
            _this.atlasAgGridParam = _this.gridService.getAgGridParam();
            _this.masterdata = _this.route.snapshot.data.masterdata;
            _this.accountingEntryTypeCtrl.patchValue(_this.accountingDocTypeSelected);
            _this.docDateFormCtrl.setValue(_this.companyManager.getCurrentCompanyDate());
            _this.accPeriodFormCtrl.setValue(_this.companyManager.getCurrentCompanyDate());
            _this.interfaceCtrl.patchValue(true);
            _this.authForCtrl.patchValue(false);
            _this.addNewLineCtrl.patchValue(1);
            _this.filteredNominalAccountList = _this.masterdata.nominalAccounts.map(function (nominal) {
                nominal.accountNumber = nominal.accountNumber;
                nominal.mainAccountTitle = nominal.shortDescription;
                return nominal;
            });
            _this.filteredCurrencyList = _this.masterdata.currencies;
            _this.filteredSettlementCurrencyList = _this.filteredCurrencyList;
            _this.filteredDepartmentList = _this.masterdata.departments;
            _this.filteredCommodityList = _this.masterdata.commodities;
            _this.filteredCostTypeList = _this.masterdata.costTypes;
            _this.filteredCounterpartyList = _this.masterdata.counterparties;
            _this.filteredAccountLineType = _this.masterdata.accountLineTypes;
            _this.filteredProvinceList = _this.masterdata.provinces;
            _this.filteredBranchList = _this.masterdata.branches;
            _this.transactionDocumentDataLoader.getData().subscribe(function (documents) {
                _this.filteredDocuments = documents;
            });
            _this.charterDataLoader.getData().subscribe(function (charter) {
                _this.filteredCharter = charter;
            });
            var filterList = [];
            _this.tradeDataLoader.getData(filterList).subscribe(function (trade) {
                _this.filteredContracts = trade.value;
            });
            _this.fxDealLoader.getData(filterList).subscribe(function (fxDeal) {
                _this.filteredFxDeals = fxDeal.value;
            });
            _this.currencyCtrl.valueChanges.subscribe(function (input) {
                _this.filteredCurrencyList = _this.utilService.filterListforAutocomplete(input, _this.masterdata.currencies, ['currencyCode', 'description']);
            });
            _this.subscriptions.push(_this.preaccountingService.getAccountingSetupDetails()
                .subscribe(function (data) {
                _this.accountingSetupModel = data;
                if (_this.accountingSetupModel) {
                    _this.operationsLastMonthClosed = moment(_this.accountingSetupModel.lastMonthClosedForOperation).toDate();
                    _this.lastMonthClosed = moment(_this.accountingSetupModel.lastMonthClosed).toDate();
                    _this.monthNameForlastMonthClosed = _this.monthNames[_this.lastMonthClosed.getMonth()];
                    _this.monthNameForoperationsLastMonthClosed = _this.monthNames[_this.operationsLastMonthClosed.getMonth()];
                }
            }));
            _this.init();
            _this.initializeGridColumns();
            _this.setValidators();
            _this.companyConfiguration = _this.companyManager.getCompany(_this.company);
            var defaultCurrency = _this.masterdata.currencies.find(function (fb) { return fb.currencyCode === _this.companyConfiguration.functionalCurrencyCode; });
            _this.currencyCtrl.setValue(defaultCurrency);
            _this.getFormGroup();
        });
    };
    AccountingCreationComponent.prototype.init = function () {
        this.createAccountingDocumentGridContextualMenuActions = [
            {
                icon: 'content_copy',
                text: 'Copy Line',
                action: this.createDocumentMenuActions.copyDocumentLine,
            },
            {
                icon: 'delete',
                text: 'Delete Line',
                action: this.createDocumentMenuActions.deleteDocumentLine,
            },
        ];
        this.gridPreferencesParameters = {
            company: null,
            gridId: null,
            gridOptions: null,
            savingEnabled: false,
            sharingEnabled: false,
            showExport: false,
        };
    };
    AccountingCreationComponent.prototype.canDeactivate = function () {
        var _this = this;
        if (this.createDocumentFormGroup.dirty && this.isSave === false) {
            return window.confirm('Leave an unsave form? \nYour changes won\'t be applied!');
        }
        this.agGridApi.forEachNode(function (rowData) {
            if (rowData.data.isDirty && !_this.isSummaryView) {
                return window.confirm('Leave an unsave form? \nYour changes won\'t be applied!');
            }
        });
        return true;
    };
    AccountingCreationComponent.prototype.unloadNotification = function ($event) {
        var _this = this;
        if (this.createDocumentFormGroup.dirty) {
            $event.returnValue = true;
        }
        this.agGridApi.forEachNode(function (rowData) {
            if (rowData.data.isDirty && !_this.isSummaryView) {
                $event.returnValue = true;
            }
        });
    };
    AccountingCreationComponent.prototype.getFormGroup = function () {
        this.createDocumentFormGroup = this.formBuilder.group({
            currencyCtrl: this.currencyCtrl,
            docDateFormCtrl: this.docDateFormCtrl,
            valueDateFormCtrl: this.valueDateFormCtrl,
            accPeriodFormCtrl: this.accPeriodFormCtrl,
        });
        return _super.prototype.getFormGroup.call(this);
    };
    AccountingCreationComponent.prototype.documentDateChanged = function (event) {
        this.documentDateSelected = event.value.toDate();
        var accPeriodDate = this.accPeriodFormCtrl.value.toDate();
        if (accPeriodDate.getFullYear() < this.documentDateSelected.getFullYear()
            || (accPeriodDate.getFullYear() <= this.documentDateSelected.getFullYear()
                && accPeriodDate.getMonth() < this.documentDateSelected.getMonth())) {
            this.snackbarService.throwErrorSnackBar('A/c period should not be before doc. Date');
        }
        else {
            var throwErrorNotOpenMonth = false;
            var throwErrorAccountingPeriod = false;
            var isSameMonthAndYearThanOperationsLastMonthClosed = event.value.year() === this.operationsLastMonthClosed.getFullYear() &&
                event.value.month() === this.operationsLastMonthClosed.getMonth();
            var isLessOrEqualToLastMonthClosed = (event.value.year() === this.lastMonthClosed.getFullYear()
                && event.value.month() <= this.lastMonthClosed.getMonth())
                || (event.value.year() < this.lastMonthClosed.getFullYear());
            var isSameYearLessMonthThanOperationsLastMonthClosed = event.value.year() === this.operationsLastMonthClosed.getFullYear() &&
                event.value.month() < this.operationsLastMonthClosed.getMonth();
            var isAccountingAndOperationMonthSame = this.operationsLastMonthClosed.getFullYear() === this.lastMonthClosed.getFullYear()
                && this.operationsLastMonthClosed.getMonth() === this.lastMonthClosed.getMonth();
            // Regular Journal Rules
            if (!this.isAccrualSelected && !this.isMtmSelected) {
                // Date within a closed period
                if (isLessOrEqualToLastMonthClosed) {
                    throwErrorAccountingPeriod = true;
                    if (this.checkIfUserHasRequiredPrivileges(this.postOpClosedPrivilege)) {
                        if (isAccountingAndOperationMonthSame) {
                            this.accPeriodFormCtrl.patchValue(moment(new Date(new Date(this.operationsLastMonthClosed).
                                setMonth(this.operationsLastMonthClosed.getMonth() + 1))));
                        }
                        else {
                            this.accPeriodFormCtrl.patchValue(moment(this.accountingSetupModel.lastMonthClosedForOperation));
                        }
                    }
                    else {
                        this.accPeriodFormCtrl.patchValue(this.companyManager.getCurrentCompanyDate());
                    } // Date within the last month closed for operation
                }
                else if (isSameMonthAndYearThanOperationsLastMonthClosed) {
                    if (this.checkIfUserHasRequiredPrivileges(this.postOpClosedPrivilege)) {
                        this.accPeriodFormCtrl.patchValue(moment(this.accountingSetupModel.lastMonthClosedForOperation));
                    }
                    else {
                        throwErrorAccountingPeriod = true;
                        this.accPeriodFormCtrl.patchValue(moment(new Date(new Date(this.operationsLastMonthClosed).
                            setMonth(this.operationsLastMonthClosed.getMonth() + 1))));
                    } // Date between last closed accounting period – last month closed for operation
                }
                else if (this.checkIfBetweenLastClosedAndOperations(event.value)) {
                    if (this.checkIfUserHasRequiredPrivileges(this.postOpClosedPrivilege)) {
                        this.accPeriodFormCtrl.patchValue(event.value);
                    }
                    else {
                        this.accPeriodFormCtrl.patchValue(moment(new Date(new Date(this.operationsLastMonthClosed).
                            setMonth(this.operationsLastMonthClosed.getMonth() + 1))));
                    }
                }
                else if (!this.checkIfBetweenLastClosedAndOperations(event.value) &&
                    isSameYearLessMonthThanOperationsLastMonthClosed) {
                    throwErrorNotOpenMonth = true;
                } // Accrual Document date Rules
            }
            else {
                var todayDate = this.companyManager.getCurrentCompanyDate();
                if (isLessOrEqualToLastMonthClosed) {
                    this.snackbarService.informationSnackBar('Document date cannot be in a closed period');
                    this.docDateFormCtrl.patchValue('');
                }
                else if ((event.value <= this.companyManager.getCurrentCompanyDate() || event.value.month() === todayDate.month()) &&
                    !(event.value.date() === new Date(event.value.year(), event.value.month() + 1, 0).getDate())) {
                    this.snackbarService.throwErrorSnackBar('Document date must be a last month day');
                    this.docDateFormCtrl.patchValue('');
                }
                else if (event.value.year() === todayDate.year() && event.value.month() > todayDate.month()) {
                    this.snackbarService.throwErrorSnackBar('Document date cannot be in the future');
                    this.docDateFormCtrl.patchValue('');
                }
                else if (this.checkIfUserHasRequiredPrivileges(this.postOpClosedPrivilege) &&
                    this.checkIfBetweenLastClosedAndOperations(event.value)) {
                    throwErrorAccountingPeriod = true;
                    this.accPeriodFormCtrl.patchValue(event.value);
                }
                else if (!this.checkIfUserHasRequiredPrivileges(this.postOpClosedPrivilege) &&
                    isSameMonthAndYearThanOperationsLastMonthClosed) {
                    throwErrorNotOpenMonth = true;
                    this.docDateFormCtrl.patchValue('');
                }
                else if (!this.checkIfBetweenLastClosedAndOperations(event.value) &&
                    isSameYearLessMonthThanOperationsLastMonthClosed) {
                    this.docDateFormCtrl.patchValue('');
                    this.accPeriodFormCtrl.patchValue('');
                    throwErrorNotOpenMonth = true;
                }
                else {
                    this.accPeriodFormCtrl.patchValue(event.value);
                }
            }
            if (throwErrorNotOpenMonth) {
                this.snackbarService.throwErrorSnackBar('Not allowed: Last closed accounting period is ' +
                    this.monthNameForlastMonthClosed + ' and Last month closed for operation is ' +
                    this.monthNameForoperationsLastMonthClosed + '; The document date and the accounting period must be in an open month');
            }
            if (throwErrorAccountingPeriod) {
                this.snackbarService.informationSnackBar('Last closed accounting period is ' +
                    this.monthNameForlastMonthClosed + ' and Last month closed for operation is ' +
                    this.monthNameForoperationsLastMonthClosed + ' ; please check the accounting period');
            }
        }
    };
    AccountingCreationComponent.prototype.checkIfBetweenLastClosedAndOperations = function (date) {
        var matchingMonthFound = false;
        for (var i = 1; i <= this.accountingSetupModel.numberOfOpenPeriod; i++) {
            if (!matchingMonthFound) {
                if (date.year() === this.lastMonthClosed.getFullYear() &&
                    this.lastMonthClosed.getMonth() + i < 12 && date.month() === this.lastMonthClosed.getMonth() + i) {
                    matchingMonthFound = true;
                }
                else if (date.year() === this.lastMonthClosed.getFullYear() + 1 &&
                    this.lastMonthClosed.getMonth() + i >= 12 && date.month() === this.lastMonthClosed.getMonth() + i - 12) {
                    matchingMonthFound = true;
                }
            }
        }
        return matchingMonthFound;
    };
    AccountingCreationComponent.prototype.checkIfUserHasRequiredPrivileges = function (userCompanyPrivilege) {
        if (this.authorizationService.isUserAllowedForCompany(this.company)) {
            var userPermissionLevel = this.authorizationService.getPermissionLevel(this.company, userCompanyPrivilege.privilegeName, userCompanyPrivilege.privilegeParentLevelOne, userCompanyPrivilege.privilegeParentLevelTwo);
            if (userPermissionLevel === userCompanyPrivilege.permission) {
                return true;
            }
            return false;
        }
    };
    AccountingCreationComponent.prototype.accountPeriodChanged = function (event) {
        var docDate = this.docDateFormCtrl.value.toDate();
        var accPeriodDate = event.toDate();
        if (accPeriodDate.getFullYear() < docDate.getFullYear()
            || (accPeriodDate.getFullYear() <= docDate.getFullYear()
                && accPeriodDate.getMonth() < docDate.getMonth())) {
            this.snackbarService.throwErrorSnackBar('A/c period should not be before doc. Date');
        }
        else {
            var lastDateOfMonth = this.companyManager.getCurrentCompanyDate();
            var throwErrorClosedMonth = false;
            var throwErrorAccountingPeriod = false;
            var isSameMonthAndYearThanOperationLastClosedMonth = event.year() === this.operationsLastMonthClosed.getFullYear() &&
                event.month() === this.operationsLastMonthClosed.getMonth();
            var isBeforeOperationLastClosedMonth = event.year() === this.operationsLastMonthClosed.getFullYear() &&
                event.month() < this.operationsLastMonthClosed.getMonth();
            var isLessOrEqualToLastMonthClosed = (event.year() === this.lastMonthClosed.getFullYear()
                && event.month() <= this.lastMonthClosed.getMonth())
                || event.year() < this.lastMonthClosed.getFullYear();
            // Acounting Period Rules for Regular Journal
            if (!this.isAccrualSelected && !this.isMtmSelected) {
                if (this.checkIfUserHasRequiredPrivileges(this.postOpClosedPrivilege)) {
                    if (isLessOrEqualToLastMonthClosed) {
                        throwErrorAccountingPeriod = true;
                    }
                    else if (isSameMonthAndYearThanOperationLastClosedMonth) {
                        this.snackbarService.informationSnackBar('Please check document date and accounting period');
                    }
                    else if ((!this.checkIfBetweenLastClosedAndOperations(event)) && isBeforeOperationLastClosedMonth) {
                        throwErrorClosedMonth = true;
                    }
                }
                else {
                    if (isSameMonthAndYearThanOperationLastClosedMonth || isLessOrEqualToLastMonthClosed) {
                        throwErrorAccountingPeriod = true;
                    }
                    else if ((!this.checkIfBetweenLastClosedAndOperations(event)) && isBeforeOperationLastClosedMonth) {
                        throwErrorClosedMonth = true;
                    }
                } // Acounting Period Rules for Accrual
            }
            else {
                if (isLessOrEqualToLastMonthClosed) {
                    throwErrorClosedMonth = true;
                }
                else {
                    if (this.checkIfUserHasRequiredPrivileges(this.postOpClosedPrivilege)) {
                        if (!((event.year() === lastDateOfMonth.year() && event.month() === lastDateOfMonth.month()) ||
                            (isSameMonthAndYearThanOperationLastClosedMonth) ||
                            (this.checkIfBetweenLastClosedAndOperations(event)))) {
                            throwErrorClosedMonth = true;
                        }
                    }
                    else if (!this.checkIfUserHasRequiredPrivileges(this.postOpClosedPrivilege)) {
                        if (isSameMonthAndYearThanOperationLastClosedMonth || isLessOrEqualToLastMonthClosed) {
                            throwErrorClosedMonth = true;
                        }
                        if (!this.checkIfBetweenLastClosedAndOperations(event) && isBeforeOperationLastClosedMonth) {
                            throwErrorClosedMonth = true;
                        }
                    }
                }
            }
            if (throwErrorClosedMonth) {
                this.snackbarService.throwErrorSnackBar('Not allowed: Last closed accounting period is ' +
                    this.monthNameForlastMonthClosed + ' and Last month closed for operation is ' +
                    this.monthNameForoperationsLastMonthClosed + '; The document date and the accounting period must be in an open month');
                this.accPeriodFormCtrl.patchValue('');
            }
            if (throwErrorAccountingPeriod) {
                this.snackbarService.informationSnackBar('Not allowed: Last closed accounting period is ' +
                    this.monthNameForlastMonthClosed + ' and Last month closed for operation is ' +
                    this.monthNameForoperationsLastMonthClosed + '; please check the accounting period');
                this.accPeriodFormCtrl.patchValue('');
            }
        }
    };
    AccountingCreationComponent.prototype.onGridReady = function (params) {
        this.agGridOptions.columnDefs = this.columnDefs;
        this.agGridApi = this.agGridOptions.api;
        this.agGridColumnApi = this.agGridOptions.columnApi;
        this.createAccountingDocumentLines = [];
        this.agGridApi.setRowData([]);
        this.agGridColumnApi.setColumnVisible(this.accrualNumberColumn, false);
        this.agGridColumnApi.setColumnVisible(this.dealNumberColumn, false);
        this.agGridColumnApi.setColumnVisible(this.settlementCurrencyColumn, false);
        this.agGridColumnApi.setColumnVisible(this.provinceColumn, this.companyConfiguration.isProvinceEnable);
        this.agGridColumnApi.setColumnVisible(this.branchColumn, this.companyConfiguration.isProvinceEnable);
        this.onAddAccountingLineButtonClicked(this.defaultLines);
        this.gridService.sizeColumns(this.agGridOptions);
        this.isLoadingassignOnLoad = false;
    };
    AccountingCreationComponent.prototype.processCellForClipboard = function (params) {
        if (!params.value || !params.column.colDef.cellRendererParams) {
            return params.value;
        }
        var value = params.value;
        var cellRenderedParams = params.column.colDef.cellRendererParams(null);
        var object = cellRenderedParams.valueProperty ? cellRenderedParams.options
            .find(function (option) { return option[cellRenderedParams.valueProperty] === value; }) : null;
        value = typeof value !== 'string' && cellRenderedParams.displayProperty ? value[cellRenderedParams.displayProperty] : value;
        if (object && cellRenderedParams.displayCode && cellRenderedParams.codeProperty) {
            return object[cellRenderedParams.codeProperty];
        }
        return cellRenderedParams.displayProperty && object ? object[cellRenderedParams.displayProperty] : value;
    };
    AccountingCreationComponent.prototype.accountingEntryTypeChanged = function (event) {
        var _this = this;
        this.filteredAccountLineTypeForMtm = [];
        if (event.value === this.accountingDocTypeSelected) {
            this.isAccrualSelected = false;
            this.isMtmSelected = false;
            this.docDateFormCtrl.setValue(this.companyManager.getCurrentCompanyDate());
            this.accPeriodFormCtrl.setValue(this.companyManager.getCurrentCompanyDate());
            this.agGridColumnApi.setColumnVisible(this.accrualNumberColumn, false);
            this.agGridColumnApi.setColumnVisible(this.clientAccountColumn, true);
            this.agGridColumnApi.setColumnVisible(this.secondaryDocumentReferenceColumn, true);
            this.agGridColumnApi.setColumnVisible(this.externalDocumentReferenceColumn, true);
            this.agGridColumnApi.setColumnVisible(this.costCenterColumn, true);
            this.agGridColumnApi.setColumnVisible(this.dealNumberColumn, false);
            this.agGridColumnApi.setColumnVisible(this.settlementCurrencyColumn, false);
        }
        else if (event.value === this.accrualDocTypeSelected) {
            this.isAccrualSelected = true;
            this.isMtmSelected = false;
            var lastDateOfMonth = this.companyManager.getCurrentCompanyDate();
            var previousMonth = lastDateOfMonth.subtract(1, 'months');
            this.docDateFormCtrl.patchValue(previousMonth.endOf('month'));
            this.accPeriodFormCtrl.patchValue(lastDateOfMonth);
            this.agGridColumnApi.setColumnVisible(this.accrualNumberColumn, true);
            this.agGridColumnApi.setColumnVisible(this.clientAccountColumn, true);
            this.agGridColumnApi.setColumnVisible(this.secondaryDocumentReferenceColumn, true);
            this.agGridColumnApi.setColumnVisible(this.externalDocumentReferenceColumn, true);
            this.agGridColumnApi.setColumnVisible(this.costCenterColumn, true);
            this.agGridColumnApi.setColumnVisible(this.dealNumberColumn, false);
            this.agGridColumnApi.setColumnVisible(this.settlementCurrencyColumn, false);
        }
        else {
            var lastDateOfMonth = this.companyManager.getCurrentCompanyDate();
            this.isMtmSelected = true;
            this.isAccrualSelected = false;
            var previousMonth = lastDateOfMonth.subtract(1, 'months');
            this.docDateFormCtrl.patchValue(previousMonth.endOf('month'));
            this.accPeriodFormCtrl.patchValue(lastDateOfMonth);
            this.agGridColumnApi.setColumnVisible(this.dealNumberColumn, true);
            this.agGridColumnApi.setColumnVisible(this.settlementCurrencyColumn, true);
            this.agGridColumnApi.setColumnVisible(this.accrualNumberColumn, true);
            this.agGridColumnApi.setColumnVisible(this.clientAccountColumn, false);
            this.agGridColumnApi.setColumnVisible(this.secondaryDocumentReferenceColumn, false);
            this.agGridColumnApi.setColumnVisible(this.externalDocumentReferenceColumn, false);
            this.agGridColumnApi.setColumnVisible(this.costCenterColumn, false);
            if (this.filteredAccountLineType && this.filteredAccountLineType.length > 0) {
                this.filteredAccountLineType.forEach(function (account) {
                    if (account.accountLineTypeCode === 'L' || account.accountLineTypeCode == 'B') {
                        _this.filteredAccountLineTypeForMtm.push(account);
                    }
                });
            }
        }
        this.agGridColumnApi.setColumnVisible(this.provinceColumn, this.companyConfiguration.isProvinceEnable);
        this.agGridColumnApi.setColumnVisible(this.branchColumn, this.companyConfiguration.isProvinceEnable);
        this.initializeGridColumns();
    };
    AccountingCreationComponent.prototype.onAddAccountingLineButtonClicked = function (numberOfLines) {
        for (var count = 1; count <= numberOfLines; count++) {
            var newItem = new _shared_entities_manual_journal_document_line_entity__WEBPACK_IMPORTED_MODULE_14__["ManualJournalLine"]();
            this.createAccountingDocumentLines.push(newItem);
            this.agGridApi.updateRowData({ add: [newItem] });
        }
    };
    AccountingCreationComponent.prototype.onSaveButtonClicked = function () {
        this.isSave = true;
        this.agGridApi.stopEditing();
        if (this.createDocumentFormGroup.valid) {
            var errorMessage = this.validateGridData();
            if (errorMessage === this.noErrorMessage) {
                this.checkAccrualNumber();
            }
            else if (errorMessage === '') {
                this.snackbarService.throwErrorSnackBar('Please fill atleast one grid row');
            }
            else {
                this.snackbarService.throwErrorSnackBar(errorMessage);
            }
        }
        else {
            this.snackbarService.throwErrorSnackBar('Form is invalid. Please resolve the errors.');
        }
    };
    AccountingCreationComponent.prototype.validateGridData = function () {
        var _this = this;
        var isAnyRowDirty;
        var isRowDataValid = true;
        var isNotValid;
        var errorMessage = this.noErrorMessage;
        this.agGridApi.forEachNode(function (rowData) {
            if (rowData.data.isDirty && isRowDataValid) {
                isAnyRowDirty = true;
                isRowDataValid = true;
                var columnList = _this.accountCreationConfiguration.filter(function (x) { return x.isMandatory; });
                columnList.forEach(function (column) {
                    if (isRowDataValid) {
                        isRowDataValid = _this.validateGrid(column.id, rowData);
                        if (rowData.data.quantity && rowData.data.quantity < 0) {
                            errorMessage = 'The Quantity cannot be negative.';
                        }
                        else if ((_this.isAccrualSelected || _this.isMtmSelected) && (!rowData.data.accrualNumber)) {
                            errorMessage = 'Accrual numbers are mandatory';
                        }
                        else if (_this.authForCtrl.value && _this.totalAmount !== 0) {
                            errorMessage = 'Total amount should be zero';
                        }
                        else if (!isRowDataValid) {
                            errorMessage = 'Grid data is invalid. Please resolve the errors.';
                        }
                        if (_this.companyConfiguration && _this.companyConfiguration.isProvinceEnable) {
                            if (_this.isNullEmptyOrRequiredString(rowData.data.provinceId)
                                || _this.isNullEmptyOrRequiredString(rowData.data.branchId)) {
                                errorMessage = 'Grid data is invalid. Please resolve the errors.';
                            }
                        }
                    }
                });
            }
        });
        return isAnyRowDirty ? errorMessage : '';
    };
    AccountingCreationComponent.prototype.isNullEmptyOrRequiredString = function (value) {
        return value === null || value === '' || value === this.requiredString;
    };
    AccountingCreationComponent.prototype.checkAccrualNumber = function () {
        var _this = this;
        if (!this.authForCtrl.value) {
            var confirmDialog = this.dialog.open(_shared_components_confirmation_dialog_confirmation_dialog_component__WEBPACK_IMPORTED_MODULE_10__["ConfirmationDialogComponent"], {
                data: {
                    title: 'Warning Message',
                    text: 'The document is not authorized for posting : Continue with Save ?',
                    okButton: 'Yes',
                    cancelButton: 'No',
                },
            });
            confirmDialog.afterClosed().subscribe(function (answer) {
                if (answer) {
                    _this.afterValidationChecksPassed();
                }
            });
        }
        else {
            var groupByAccrual_1 = [];
            var isValid_1 = true;
            this.agGridApi.forEachNode(function (document) {
                groupByAccrual_1[document.data.accrualNumber] = groupByAccrual_1[document.data.accrualNumber] || [];
                groupByAccrual_1[document.data.accrualNumber].push({ amount: !document.data.fullAmount ? Number(document.data.amount) : document.data.fullAmount });
            });
            groupByAccrual_1.forEach(function (array) {
                if (isValid_1) {
                    var totalSubAmount_1 = 0;
                    array.forEach(function (element) { totalSubAmount_1 = totalSubAmount_1 + element.amount; });
                    if (totalSubAmount_1 !== 0) {
                        isValid_1 = false;
                        _this.snackbarService.throwErrorSnackBar('Accrual numbers : Invalid format. Rows flagged with the same accrual numbers must be balanced (Amount=0.00)');
                    }
                }
            });
            if (isValid_1) {
                this.afterValidationChecksPassed();
            }
        }
    };
    AccountingCreationComponent.prototype.afterValidationChecksPassed = function () {
        var _this = this;
        this.createAccountingDocumentLines = this.getGridData();
        if (this.createAccountingDocumentLines) {
            this.createAccountingDocumentLines.forEach(function (docLine) {
                if (docLine.accountReferenceId && typeof docLine.accountReferenceId !== 'number') {
                    var accountReferenceId = _this.masterdata.nominalAccounts.find(function (c) { return c.accountNumber === docLine.accountReferenceId.toString(); });
                    if (accountReferenceId) {
                        docLine.accountReferenceId = accountReferenceId.nominalAccountId;
                    }
                }
                if (docLine.clientAccountId && typeof docLine.clientAccountId !== 'number') {
                    var clientAccountId = _this.masterdata.counterparties.find(function (c) { return c.counterpartyCode === docLine.clientAccountId.toString(); });
                    if (clientAccountId) {
                        docLine.clientAccountId = clientAccountId.counterpartyID;
                    }
                }
                if (docLine.costTypeId && typeof docLine.costTypeId !== 'number') {
                    var costTypeId = _this.masterdata.costTypes.find(function (c) { return c.costTypeCode === docLine.costTypeId.toString(); });
                    if (costTypeId) {
                        docLine.costTypeId = costTypeId.costTypeId;
                    }
                }
                if (docLine.associatedAccountId && typeof docLine.associatedAccountId !== 'number') {
                    var associatedAccountId = _this.masterdata.counterparties.find(function (associatedAcc) {
                        return associatedAcc.counterpartyCode === docLine.associatedAccountId.toString();
                    });
                    if (associatedAccountId) {
                        docLine.associatedAccountId = associatedAccountId.counterpartyID;
                    }
                }
                if (docLine.accountLineTypeId && typeof docLine.accountLineTypeId !== 'number') {
                    var accountLineType = _this.masterdata.accountLineTypes.find(function (accountLine) {
                        return accountLine.accountLineTypeCode === docLine.accountLineTypeId.toString();
                    });
                    if (accountLineType) {
                        docLine.accountLineTypeId = accountLineType.accountLineTypeId;
                    }
                }
                if (docLine.departmentId && typeof docLine.departmentId !== 'number') {
                    var department = _this.masterdata.departments.find(function (dept) {
                        return dept.departmentCode === docLine.departmentId.toString();
                    });
                    if (department) {
                        docLine.departmentId = department.departmentId;
                    }
                }
                if (docLine.sectionId && typeof docLine.sectionId !== 'number') {
                    var contracts = _this.filteredContracts.find(function (contract) {
                        return contract.contractLabel === docLine.sectionId.toString();
                    });
                    if (contracts) {
                        docLine.sectionId = contracts.sectionId;
                    }
                }
                if (docLine.commodityId && typeof docLine.commodityId !== 'number') {
                    var commoditymatched = _this.filteredCommodityList.find(function (commodity) {
                        return commodity.commodityCode === docLine.commodityId.toString();
                    });
                    if (commoditymatched) {
                        docLine.commodityId = commoditymatched.commodityId.toString();
                    }
                }
                if (docLine.charterId && typeof docLine.charterId !== 'number') {
                    var charterMatched = _this.filteredCharter.find(function (charter) {
                        return charter.charterCode === docLine.charterId.toString();
                    });
                    if (charterMatched) {
                        docLine.charterId = charterMatched.charterId;
                    }
                }
                if (docLine.provinceId && typeof docLine.provinceId !== 'number') {
                    var provinceId = _this.masterdata.provinces.find(function (province) {
                        return province.stateCode === docLine.provinceId.toString();
                    });
                    if (provinceId) {
                        docLine.provinceId = provinceId.provinceId;
                    }
                }
            });
        }
        var manualJournalDocument = new _shared_entities_manual_journal_document_entity__WEBPACK_IMPORTED_MODULE_15__["ManualJournalDocument"](this.createAccountingDocumentLines);
        manualJournalDocument.valueDate = this.valueDateFormCtrl.value;
        manualJournalDocument.documentDate = this.documentDateSelected ? this.documentDateSelected : this.docDateFormCtrl.value;
        manualJournalDocument.currencyCode = this.currencyCtrl.value.currencyCode;
        manualJournalDocument.accountingPeriod = this.accPeriodFormCtrl.value;
        manualJournalDocument.authorizedForPosting = this.authForCtrl.value;
        manualJournalDocument.toInterface = this.interfaceCtrl.value;
        manualJournalDocument.transactionDocumentTypeId = (this.isAccrualSelected === true || this.isMtmSelected) ? _shared_enums_posting_document_type_enum__WEBPACK_IMPORTED_MODULE_17__["PostingDocumentType"].TA : _shared_enums_posting_document_type_enum__WEBPACK_IMPORTED_MODULE_17__["PostingDocumentType"].JL;
        manualJournalDocument.taTypeId = (this.isMtmSelected) ? 3 : null;
        this.requiredString = '';
        this.manualJournalDocument = manualJournalDocument;
        this.isLoadingassign = true;
        this.subscription.push(this.executionService.createManualJournal(this.manualJournalDocument).subscribe(function (data) {
            _this.isSummaryView = true;
            _this.isLoadingassign = false;
            _this.initializeGridColumns();
            _this.agGridColumnApi.setColumnVisible(_this.createLineMenu, false);
            if ((data.costAlternativeCode && data.departmentAlternativeCode
                && data.nominalAlternativeAccount) || !manualJournalDocument.toInterface) {
                if (_this.isAccrualSelected || _this.isMtmSelected) {
                    _this.authForCtrl.value === true ?
                        _this.snackbarService.informationAndCopySnackBar('Accrual and autoreversal '
                            + data.documentReference + ' has been created', data.documentReference) :
                        _this.snackbarService.informationAndCopySnackBar('Accrual ' + data.documentReference
                            + ' has been created', data.documentReference);
                }
                else {
                    _this.snackbarService.informationAndCopySnackBar('Regular journal '
                        + data.documentReference + ' has been created', data.documentReference);
                }
            }
            else {
                _this.showMappingErrorMessage(data);
            }
        }));
    };
    AccountingCreationComponent.prototype.showMappingErrorMessage = function (data) {
        if (!data.costAlternativeCode) {
            this.mappingFields.push('"Cost Alternative Code"');
        }
        if (!data.departmentAlternativeCode) {
            this.mappingFields.push('"Department Alternative Code"');
        }
        if (!data.nominalAlternativeAccount) {
            this.mappingFields.push('"Nominal Account"');
        }
        if (!data.c2CCode) {
            this.mappingFields.push('"C2C Code"');
        }
        var mappingErrorFields = this.mappingFields.join(', ');
        var message = 'The document ' + data.documentReference +
            ' will not be sent to the accounting interface because the accounting interface code for '
            + mappingErrorFields + ' is/are not filled in. Please contact the accountant';
        this.snackbarService.informationAndCopySnackBar(message, message);
    };
    AccountingCreationComponent.prototype.getValueForCell = function (currentValue, list, propertyToCompare, returnProperty) {
        var filteredObject = ((currentValue === null ||
            currentValue.trim() === '') ? null :
            list.find(function (obj) {
                return obj[propertyToCompare] ? obj[propertyToCompare].toUpperCase() === currentValue.toUpperCase() : false;
            }));
        if (filteredObject) {
            return filteredObject[returnProperty];
        }
        return null;
    };
    AccountingCreationComponent.prototype.getGridData = function () {
        var _this = this;
        var accountingDocumentLines = new Array();
        var isRowDataValid;
        this.agGridApi.forEachNode(function (rowData) {
            if (rowData.data.isDirty) {
                isRowDataValid = false;
                _this.columnDefs.forEach(function (column) {
                    if (!isRowDataValid) {
                        isRowDataValid = _this.validateEmpty(column.colId, rowData);
                    }
                });
                if (isRowDataValid) {
                    rowData.data.amount = rowData.data.fullAmount ? rowData.data.fullAmount : rowData.data.amount;
                    rowData.data.quantity = rowData.data.fullQuantity ? rowData.data.fullQuantity : rowData.data.quantity;
                    accountingDocumentLines.push(rowData.data);
                }
            }
        });
        return accountingDocumentLines;
    };
    AccountingCreationComponent.prototype.onDiscardButtonClicked = function () {
        var _this = this;
        this.isSave = true;
        if (!this.isSummaryView) {
            var confirmDiscardDialog = this.dialog.open(_shared_components_confirmation_dialog_confirmation_dialog_component__WEBPACK_IMPORTED_MODULE_10__["ConfirmationDialogComponent"], {
                data: {
                    title: 'Discard Changes',
                    text: 'You have some modification pending. Close and lose changes?',
                    okButton: 'Ok',
                    cancelButton: 'Cancel',
                },
            });
            confirmDiscardDialog.afterClosed().subscribe(function (answer) {
                if (answer) {
                    _this.router.navigate(['/' + _this.companyManager.getCurrentCompanyId() + '/financial/accounting/entries']);
                }
            });
        }
        else {
            if (!this.authForCtrl.value) {
                this.router.navigate(['/' + this.companyManager.getCurrentCompanyId() + '/financial/posting/management']);
            }
            else {
                this.router.navigate(['/' + this.companyManager.getCurrentCompanyId() + '/financial/accounting/entries']);
            }
        }
    };
    AccountingCreationComponent.prototype.isValueDateBeforeDocumentDate = function () {
        var result = Object(_shared_validators_date_validators_validator__WEBPACK_IMPORTED_MODULE_29__["isDateTwoBeforeDateOne"])(this.documentDateSelected ? this.documentDateSelected : this.docDateFormCtrl.value, this.valueDateFormCtrl.value);
        if (result) {
            return result;
        }
    };
    AccountingCreationComponent.prototype.setValidators = function () {
        this.currencyCtrl.setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].compose([
            Object(_shared_directives_autocomplete_dropdown_directive__WEBPACK_IMPORTED_MODULE_11__["inDropdownListValidator"])(this.masterdata.currencies, Object(_shared_services_util_service__WEBPACK_IMPORTED_MODULE_28__["nameof"])('currencyCode')),
        ]));
        this.currencyCtrl.setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]));
        if (this.accountCreationConfiguration.length > 0) {
            if (this.isRequired('accountingPeriod')) {
                this.accPeriodFormCtrl.setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]));
            }
            this.docDateFormCtrl.setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]));
            if (this.isRequired('valueDate')) {
                this.valueDateFormCtrl.setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]));
            }
        }
    };
    AccountingCreationComponent.prototype.formatPrice = function (value) {
        var indexOf = value.toString().indexOf('.');
        if (indexOf !== -1) {
            var remainingLength = value.toString().length - indexOf;
            if (remainingLength > 3) {
                return value.toString().substr(0, indexOf + 3);
            }
        }
        return value.toString();
    };
    AccountingCreationComponent.prototype.onCellValueChanged = function (params) {
        var _this = this;
        if (params.oldValue !== params.newValue) {
            params.node.data.isDirty = true;
            if (params.colDef) {
                var columnChanged = params.colDef.field;
                if (columnChanged === this.quantityColumn) {
                    params.data.fullQuantity = params.newValue;
                    params.data.quantity = params.newValue;
                    if (params.newValue < 0) {
                        this.snackbarService.throwErrorSnackBar('The Quantity cannot be negative.');
                    }
                }
                if (columnChanged === this.amountColumn) {
                    params.data.fullAmount = params.newValue;
                    params.data.amount = params.newValue;
                    this.totalAmount = 0;
                    var totalAmountAtlasNumber = new _shared_entities_atlas_number_entity__WEBPACK_IMPORTED_MODULE_13__["AtlasNumber"]('0');
                    this.agGridApi.forEachNode(function (rownode) {
                        if (rownode.data.fullAmount === 0) {
                            rownode.data.fullAmount = null;
                        }
                        if (rownode.data.fullAmount) {
                            _this.calculateTotalAmount();
                        }
                    });
                    if (Number(params.newValue) === 0) {
                        this.snackbarService.throwErrorSnackBar('Amount cannot be zero');
                    }
                }
                else if (columnChanged === this.nominalAccount) {
                    if (this.nominalAccountFound && this.nominalAccountFound.clientAccountMandatory === 1) {
                        if (params.data && !params.data.clientAccountId) {
                            params.node.setDataValue('clientAccountId', this.requiredString);
                        }
                    }
                }
            }
        }
    };
    AccountingCreationComponent.prototype.initializeGridColumns = function () {
        var _this = this;
        this.columnDefs = [
            {
                headerName: 'Nom. Account',
                colId: 'accountReferenceId',
                field: 'accountReferenceId',
                suppressToolPanel: true,
                lockPosition: true,
                cellRendererFramework: _shared_components_ag_grid_contextual_search_ag_grid_contextual_search_component__WEBPACK_IMPORTED_MODULE_8__["AgGridContextualSearchComponent"],
                cellRendererParams: function (params) {
                    return {
                        context: {
                            componentParent: _this,
                            gridEditable: _this.isGridEditable(),
                        },
                        gridId: 'nominalAccountsGrid',
                        isRequired: _this.isRequired('accountReferenceId'),
                        options: _this.filteredNominalAccountList,
                        displayProperty: 'accountNumber',
                        codeProperty: 'accountNumber',
                        descriptionProperty: 'detailedDescription',
                        valueProperty: 'nominalAccountId',
                        lightBoxTitle: 'Results for Nominal Accounts',
                        showContextualSearchIcon: !_this.isSummaryView,
                    };
                },
                onCellValueChanged: this.onNominalAccountSelected.bind(this),
                tooltip: function (params) { return _this.getTooltip(params, 'detailedDescription', 'accountNumber', _this.filteredNominalAccountList); },
            },
            {
                headerName: 'Cli. account',
                colId: 'clientAccountId',
                field: 'clientAccountId',
                suppressToolPanel: true,
                lockPosition: true,
                cellRendererFramework: _shared_components_ag_grid_contextual_search_ag_grid_contextual_search_component__WEBPACK_IMPORTED_MODULE_8__["AgGridContextualSearchComponent"],
                cellRendererParams: function (params) {
                    var isClientAccountRequired = false;
                    if (params.data && params.data.clientAccountId === '') {
                        isClientAccountRequired = true;
                    }
                    return {
                        context: {
                            componentParent: _this,
                            gridEditable: _this.isGridEditable(),
                        },
                        gridId: 'counterpartiesGrid',
                        options: _this.filteredCounterpartyList,
                        isRequired: isClientAccountRequired,
                        displayProperty: 'counterpartyCode',
                        codeProperty: 'counterpartyCode',
                        descriptionProperty: 'description',
                        valueProperty: 'counterpartyID',
                        lightBoxTitle: 'Results for Counterparty',
                        showContextualSearchIcon: !_this.isSummaryView,
                    };
                },
                onCellValueChanged: this.onClientAccountSelected.bind(this),
                tooltip: function (params) { return _this.getTooltip(params, 'description', 'counterpartyCode', _this.filteredCounterpartyList); },
            },
            {
                headerName: 'Associated Acc.',
                colId: 'associatedAccountId',
                field: 'associatedAccountId',
                suppressToolPanel: true,
                lockPosition: true,
                cellRendererFramework: _shared_components_ag_grid_contextual_search_ag_grid_contextual_search_component__WEBPACK_IMPORTED_MODULE_8__["AgGridContextualSearchComponent"],
                cellRendererParams: function (params) {
                    return {
                        context: {
                            componentParent: _this,
                            gridEditable: _this.isGridEditable(),
                        },
                        gridId: 'counterpartiesGrid',
                        options: _this.filteredCounterpartyList,
                        // isRequired: (this.isMtmSelected) ? this.isRequired('associatedAccountId') : false,
                        isRequired: _this.isRequired('associatedAccountId'),
                        displayProperty: 'counterpartyCode',
                        codeProperty: 'counterpartyCode',
                        descriptionProperty: 'description',
                        valueProperty: 'counterpartyID',
                        lightBoxTitle: 'Results for Counterparty',
                        showContextualSearchIcon: !_this.isSummaryView,
                    };
                },
                onCellValueChanged: this.onClientAccountSelected.bind(this),
                tooltip: function (params) { return _this.getTooltip(params, 'description', 'counterpartyCode', _this.filteredCounterpartyList); },
            },
            {
                headerName: 'Acc. L. Type',
                colId: 'accountLineTypeId',
                field: 'accountLineTypeId',
                suppressToolPanel: true,
                lockPosition: true,
                cellRendererFramework: _shared_components_ag_grid_contextual_search_ag_grid_contextual_search_component__WEBPACK_IMPORTED_MODULE_8__["AgGridContextualSearchComponent"],
                cellRendererParams: function (params) {
                    return {
                        context: {
                            componentParent: _this,
                            gridEditable: _this.isGridEditable(),
                        },
                        gridId: 'accountLineTypeGrid',
                        options: (_this.isMtmSelected) ? _this.filteredAccountLineTypeForMtm : _this.filteredAccountLineType,
                        isRequired: _this.isRequired('accountLineTypeId'),
                        displayProperty: 'accountLineTypeCode',
                        codeProperty: 'accountLineTypeCode',
                        descriptionProperty: 'description',
                        valueProperty: 'accountLineTypeId',
                        lightBoxTitle: 'Results for  Account Line Type',
                        showContextualSearchIcon: !_this.isSummaryView,
                        filterContextualSearchFunction: _this.filterAccountLineTypes.bind(_this),
                    };
                },
                onCellValueChanged: this.setProvinceAndBranchValue.bind(this),
                tooltip: function (params) { return _this.getTooltip(params, 'description', 'accountLineTypeCode', _this.filteredAccountLineType); },
            },
            {
                headerName: 'Cost types',
                colId: 'costTypeId',
                field: 'costTypeId',
                suppressToolPanel: true,
                lockPosition: true,
                cellRendererFramework: _shared_components_ag_grid_contextual_search_ag_grid_contextual_search_component__WEBPACK_IMPORTED_MODULE_8__["AgGridContextualSearchComponent"],
                cellRendererParams: function (params) {
                    return {
                        context: {
                            componentParent: _this,
                            gridEditable: _this.isGridEditable(),
                        },
                        isEditable: true,
                        gridId: 'costTypesGrid',
                        isRequired: _this.isRequired('costTypeId'),
                        displayProperty: 'costTypeCode',
                        codeProperty: 'costTypeCode',
                        descriptionProperty: 'name',
                        valueProperty: 'costTypeId',
                        lightBoxTitle: 'Results for Cost',
                        options: _this.filteredCostTypeList,
                        showContextualSearchIcon: !_this.isSummaryView,
                    };
                },
                onCellValueChanged: this.setProvinceAndBranchValue.bind(this),
                tooltip: function (params) { return _this.getTooltip(params, 'name', 'costTypeCode', _this.filteredCostTypeList); },
            },
            {
                headerName: 'Amount',
                colId: 'amount',
                field: 'amount',
                type: 'numericColumn',
                suppressToolPanel: true,
                lockPosition: true,
                editable: this.isGridEditable.bind(this),
                valueFormatter: this.numberFormatter,
                cellRenderer: this.requiredCell.bind(this),
                cellEditor: 'atlasNumeric',
                cellEditorParams: {
                    displayMask: Object(_shared_numberMask__WEBPACK_IMPORTED_MODULE_34__["CustomNumberMask"])(15, 10, true),
                    isRightAligned: false,
                },
                onCellValueChanged: this.setProvinceAndBranchValue.bind(this),
            },
            {
                headerName: 'Narrative',
                colId: 'narrative',
                field: 'narrative',
                suppressToolPanel: true,
                lockPosition: true,
                cellRenderer: this.requiredCell.bind(this),
                editable: this.isGridEditable.bind(this),
            },
            {
                headerName: 'Dept',
                colId: 'departmentId',
                field: 'departmentId',
                suppressToolPanel: true,
                lockPosition: true,
                cellRendererFramework: _shared_components_ag_grid_contextual_search_ag_grid_contextual_search_component__WEBPACK_IMPORTED_MODULE_8__["AgGridContextualSearchComponent"],
                cellRendererParams: function (params) {
                    return {
                        context: {
                            componentParent: _this,
                            gridEditable: _this.isGridEditable(),
                        },
                        gridId: 'departmentsGrid',
                        isRequired: _this.isRequired('departmentId'),
                        displayProperty: 'departmentCode',
                        codeProperty: 'departmentCode',
                        descriptionProperty: 'description',
                        valueProperty: 'departmentId',
                        lightBoxTitle: 'Results for Departments',
                        options: _this.filteredDepartmentList,
                        showContextualSearchIcon: !_this.isSummaryView,
                    };
                },
                onCellValueChanged: this.setProvinceAndBranchValue.bind(this),
                tooltip: function (params) { return _this.getTooltip(params, 'description', 'departmentCode', _this.filteredDepartmentList); },
            },
            {
                headerName: 'Sec. Doc. Ref',
                colId: 'secondaryDocumentReference',
                field: 'secondaryDocumentReference',
                suppressToolPanel: true,
                lockPosition: true,
                cellRendererFramework: _shared_components_ag_grid_contextual_search_ag_grid_contextual_search_component__WEBPACK_IMPORTED_MODULE_8__["AgGridContextualSearchComponent"],
                cellRendererParams: function (params) {
                    return {
                        context: {
                            componentParent: _this,
                            gridEditable: _this.isGridEditable(),
                        },
                        gridId: 'transactionDocumentGrid',
                        isRequired: _this.isRequired('secondaryDocumentReference'),
                        valueProperty: 'docRef',
                        displayProperty: 'docRef',
                        lightBoxTitle: 'Results for Transaction Documents',
                        options: _this.filteredDocuments,
                        showContextualSearchIcon: !_this.isSummaryView,
                    };
                },
                tooltip: function (params) {
                    return params.value ? params.value : null;
                },
            },
            {
                headerName: 'Ext. Doc. Ref',
                colId: 'externalDocumentReference',
                field: 'externalDocumentReference',
                suppressToolPanel: true,
                lockPosition: true,
                editable: this.isGridEditable.bind(this),
            },
            {
                headerName: 'Contract ref.',
                colId: 'sectionId',
                field: 'sectionId',
                suppressToolPanel: true,
                lockPosition: true,
                cellRendererFramework: _shared_components_ag_grid_contextual_search_ag_grid_contextual_search_component__WEBPACK_IMPORTED_MODULE_8__["AgGridContextualSearchComponent"],
                cellRendererParams: function (params) {
                    var isContractRefEditable = false;
                    if (params.data && (params.data.dealNumber === '' || params.data.dealNumber === null)) {
                        isContractRefEditable = true;
                    }
                    return {
                        context: {
                            componentParent: _this,
                            gridEditable: (_this.isGridEditable() && isContractRefEditable),
                        },
                        gridId: 'tradeList',
                        isRequired: isContractRefEditable ? _this.isRequired('sectionId') : false,
                        displayProperty: 'contractLabel',
                        valueProperty: 'sectionId',
                        lightBoxTitle: 'Results for Contracts',
                        dataLoader: _this.tradeDataLoader,
                        options: _this.filteredContracts,
                        showContextualSearchIcon: (!_this.isSummaryView && isContractRefEditable),
                    };
                },
                tooltip: function (params) {
                    return params.value ? params.value : null;
                },
                onCellValueChanged: this.onContractSelected.bind(this),
            },
            {
                headerName: 'Deal No.',
                colId: 'dealNumber',
                field: 'dealNumber',
                suppressToolPanel: true,
                lockPosition: true,
                cellRendererFramework: _shared_components_ag_grid_contextual_search_ag_grid_contextual_search_component__WEBPACK_IMPORTED_MODULE_8__["AgGridContextualSearchComponent"],
                cellRendererParams: function (params) {
                    var isDealNumberEditable = false;
                    if (params.data && (params.data.sectionId === '' || params.data.sectionId === null)) {
                        isDealNumberEditable = true;
                    }
                    return {
                        context: {
                            componentParent: _this,
                            gridEditable: (_this.isGridEditable() && isDealNumberEditable),
                        },
                        gridId: 'fxDealList',
                        isRequired: (isDealNumberEditable) ? _this.isRequired('dealNumber') : false,
                        displayProperty: 'dealNumber',
                        valueProperty: 'dealNumber',
                        lightBoxTitle: 'Results for FxDeals',
                        dataLoader: _this.fxDealLoader,
                        options: _this.filteredFxDeals,
                        showContextualSearchIcon: (!_this.isSummaryView && isDealNumberEditable),
                    };
                },
                onCellValueChanged: this.onDealNumberSelected.bind(this),
                tooltip: function (params) {
                    return params.value ? params.value : null;
                },
            },
            {
                headerName: 'Settlement Ccy.',
                colId: 'settlementCurrency',
                field: 'settlementCurrency',
                suppressToolPanel: true,
                lockPosition: true,
                cellRendererFramework: _shared_components_ag_grid_contextual_search_ag_grid_contextual_search_component__WEBPACK_IMPORTED_MODULE_8__["AgGridContextualSearchComponent"],
                cellRendererParams: function (params) {
                    var isSettlementCurrencyEditable = false;
                    if (params.data && (params.data.sectionId === '' || params.data.sectionId === null)) {
                        isSettlementCurrencyEditable = true;
                    }
                    return {
                        context: {
                            componentParent: _this,
                            gridEditable: (isSettlementCurrencyEditable && _this.isGridEditable()),
                        },
                        gridId: 'currenciesGrid',
                        isRequired: (isSettlementCurrencyEditable) ? _this.isRequired('settlementCurrency') : false,
                        displayProperty: 'currencyCode',
                        codeProperty: 'currencyCode',
                        descriptionProperty: 'description',
                        valueProperty: 'currencyCode',
                        lightBoxTitle: 'Results for Currencies',
                        options: _this.filteredSettlementCurrencyList,
                        showContextualSearchIcon: (!_this.isSummaryView && isSettlementCurrencyEditable),
                    };
                },
                onCellValueChanged: function (params) { return _this.onValueSelected(params, 'currencyCode', 'Currency', 'currencyCode', _this.filteredCurrencyList, _this.requiredString); },
                tooltip: function (params) { return _this.getTooltip(params, 'description', 'currencyCode', _this.filteredCurrencyList); },
            },
            {
                headerName: 'Province',
                colId: 'provinceId',
                field: 'provinceId',
                suppressToolPanel: true,
                lockPosition: true,
                cellRendererFramework: _shared_components_ag_grid_contextual_search_ag_grid_contextual_search_component__WEBPACK_IMPORTED_MODULE_8__["AgGridContextualSearchComponent"],
                cellRendererParams: function (params) {
                    return {
                        context: {
                            componentParent: _this,
                            gridEditable: _this.isGridEditable(),
                        },
                        gridId: 'provincesMasterData',
                        isRequired: _this.companyConfiguration && _this.companyConfiguration.isProvinceEnable,
                        displayProperty: 'stateCode',
                        codeProperty: 'stateCode',
                        descriptionProperty: 'description',
                        valueProperty: 'provinceId',
                        lightBoxTitle: 'Results for Provinces',
                        options: _this.filteredProvinceList,
                        showContextualSearchIcon: !_this.isSummaryView,
                    };
                },
                tooltip: function (params) { return _this.getTooltip(params, 'description', 'stateCode', _this.filteredProvinceList); },
            },
            {
                headerName: 'Branch',
                colId: 'branchId',
                field: 'branchId',
                suppressToolPanel: true,
                lockPosition: true,
                cellRendererFramework: _shared_components_ag_grid_contextual_search_ag_grid_contextual_search_component__WEBPACK_IMPORTED_MODULE_8__["AgGridContextualSearchComponent"],
                cellRendererParams: function (params) {
                    return {
                        context: {
                            componentParent: _this,
                            gridEditable: _this.isGridEditable(),
                        },
                        gridId: 'branchMasterData',
                        isRequired: _this.companyConfiguration && _this.companyConfiguration.isProvinceEnable,
                        displayProperty: 'branchCode',
                        codeProperty: 'branchCode',
                        descriptionProperty: 'description',
                        valueProperty: 'branchId',
                        lightBoxTitle: 'Results for Branch',
                        options: _this.filteredBranchList,
                        showContextualSearchIcon: !_this.isSummaryView,
                    };
                },
                tooltip: function (params) { return _this.getTooltip(params, 'description', 'branchCode', _this.filteredBranchList); },
            },
            {
                headerName: 'Cmy',
                colId: 'commodityId',
                field: 'commodityId',
                suppressToolPanel: true,
                lockPosition: true,
                cellRendererFramework: _shared_components_ag_grid_contextual_search_ag_grid_contextual_search_component__WEBPACK_IMPORTED_MODULE_8__["AgGridContextualSearchComponent"],
                cellRendererParams: function (params) {
                    var isCommodityEditable = false;
                    if (params.data && (params.data.dealNumber === '' || params.data.dealNumber === null)) {
                        isCommodityEditable = true;
                    }
                    return {
                        context: {
                            componentParent: _this,
                            gridEditable: (_this.isGridEditable() && isCommodityEditable),
                        },
                        gridId: 'commodityGrid',
                        isRequired: isCommodityEditable ? _this.isRequired('commodityId') : false,
                        displayProperty: 'commodityCode',
                        codeProperty: 'commodityCode',
                        descriptionProperty: 'commodityDescription',
                        valueProperty: 'commodityId',
                        lightBoxTitle: 'Results for Commodities',
                        options: _this.filteredCommodityList,
                        showContextualSearchIcon: (!_this.isSummaryView && isCommodityEditable),
                    };
                },
                tooltip: function (params) { return _this.getTooltip(params, 'commodityDescription', 'commodityCode', _this.filteredCommodityList); },
            },
            {
                headerName: 'Qty',
                colId: 'quantity',
                field: 'quantity',
                type: 'numericColumn',
                suppressToolPanel: true,
                lockPosition: true,
                editable: this.isGridEditable.bind(this),
                cellEditor: 'atlasNumeric',
                cellRenderer: this.requiredCell.bind(this),
                cellEditorParams: {
                    displayMask: Object(_shared_numberMask__WEBPACK_IMPORTED_MODULE_34__["CustomNumberMask"])(12, 10, true),
                    isRightAligned: false,
                },
                tooltip: function (params) {
                    return params.value;
                },
            },
            {
                headerName: 'Charter',
                colId: 'charterId',
                field: 'charterId',
                suppressToolPanel: true,
                lockPosition: true,
                cellRendererFramework: _shared_components_ag_grid_contextual_search_ag_grid_contextual_search_component__WEBPACK_IMPORTED_MODULE_8__["AgGridContextualSearchComponent"],
                cellRendererParams: function (params) {
                    return {
                        context: {
                            componentParent: _this,
                            gridEditable: _this.isGridEditable(),
                        },
                        gridId: 'charterGrid',
                        isRequired: _this.isRequired('charterId'),
                        displayProperty: 'charterCode',
                        codeProperty: 'charterCode',
                        descriptionProperty: 'description',
                        valueProperty: 'charterId',
                        lightBoxTitle: 'Results for Charters',
                        options: _this.filteredCharter,
                        showContextualSearchIcon: !_this.isSummaryView,
                    };
                },
                tooltip: function (params) { return _this.getTooltip(params, 'description', 'charterCode', _this.filteredCharter); },
            },
            {
                headerName: 'CC-1',
                colId: 'costCenter',
                field: 'costCenter',
                suppressToolPanel: true,
                lockPosition: true,
                cellRenderer: this.requiredCell.bind(this),
                editable: this.isGridEditable.bind(this),
            },
            {
                colId: 'accrualNumber',
                field: 'accrualNumber',
                suppressToolPanel: true,
                lockPosition: true,
                editable: this.isGridEditable.bind(this),
                cellRenderer: this.requiredCell.bind(this),
                cellEditor: 'atlasNumeric',
                cellEditorParams: {
                    displayMask: Object(_shared_numberMask__WEBPACK_IMPORTED_MODULE_34__["AllNumberMask"])(),
                },
                headerComponentFramework: _shared_components_ag_grid_accrual_number_ag_grid_accrual_number_component__WEBPACK_IMPORTED_MODULE_32__["AgGridAccrualNumberComponent"],
                headerComponentParams: {
                    headerName: 'Accrual n°',
                },
            },
            {
                headerName: '',
                colId: 'createLineMenu',
                suppressToolPanel: true,
                lockPosition: true,
                cellRendererFramework: _shared_components_ag_contextual_menu_ag_contextual_menu_component__WEBPACK_IMPORTED_MODULE_31__["AgContextualMenuComponent"],
                cellRendererParams: {
                    context: {
                        componentParent: this,
                    },
                    menuActions: this.createAccountingDocumentGridContextualMenuActions,
                },
                cellClass: 'ag-contextual-menu',
                width: 60,
            },
        ];
    };
    AccountingCreationComponent.prototype.filterCostTypes = function (value, options, rowData) {
        // filter cost that have the same nominal account
        var filterCostTypeOnAccountType = [];
        // when there is accountReferenceId in params
        if (rowData && rowData.accountReferenceId) {
            var filteredNominalAccount_1 = this.filteredNominalAccountList.find(function (nominalAccount) {
                return nominalAccount.nominalAccountId === rowData.accountReferenceId;
            });
            options.filter(function (costType) {
                // find mathcing nominal account for cost type
                var matchingNominalAccount = costType.nominalAccountCode === filteredNominalAccount_1.accountNumber ||
                    costType.otherAcc === filteredNominalAccount_1.accountNumber;
                if (matchingNominalAccount) {
                    filterCostTypeOnAccountType.push(costType);
                }
            });
            options = filterCostTypeOnAccountType.length > 0 ? filterCostTypeOnAccountType : this.filteredCostTypeList;
        }
        return options;
    };
    AccountingCreationComponent.prototype.filterAccountLineTypes = function (value, options, rowData) {
        var accountLineTypeList = [];
        accountLineTypeList = options;
        if (rowData.accountReferenceId) {
            var nominalAccountSelected = this.filteredNominalAccountList.find(function (nominalAccount) { return nominalAccount.nominalAccountId
                === rowData.accountReferenceId; });
            if (nominalAccountSelected) {
                if (this.isMtmSelected) {
                    if (nominalAccountSelected && nominalAccountSelected.clientAccountMandatory === 1) {
                        accountLineTypeList = options.filter(function (accountType) {
                            return accountType.description === 'Bank';
                        });
                    }
                    else {
                        accountLineTypeList = options.filter(function (accountType) {
                            return accountType.description === 'Ledger';
                        });
                    }
                }
                else {
                    if (nominalAccountSelected && nominalAccountSelected.clientAccountMandatory === 1) {
                        accountLineTypeList = options.filter(function (accountType) {
                            return accountType.description === 'Customer' || accountType.description === 'Vendor';
                        });
                    }
                }
            }
        }
        options = accountLineTypeList;
        return options;
    };
    AccountingCreationComponent.prototype.isGridEditable = function () {
        if (!this.isSummaryView) {
            return true;
        }
        return false;
    };
    AccountingCreationComponent.prototype.isRequired = function (params) {
        if (this.accountCreationConfiguration.length > 0) {
            var result = this.accountCreationConfiguration[this.accountCreationConfiguration.findIndex(function (x) { return x.id === params; })];
            if (result && !this.isSummaryView) {
                return result.isMandatory;
            }
        }
        return false;
    };
    AccountingCreationComponent.prototype.formatQuantity = function (params) {
        if (params.value) {
            return new Intl.NumberFormat('en-US', { minimumFractionDigits: 3, maximumFractionDigits: 3 }).format(params.value);
        }
    };
    AccountingCreationComponent.prototype.requiredCell = function (params) {
        if (!params.value || params.value === '') {
            if (params.colDef.colId === 'accrualNumber') {
                return '<div class=\'document-cell-value-required\'>Required*</div>';
            }
            else if (this.isRequired(params.colDef.colId)) {
                return '<div class=\'document-cell-value-required\'>Required*</div>';
            }
        }
        return params.value;
    };
    AccountingCreationComponent.prototype.ngOnDestroy = function () {
        this.subscription.forEach(function (subscription) {
            if (subscription) {
                subscription.unsubscribe();
            }
        });
    };
    AccountingCreationComponent.prototype.handleAction = function (action, documentLine) {
        var _this = this;
        switch (action) {
            case this.createDocumentMenuActions.copyDocumentLine:
                var newManualLine = new _shared_entities_manual_journal_document_line_entity__WEBPACK_IMPORTED_MODULE_14__["ManualJournalLine"](documentLine);
                this.createAccountingDocumentLines.push(newManualLine);
                this.agGridApi.updateRowData({ add: [newManualLine] });
                this.calculateTotalAmount();
                this.snackbarService.informationSnackBar('Row added successfully at the end of the grid');
                break;
            case this.createDocumentMenuActions.deleteDocumentLine:
                var confirmDialog = this.dialog.open(_shared_components_confirmation_dialog_confirmation_dialog_component__WEBPACK_IMPORTED_MODULE_10__["ConfirmationDialogComponent"], {
                    data: {
                        title: 'Document Line Deletion',
                        text: 'Are you sure you want to delete this line?',
                        okButton: 'Delete anyway',
                        cancelButton: 'Cancel',
                    },
                });
                var confirmationDeleteSubscription = confirmDialog.afterClosed().subscribe(function (answer) {
                    if (answer) {
                        var itemIndex = _this.createAccountingDocumentLines.lastIndexOf(documentLine);
                        _this.createAccountingDocumentLines.splice(itemIndex, 1);
                        _this.agGridApi.updateRowData({ remove: [documentLine] });
                        _this.gridEnlargementComponent.refreshGrid();
                        _this.calculateTotalAmount();
                    }
                });
                this.subscriptions.push(confirmationDeleteSubscription);
                break;
            default: this.assertUnreachable(action);
        }
    };
    AccountingCreationComponent.prototype.calculateTotalAmount = function () {
        var _this = this;
        this.totalAmount = 0;
        this.agGridApi.forEachNode(function (rowData) {
            if (rowData.data.amount) {
                _this.totalAmount = Math.round((_this.totalAmount + Number(rowData.data.amount)) * 100) / 100;
                rowData.data.isDirty = true;
            }
        });
    };
    AccountingCreationComponent.prototype.assertUnreachable = function (x) {
        throw new Error('Unknown action');
    };
    AccountingCreationComponent.prototype.onContractSelected = function (params) {
        if (params.data && params.data.sectionId && !this.isSummaryView) {
            this.initializeGridColumns();
        }
        if (params.newValue && params.oldValue !== params.newValue) {
            var selectedNominalAccount = this.filteredContracts.find(function (contract) { return contract.contractLabel.toUpperCase() === params.newValue.toUpperCase(); });
            if (!selectedNominalAccount) {
                this.snackbarService.throwErrorSnackBar('Not allowed : Contract reference does not exist');
                params.node.setDataValue('sectionId', '');
            }
            else {
                params.node.setDataValue('departmentId', selectedNominalAccount.departmentCode);
                params.node.setDataValue('commodityId', selectedNominalAccount.commodity1);
                params.node.setDataValue('charterId', selectedNominalAccount.charterReference);
            }
        }
    };
    AccountingCreationComponent.prototype.onNominalAccountSelected = function (params) {
        if (params.data && !this.isSummaryView && params.data.accountReferenceId) {
            var selectedNominalAccount = this.filteredNominalAccountList.find(function (nomAcc) {
                return nomAcc.nominalAccountId === params.data.accountReferenceId;
            });
            if (selectedNominalAccount && selectedNominalAccount.clientAccountMandatory === 1) {
                if (this.isMtmSelected) {
                    params.node.setDataValue('accountLineTypeId', 'B');
                }
                if (!params.data.clientAccountId) {
                    params.node.setDataValue('clientAccountId', '');
                }
            }
            else {
                if (this.isMtmSelected) {
                    params.node.setDataValue('accountLineTypeId', 'L');
                }
            }
            if (params.data.costTypeId) {
                params.node.setDataValue('costTypeId', '');
            }
        }
        this.setProvinceAndBranchValue(params);
    };
    AccountingCreationComponent.prototype.setProvinceAndBranchValue = function (params) {
        var _this = this;
        if (!this.isSummaryView && this.companyConfiguration.isProvinceEnable) {
            if (!this.checkNullOrEmpty(params.node.data.accountReferenceId)
                || !this.checkNullOrEmpty(params.node.data.accountLineTypeId)
                || !this.checkNullOrEmpty(params.node.data.amount)
                || !this.checkNullOrEmpty(params.node.data.costTypeId)
                || !this.checkNullOrEmpty(params.node.data.departmentId)
                || !this.checkNullOrEmpty(params.node.data.fullAmount)) {
                if (this.checkNullOrEmpty(params.node.data.provinceId)) {
                    var selectedProvince = this.filteredProvinceList.find(function (p) { return p.provinceId === _this.companyConfiguration.defaultProvinceId; });
                    if (selectedProvince) {
                        params.node.setDataValue('provinceId', selectedProvince.provinceId);
                    }
                }
                if (this.checkNullOrEmpty(params.node.data.branchId)) {
                    var selectedBranch = this.filteredBranchList.find(function (p) { return p.branchId === _this.companyConfiguration.defaultBranchId; });
                    if (selectedBranch) {
                        params.node.setDataValue('branchId', selectedBranch.branchId);
                    }
                }
            }
        }
    };
    AccountingCreationComponent.prototype.checkNullOrEmpty = function (value) {
        if (value === null || value === undefined || value === '') {
            return true;
        }
        return false;
    };
    AccountingCreationComponent.prototype.onClientAccountSelected = function (params) {
        if (params.newValue && params.oldValue !== params.newValue && params.newValue !== this.requiredString) {
            var selectedClientAccount = this.filteredCounterpartyList.find(function (clientAccount) { return clientAccount.counterpartyID === params.newValue; });
            if (!selectedClientAccount) {
                this.snackbarService.throwErrorSnackBar('Not allowed : Client Account does not exist');
                params.colDef.colId === 'clientAccountId' ?
                    params.node.setDataValue('clientAccountId', params.oldValue) :
                    params.node.setDataValue('associatedAccountId', '');
            }
        }
        if (params.colDef.colId === 'clientAccountId' && !this.isSummaryView) {
            params.node.setDataValue('associatedAccountId', params.data.clientAccountId);
        }
    };
    AccountingCreationComponent.prototype.onValueSelected = function (params, columnId, valueName, code, list, requiredString, includeEmpty) {
        if (includeEmpty === void 0) { includeEmpty = false; }
        if (params.newValue !== '' && ((includeEmpty && params.newValue === '') || (params.newValue && params.oldValue !== params.newValue))) {
            var selected = list.find(function (obj) { return obj[code] ? obj[code].toUpperCase() === params.newValue.toUpperCase() : false; });
            if (!selected) {
                this.snackbarService.throwErrorSnackBar('Not allowed : ' + valueName + ' does not exist');
                params.node.setDataValue(columnId, requiredString);
            }
        }
    };
    AccountingCreationComponent.prototype.onAmountChanged = function (params) {
        if (params.newValue && params.oldValue !== params.newValue) {
            params.data.fullAmount = params.newValue;
        }
    };
    AccountingCreationComponent.prototype.onQuantityChanged = function (params) {
        if (params.newValue && params.oldValue !== params.newValue) {
            params.data.fullQuantity = params.newValue;
        }
    };
    AccountingCreationComponent.prototype.OnExportButton = function () {
        var _this = this;
        this.agGridApi.forEachNode(function (node) {
            if (node.data.accountReferenceId && typeof node.data.accountReferenceId === 'number') {
                var nominalAccount = _this.filteredNominalAccountList.find(function (nominalAcc) {
                    return nominalAcc.nominalAccountId === node.data.accountReferenceId;
                });
                if (nominalAccount) {
                    node.data.accountReferenceId = nominalAccount.accountNumber;
                }
            }
            if (node.data.clientAccountId && typeof node.data.clientAccountId === 'number') {
                var clientAccount = _this.filteredCounterpartyList.find(function (client) {
                    return client.counterpartyID === node.data.clientAccountId;
                });
                if (clientAccount) {
                    node.data.clientAccountId = clientAccount.counterpartyCode;
                }
            }
            if (node.data.associatedAccountId && typeof node.data.associatedAccountId === 'number') {
                var associatedAccount = _this.filteredCounterpartyList.find(function (associatedAcc) {
                    return associatedAcc.counterpartyID === node.data.associatedAccountId;
                });
                if (associatedAccount) {
                    node.data.associatedAccountId = associatedAccount.counterpartyCode;
                }
            }
            if (node.data.accountLineTypeId && typeof node.data.accountLineTypeId === 'number') {
                var accountLineType = _this.filteredAccountLineType.find(function (accountLine) {
                    return accountLine.accountLineTypeId === node.data.accountLineTypeId;
                });
                if (accountLineType) {
                    node.data.accountLineTypeId = accountLineType.accountLineTypeCode;
                }
            }
            if (node.data.costTypeId && typeof node.data.costTypeId === 'number') {
                var costType = _this.filteredCostTypeList.find(function (cost) {
                    return cost.costTypeId === node.data.costTypeId;
                });
                if (costType) {
                    node.data.costTypeId = costType.costTypeCode;
                }
            }
            if (node.data.departmentId && typeof node.data.departmentId === 'number') {
                var department = _this.filteredDepartmentList.find(function (dept) {
                    return dept.departmentId === node.data.departmentId;
                });
                if (department) {
                    node.data.departmentId = department.departmentCode;
                }
            }
            if (node.data.sectionId && typeof node.data.sectionId === 'number') {
                var contracts = _this.filteredContracts.find(function (contract) {
                    return contract.sectionId === node.data.sectionId;
                });
                if (contracts) {
                    node.data.sectionId = contracts.contractLabel;
                }
            }
            if (node.data.commodityId && typeof node.data.commodityId === 'number') {
                var commoditymatched = _this.filteredCommodityList.find(function (commodity) {
                    return commodity.commodityId === node.data.commodityId;
                });
                if (commoditymatched) {
                    node.data.commodityId = commoditymatched.commodityCode;
                }
            }
            if (node.data.charterId && typeof node.data.charterId === 'number') {
                var charterMatched = _this.filteredCharter.find(function (charter) {
                    return charter.charterId === node.data.charterId;
                });
                if (charterMatched) {
                    node.data.charterId = charterMatched.charterCode;
                }
            }
        });
    };
    AccountingCreationComponent.prototype.onExportButtonClickedAsExcel = function () {
        this.OnExportButton();
        this.agGridOptions.api.exportDataAsExcel(this.getExportParams('.xlsx'));
    };
    AccountingCreationComponent.prototype.onExportButtonClickedAsCSV = function () {
        this.OnExportButton();
        this.agGridOptions.api.exportDataAsCsv(this.getExportParams('.csv'));
    };
    AccountingCreationComponent.prototype.getExportParams = function (fileExtension) {
        var today = new Date();
        var currentDate = this.datePipe.transform(today, 'yyyyMMdd_hhmm').toString().toUpperCase();
        var params = {
            fileName: currentDate + '_' + this.company + '_' + this.screenName + '_' + this.userActiveDirectoryName + fileExtension,
        };
        return params;
    };
    AccountingCreationComponent.prototype.onLoadPreviousPageButtonClicked = function () {
        this.location.back();
    };
    AccountingCreationComponent.prototype.validateGrid = function (colId, rowData) {
        if (colId == "valueDate" || colId == "accountingPeriod" || colId == "paymentDocumentDate") {
            return true;
        }
        else if ((this.isAccrualSelected || this.isMtmSelected) && colId == "accrualNumber") {
            if (rowData.data[colId]
                && rowData.data[colId].toString().trim() != ''
                && rowData.data[colId].toString().trim() != 'Required*') {
                return true;
            }
        }
        else if (this.isRequired(colId) && this.isMtmSelected) {
            if (colId == 'sectionId' || (rowData.data[colId]
                && rowData.data[colId].toString().trim() != ''
                && rowData.data[colId].toString().trim() != 'Required*')) {
                return true;
            }
        }
        else if (this.isRequired(colId) && !this.isMtmSelected) {
            if ((colId == 'settlementCurrency' || colId == 'dealNumber' || colId === "accrualNumber")
                || (rowData.data[colId]
                    && rowData.data[colId].toString().trim() != ''
                    && rowData.data[colId].toString().trim() != 'Required*')) {
                return true;
            }
        }
        else if (!this.isRequired(colId)) {
            return true;
        }
        return false;
    };
    AccountingCreationComponent.prototype.validateEmpty = function (colId, rowData) {
        if (rowData.data[colId] && rowData.data[colId] !== null
            && rowData.data[colId].toString().trim() !== '' && rowData.data[colId] !== 'Required*') {
            if (colId === 'amount' && rowData.data[colId] === 0) {
                return false;
            }
            return true;
        }
        else {
            return false;
        }
    };
    AccountingCreationComponent.prototype.numberFormatter = function (params) {
        if (params && params.value && !isNaN(params.value)) {
            return Math.floor(params.value).toString().replace(/(\d)(?=(\d{3})+(?!\d))/g, '$1,');
        }
        return null;
    };
    AccountingCreationComponent.prototype.formatAmountValue = function (value) {
        return new Intl.NumberFormat('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 }).format(value);
    };
    AccountingCreationComponent.prototype.onDealNumberSelected = function (params) {
        if (params.data && params.data.dealNumber && !this.isSummaryView) {
            this.initializeGridColumns();
        }
    };
    AccountingCreationComponent.prototype.ondocumentSelected = function (file) {
        var _this = this;
        var setDataValue;
        var fileName = file.name;
        var fileType = fileName.substr(fileName.lastIndexOf('.') + 1);
        if (fileType === 'csv') {
            this.progressbar = false;
            this.accountingDocumentService.fileUpload(file, this.isAccrualSelected, this.isMtmSelected).subscribe(function (data) {
                if (data) {
                    setDataValue = data;
                    var goodDataResult = _this.objectKeys(data.goodData.lineNumber);
                    var blockerDataResult = _this.objectKeys(data.goodData.lineNumber);
                    if (goodDataResult.length === 0 && data.blockerData.length > 0) {
                        _this.disableConfirmImport = true;
                        data.disableConfirmImport = _this.disableConfirmImport;
                    }
                    else {
                        _this.disableConfirmImport = false;
                        data.disableConfirmImport = _this.disableConfirmImport;
                    }
                    var accountingImportReportMsgDialog_1 = _this.dialog.open(_accounting_warning_error_msg_dialog_accounting_warning_error_msg_dialog_component__WEBPACK_IMPORTED_MODULE_38__["AccountingWarningErrorMsgDialogComponent"], {
                        data: data,
                        width: '80%',
                        height: '80%',
                    });
                    accountingImportReportMsgDialog_1.afterClosed().subscribe(function (answer) {
                        if (answer) {
                            if (answer.toBeImported) {
                                var goodDataResult_1 = _this.objectKeys(data.goodData.lineNumber);
                                var setRowValue = data.goodDataList;
                                var result = _this.objectKeys(data.blockerData.length);
                                _this.agGridApi.setRowData(setRowValue);
                                _this.agGridApi.forEachNode(function (rowData) {
                                    rowData.data.isDirty = true;
                                    _this.totalAmount = _this.totalAmount + Number(rowData.data.amount);
                                });
                                if (data.blockerData.length > 0 && (goodDataResult_1.length > 0)) {
                                    _this.snackbarService.informationSnackBar('Import was successful');
                                }
                                else if (data.blockerData.length === 0 && (goodDataResult_1.length > 0)) {
                                    _this.snackbarService.informationSnackBar('Import was successful.');
                                }
                                else if (goodDataResult_1.length === 0) {
                                    _this.snackbarService.informationSnackBar('Import was unsuccessful.');
                                }
                                _this.progressbar = false;
                            }
                            else {
                                _this.snackbarService.informationSnackBar('Import was unsuccessful.');
                                _this.router.navigate(['/' + _this.companyManager.getCurrentCompanyId() + '/financial/accounting/entry/new']);
                            }
                        }
                        else {
                            accountingImportReportMsgDialog_1.close();
                            _this.snackbarService.informationSnackBar('Import was unsuccessful.');
                        }
                    });
                }
            });
        }
        else {
            this.snackbarService.informationSnackBar('Only csv files are allowed to be selected');
        }
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('accountingFileUploadDialogBoxComponent'),
        __metadata("design:type", _accounting_file_upload_accounting_file_upload_dialog_box_accounting_file_upload_dialog_box_component__WEBPACK_IMPORTED_MODULE_30__["AccountingFileUploadDialogBoxComponent"])
    ], AccountingCreationComponent.prototype, "accountingFileUploadDialogBoxComponent", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('gridZoom'),
        __metadata("design:type", _shared_components_grid_enlargement_grid_enlargement_component__WEBPACK_IMPORTED_MODULE_39__["GridEnlargementComponent"])
    ], AccountingCreationComponent.prototype, "gridEnlargementComponent", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["HostListener"])('window:beforeunload', ['$event']),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Object]),
        __metadata("design:returntype", void 0)
    ], AccountingCreationComponent.prototype, "unloadNotification", null);
    AccountingCreationComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'atlas-accounting-creation',
            template: __webpack_require__(/*! ./accounting-creation.component.html */ "./Client/app/financial/components/posting-process/accounting-creation/accounting-creation.component.html"),
            styles: [__webpack_require__(/*! ./accounting-creation.component.scss */ "./Client/app/financial/components/posting-process/accounting-creation/accounting-creation.component.scss")],
            providers: [_shared_services_list_and_search_trade_data_loader__WEBPACK_IMPORTED_MODULE_23__["TradeDataLoader"], _shared_services_execution_charter_data_loader__WEBPACK_IMPORTED_MODULE_19__["CharterDataLoader"], _shared_services_preaccounting_transaction_document_data_loader__WEBPACK_IMPORTED_MODULE_24__["TransactionDocumentDataLoader"], _shared_services_list_and_search_fxDeal_data_loader__WEBPACK_IMPORTED_MODULE_33__["FxDealDataLoader"], _angular_common__WEBPACK_IMPORTED_MODULE_0__["DatePipe"]],
        }),
        __metadata("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_4__["ActivatedRoute"],
            _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"],
            _shared_services_util_service__WEBPACK_IMPORTED_MODULE_28__["UtilService"],
            _core_services_company_manager_service__WEBPACK_IMPORTED_MODULE_7__["CompanyManagerService"],
            _shared_services_ui_service__WEBPACK_IMPORTED_MODULE_27__["UiService"],
            _shared_services_form_configuration_provider_service__WEBPACK_IMPORTED_MODULE_20__["FormConfigurationProviderService"],
            _shared_services_list_and_search_trade_data_loader__WEBPACK_IMPORTED_MODULE_23__["TradeDataLoader"],
            _shared_services_list_and_search_fxDeal_data_loader__WEBPACK_IMPORTED_MODULE_33__["FxDealDataLoader"],
            _shared_services_execution_charter_data_loader__WEBPACK_IMPORTED_MODULE_19__["CharterDataLoader"],
            _shared_services_preaccounting_transaction_document_data_loader__WEBPACK_IMPORTED_MODULE_24__["TransactionDocumentDataLoader"],
            _shared_services_snackbar_service__WEBPACK_IMPORTED_MODULE_25__["SnackbarService"],
            _shared_services_http_services_execution_service__WEBPACK_IMPORTED_MODULE_21__["ExecutionService"],
            _shared_services_http_services_preaccounting_service__WEBPACK_IMPORTED_MODULE_22__["PreaccountingService"],
            _angular_material__WEBPACK_IMPORTED_MODULE_3__["MatDialog"],
            _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"],
            _angular_common__WEBPACK_IMPORTED_MODULE_0__["Location"],
            _core_services_authorization_service__WEBPACK_IMPORTED_MODULE_6__["AuthorizationService"],
            _angular_common__WEBPACK_IMPORTED_MODULE_0__["DatePipe"],
            _shared_services_http_services_form_configuration_service__WEBPACK_IMPORTED_MODULE_36__["FormConfigurationService"],
            _shared_services_ag_grid_service__WEBPACK_IMPORTED_MODULE_18__["AgGridService"],
            _shared_services_title_service__WEBPACK_IMPORTED_MODULE_26__["TitleService"],
            _shared_services_http_services_accounting_document_service__WEBPACK_IMPORTED_MODULE_35__["AccountingDocumentService"]])
    ], AccountingCreationComponent);
    return AccountingCreationComponent;
}(_accounting_edit_base_accounting_edit_base_component__WEBPACK_IMPORTED_MODULE_37__["AccountingEditBaseComponent"]));



/***/ }),

/***/ "./Client/app/financial/components/posting-process/accounting-creation/accounting-warning-error-msg-dialog/accounting-warning-error-msg-dialog.component.html":
/*!********************************************************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/posting-process/accounting-creation/accounting-warning-error-msg-dialog/accounting-warning-error-msg-dialog.component.html ***!
  \********************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<h1 mat-dialog-title>Import Accounting Line </h1>\r\n<mat-dialog-content>\r\n    <div fxLayout=\"row\"\r\n         fxLayoutAlign=\"center center\"\r\n         fxLayoutWrap\r\n         *ngIf=\"isLoading\"\r\n         class=\"loading\">\r\n        <mat-spinner color=\"accent\"></mat-spinner>\r\n    </div>\r\n    <div fxLayout=\"column\"\r\n         *ngIf=\"!isLoading\">\r\n        <div class=\"manual-import information-banner-card\">\r\n            <div fxLayout=\"row\">\r\n                <div *ngIf=\"dialogData.blockerData.length > 0\">\r\n                    <div class=\"error-circle-icon\"\r\n                         fxLayout=\"column\">\r\n                        <mat-icon>remove_circle</mat-icon>\r\n                    </div>\r\n                    <div *ngFor=\"let data of dialogData.blockerData\">\r\n                        <p>{{data.errorMessage}}</p>\r\n                        <mat-chip-list class=\"chip-list\">\r\n                            <mat-chip selected\r\n                                      disabled\r\n                                      *ngFor=\"let key of data.lineNumber\">\r\n                                {{'Line number: ' + key }}\r\n                            </mat-chip>\r\n                        </mat-chip-list>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <mat-divider></mat-divider>\r\n            <div class=\"info\"\r\n                 fxLayout=\"row\"\r\n                 *ngIf=\"goodDataCount > 0\">\r\n                <div class=\"info-circle-icon\"\r\n                     fxLayout=\"column\">\r\n                    <mat-icon>check_circle</mat-icon>\r\n                </div>\r\n                <div>\r\n                    <p>{{dialogData.goodData.errorMessage}} </p>\r\n                    <mat-chip-list class=\"chip-list\">\r\n                        <mat-chip selected\r\n                                  disabled\r\n                                  *ngFor=\"let key of dialogData.goodData.lineNumber\">\r\n                            {{'Line number: ' + key }}\r\n                        </mat-chip>\r\n                    </mat-chip-list>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</mat-dialog-content>\r\n<mat-dialog-actions>\r\n\r\n    <button mat-button\r\n            (click)=\"onDiscardButtonClicked()\">Discard</button>\r\n    <span class=\"fill-space\"></span>\r\n    <button mat-button\r\n            disabled=\"{{this.dialogData.disableConfirmImport}}\"\r\n            (click)=\"onConfirmButtonClicked()\">Confirm Import</button>\r\n\r\n</mat-dialog-actions>"

/***/ }),

/***/ "./Client/app/financial/components/posting-process/accounting-creation/accounting-warning-error-msg-dialog/accounting-warning-error-msg-dialog.component.scss":
/*!********************************************************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/posting-process/accounting-creation/accounting-warning-error-msg-dialog/accounting-warning-error-msg-dialog.component.scss ***!
  \********************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".mat-dialog-title {\n  margin-bottom: 16px; }\n\n.manual-import p {\n  font-weight: bold;\n  font-size: 14px; }\n\n.mat-divider {\n  margin-top: 16px;\n  margin-bottom: 16px; }\n\nbutton {\n  margin: 0; }\n"

/***/ }),

/***/ "./Client/app/financial/components/posting-process/accounting-creation/accounting-warning-error-msg-dialog/accounting-warning-error-msg-dialog.component.ts":
/*!******************************************************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/posting-process/accounting-creation/accounting-warning-error-msg-dialog/accounting-warning-error-msg-dialog.component.ts ***!
  \******************************************************************************************************************************************************************/
/*! exports provided: AccountingWarningErrorMsgDialogComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AccountingWarningErrorMsgDialogComponent", function() { return AccountingWarningErrorMsgDialogComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _shared_components_base_form_component_base_form_component_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../shared/components/base-form-component/base-form-component.component */ "./Client/app/shared/components/base-form-component/base-form-component.component.ts");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _shared_services_snackbar_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../shared/services/snackbar.service */ "./Client/app/shared/services/snackbar.service.ts");
/* harmony import */ var _shared_services_form_configuration_provider_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../../shared/services/form-configuration-provider.service */ "./Client/app/shared/services/form-configuration-provider.service.ts");
/* harmony import */ var _shared_entities_accountingImportReport_entity__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../../shared/entities/accountingImportReport.entity */ "./Client/app/shared/entities/accountingImportReport.entity.ts");
/* harmony import */ var _core_services_company_manager_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../../core/services/company-manager.service */ "./Client/app/core/services/company-manager.service.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};









var AccountingWarningErrorMsgDialogComponent = /** @class */ (function (_super) {
    __extends(AccountingWarningErrorMsgDialogComponent, _super);
    function AccountingWarningErrorMsgDialogComponent(thisDialogRef, formBuilder, route, router, companyManager, snackbarService, data, formConfigurationProvider) {
        var _this = _super.call(this, formConfigurationProvider) || this;
        _this.thisDialogRef = thisDialogRef;
        _this.formBuilder = formBuilder;
        _this.route = route;
        _this.router = router;
        _this.companyManager = companyManager;
        _this.snackbarService = snackbarService;
        _this.data = data;
        _this.formConfigurationProvider = formConfigurationProvider;
        _this.isLoading = true;
        _this.objectKeys = Object.keys;
        _this.dialogData = data;
        return _this;
    }
    AccountingWarningErrorMsgDialogComponent.prototype.ngOnInit = function () {
        this.isLoading = false;
        this.goodDataCount = Object.keys(this.dialogData.goodData.lineNumber).length;
        this.getDataFromObjects();
    };
    AccountingWarningErrorMsgDialogComponent.prototype.getDataFromObjects = function () {
    };
    AccountingWarningErrorMsgDialogComponent.prototype.onDiscardButtonClicked = function () {
        this.thisDialogRef.close({ toBeImported: false });
    };
    AccountingWarningErrorMsgDialogComponent.prototype.onConfirmButtonClicked = function () {
        this.thisDialogRef.close({ toBeImported: true });
    };
    AccountingWarningErrorMsgDialogComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'atlas-accounting-warning-error-msg-dialog',
            template: __webpack_require__(/*! ./accounting-warning-error-msg-dialog.component.html */ "./Client/app/financial/components/posting-process/accounting-creation/accounting-warning-error-msg-dialog/accounting-warning-error-msg-dialog.component.html"),
            styles: [__webpack_require__(/*! ./accounting-warning-error-msg-dialog.component.scss */ "./Client/app/financial/components/posting-process/accounting-creation/accounting-warning-error-msg-dialog/accounting-warning-error-msg-dialog.component.scss")]
        }),
        __param(6, Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"])),
        __metadata("design:paramtypes", [_angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialogRef"],
            _angular_forms__WEBPACK_IMPORTED_MODULE_4__["FormBuilder"],
            _angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"],
            _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"],
            _core_services_company_manager_service__WEBPACK_IMPORTED_MODULE_8__["CompanyManagerService"],
            _shared_services_snackbar_service__WEBPACK_IMPORTED_MODULE_5__["SnackbarService"],
            _shared_entities_accountingImportReport_entity__WEBPACK_IMPORTED_MODULE_7__["AccountingImportReport"],
            _shared_services_form_configuration_provider_service__WEBPACK_IMPORTED_MODULE_6__["FormConfigurationProviderService"]])
    ], AccountingWarningErrorMsgDialogComponent);
    return AccountingWarningErrorMsgDialogComponent;
}(_shared_components_base_form_component_base_form_component_component__WEBPACK_IMPORTED_MODULE_1__["BaseFormComponent"]));



/***/ }),

/***/ "./Client/app/financial/components/posting-process/accounting-edit-base/accounting-edit-base.component.html":
/*!******************************************************************************************************************!*\
  !*** ./Client/app/financial/components/posting-process/accounting-edit-base/accounting-edit-base.component.html ***!
  \******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ""

/***/ }),

/***/ "./Client/app/financial/components/posting-process/accounting-edit-base/accounting-edit-base.component.ts":
/*!****************************************************************************************************************!*\
  !*** ./Client/app/financial/components/posting-process/accounting-edit-base/accounting-edit-base.component.ts ***!
  \****************************************************************************************************************/
/*! exports provided: AccountingEditBaseComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AccountingEditBaseComponent", function() { return AccountingEditBaseComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _shared_components_base_form_component_base_form_component_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../../../../shared/components/base-form-component/base-form-component.component */ "./Client/app/shared/components/base-form-component/base-form-component.component.ts");
/* harmony import */ var _shared_services_form_configuration_provider_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../../../../shared/services/form-configuration-provider.service */ "./Client/app/shared/services/form-configuration-provider.service.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var AccountingEditBaseComponent = /** @class */ (function (_super) {
    __extends(AccountingEditBaseComponent, _super);
    function AccountingEditBaseComponent(formConfigurationProvider) {
        var _this = _super.call(this, formConfigurationProvider) || this;
        _this.formConfigurationProvider = formConfigurationProvider;
        return _this;
    }
    AccountingEditBaseComponent.prototype.ngOnInit = function () {
    };
    AccountingEditBaseComponent.prototype.getTooltip = function (params, description, valueProperty, list) {
        if (params.value && (typeof params.value === 'string' || typeof params.value === 'number')) {
            var selected = list.find(function (obj) { return obj[valueProperty] ? obj[valueProperty].toString().toUpperCase() === params.value.toString().toUpperCase() : false; });
            if (selected) {
                return selected[description];
            }
        }
    };
    AccountingEditBaseComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'atlas-accounting-edit-base',
            template: __webpack_require__(/*! ./accounting-edit-base.component.html */ "./Client/app/financial/components/posting-process/accounting-edit-base/accounting-edit-base.component.html"),
        }),
        __metadata("design:paramtypes", [_shared_services_form_configuration_provider_service__WEBPACK_IMPORTED_MODULE_2__["FormConfigurationProviderService"]])
    ], AccountingEditBaseComponent);
    return AccountingEditBaseComponent;
}(_shared_components_base_form_component_base_form_component_component__WEBPACK_IMPORTED_MODULE_1__["BaseFormComponent"]));



/***/ }),

/***/ "./Client/app/financial/components/posting-process/accounting-edit/accounting-edit-summary/accounting-edit-summary.component.html":
/*!****************************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/posting-process/accounting-edit/accounting-edit-summary/accounting-edit-summary.component.html ***!
  \****************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"main-container\">\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-around start\"\r\n                        class=\"button-details\">\r\n        <mat-card fxFlex=\"100%\">\r\n            <div fxLayout=\"row\"\r\n                 fxLayoutAlign=\"start none\"\r\n                 class=\"search\">\r\n                <atlas-masterdata-user-preferences-input fxFlex=\"100\"\r\n                                                         class=\"contextual-search-for-currency\"\r\n                                                         isEditable=\"true\"\r\n                                                         [fieldControl]=\"documentCtrl\"\r\n                                                         label=\"Document\"\r\n                                                         [options]=\"filteredDocumentReferences\"\r\n                                                         displayProperty=\"documentReference\"\r\n                                                         [selectProperties]=\"['documentReference']\"\r\n                                                         lightBoxTitle=\"Results for Document\"\r\n                                                         gridId=\"documentReferenceGrid\"\r\n                                                         (valueChange)='valueChanged($event)'\r\n                                                         (optionSelected)=\"valueChanged($event)\"\r\n                                                         (keyup.enter)=\"OnChangeValue($event)\"\r\n                                                         isSearchBar=\"true\">\r\n                </atlas-masterdata-user-preferences-input>\r\n            </div>\r\n    </mat-card>\r\n        </div>\r\n        <atlas-list-and-search class=\"default-height\"\r\n                               [gridCode]=\"gridCode\"\r\n                               gridTitle=\"Accounting Entries\"\r\n                               [company]=\"company\"\r\n                               [dataLoader]=\"financialsEditDocumentDataLoader\"\r\n                               #listAndSearchComponent>\r\n        </atlas-list-and-search>\r\n        <div fxLayout=\"row\"\r\n             class='mat-buttons'>\r\n            <div fxFlex=\"90\">\r\n                <button mat-button\r\n                        class='mat-button-discard'\r\n                        (click)=\"onCancelButtonClicked()\">DISCARD</button>\r\n            </div>\r\n            <div fxFlex=\"6\">\r\n                <button mat-raised-button\r\n                        [disabled]=\"isEditDisable\"\r\n                        (click)=\"onEditClicked()\">\r\n                    EDIT\r\n                </button>\r\n            </div>\r\n        </div>\r\n</div>"

/***/ }),

/***/ "./Client/app/financial/components/posting-process/accounting-edit/accounting-edit-summary/accounting-edit-summary.component.scss":
/*!****************************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/posting-process/accounting-edit/accounting-edit-summary/accounting-edit-summary.component.scss ***!
  \****************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".summary-header {\n  margin-left: 10px; }\n"

/***/ }),

/***/ "./Client/app/financial/components/posting-process/accounting-edit/accounting-edit-summary/accounting-edit-summary.component.ts":
/*!**************************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/posting-process/accounting-edit/accounting-edit-summary/accounting-edit-summary.component.ts ***!
  \**************************************************************************************************************************************/
/*! exports provided: AccountingEditSummaryComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AccountingEditSummaryComponent", function() { return AccountingEditSummaryComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _shared_entities_atlas_form_control__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../shared/entities/atlas-form-control */ "./Client/app/shared/entities/atlas-form-control.ts");
/* harmony import */ var _shared_models_transaction_detail_display_view__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../../shared/models/transaction-detail-display-view */ "./Client/app/shared/models/transaction-detail-display-view.ts");
/* harmony import */ var _shared_services_ag_grid_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../../shared/services/ag-grid.service */ "./Client/app/shared/services/ag-grid.service.ts");
/* harmony import */ var _shared_services_form_configuration_provider_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../../shared/services/form-configuration-provider.service */ "./Client/app/shared/services/form-configuration-provider.service.ts");
/* harmony import */ var _shared_services_http_services_preaccounting_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../../shared/services/http-services/preaccounting.service */ "./Client/app/shared/services/http-services/preaccounting.service.ts");
/* harmony import */ var _shared_services_preaccounting_all_document_reference_data_loader__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../../../shared/services/preaccounting/all-document-reference-data-loader */ "./Client/app/shared/services/preaccounting/all-document-reference-data-loader.ts");
/* harmony import */ var _shared_services_snackbar_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../../../shared/services/snackbar.service */ "./Client/app/shared/services/snackbar.service.ts");
/* harmony import */ var _shared_services_ui_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../../../shared/services/ui.service */ "./Client/app/shared/services/ui.service.ts");
/* harmony import */ var _shared_services_url_management_service__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../../../../shared/services/url-management.service */ "./Client/app/shared/services/url-management.service.ts");
/* harmony import */ var _shared_services_util_service__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../../../../shared/services/util.service */ "./Client/app/shared/services/util.service.ts");
/* harmony import */ var _shared_services_title_service__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./../../../../../shared/services/title.service */ "./Client/app/shared/services/title.service.ts");
/* harmony import */ var _accounting_edit_base_accounting_edit_base_component__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./../../accounting-edit-base/accounting-edit-base.component */ "./Client/app/financial/components/posting-process/accounting-edit-base/accounting-edit-base.component.ts");
/* harmony import */ var _shared_services_list_and_search_financials_edit_document_data_loader__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./../../../../../shared/services/list-and-search/financials-edit-document-data-loader */ "./Client/app/shared/services/list-and-search/financials-edit-document-data-loader.ts");
/* harmony import */ var _shared_components_list_and_search_list_and_search_component__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./../../../../../shared/components/list-and-search/list-and-search.component */ "./Client/app/shared/components/list-and-search/list-and-search.component.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



















var AccountingEditSummaryComponent = /** @class */ (function (_super) {
    __extends(AccountingEditSummaryComponent, _super);
    function AccountingEditSummaryComponent(route, router, utilService, documentReferenceDataLoader, formBuilder, snackbarService, preaccountingService, uiService, urlManagementService, formConfigurationProvider, dialog, gridService, titleService, financialsEditDocumentDataLoader) {
        var _this = _super.call(this, formConfigurationProvider) || this;
        _this.route = route;
        _this.router = router;
        _this.utilService = utilService;
        _this.documentReferenceDataLoader = documentReferenceDataLoader;
        _this.formBuilder = formBuilder;
        _this.snackbarService = snackbarService;
        _this.preaccountingService = preaccountingService;
        _this.uiService = uiService;
        _this.urlManagementService = urlManagementService;
        _this.formConfigurationProvider = formConfigurationProvider;
        _this.dialog = dialog;
        _this.gridService = gridService;
        _this.titleService = titleService;
        _this.financialsEditDocumentDataLoader = financialsEditDocumentDataLoader;
        _this.agGridOptions = {};
        _this.documentCtrl = new _shared_entities_atlas_form_control__WEBPACK_IMPORTED_MODULE_5__["AtlasFormControl"]('documentCtrl');
        _this.disableButton = true;
        _this.subscription = [];
        _this.isEditDisable = true;
        _this.isSave = false;
        _this.filterList = [];
        _this.gridCode = 'accountingLineByIdGrid';
        _this.searchForm = _this.formBuilder.group({
            searchReferenceCtrl: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
        });
        _this.atlasAgGridParam = _this.gridService.getAgGridParam();
        return _this;
    }
    AccountingEditSummaryComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.company = this.route.snapshot.paramMap.get('company');
        this.masterdata = this.route.snapshot.data.masterdata;
        this.titleService.setTitle(this.route.snapshot.data.title);
        this.documentReferenceDataLoader.getData().subscribe(function (documents) {
            _this.filteredDocumentReferences = documents;
            _this.allDocumentReferences = documents;
        });
        this.documentCtrl.valueChanges.subscribe(function (input) {
            _this.filteredDocumentReferences = _this.utilService.filterListforAutocomplete(input, _this.allDocumentReferences, ['documentReference']);
        });
        this.getFormGroup();
    };
    AccountingEditSummaryComponent.prototype.getFormGroup = function () {
        this.editDocumentFormGroup = this.formBuilder.group({
            documentCtrl: this.documentCtrl,
        });
        return _super.prototype.getFormGroup.call(this);
    };
    AccountingEditSummaryComponent.prototype.onGridReady = function (params) {
        this.agGridOptions.columnDefs = this.reverseDocumentGridCols;
        this.agGridApi = this.agGridOptions.api;
        this.agGridColumnApi = this.agGridOptions.columnApi;
        this.gridService.sizeColumns(this.agGridOptions);
        this.agGridApi.setRowData([]);
    };
    AccountingEditSummaryComponent.prototype.displayNotFoundError = function () {
        this.agGridApi.setRowData([]);
        this.accountingId = null;
        this.documentReference = null;
        this.accountingDocumentLine = [];
        this.snackbarService.throwErrorSnackBar('Document reference not existing');
    };
    AccountingEditSummaryComponent.prototype.OnChangeValue = function (refrerence) {
        var _this = this;
        this.searchTerm = this.documentCtrl.value;
        if (this.filteredDocumentReferences && this.searchTerm) {
            if (typeof this.searchTerm === 'object') {
                this.accountingId = this.documentCtrl.value.accountingId;
                this.documentReference = this.documentCtrl.value.documentReference;
            }
            else {
                var documentSelected = this.filteredDocumentReferences.filter(function (searchData) {
                    return searchData.documentReference.toUpperCase() === _this.searchTerm.toUpperCase();
                });
                if (documentSelected.length === 0) {
                    this.displayNotFoundError();
                }
                else {
                    this.accountingId = documentSelected[0].accountingId;
                    this.documentReference = documentSelected[0].documentReference;
                }
            }
        }
        if (this.accountingId) {
            this.getTransactionDetailSunscription = this.preaccountingService.getTransactionDetail(this.accountingId).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])(function (data) {
                _this.transactionData = data.value.map(function (transactionData) {
                    return new _shared_models_transaction_detail_display_view__WEBPACK_IMPORTED_MODULE_6__["TransactionDetailDisplayView"](transactionData);
                });
                if (_this.transactionData) {
                    _this.transactionDocumentId = _this.transactionData[0].transactionDocumentId;
                    _this.transactionDocumentTypeId = _this.transactionData[0].transactionDocumentTypeId;
                }
            }))
                .subscribe();
            this.financialsEditDocumentDataLoader.getData(this.filterList, this.accountingId).subscribe(function (document) {
                if (document) {
                    _this.listAndSearchComponent.agGridRows = document.value;
                }
            });
        }
    };
    AccountingEditSummaryComponent.prototype.ngOnDestroy = function () {
        if (this.getTransactionDetailSunscription) {
            this.getTransactionDetailSunscription.unsubscribe();
        }
        if (this.getAccountingLinesByDocumentIdSubscription) {
            this.getAccountingLinesByDocumentIdSubscription.unsubscribe();
        }
    };
    AccountingEditSummaryComponent.prototype.valueChanged = function (value) {
        this.documentCtrl.patchValue(value);
        this.isEditDisable = false;
        this.OnChangeValue(value);
    };
    AccountingEditSummaryComponent.prototype.onEditClicked = function () {
        this.isSave = true;
        this.router.navigate(['/' + this.urlManagementService.getCurrentCompanyId() + '/financial/edit/document/' + this.accountingId]);
    };
    AccountingEditSummaryComponent.prototype.onCancelButtonClicked = function () {
        this.isSave = true;
        this.router.navigate(['/' + this.urlManagementService.getCurrentCompanyId() + '/financial/accounting/entries/']);
    };
    AccountingEditSummaryComponent.prototype.unloadNotification = function ($event) {
        if (this.editDocumentFormGroup.dirty) {
            $event.returnValue = true;
        }
    };
    AccountingEditSummaryComponent.prototype.canDeactivate = function () {
        if (this.editDocumentFormGroup.dirty && this.isSave === false) {
            return window.confirm('Leave an unsave form? \nYour changes won\'t be applied!');
        }
        return true;
    };
    AccountingEditSummaryComponent.prototype.numberFormatter = function (params) {
        if (isNaN(params.value) || params.value === null) {
            return '';
        }
        return new Intl.NumberFormat('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 }).format(params.value);
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('listAndSearchComponent'),
        __metadata("design:type", _shared_components_list_and_search_list_and_search_component__WEBPACK_IMPORTED_MODULE_18__["ListAndSearchComponent"])
    ], AccountingEditSummaryComponent.prototype, "listAndSearchComponent", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["HostListener"])('window:beforeunload', ['$event']),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Object]),
        __metadata("design:returntype", void 0)
    ], AccountingEditSummaryComponent.prototype, "unloadNotification", null);
    AccountingEditSummaryComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'atlas-accounting-edit-summary',
            template: __webpack_require__(/*! ./accounting-edit-summary.component.html */ "./Client/app/financial/components/posting-process/accounting-edit/accounting-edit-summary/accounting-edit-summary.component.html"),
            styles: [__webpack_require__(/*! ./accounting-edit-summary.component.scss */ "./Client/app/financial/components/posting-process/accounting-edit/accounting-edit-summary/accounting-edit-summary.component.scss")],
            providers: [_shared_services_preaccounting_all_document_reference_data_loader__WEBPACK_IMPORTED_MODULE_10__["AllDocumentReferenceDataLoader"], _shared_services_list_and_search_financials_edit_document_data_loader__WEBPACK_IMPORTED_MODULE_17__["FinancialsEditDocumentDataLoader"]],
        }),
        __metadata("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"],
            _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"],
            _shared_services_util_service__WEBPACK_IMPORTED_MODULE_14__["UtilService"],
            _shared_services_preaccounting_all_document_reference_data_loader__WEBPACK_IMPORTED_MODULE_10__["AllDocumentReferenceDataLoader"],
            _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormBuilder"],
            _shared_services_snackbar_service__WEBPACK_IMPORTED_MODULE_11__["SnackbarService"],
            _shared_services_http_services_preaccounting_service__WEBPACK_IMPORTED_MODULE_9__["PreaccountingService"],
            _shared_services_ui_service__WEBPACK_IMPORTED_MODULE_12__["UiService"],
            _shared_services_url_management_service__WEBPACK_IMPORTED_MODULE_13__["UrlManagementService"],
            _shared_services_form_configuration_provider_service__WEBPACK_IMPORTED_MODULE_8__["FormConfigurationProviderService"],
            _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialog"],
            _shared_services_ag_grid_service__WEBPACK_IMPORTED_MODULE_7__["AgGridService"],
            _shared_services_title_service__WEBPACK_IMPORTED_MODULE_15__["TitleService"],
            _shared_services_list_and_search_financials_edit_document_data_loader__WEBPACK_IMPORTED_MODULE_17__["FinancialsEditDocumentDataLoader"]])
    ], AccountingEditSummaryComponent);
    return AccountingEditSummaryComponent;
}(_accounting_edit_base_accounting_edit_base_component__WEBPACK_IMPORTED_MODULE_16__["AccountingEditBaseComponent"]));



/***/ }),

/***/ "./Client/app/financial/components/posting-process/accounting-edit/accounting-edit.component.html":
/*!********************************************************************************************************!*\
  !*** ./Client/app/financial/components/posting-process/accounting-edit/accounting-edit.component.html ***!
  \********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<header class=\"header-background mat-elevation-z2\">\r\n    <div class=\"header-content\">\r\n        <div fxLayout=\"row\"\r\n             fxLayoutGap=\"40px\">\r\n            <div>\r\n                <mat-form-field fxFlex=\"20\"\r\n                                class=\"mat-disabled-field\">\r\n                    <input matInput\r\n                           placeholder=\"Document Date\"\r\n                           disabled\r\n                           value=\"{{documentDate}}\"\r\n                           autocomplete=\"off\"\r\n                           [formControl]='docDateFormCtrl'>\r\n                </mat-form-field>\r\n            </div>\r\n            <div>\r\n                <mat-form-field fxFlex=\"20\"\r\n                                class=\"mat-disabled-field\">\r\n                    <input matInput\r\n                           placeholder=\"Original Value Date\"\r\n                           disabled\r\n                           value=\"{{originalValueDate}}\"\r\n                           autocomplete=\"off\">\r\n                </mat-form-field>\r\n            </div>\r\n            <div>\r\n                <mat-form-field fxFlex=\"20\"\r\n                                class=\"mat-disabled-field\">\r\n                    <input matInput\r\n                           placeholder=\"GL Date\"\r\n                           disabled\r\n                           value=\"{{glDate}}\"\r\n                           autocomplete=\"off\">\r\n                </mat-form-field>\r\n            </div>\r\n            <div>\r\n                <mat-form-field class=\"value-date-control\"\r\n                                fxFlex=\"40%\">\r\n                    <input matInput\r\n                           [matDatepicker]=\"valueDatePicker\"\r\n                           placeholder=\"Value Date\"\r\n                           value=\"valueDatePicker\"\r\n                           autocomplete=\"off\"\r\n                           [formControl]='valueDateFormCtrl'>\r\n                    <mat-datepicker-toggle matSuffix\r\n                                           [for]=\"valueDatePicker\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #valueDatePicker></mat-datepicker>\r\n                    <mat-error *ngIf=\"valueDateFormCtrl.hasError('valid')\">\r\n                        Invalid Value Date\r\n                    </mat-error>\r\n                    <mat-hint class=\"value-date-warning\"\r\n                              *ngIf=\"isValueDateBeforeDocumentDate()\">Value date is before the\r\n                        document date\r\n                    </mat-hint>\r\n                </mat-form-field>\r\n            </div>\r\n        </div>\r\n\r\n        <div fxLayout=\"row\"\r\n             fxLayoutGap=\"40px\"\r\n             class=\"no-padding-fields\">\r\n            <div>\r\n                <mat-form-field fxFlex=\"20\"\r\n                                class=\"mat-disabled-field\">\r\n                    <input matInput\r\n                           placeholder=\"Accounting Period\"\r\n                           disabled\r\n                           value=\"{{accountingPeriod}}\"\r\n                           autocomplete=\"off\">\r\n                </mat-form-field>\r\n            </div>\r\n            <div>\r\n                <mat-form-field fxFlex=\"20\"\r\n                                class=\"mat-disabled-field\">\r\n                    <input matInput\r\n                           placeholder=\"Currency\"\r\n                           disabled\r\n                           value=\"{{currency}}\"\r\n                           autocomplete=\"off\">\r\n                </mat-form-field>\r\n            </div>\r\n\r\n            <div fxFlex=\"30%\">\r\n                <atlas-form-input [fieldControl]=\"dmsidFormCtrl\"\r\n                                  [textMask]=\"{mask:mask}\"\r\n                                  label=\"DMSID\">\r\n                </atlas-form-input>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</header>\r\n\r\n<div class=\"main-container\">\r\n    <mat-card>\r\n        <div ag-grid=\"accountingLineGridOptions\">\r\n            <div fxLayout=\"row\"\r\n                 fxLayoutAlign=\"space-between center\"\r\n                 class=\" table-title atlas-grid-card-header\">\r\n                <mat-card-title>\r\n                    Accounting lines\r\n                </mat-card-title>\r\n                <div>\r\n                    <button mat-icon-button\r\n                            [matMenuTriggerFor]=\"displayedColumnsMenu\">\r\n                        <mat-icon>menu</mat-icon>\r\n                    </button>\r\n                    <div>\r\n                        <mat-menu #displayedColumnsMenu=\"matMenu\">\r\n                            <div *ngFor=\"let col of columnDefs\">\r\n                                <mat-checkbox [checked]=\"!col.hide\"\r\n                                              (click)=\"showOrHideColum($event, col)\"\r\n                                              *ngIf=\"(!col.headerName =='') \">{{col.headerName}}</mat-checkbox>\r\n                            </div>\r\n                        </mat-menu>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <ag-grid-angular class=\"ag-theme-material atr-ag-grid\"\r\n                             [rowData]=\"accountingDocumentLine\"\r\n                             [columnDefs]=\"columnDefs\"\r\n                             domLayout=\"autoHeight\"\r\n                             (gridReady)=\"onGridReady($event)\"\r\n                             [pagination]=\"true\"\r\n                             [paginationPageSize]=\"10\"\r\n                             [enableSorting]=\"true\"\r\n                             [singleClickEdit]=true\r\n                             [enableColResize]=\"false\"\r\n                             [enableRangeSelection]=\"true\"\r\n                             [processCellForClipboard]=\"processCellForClipboard\"\r\n                             [rowHeight]=\"atlasAgGridParam.rowHeight\">\r\n            </ag-grid-angular>\r\n        </div>\r\n        <div  fxLayout=\"column\"\r\n              fxFlex=15\r\n              fxLayoutAlign=\"space-around start\"\r\n              *ngIf=\"false\"\r\n              class=\"loading\">\r\n            <mat-spinner color=\"accent\"></mat-spinner>\r\n        </div>\r\n    </mat-card>\r\n    <div fxLayout=\"row\"\r\n         fxLayoutAlign=\"space-between start\"\r\n         class=\"mat-buttons\">\r\n        <div fxLayout=\"column\">\r\n            <button mat-button\r\n                    class='mat-button-discard'\r\n                    (click)=\"onCancelButtonClicked()\">\r\n                DISCARD\r\n            </button>\r\n        </div>\r\n        <div fxLayout=\"column\">\r\n            <button mat-raised-button\r\n                    (click)=\"submitForm()\">\r\n                SAVE\r\n            </button>\r\n        </div>\r\n    </div>\r\n</div>\r\n<atlas-lock-interval [resourcesInformation]=\"resourcesInformation\">\r\n</atlas-lock-interval>\r\n"

/***/ }),

/***/ "./Client/app/financial/components/posting-process/accounting-edit/accounting-edit.component.scss":
/*!********************************************************************************************************!*\
  !*** ./Client/app/financial/components/posting-process/accounting-edit/accounting-edit.component.scss ***!
  \********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".ag-grid-style {\n  width: 100%;\n  height: 100%; }\n\n.header-background {\n  min-height: 110px; }\n\n.header-content {\n  padding: 16px 30px 0px 30px; }\n\n.mat-form-field {\n  display: inline-flex !important; }\n\n.mat-button-discard {\n  margin-left: 30px; }\n\n.value-date-warning {\n  color: #ec8d2d; }\n"

/***/ }),

/***/ "./Client/app/financial/components/posting-process/accounting-edit/accounting-edit.component.ts":
/*!******************************************************************************************************!*\
  !*** ./Client/app/financial/components/posting-process/accounting-edit/accounting-edit.component.ts ***!
  \******************************************************************************************************/
/*! exports provided: AccountingEditComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AccountingEditComponent", function() { return AccountingEditComponent; });
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _shared_components_ag_grid_contextual_search_ag_grid_contextual_search_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../shared/components/ag-grid/contextual-search/ag-grid-contextual-search.component */ "./Client/app/shared/components/ag-grid/contextual-search/ag-grid-contextual-search.component.ts");
/* harmony import */ var _shared_components_confirmation_dialog_confirmation_dialog_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../shared/components/confirmation-dialog/confirmation-dialog.component */ "./Client/app/shared/components/confirmation-dialog/confirmation-dialog.component.ts");
/* harmony import */ var _shared_entities_atlas_form_control__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../shared/entities/atlas-form-control */ "./Client/app/shared/entities/atlas-form-control.ts");
/* harmony import */ var _shared_entities_lock_functional_context_entity__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../../shared/entities/lock-functional-context.entity */ "./Client/app/shared/entities/lock-functional-context.entity.ts");
/* harmony import */ var _shared_entities_lock_resource_information_entity__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../../shared/entities/lock-resource-information.entity */ "./Client/app/shared/entities/lock-resource-information.entity.ts");
/* harmony import */ var _shared_models_posting_management_display_view__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../../shared/models/posting-management-display-view */ "./Client/app/shared/models/posting-management-display-view.ts");
/* harmony import */ var _shared_numberMask__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../../../shared/numberMask */ "./Client/app/shared/numberMask.ts");
/* harmony import */ var _shared_services_ag_grid_service__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../../../shared/services/ag-grid.service */ "./Client/app/shared/services/ag-grid.service.ts");
/* harmony import */ var _shared_services_execution_charter_data_loader__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../../../shared/services/execution/charter-data-loader */ "./Client/app/shared/services/execution/charter-data-loader.ts");
/* harmony import */ var _shared_services_form_configuration_provider_service__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../../../shared/services/form-configuration-provider.service */ "./Client/app/shared/services/form-configuration-provider.service.ts");
/* harmony import */ var _shared_services_http_services_lock_service__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../../../shared/services/http-services/lock.service */ "./Client/app/shared/services/http-services/lock.service.ts");
/* harmony import */ var _shared_services_http_services_preaccounting_service__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../../../../shared/services/http-services/preaccounting.service */ "./Client/app/shared/services/http-services/preaccounting.service.ts");
/* harmony import */ var _shared_services_list_and_search_trade_data_loader__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../../../../shared/services/list-and-search/trade-data-loader */ "./Client/app/shared/services/list-and-search/trade-data-loader.ts");
/* harmony import */ var _shared_services_snackbar_service__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../../../../shared/services/snackbar.service */ "./Client/app/shared/services/snackbar.service.ts");
/* harmony import */ var _shared_services_url_management_service__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../../../../shared/services/url-management.service */ "./Client/app/shared/services/url-management.service.ts");
/* harmony import */ var _shared_validators_date_validators_validator__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../../../../shared/validators/date-validators.validator */ "./Client/app/shared/validators/date-validators.validator.ts");
/* harmony import */ var _accounting_edit_base_accounting_edit_base_component__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./../accounting-edit-base/accounting-edit-base.component */ "./Client/app/financial/components/posting-process/accounting-edit-base/accounting-edit-base.component.ts");
/* harmony import */ var _shared_enums_posting_document_type_enum__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ../../../../shared/enums/posting-document-type.enum */ "./Client/app/shared/enums/posting-document-type.enum.ts");
/* harmony import */ var _shared_services_http_services_form_configuration_service__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ../../../../shared/services/http-services/form-configuration.service */ "./Client/app/shared/services/http-services/form-configuration.service.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


























var moment = moment__WEBPACK_IMPORTED_MODULE_5__;
var AccountingEditComponent = /** @class */ (function (_super) {
    __extends(AccountingEditComponent, _super);
    function AccountingEditComponent(route, preaccountingService, charterDataLoader, snackbarService, formBuilder, router, location, tradeDataLoader, dialog, datePipe, urlManagementService, formConfigurationProvider, lockService, gridService, formConfigurationService) {
        var _this = _super.call(this, formConfigurationProvider) || this;
        _this.route = route;
        _this.preaccountingService = preaccountingService;
        _this.charterDataLoader = charterDataLoader;
        _this.snackbarService = snackbarService;
        _this.formBuilder = formBuilder;
        _this.router = router;
        _this.location = location;
        _this.tradeDataLoader = tradeDataLoader;
        _this.dialog = dialog;
        _this.datePipe = datePipe;
        _this.urlManagementService = urlManagementService;
        _this.formConfigurationProvider = formConfigurationProvider;
        _this.lockService = lockService;
        _this.gridService = gridService;
        _this.formConfigurationService = formConfigurationService;
        _this.valueDateFormCtrl = new _shared_entities_atlas_form_control__WEBPACK_IMPORTED_MODULE_9__["AtlasFormControl"]('valueDateFormCtrl');
        _this.docDateFormCtrl = new _shared_entities_atlas_form_control__WEBPACK_IMPORTED_MODULE_9__["AtlasFormControl"]("docDateFormCtrl");
        _this.dmsidFormCtrl = new _shared_entities_atlas_form_control__WEBPACK_IMPORTED_MODULE_9__["AtlasFormControl"]('dmsidFormCtrl');
        _this.agGridOptions = {};
        _this.isNarrativeValid = true;
        _this.isCostCenterValid = true;
        _this.isSave = false;
        _this.isMtmSelecetd = false;
        _this.filteredAccountLineTypeForMtm = [];
        _this.mask = Object(_shared_numberMask__WEBPACK_IMPORTED_MODULE_13__["CustomNumberMask"])(12, 10, true);
        _this.resourcesInformation = new Array();
        _this.accountCreationConfiguration = new Array();
        return _this;
    }
    AccountingEditComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.formConfigurationService.getMandatoryFieldsConfigurationForFinancial().subscribe(function (templates) {
            _this.accountCreationConfiguration = templates.value;
            _this.company = _this.route.snapshot.paramMap.get('company');
            _this.accountingId = Number(_this.route.snapshot.paramMap.get('accountingId'));
            _this.masterdata = _this.route.snapshot.data.masterdata;
            _this.filteredCounterpartyList = _this.masterdata.counterparties;
            _this.filteredAccountLineType = _this.masterdata.accountLineTypes;
            _this.filteredNominalAccountList = _this.masterdata.nominalAccounts.filter(function (nominal) { return nominal.accountNumber = nominal.accountNumber; });
            _this.filteredDepartments = _this.masterdata.departments;
            _this.filteredCostTypes = _this.masterdata.costTypes;
            if (_this.filteredAccountLineType && _this.filteredAccountLineType.length > 0) {
                _this.filteredAccountLineType.forEach(function (account) {
                    if (account.accountLineTypeCode === 'L' || account.accountLineTypeCode == 'B') {
                        _this.filteredAccountLineTypeForMtm.push(account);
                    }
                });
            }
            var filterList = [];
            _this.tradeDataLoader.getData(filterList).subscribe(function (trade) {
                _this.filteredContracts = trade.value;
            });
            _this.charterDataLoader.getData().subscribe(function (charter) {
                _this.filteredCharter = charter;
            });
            _this.initView();
            _this.getFormGroup();
            _this.setValidation();
            _this.disableControl();
            _this.atlasAgGridParam = _this.gridService.getAgGridParam();
        });
    };
    AccountingEditComponent.prototype.setValidation = function () {
        if (this.isRequired('valueDate')) {
            this.valueDateFormCtrl.setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]));
        }
    };
    AccountingEditComponent.prototype.disableControl = function () {
        if (!this.isEditable('valueDate')) {
            this.valueDateFormCtrl.disable();
        }
    };
    AccountingEditComponent.prototype.initView = function () {
        var _this = this;
        this.subscriptions.push(this.lockService.lockAccountingDocument(this.accountingId, _shared_entities_lock_functional_context_entity__WEBPACK_IMPORTED_MODULE_10__["LockFunctionalContext"].AccountingDocumentEdition)
            .subscribe(function () {
            _this.getAccountinglinesSubscription = _this.preaccountingService.getAccoutingDocumentData(_this.accountingId).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_6__["map"])(function (data) {
                _this.documentRefData = data.value.map(function (docRef) {
                    return new _shared_models_posting_management_display_view__WEBPACK_IMPORTED_MODULE_12__["PostingManagementDisplayView"](docRef);
                });
                if (_this.documentRefData) {
                    _this.accountingDocumentData = _this.documentRefData[0];
                    if (_this.accountingDocumentData.transactionDocumentTypeId === _shared_enums_posting_document_type_enum__WEBPACK_IMPORTED_MODULE_24__["PostingDocumentType"].TA && _this.accountingDocumentData.taTypeId === 3) {
                        _this.isMtmSelecetd = true;
                    }
                    _this.accountingDocumentLine = _this.accountingDocumentData.accountingDocumentLines;
                    _this.initializeGridColumns();
                    _this.assignValuesToControl();
                    _this.startLockRefresh(_this.accountingId, _this.accountingDocumentData.documentReference);
                }
            }))
                .subscribe();
        }, function (err) {
            var confirmDialog = _this.dialog.open(_shared_components_confirmation_dialog_confirmation_dialog_component__WEBPACK_IMPORTED_MODULE_8__["ConfirmationDialogComponent"], {
                data: {
                    title: 'Lock',
                    text: err.error.detail,
                    okButton: 'Got it',
                },
            });
            _this.router.navigate(['/' + _this.urlManagementService.getCurrentCompanyId() + '/financial/accounting/entries']);
        }));
    };
    AccountingEditComponent.prototype.getFormGroup = function () {
        this.editDocumentFormGroup = this.formBuilder.group({
            valueDateFormCtrl: this.valueDateFormCtrl,
            dmsidFormCtrl: this.dmsidFormCtrl,
        });
        return _super.prototype.getFormGroup.call(this);
    };
    AccountingEditComponent.prototype.initializeGridColumns = function () {
        var _this = this;
        this.columnDefs = [
            {
                headerName: 'Posting Number',
                field: 'postingLineNumber',
                colId: 'postingLineNumber',
                hide: false,
                editable: false,
            },
            {
                headerName: 'Nom. Account',
                field: 'accountReference',
                colId: 'accountReference',
                hide: false,
                editable: false,
                tooltip: function (params) { return _this.getTooltip(params, 'detailedDescription', 'accountNumber', _this.filteredNominalAccountList); },
            },
            {
                headerName: 'Cli. account',
                colId: 'clientAccountId',
                field: 'clientAccountId',
                valueFormatter: this.clientAccountTypeFormatter.bind(this),
                hide: false,
                editable: false,
                tooltip: function (params) { return _this.getTooltip(params, 'description', 'counterpartyID', _this.filteredCounterpartyList); },
            },
            {
                headerName: 'Amount',
                colId: 'amount',
                field: 'amount',
                hide: false,
                type: 'numericColumn',
                valueFormatter: this.numberFormatter.bind(this),
                editable: false,
            },
            {
                headerName: 'Department',
                colId: 'departmentId',
                field: 'departmentId',
                valueFormatter: this.departmentCodeFormatter.bind(this),
                hide: false,
                editable: false,
                tooltip: function (params) { return _this.getTooltip(params, 'description', 'departmentId', _this.masterdata.departments); },
            },
            {
                headerName: 'Cost types',
                colId: 'costTypeId',
                field: 'costTypeId',
                hide: false,
                valueFormatter: this.costTypesFormatter.bind(this),
                editable: false,
                tooltip: function (params) { return _this.getTooltip(params, 'name', 'costTypeId', _this.masterdata.costTypes); },
            },
            {
                headerName: 'Contract Number',
                colId: 'sectionReference',
                field: 'sectionReference',
                hide: false,
                editable: false,
            },
            {
                headerName: 'Associated Acc.',
                colId: 'associatedAccountCode',
                field: 'associatedAccountCode',
                cellRendererFramework: _shared_components_ag_grid_contextual_search_ag_grid_contextual_search_component__WEBPACK_IMPORTED_MODULE_7__["AgGridContextualSearchComponent"],
                cellRendererParams: function (params) {
                    return {
                        context: {
                            componentParent: _this,
                            gridEditable: _this.isEditable('associatedAccountId'),
                        },
                        gridId: 'counterpartiesGrid',
                        options: _this.filteredCounterpartyList,
                        isRequired: _this.isRequired('associatedAccountId'),
                        isEditable: _this.isEditable('associatedAccountId'),
                        displayProperty: 'counterpartyCode',
                        codeProperty: 'counterpartyCode',
                        descriptionProperty: 'description',
                        valueProperty: 'counterpartyCode',
                        lightBoxTitle: 'Results for Counterparty',
                        showContextualSearchIcon: _this.isEditable('associatedAccountId'),
                    };
                },
                onCellValueChanged: this.onAssociatedAccountSelected.bind(this),
                tooltip: function (params) { return _this.getTooltip(params, 'description', 'counterpartyCode', _this.filteredCounterpartyList); },
            },
            {
                headerName: 'Acc. L. Type',
                colId: 'accountLineTypeId',
                field: 'accountLineTypeId',
                cellRendererFramework: _shared_components_ag_grid_contextual_search_ag_grid_contextual_search_component__WEBPACK_IMPORTED_MODULE_7__["AgGridContextualSearchComponent"],
                cellRendererParams: function (params) {
                    return {
                        context: {
                            componentParent: _this,
                            gridEditable: (_this.isMtmSelecetd) ? false : _this.isEditable('accountLineTypeId'),
                        },
                        gridId: 'accountLineTypeGrid',
                        options: (_this.isMtmSelecetd) ? _this.filteredAccountLineTypeForMtm : _this.filteredAccountLineType,
                        isRequired: _this.isRequired('accountLineTypeId'),
                        isEditable: (_this.isMtmSelecetd) ? false : _this.isEditable('accountLineTypeId'),
                        displayProperty: 'accountLineTypeCode',
                        descriptionProperty: 'description',
                        codeProperty: 'accountLineTypeCode',
                        valueProperty: 'accountLineTypeId',
                        lightBoxTitle: 'Results for  Account Line Type',
                        showContextualSearchIcon: (_this.isMtmSelecetd) ? false : _this.isEditable('accountLineTypeId'),
                        filterContextualSearchFunction: _this.filterAccountLineTypes.bind(_this),
                    };
                },
                onCellValueChanged: function (params) { },
                tooltip: function (params) { return _this.getTooltip(params, 'description', 'accountLineTypeId', _this.filteredAccountLineType); },
            },
            {
                headerName: 'Charter',
                colId: 'charterId',
                field: 'charterId',
                cellRendererFramework: _shared_components_ag_grid_contextual_search_ag_grid_contextual_search_component__WEBPACK_IMPORTED_MODULE_7__["AgGridContextualSearchComponent"],
                cellRendererParams: function (params) {
                    return {
                        context: {
                            componentParent: _this,
                            gridEditable: _this.isEditable('charterId'),
                        },
                        gridId: 'charterGrid',
                        colId: 'charterId',
                        isEditable: _this.isEditable('charterId'),
                        isRequired: _this.isRequired('charterId'),
                        displayProperty: 'charterCode',
                        descriptionProperty: 'description',
                        valueProperty: 'charterId',
                        codeProperty: 'charterCode',
                        lightBoxTitle: 'Results for Charters',
                        dataLoader: _this.charterDataLoader,
                        options: _this.filteredCharter,
                        showContextualSearchIcon: _this.isEditable('charterId'),
                    };
                },
                onCellValueChanged: this.onCharterSelected.bind(this),
                tooltip: function (params) { return _this.getTooltip(params, 'description', 'charterId', _this.filteredCharter); },
            },
            {
                headerName: 'Narrative',
                colId: 'narrative',
                field: 'narrative',
                onCellValueChanged: this.onNarrativeValueChanged.bind(this),
                hide: false,
                editable: this.isEditable('narrative'),
                cellRenderer: this.requiredCell.bind(this),
            },
            {
                headerName: 'CC-1',
                colId: 'costCenter',
                field: 'costCenter',
                hide: false,
                onCellValueChanged: this.onCostCenterValueChanged.bind(this),
                cellRenderer: this.requiredCell.bind(this),
                editable: this.isEditable('costCenter'),
            },
        ];
    };
    AccountingEditComponent.prototype.onGridReady = function (params) {
        this.agGridOptions = params;
        this.agGridOptions.columnDefs = this.agGridCols;
        this.agGridApi = this.agGridOptions.api;
        this.agGridColumnApi = this.agGridOptions.columnApi;
        this.agGridColumnApi.autoSizeAllColumns();
    };
    AccountingEditComponent.prototype.processCellForClipboard = function (params) {
        if (!params.value || !params.column.colDef.cellRendererParams) {
            return params.value;
        }
        var value = params.value;
        var cellRenderedParams = params.column.colDef.cellRendererParams(null);
        var object = cellRenderedParams.valueProperty ? cellRenderedParams.options
            .find(function (option) { return option[cellRenderedParams.valueProperty] === value; }) : null;
        value = typeof value !== 'string' && cellRenderedParams.displayProperty ? value[cellRenderedParams.displayProperty] : value;
        if (object && cellRenderedParams.displayCode && cellRenderedParams.codeProperty) {
            return object[cellRenderedParams.codeProperty];
        }
        return cellRenderedParams.displayProperty && object ? object[cellRenderedParams.displayProperty] : value;
    };
    AccountingEditComponent.prototype.accountLineValueFormatter = function (params) {
        if (params.value && typeof params.value !== 'string') {
            var value = this.filteredAccountLineType.find(function (accountLine) { return accountLine.accountLineTypeId === params.value; }).accountLineTypeCode;
            params.value = value;
        }
        return params.value;
    };
    AccountingEditComponent.prototype.onCharterSelected = function (params) {
        if (params.newValue && params.oldValue !== params.newValue) {
            var selectedCharter = this.filteredCharter.filter(function (charter) { return charter.charterCode.toUpperCase() === params.newValue.toUpperCase(); });
            if (selectedCharter.length === 0) {
                this.snackbarService.throwErrorSnackBar('Not allowed : It is not an existing charter');
                params.node.setDataValue('charterId', '');
            }
        }
    };
    AccountingEditComponent.prototype.onAssociatedAccountSelected = function (params) {
        {
            if (params.newValue && params.oldValue !== params.newValue) {
                var selectedClientAccount = this.filteredCounterpartyList.filter(function (clientAccount) { return clientAccount.counterpartyCode.toUpperCase() === params.newValue.toUpperCase(); });
                if (selectedClientAccount.length === 0) {
                    this.snackbarService.throwErrorSnackBar('Not allowed : ' + 'Value does not exist');
                    params.node.setDataValue('associatedAccountCode', '');
                }
            }
        }
    };
    AccountingEditComponent.prototype.filterAccountLineTypes = function (value, options, rowData) {
        var accountLineTypeList = [];
        accountLineTypeList = options;
        if (rowData.accountReferenceId && typeof rowData.accountReferenceId === 'string') {
            var nominalAccountSelected = this.filteredNominalAccountList.find(function (nominalAccount) { return nominalAccount.accountNumber.toUpperCase()
                === rowData.accountReferenceId.toUpperCase(); });
            if (nominalAccountSelected && nominalAccountSelected.clientAccountMandatory === 1) {
                accountLineTypeList = options.filter(function (accountType) {
                    return accountType.description === 'Customer' || accountType.description === 'Vendor';
                });
            }
        }
        options = accountLineTypeList;
        return this.filterAccountLineTypesOnEdit(options, rowData);
    };
    AccountingEditComponent.prototype.filterAccountLineTypesOnEdit = function (options, rowData) {
        var accountLineTypeList = [];
        accountLineTypeList = options;
        if (rowData.accountReference && typeof rowData.accountReference === 'string') {
            var nominalAccountSelected = this.filteredNominalAccountList.find(function (nominalAccount) { return nominalAccount.accountNumber.toUpperCase()
                === rowData.accountReference.toUpperCase(); });
            if (nominalAccountSelected) {
                if (this.isMtmSelecetd) {
                    if (nominalAccountSelected && nominalAccountSelected.clientAccountMandatory === 1) {
                        accountLineTypeList = options.filter(function (accountType) {
                            return accountType.description === 'Bank';
                        });
                    }
                    else {
                        accountLineTypeList = options.filter(function (accountType) {
                            return accountType.description === 'Ledger';
                        });
                    }
                }
            }
            else {
                if (nominalAccountSelected && nominalAccountSelected.clientAccountMandatory === 1) {
                    accountLineTypeList = options.filter(function (accountType) {
                        return accountType.description === 'Customer' || accountType.description === 'Vendor';
                    });
                }
            }
        }
        options = accountLineTypeList;
        return options;
    };
    AccountingEditComponent.prototype.departmentCodeFormatter = function (params) {
        if (params.value) {
            var departement = this.filteredDepartments.find(function (x) { return x.departmentId === params.value; });
            return departement ? departement.departmentCode : '';
        }
        else {
            return '';
        }
    };
    AccountingEditComponent.prototype.costTypesFormatter = function (params) {
        if (params.value) {
            var costType = this.filteredCostTypes.find(function (x) { return x.costTypeId === params.value; });
            return costType ? costType.costTypeCode : '';
        }
        else {
            return '';
        }
    };
    AccountingEditComponent.prototype.clientAccountTypeFormatter = function (params) {
        if (params.value) {
            var counterparty = this.filteredCounterpartyList.find(function (x) { return x.counterpartyID === params.value; });
            return counterparty ? counterparty.counterpartyCode : '';
        }
        else {
            return '';
        }
    };
    AccountingEditComponent.prototype.onNarrativeValueChanged = function (params) {
        this.isNarrativeValid = true;
        if (params.newValue && params.oldValue !== params.newValue && params.newValue.length > 130) {
            this.isNarrativeValid = false;
            this.snackbarService.throwErrorSnackBar('Length of narrative can not be more than 130 chars');
        }
    };
    AccountingEditComponent.prototype.onCostCenterValueChanged = function (params) {
        this.isCostCenterValid = true;
        if (params.newValue && params.oldValue !== params.newValue && params.newValue.length > 10) {
            this.isCostCenterValid = false;
            this.snackbarService.throwErrorSnackBar('Length of CC-1 can not be more than 10 chars');
        }
    };
    AccountingEditComponent.prototype.submitForm = function () {
        var _this = this;
        this.isSave = true;
        this.agGridApi.stopEditing();
        if (this.editDocumentFormGroup.valid) {
            var errorMessage = this.validateGridData();
            if (errorMessage === '') {
                this.getGridData();
                this.accountingDocumentData.valueDate = this.valueDateFormCtrl.value;
                this.accountingDocumentData.dmsId = this.dmsidFormCtrl.value;
                this.accountingDocumentData.accountingDocumentLines.forEach(function (accountLine) {
                    accountLine.postingLineId = accountLine.postingLineNumber;
                });
                this.preaccountingService
                    .updateAccoutingDocuments(this.accountingDocumentData, false)
                    .subscribe(function (data) {
                    _this.snackbarService.informationSnackBar('Accounting Document updated');
                    _this.router.navigate(['/' + _this.urlManagementService.getCurrentCompanyId() + '/financial/accounting/entries']);
                }, function (error) {
                    console.error(error);
                });
            }
            else {
                this.snackbarService.throwErrorSnackBar(errorMessage);
            }
        }
        else {
            this.snackbarService.throwErrorSnackBar('Form is invalid. Please resolve the errors.');
        }
    };
    AccountingEditComponent.prototype.validateGridData = function () {
        var _this = this;
        var isRowDataValid = false;
        if (!this.isNarrativeValid || !this.isCostCenterValid) {
            return 'Grid data is invalid. Please resolve the errors.';
        }
        var errorMessage = '';
        this.agGridApi.forEachNode(function (rowData) {
            if (!isRowDataValid) {
                var item = [];
                item = _this.getRequiredColumn();
                item.forEach(function (column) {
                    if (!isRowDataValid) {
                        isRowDataValid = _this.validateEmpty(column.id, rowData);
                    }
                });
                if (isRowDataValid) {
                    errorMessage = 'Grid data is invalid. Please resolve the errors.';
                }
            }
        });
        return errorMessage;
    };
    AccountingEditComponent.prototype.getRequiredColumn = function () {
        var item = [];
        item = this.accountCreationConfiguration.filter(function (x) { return x.isEditable; });
        return item;
    };
    AccountingEditComponent.prototype.validateEmpty = function (colId, rowData) {
        if (this.isRequired(colId)) {
            if (rowData.data[colId] && rowData.data[colId].toString().trim() != '' && rowData.data[colId].toString().trim() !== 'Required*') {
                return false;
            }
            else if (colId == "valueDate" || colId == "accountingPeriod" || colId == "paymentDocumentDate") {
                return false;
            }
            return true;
        }
        return false;
    };
    AccountingEditComponent.prototype.getGridData = function () {
        var _this = this;
        this.accountingDocumentData.accountingDocumentLines.forEach(function (accountingLineElement) {
            accountingLineElement.associatedAccountId = (accountingLineElement.associatedAccountCode === null ||
                accountingLineElement.associatedAccountCode.trim() === '') ? null :
                _this.filteredCounterpartyList.find(function (client) {
                    return client.counterpartyCode.toUpperCase() === accountingLineElement.associatedAccountCode.toUpperCase();
                }).counterpartyID;
            if (typeof accountingLineElement.accountLineTypeId === 'string'
                && String(accountingLineElement.accountLineTypeId).length === 1) {
                var accountLineTypeId_1 = String(accountingLineElement.accountLineTypeId);
                accountingLineElement.accountLineTypeId = (accountLineTypeId_1 === null ||
                    accountLineTypeId_1.trim() === '') ? null :
                    _this.filteredAccountLineType.find(function (accountType) {
                        return accountType.accountLineTypeCode.toUpperCase() === accountLineTypeId_1.toUpperCase();
                    }).accountLineTypeId;
            }
            else if (typeof accountingLineElement.accountLineTypeId === 'string') {
                var accountLineTypeId_2 = String(accountingLineElement.accountLineTypeId);
                accountingLineElement.accountLineTypeId = (accountLineTypeId_2 === null ||
                    accountLineTypeId_2.trim() === '') ? null :
                    _this.filteredAccountLineType.find(function (accountType) {
                        return accountType.description.toUpperCase() === accountLineTypeId_2.toUpperCase();
                    }).accountLineTypeId;
            }
            if (typeof accountingLineElement.charterId === 'string') {
                var charterAssigned_1 = String(accountingLineElement.charterId);
                accountingLineElement.charterId = (charterAssigned_1 === null ||
                    charterAssigned_1.trim() === '') ? null :
                    _this.filteredCharter.find(function (charter) {
                        return charter.charterCode.toUpperCase() === charterAssigned_1.toUpperCase();
                    }).charterId;
            }
            accountingLineElement.accountReferenceId = (accountingLineElement.accountReference === null ||
                accountingLineElement.accountReference.trim() === '') ? null :
                _this.filteredNominalAccountList.find(function (nominal) {
                    return nominal.accountNumber.toUpperCase() === accountingLineElement.accountReference.toUpperCase();
                }).nominalAccountId;
            accountingLineElement.sectionId = (accountingLineElement.sectionReference === null ||
                accountingLineElement.sectionReference.trim() === '') ? null :
                _this.filteredContracts.find(function (contract) {
                    return contract.contractLabel.toUpperCase() === accountingLineElement.sectionReference.toUpperCase();
                }).sectionId;
        });
    };
    AccountingEditComponent.prototype.onLoadPreviousPageButtonClicked = function () {
        this.isSave = true;
        this.location.back();
    };
    AccountingEditComponent.prototype.onCancelButtonClicked = function () {
        var _this = this;
        this.isSave = true;
        var confirmDiscardDialog = this.dialog.open(_shared_components_confirmation_dialog_confirmation_dialog_component__WEBPACK_IMPORTED_MODULE_8__["ConfirmationDialogComponent"], {
            data: {
                title: 'Discard Changes',
                text: 'You have some modification pending. Close and lose changes?',
                okButton: 'Ok',
                cancelButton: 'Cancel',
            },
        });
        confirmDiscardDialog.afterClosed().subscribe(function (answer) {
            if (answer) {
                _this.router.navigate(['/' + _this.urlManagementService.getCurrentCompanyId() + '/financial/edit/document/summary']);
            }
        });
    };
    AccountingEditComponent.prototype.assignValuesToControl = function () {
        this.documentDate = this.accountingDocumentData.documentDate ?
            this.datePipe.transform(this.accountingDocumentData.documentDate, 'dd/MM/yyyy').toString().toUpperCase() : null;
        this.originalValueDate = this.accountingDocumentData.originalValueDate ?
            this.datePipe.transform(this.accountingDocumentData.originalValueDate, 'dd/MM/yyyy').toString().toUpperCase() : null;
        this.glDate = this.accountingDocumentData.glDate ?
            this.datePipe.transform(this.accountingDocumentData.glDate, 'dd/MM/yyyy').toString().toUpperCase() : null;
        this.accountingPeriod = this.accountingDocumentData.accountingPeriod ?
            this.datePipe.transform(this.accountingDocumentData.accountingPeriod, 'MMM yyyy').toString().toUpperCase() : null;
        this.currency = this.accountingDocumentData.currencyCode;
        this.valueDateFormCtrl.patchValue(this.accountingDocumentData.valueDate);
        this.dmsidFormCtrl.patchValue(this.accountingDocumentData.dmsId);
        this.initializeGridColumns();
    };
    AccountingEditComponent.prototype.startLockRefresh = function (accountingId, documentReference) {
        this.resourcesInformation = new Array();
        var resourceInformation = new _shared_entities_lock_resource_information_entity__WEBPACK_IMPORTED_MODULE_11__["LockResourceInformation"]();
        resourceInformation.resourceType = 'Accounting Document';
        resourceInformation.resourceId = accountingId;
        resourceInformation.resourceCode = documentReference;
        resourceInformation.needRefresh = true;
        this.resourcesInformation.push(resourceInformation);
    };
    AccountingEditComponent.prototype.stopLockRefresh = function () {
        this.resourcesInformation = new Array();
    };
    AccountingEditComponent.prototype.unloadNotification = function ($event) {
        if (this.editDocumentFormGroup.dirty) {
            $event.returnValue = true;
        }
        this.agGridApi.forEachNode(function (rowData) {
            if (rowData.data.isDirty) {
                $event.returnValue = true;
            }
        });
    };
    AccountingEditComponent.prototype.canDeactivate = function () {
        if (this.editDocumentFormGroup.dirty && this.isSave === false) {
            return window.confirm('Leave an unsave form? \nYour changes won\'t be applied!');
        }
        this.agGridApi.forEachNode(function (rowData) {
            if (rowData.data.isDirty) {
                return window.confirm('Leave an unsave form? \nYour changes won\'t be applied!');
            }
        });
        return true;
    };
    AccountingEditComponent.prototype.ngOnDestroy = function () {
        var _this = this;
        this.stopLockRefresh();
        this.subscriptions.push(this.lockService.unlockAccountingDocument(this.accountingId, _shared_entities_lock_functional_context_entity__WEBPACK_IMPORTED_MODULE_10__["LockFunctionalContext"].AccountingDocumentEdition)
            .subscribe(function () {
            _this.subscriptions.forEach(function (subscription) {
                subscription.unsubscribe();
            });
        }));
    };
    //Format Amount in 2 decimal
    AccountingEditComponent.prototype.numberFormatter = function (params) {
        if (isNaN(params.value) || params.value === null) {
            return '';
        }
        return new Intl.NumberFormat('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 }).format(params.value);
    };
    AccountingEditComponent.prototype.isValueDateBeforeDocumentDate = function () {
        if (this.documentDate && this.valueDateFormCtrl.value) {
            this.documentDateFormat = moment(this.documentDate).toDate();
            var result = Object(_shared_validators_date_validators_validator__WEBPACK_IMPORTED_MODULE_22__["isDateTwoBeforeDateOne"])(this.accountingDocumentData.documentDate, this.valueDateFormCtrl.value);
            if (result) {
                return result;
            }
        }
    };
    // To Validate if Field is Editable
    AccountingEditComponent.prototype.isEditable = function (params) {
        if (this.accountCreationConfiguration.length > 0) {
            var result = this.accountCreationConfiguration[this.accountCreationConfiguration.findIndex(function (x) { return x.id === params; })];
            if (result.isEditable) {
                return result.isEditable;
            }
        }
        return false;
    };
    // To Validate if Field is required
    AccountingEditComponent.prototype.isRequired = function (params) {
        if (this.accountCreationConfiguration.length > 0) {
            var result = this.accountCreationConfiguration[this.accountCreationConfiguration.findIndex(function (x) { return x.id === params; })];
            if (result) {
                return result.isMandatory;
            }
        }
        return false;
    };
    //Apply CSS if Field is required.
    AccountingEditComponent.prototype.requiredCell = function (params) {
        if (!params.value || params.value === '') {
            if (this.isRequired(params.colDef.colId)) {
                return '<div class=\'document-cell-value-required\'>Required*</div>';
            }
        }
        return params.value;
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["HostListener"])('window:beforeunload', ['$event']),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Object]),
        __metadata("design:returntype", void 0)
    ], AccountingEditComponent.prototype, "unloadNotification", null);
    AccountingEditComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'atlas-accounting-edit',
            template: __webpack_require__(/*! ./accounting-edit.component.html */ "./Client/app/financial/components/posting-process/accounting-edit/accounting-edit.component.html"),
            styles: [__webpack_require__(/*! ./accounting-edit.component.scss */ "./Client/app/financial/components/posting-process/accounting-edit/accounting-edit.component.scss")],
            providers: [_shared_services_execution_charter_data_loader__WEBPACK_IMPORTED_MODULE_15__["CharterDataLoader"], _shared_services_list_and_search_trade_data_loader__WEBPACK_IMPORTED_MODULE_19__["TradeDataLoader"], _angular_common__WEBPACK_IMPORTED_MODULE_0__["DatePipe"]],
        }),
        __metadata("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_4__["ActivatedRoute"],
            _shared_services_http_services_preaccounting_service__WEBPACK_IMPORTED_MODULE_18__["PreaccountingService"],
            _shared_services_execution_charter_data_loader__WEBPACK_IMPORTED_MODULE_15__["CharterDataLoader"],
            _shared_services_snackbar_service__WEBPACK_IMPORTED_MODULE_20__["SnackbarService"],
            _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"],
            _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"],
            _angular_common__WEBPACK_IMPORTED_MODULE_0__["Location"],
            _shared_services_list_and_search_trade_data_loader__WEBPACK_IMPORTED_MODULE_19__["TradeDataLoader"],
            _angular_material__WEBPACK_IMPORTED_MODULE_3__["MatDialog"],
            _angular_common__WEBPACK_IMPORTED_MODULE_0__["DatePipe"],
            _shared_services_url_management_service__WEBPACK_IMPORTED_MODULE_21__["UrlManagementService"],
            _shared_services_form_configuration_provider_service__WEBPACK_IMPORTED_MODULE_16__["FormConfigurationProviderService"],
            _shared_services_http_services_lock_service__WEBPACK_IMPORTED_MODULE_17__["LockService"],
            _shared_services_ag_grid_service__WEBPACK_IMPORTED_MODULE_14__["AgGridService"],
            _shared_services_http_services_form_configuration_service__WEBPACK_IMPORTED_MODULE_25__["FormConfigurationService"]])
    ], AccountingEditComponent);
    return AccountingEditComponent;
}(_accounting_edit_base_accounting_edit_base_component__WEBPACK_IMPORTED_MODULE_23__["AccountingEditBaseComponent"]));



/***/ }),

/***/ "./Client/app/financial/components/posting-process/accounting-entries-component/accounting-entries-component.component.html":
/*!**********************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/posting-process/accounting-entries-component/accounting-entries-component.component.html ***!
  \**********************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<atlas-accounting-tab-group></atlas-accounting-tab-group>\r\n\r\n<div class=\"main-container\">\r\n    <mat-slide-toggle [(ngModel)]=\"dataLoader.includeDocumentMatchingInformation\">Include Document Matching Information\r\n    </mat-slide-toggle>\r\n    <mat-card>\r\n        <div fxLayout=\"row\"\r\n             fxLayoutAlign=\"start none\"\r\n             class=\"search\">\r\n            <mat-form-field>\r\n                <input matInput\r\n                       [formControl]=\"documentReferenceCtrl\"\r\n                       placeholder=\"Document Reference\"\r\n                       autocomplete=\"off\"\r\n                       (keydown.enter)=\"onQuickSearchButtonClicked()\"\r\n                       #message>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field>\r\n                <input matInput\r\n                       [formControl]=\"contractNoCtrl\"\r\n                       placeholder=\"Contract Number\"\r\n                       autocomplete=\"off\"\r\n                       (keydown.enter)=\"onQuickSearchButtonClicked()\"\r\n                       #action>\r\n            </mat-form-field>\r\n            <button mat-raised-button\r\n                    (click)=\"onQuickSearchButtonClicked()\"\r\n                    class=\"heroGradient\">\r\n                <mat-icon aria-label=\"Search\"\r\n                          class=\"search-icon\">search</mat-icon>\r\n            </button>\r\n        </div>\r\n    </mat-card>\r\n    <atlas-list-and-search class=\"default-height\"\r\n                           (loadDataStarted)=\"getAccountingEntriesByMatchFlag(); getAccountingEntriesByDocumentReference();\"\r\n                           [gridCode]=\"gridCode\"\r\n                           [gridTitle]=\"'Accounting Entries'\"\r\n                           [company]=\"company\"\r\n                           [additionalFilters]=\"additionalFilters\"\r\n                           [dataLoader]=\"dataLoader\"\r\n                           [pageSize]=\"100\"\r\n                           [loadOnInit]=\"loadOnInit\"\r\n                           (dataLoaded)=\"onDataLoadClicked($event)\"\r\n                           #listAndSearchComponent>\r\n    </atlas-list-and-search>\r\n</div>\r\n"

/***/ }),

/***/ "./Client/app/financial/components/posting-process/accounting-entries-component/accounting-entries-component.component.scss":
/*!**********************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/posting-process/accounting-entries-component/accounting-entries-component.component.scss ***!
  \**********************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ":host ::ng-deep.ag-menu {\n  overflow-y: overlay !important; }\n\n.list-and-search-height {\n  height: calc((100vh * 2 / 3) - 60px); }\n"

/***/ }),

/***/ "./Client/app/financial/components/posting-process/accounting-entries-component/accounting-entries-component.component.ts":
/*!********************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/posting-process/accounting-entries-component/accounting-entries-component.component.ts ***!
  \********************************************************************************************************************************/
/*! exports provided: AccountingEntriesComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AccountingEntriesComponent", function() { return AccountingEntriesComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _core_services_company_manager_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../core/services/company-manager.service */ "./Client/app/core/services/company-manager.service.ts");
/* harmony import */ var _shared_components_list_and_search_list_and_search_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../shared/components/list-and-search/list-and-search.component */ "./Client/app/shared/components/list-and-search/list-and-search.component.ts");
/* harmony import */ var _shared_entities_list_and_search_list_and_search_filter_entity__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../shared/entities/list-and-search/list-and-search-filter.entity */ "./Client/app/shared/entities/list-and-search/list-and-search-filter.entity.ts");
/* harmony import */ var _shared_enums_list_and_search_filter_type_enum__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../shared/enums/list-and-search-filter-type.enum */ "./Client/app/shared/enums/list-and-search-filter-type.enum.ts");
/* harmony import */ var _shared_services_list_and_search_accountingEntries_data_loader__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../shared/services/list-and-search/accountingEntries-data-loader */ "./Client/app/shared/services/list-and-search/accountingEntries-data-loader.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};









var AccountingEntriesComponent = /** @class */ (function () {
    function AccountingEntriesComponent(route, router, companyManager, dataLoader) {
        this.route = route;
        this.router = router;
        this.companyManager = companyManager;
        this.dataLoader = dataLoader;
        this.gridCode = 'accountingEntriesGrid';
        this.yepDocumentType = 'Year End Document';
        this.documentReferenceCtrl = new _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormControl"]();
        this.contractNoCtrl = new _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormControl"]();
        this.additionalFilters = [];
        this.loadOnInit = false;
    }
    AccountingEntriesComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.company = this.route.snapshot.paramMap.get('company');
        this.route.queryParams.subscribe(function (params) {
            _this.matchFlag = (params['matchFlag']);
        });
        this.route.queryParams.subscribe(function (params) {
            _this.documentDeleted = (params['documentDeleted']);
        });
        this.documentReference = this.route.snapshot.paramMap.get('invoiceReference');
        if (this.documentReference && this.listAndSearchComponent && !this.loadOnInit) {
            // when document reference is specified, we need to load the data
            this.documentReferenceCtrl.setValue(this.documentReference);
            this.onQuickSearchButtonClicked();
        }
    };
    AccountingEntriesComponent.prototype.onDataLoadClicked = function (event) {
        var _this = this;
        var yepData = event.filter(function (data) { return data.documentType === _this.yepDocumentType; });
        var otherDocData = event.filter(function (data) { return data.documentType != _this.yepDocumentType; });
        if (yepData) {
            yepData.forEach(function (row) {
                if (row.documentDate.getDate() === 1) {
                    row.accountingPeriod = 'ADJ ' + 'Opening ' + row.documentDate.getFullYear();
                }
                else {
                    row.accountingPeriod = 'ADJ ' + 'Closing ' + row.documentDate.getFullYear();
                }
            });
        }
        var finalData = [];
        finalData.push(otherDocData);
        finalData.push(yepData);
        this.listAndSearchComponent.agGridApi.setRowData(finalData);
    };
    AccountingEntriesComponent.prototype.onQuickSearchButtonClicked = function () {
        this.additionalFilters = [];
        var documentLabelField = this.listAndSearchComponent.columnConfiguration
            .find(function (column) { return column.fieldName === 'DocumentReference'; });
        var sectionLabelField = this.listAndSearchComponent.columnConfiguration
            .find(function (column) { return column.fieldName === 'SecondaryReference'; });
        var contractLabelField = this.listAndSearchComponent.columnConfiguration
            .find(function (column) { return column.fieldName === 'ContractSectionCode'; });
        if (!this.listAndSearchComponent) {
            return;
        }
        else {
            if (this.documentReferenceCtrl.value && this.documentReferenceCtrl.value.toString().length > 0) {
                var filterDocsRef = new _shared_entities_list_and_search_list_and_search_filter_entity__WEBPACK_IMPORTED_MODULE_6__["ListAndSearchFilter"]();
                var filterDocRef = void 0;
                var filterSecDocRef = void 0;
                if (documentLabelField) {
                    filterDocRef = new _shared_entities_list_and_search_list_and_search_filter_entity__WEBPACK_IMPORTED_MODULE_6__["ListAndSearchFilter"]();
                    filterDocRef.fieldId = documentLabelField.fieldId;
                    filterDocRef.fieldName = documentLabelField.fieldName;
                    filterDocRef.predicate = {
                        filterType: _shared_enums_list_and_search_filter_type_enum__WEBPACK_IMPORTED_MODULE_7__["ListAndSearchFilterType"].Text,
                        operator: 'eq',
                        value1: this.documentReference ? this.documentReference + '%' : this.documentReferenceCtrl.value + '%',
                    };
                    filterDocRef.isActive = true;
                }
                if (sectionLabelField) {
                    filterSecDocRef = new _shared_entities_list_and_search_list_and_search_filter_entity__WEBPACK_IMPORTED_MODULE_6__["ListAndSearchFilter"]();
                    filterSecDocRef.fieldId = sectionLabelField.fieldId;
                    filterSecDocRef.fieldName = sectionLabelField.fieldName;
                    filterSecDocRef.predicate = {
                        filterType: _shared_enums_list_and_search_filter_type_enum__WEBPACK_IMPORTED_MODULE_7__["ListAndSearchFilterType"].Text,
                        operator: 'eq',
                        value1: this.documentReferenceCtrl.value + '%',
                    };
                    filterSecDocRef.isActive = true;
                }
                if (documentLabelField || sectionLabelField) {
                    if (documentLabelField && sectionLabelField) {
                        filterDocsRef.logicalOperator = 'or';
                        filterDocsRef.clauses = [filterDocRef, filterSecDocRef];
                        this.additionalFilters.push(filterDocsRef);
                    }
                    else {
                        this.additionalFilters.push(filterDocRef ? filterDocRef : filterSecDocRef);
                    }
                }
            }
            if (this.contractNoCtrl.value && contractLabelField) {
                var filterContractNo = new _shared_entities_list_and_search_list_and_search_filter_entity__WEBPACK_IMPORTED_MODULE_6__["ListAndSearchFilter"]();
                filterContractNo.fieldId = contractLabelField.fieldId;
                filterContractNo.fieldName = contractLabelField.fieldName;
                filterContractNo.predicate = {
                    filterType: _shared_enums_list_and_search_filter_type_enum__WEBPACK_IMPORTED_MODULE_7__["ListAndSearchFilterType"].Text,
                    operator: 'eq',
                    value1: this.contractNoCtrl.value + '%',
                };
                filterContractNo.isActive = true;
                this.additionalFilters.push(filterContractNo);
            }
        }
        this.listAndSearchComponent.additionalFilters = this.additionalFilters;
        this.listAndSearchComponent.loadData(true);
    };
    AccountingEntriesComponent.prototype.getAccountingEntriesByMatchFlag = function () {
        if (this.matchFlag) {
            var MatchFlagLabelField = this.listAndSearchComponent.columnConfiguration
                .find(function (column) { return column.fieldName === 'MatchFlag'; });
            var filterMatchFlagCode = new _shared_entities_list_and_search_list_and_search_filter_entity__WEBPACK_IMPORTED_MODULE_6__["ListAndSearchFilter"]();
            filterMatchFlagCode.fieldId = MatchFlagLabelField.fieldId;
            filterMatchFlagCode.fieldName = MatchFlagLabelField.fieldName;
            filterMatchFlagCode.predicate = {
                filterType: _shared_enums_list_and_search_filter_type_enum__WEBPACK_IMPORTED_MODULE_7__["ListAndSearchFilterType"].Text,
                operator: 'eq',
                value1: this.matchFlag + '%',
            };
            filterMatchFlagCode.isActive = true;
            this.additionalFilters.push(filterMatchFlagCode);
        }
        if (this.documentReference && this.documentReference.length > 0) {
            this.documentReferenceCtrl.setValue(this.documentReference);
            var documentLabelField = this.listAndSearchComponent.columnConfiguration
                .find(function (column) { return column.fieldName === 'DocumentReference'; });
            var sectionLabelField = this.listAndSearchComponent.columnConfiguration
                .find(function (column) { return column.fieldName === 'SecondaryReference'; });
            if (this.documentReferenceCtrl.value && this.documentReferenceCtrl.value.toString().length > 0) {
                var filterDocsRef = new _shared_entities_list_and_search_list_and_search_filter_entity__WEBPACK_IMPORTED_MODULE_6__["ListAndSearchFilter"]();
                var filterDocRef = void 0;
                var filterSecDocRef = void 0;
                if (documentLabelField) {
                    filterDocRef = new _shared_entities_list_and_search_list_and_search_filter_entity__WEBPACK_IMPORTED_MODULE_6__["ListAndSearchFilter"]();
                    filterDocRef.fieldId = documentLabelField.fieldId;
                    filterDocRef.fieldName = documentLabelField.fieldName;
                    filterDocRef.predicate = {
                        filterType: _shared_enums_list_and_search_filter_type_enum__WEBPACK_IMPORTED_MODULE_7__["ListAndSearchFilterType"].Text,
                        operator: 'eq',
                        value1: this.documentReferenceCtrl.value + '%',
                    };
                    filterDocRef.isActive = true;
                }
                if (sectionLabelField) {
                    filterSecDocRef = new _shared_entities_list_and_search_list_and_search_filter_entity__WEBPACK_IMPORTED_MODULE_6__["ListAndSearchFilter"]();
                    filterSecDocRef.fieldId = sectionLabelField.fieldId;
                    filterSecDocRef.fieldName = sectionLabelField.fieldName;
                    filterSecDocRef.predicate = {
                        filterType: _shared_enums_list_and_search_filter_type_enum__WEBPACK_IMPORTED_MODULE_7__["ListAndSearchFilterType"].Text,
                        operator: 'eq',
                        value1: this.documentReferenceCtrl.value + '%',
                    };
                    filterSecDocRef.isActive = true;
                }
                if (documentLabelField || sectionLabelField) {
                    if (documentLabelField && sectionLabelField) {
                        filterDocsRef.logicalOperator = 'or';
                        filterDocsRef.clauses = [filterDocRef, filterSecDocRef];
                        this.additionalFilters.push(filterDocsRef);
                    }
                    else {
                        this.additionalFilters.push(filterDocRef ? filterDocRef : filterSecDocRef);
                    }
                }
                this.documentReference = null;
            }
        }
        this.listAndSearchComponent.additionalFilters = this.additionalFilters;
    };
    AccountingEntriesComponent.prototype.getAccountingEntriesByDocumentReference = function () {
        if (this.documentDeleted) {
            var documentReferenceLabelField = this.listAndSearchComponent.columnConfiguration
                .find(function (column) { return column.fieldName === 'DocumentReference'; });
            var filterdocumentReference = new _shared_entities_list_and_search_list_and_search_filter_entity__WEBPACK_IMPORTED_MODULE_6__["ListAndSearchFilter"]();
            filterdocumentReference.fieldId = documentReferenceLabelField.fieldId;
            filterdocumentReference.fieldName = documentReferenceLabelField.fieldName;
            filterdocumentReference.predicate = {
                filterType: _shared_enums_list_and_search_filter_type_enum__WEBPACK_IMPORTED_MODULE_7__["ListAndSearchFilterType"].Text,
                operator: 'in',
                value1: this.documentDeleted.toString(),
            };
            filterdocumentReference.isActive = true;
            this.additionalFilters.push(filterdocumentReference);
        }
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])(_angular_material__WEBPACK_IMPORTED_MODULE_2__["MatMenuTrigger"]),
        __metadata("design:type", _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatMenuTrigger"])
    ], AccountingEntriesComponent.prototype, "columnMenuTrigger", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('listAndSearchComponent'),
        __metadata("design:type", _shared_components_list_and_search_list_and_search_component__WEBPACK_IMPORTED_MODULE_5__["ListAndSearchComponent"])
    ], AccountingEntriesComponent.prototype, "listAndSearchComponent", void 0);
    AccountingEntriesComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'atlas-accounting-entries-component',
            providers: [_shared_services_list_and_search_accountingEntries_data_loader__WEBPACK_IMPORTED_MODULE_8__["AccountingEntriesDataLoader"]],
            template: __webpack_require__(/*! ./accounting-entries-component.component.html */ "./Client/app/financial/components/posting-process/accounting-entries-component/accounting-entries-component.component.html"),
            styles: [__webpack_require__(/*! ./accounting-entries-component.component.scss */ "./Client/app/financial/components/posting-process/accounting-entries-component/accounting-entries-component.component.scss")],
        }),
        __metadata("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"],
            _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"],
            _core_services_company_manager_service__WEBPACK_IMPORTED_MODULE_4__["CompanyManagerService"],
            _shared_services_list_and_search_accountingEntries_data_loader__WEBPACK_IMPORTED_MODULE_8__["AccountingEntriesDataLoader"]])
    ], AccountingEntriesComponent);
    return AccountingEntriesComponent;
}());



/***/ }),

/***/ "./Client/app/financial/components/posting-process/accounting-entries-component/manual-journal-accrual-view/manual-journal-accrual-view.component.html":
/*!*************************************************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/posting-process/accounting-entries-component/manual-journal-accrual-view/manual-journal-accrual-view.component.html ***!
  \*************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"main-container\">\r\n    <mat-card>\r\n        <h2>Document Information for {{docReference}}</h2>\r\n        <div fxLayout=\"row\">\r\n            <div class=\"accounting-document-fields\"\r\n                 fxFlex=\"85%\">\r\n                <div fxLayout=\"column\">\r\n                    <div fxLayout=\"row\"\r\n                         fxLayoutGap=\"5%\"\r\n                         fxLayoutAlign=\"left start\">\r\n                        <div class=\"custom-form\"\r\n                             fxFlex=\"30%\">\r\n                            <mat-form-field>\r\n                                <input matInput\r\n                                       [matDatepicker]=\"frompicker\"\r\n                                       placeholder=\"Document Date\"\r\n                                       autocomplete=\"off\"\r\n                                       [formControl]='docDateFormCtrl'>\r\n                                <mat-datepicker-toggle matSuffix\r\n                                                       [for]=\"frompicker\"></mat-datepicker-toggle>\r\n                                <mat-datepicker #frompicker></mat-datepicker>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <mat-form-field fxFlex=\"30%\">\r\n                            <input matInput\r\n                                   [matDatepicker]=\"valueDatePicker\"\r\n                                   placeholder=\"Value Date\"\r\n                                   autocomplete=\"off\"\r\n                                   [formControl]='valueDateFormCtrl'>\r\n                            <mat-datepicker-toggle matSuffix\r\n                                                   [for]=\"frompicker\"></mat-datepicker-toggle>\r\n                            <mat-datepicker #valueDatePicker></mat-datepicker>\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <br />\r\n                    <div fxLayout=\"row\"\r\n                         fxLayoutGap=\"5%\"\r\n                         fxLayoutAlign=\"left start\">\r\n                        <div class=\"custom-form\"\r\n                             fxFlex=\"30%\">\r\n\r\n                            <atlas-month-date-picker #monthDatePicker\r\n                                                     fxFlex=\"30%\"\r\n                                                     class=\"month-date-picker\"\r\n                                                     [fieldControl]=\"accPeriodFormCtrl\"\r\n                                                     [label]=\"'Accounting Period'\"></atlas-month-date-picker>\r\n                        </div>\r\n                        <mat-form-field fxFlex=\"30%\">\r\n                            <input matInput\r\n                                   placeholder=\"Currency\"\r\n                                   autocomplete=\"off\"\r\n                                   [formControl]='currencyCtrl'>\r\n                        </mat-form-field>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </mat-card>\r\n    <mat-card>\r\n\r\n        <ag-grid-angular class=\"ag-theme-material atr-ag-grid\"\r\n                         [rowData]=\"accountingDocumentLine\"\r\n                         [columnDefs]=\"columnDefs\"\r\n                         domLayout=\"autoHeight\"\r\n                         (gridReady)=\"onGridReady($event)\"\r\n                         [pagination]=\"true\"\r\n                         [paginationPageSize]=\"10\"\r\n                         [enableSorting]=\"true\"\r\n                         [enableColResize]=\"false\"\r\n                         [rowStyle]=\"rowStyle\"\r\n                         [enableRangeSelection]=\"true\"\r\n                         [rowHeight]=\"atlasAgGridParam.rowHeight\">\r\n        </ag-grid-angular>\r\n        <div  fxLayout=\"column\"\r\n              fxLayoutAlign=\"space-around end\">\r\n            <div fxFlex=\"33\">\r\n                <mat-card-subtitle class=\"total-figure \">Amount : <span\r\n                          class=\"total-figure-value\">{{formatValue(amount)}}\r\n                    </span></mat-card-subtitle>\r\n            </div>\r\n        </div>\r\n\r\n    </mat-card>\r\n    <div fxLayout=\"row\"\r\n         class='mat-buttons'>\r\n        <div fxFlex=\"90\">\r\n            <button mat-button\r\n                    class='mat-button-discard'\r\n                    (click)=\"onDiscardButtonClicked()\">DISCARD</button>\r\n        </div>\r\n    </div>\r\n</div>\r\n"

/***/ }),

/***/ "./Client/app/financial/components/posting-process/accounting-entries-component/manual-journal-accrual-view/manual-journal-accrual-view.component.scss":
/*!*************************************************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/posting-process/accounting-entries-component/manual-journal-accrual-view/manual-journal-accrual-view.component.scss ***!
  \*************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".accounting-document-fields {\n  width: 100%; }\n\n.month-date-picker {\n  width: 100%;\n  display: inline-flex; }\n"

/***/ }),

/***/ "./Client/app/financial/components/posting-process/accounting-entries-component/manual-journal-accrual-view/manual-journal-accrual-view.component.ts":
/*!***********************************************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/posting-process/accounting-entries-component/manual-journal-accrual-view/manual-journal-accrual-view.component.ts ***!
  \***********************************************************************************************************************************************************/
/*! exports provided: ManualJournalAccrualViewComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ManualJournalAccrualViewComponent", function() { return ManualJournalAccrualViewComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _core_services_company_manager_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../../core/services/company-manager.service */ "./Client/app/core/services/company-manager.service.ts");
/* harmony import */ var _shared_components_base_form_component_base_form_component_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../shared/components/base-form-component/base-form-component.component */ "./Client/app/shared/components/base-form-component/base-form-component.component.ts");
/* harmony import */ var _shared_entities_atlas_form_control__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../../shared/entities/atlas-form-control */ "./Client/app/shared/entities/atlas-form-control.ts");
/* harmony import */ var _shared_enums_posting_document_type_enum__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../../shared/enums/posting-document-type.enum */ "./Client/app/shared/enums/posting-document-type.enum.ts");
/* harmony import */ var _shared_services_ag_grid_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../../shared/services/ag-grid.service */ "./Client/app/shared/services/ag-grid.service.ts");
/* harmony import */ var _shared_services_execution_charter_data_loader__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../../shared/services/execution/charter-data-loader */ "./Client/app/shared/services/execution/charter-data-loader.ts");
/* harmony import */ var _shared_services_form_configuration_provider_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../../../shared/services/form-configuration-provider.service */ "./Client/app/shared/services/form-configuration-provider.service.ts");
/* harmony import */ var _shared_services_http_services_preaccounting_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../../../shared/services/http-services/preaccounting.service */ "./Client/app/shared/services/http-services/preaccounting.service.ts");
/* harmony import */ var _shared_services_title_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../../../shared/services/title.service */ "./Client/app/shared/services/title.service.ts");
/* harmony import */ var _shared_services_ui_service__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../../../../shared/services/ui.service */ "./Client/app/shared/services/ui.service.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};














var moment = moment__WEBPACK_IMPORTED_MODULE_3__;
var ManualJournalAccrualViewComponent = /** @class */ (function (_super) {
    __extends(ManualJournalAccrualViewComponent, _super);
    function ManualJournalAccrualViewComponent(preaccountingService, route, uiService, formBuilder, formConfigurationProvider, charterDataLoader, router, companyManager, gridService, titleService) {
        var _this = _super.call(this, formConfigurationProvider) || this;
        _this.preaccountingService = preaccountingService;
        _this.route = route;
        _this.uiService = uiService;
        _this.formBuilder = formBuilder;
        _this.formConfigurationProvider = formConfigurationProvider;
        _this.charterDataLoader = charterDataLoader;
        _this.router = router;
        _this.companyManager = companyManager;
        _this.gridService = gridService;
        _this.titleService = titleService;
        _this.subscriptions = [];
        _this.viewAccountingLines = [];
        _this.amount = 0;
        _this.amountFormat = 'en-US';
        _this.agGridOptions = {};
        _this.accrualNumberColumn = 'accrualNumber';
        _this.docDateFormCtrl = new _shared_entities_atlas_form_control__WEBPACK_IMPORTED_MODULE_6__["AtlasFormControl"]('docDateFormCtrl');
        _this.valueDateFormCtrl = new _shared_entities_atlas_form_control__WEBPACK_IMPORTED_MODULE_6__["AtlasFormControl"]('valueDateFormCtrl');
        _this.accPeriodFormCtrl = new _shared_entities_atlas_form_control__WEBPACK_IMPORTED_MODULE_6__["AtlasFormControl"]('accPeriodFormCtrl');
        _this.currencyCtrl = new _shared_entities_atlas_form_control__WEBPACK_IMPORTED_MODULE_6__["AtlasFormControl"]('currencyCtrl');
        return _this;
    }
    ManualJournalAccrualViewComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.atlasAgGridParam = this.gridService.getAgGridParam();
        this.masterdata = this.route.snapshot.data.masterdata;
        this.accountingId = Number(this.route.snapshot.paramMap.get('accountingId'));
        this.subscriptions.push(this.preaccountingService.getAccoutingDocumentData(this.accountingId).subscribe(function (data) {
            if (data) {
                _this.initializeGridColumns();
                _this.charterDataLoader.getData().subscribe(function (charter) {
                    _this.filteredCharter = charter;
                });
                _this.filteredCurrencyList = _this.masterdata.currencies;
                _this.viewAccountingLines = data.value;
                _this.accountingDocumentData = _this.viewAccountingLines[0];
                _this.titleService.setTitle(_this.accountingDocumentData.documentReference + ' - ' + _this.route.snapshot.data.title);
                _this.currencyControl = _this.filteredCurrencyList.find(function (currency) {
                    return currency.currencyCode === _this.accountingDocumentData.currencyCode;
                });
                _this.accountingDocumentLine = _this.accountingDocumentData.accountingDocumentLines;
                _this.isAccrual = (_this.accountingDocumentData.transactionDocumentTypeId === _shared_enums_posting_document_type_enum__WEBPACK_IMPORTED_MODULE_7__["PostingDocumentType"].TA) ? true : false;
                _this.getFormGroup();
                _this.initializeGridColumns();
                _this.assignValuesToControl();
                _this.accountDocumentFormGroup.disable();
                _this.agGridApi.setColumnDefs(_this.columnDefs);
                _this.agGridColumnApi.setColumnVisible(_this.accrualNumberColumn, _this.isAccrual ? true : false);
            }
        }));
    };
    ManualJournalAccrualViewComponent.prototype.onGridReady = function (params) {
        this.agGridOptions = params;
        this.agGridOptions.columnDefs = this.agGridCols;
        this.agGridApi = this.agGridOptions.api;
        this.agGridColumnApi = this.agGridOptions.columnApi;
        this.agGridColumnApi.autoSizeAllColumns();
    };
    ManualJournalAccrualViewComponent.prototype.getFormGroup = function () {
        this.accountDocumentFormGroup = this.formBuilder.group({
            currencyCtrl: this.currencyCtrl,
            docDateFormCtrl: this.docDateFormCtrl,
            valueDateFormCtrl: this.valueDateFormCtrl,
            accPeriodFormCtrl: this.accPeriodFormCtrl,
        });
        return _super.prototype.getFormGroup.call(this);
    };
    ManualJournalAccrualViewComponent.prototype.assignValuesToControl = function () {
        var _this = this;
        this.amount = 0;
        this.docReference = this.accountingDocumentData.documentReference;
        this.docDateFormCtrl.patchValue(this.accountingDocumentData.documentDate);
        this.valueDateFormCtrl.patchValue(this.accountingDocumentData.valueDate);
        this.accPeriodFormCtrl.patchValue(moment(this.accountingDocumentData.accountingPeriod));
        this.currencyCtrl.patchValue(this.currencyControl ? this.currencyControl.currencyCode : null);
        this.accountingDocumentData.accountingDocumentLines.forEach(function (rowData) {
            _this.amount += rowData.amount;
        });
    };
    ManualJournalAccrualViewComponent.prototype.onDiscardButtonClicked = function () {
        this.router.navigate(['/' + this.companyManager.getCurrentCompanyId() + '/financial/accounting/entries']);
    };
    ManualJournalAccrualViewComponent.prototype.formatValue = function (amount) {
        if (isNaN(amount) || amount === null) {
            return '';
        }
        return new Intl.NumberFormat(this.amountFormat, { minimumFractionDigits: 2, maximumFractionDigits: 2 }).format(amount);
    };
    ManualJournalAccrualViewComponent.prototype.initializeGridColumns = function () {
        this.columnDefs = [
            {
                headerName: 'Nominal acc.',
                colId: 'accountReference',
                field: 'accountReference',
            },
            {
                headerName: 'Cli. account',
                colId: 'clientAccountId',
                field: 'clientAccountId',
                valueFormatter: this.clientAccountIdFormatter.bind(this),
            },
            {
                headerName: 'Associated Acc.',
                colId: 'associatedAccountCode',
                field: 'associatedAccountCode',
            },
            {
                headerName: 'Acc. L. Type',
                colId: 'accountLineTypeId',
                field: 'accountLineTypeId',
                valueFormatter: this.accountLineTypeIdFormatter.bind(this),
            },
            {
                headerName: 'Cost types',
                colId: 'costTypeId',
                field: 'costTypeId',
                valueFormatter: this.costTypeIdFormatter.bind(this),
            },
            {
                headerName: 'Amount',
                colId: 'amount',
                field: 'amount',
                valueFormatter: this.currencyFormatterInGrid.bind(this),
            },
            {
                headerName: 'Narrative',
                colId: 'narrative',
                field: 'narrative',
            },
            {
                headerName: 'Department',
                colId: 'departmentId',
                field: 'departmentId',
                valueFormatter: this.departmentIdFormatter.bind(this),
            },
            {
                headerName: 'Sec. Doc. ref',
                colId: 'secondaryDocumentReference',
                field: 'secondaryDocumentReference',
            },
            {
                headerName: 'Ext. Doc. Ref',
                colId: 'extDocReference',
                field: 'extDocReference',
            },
            {
                headerName: 'Contract ref.',
                colId: 'sectionReference',
                field: 'sectionReference',
            },
            {
                headerName: 'Commodity',
                colId: 'commodityId',
                field: 'commodityId',
                valueFormatter: this.commodityIdFormatter.bind(this),
            },
            {
                headerName: 'Quantity',
                colId: 'quantity',
                field: 'quantity',
            },
            {
                headerName: 'Charter',
                colId: 'charterId',
                field: 'charterId',
                valueFormatter: this.charterIdFormatter.bind(this),
            },
            {
                headerName: 'Cost Center',
                colId: 'costCenter',
                field: 'costCenter',
            },
            {
                headerName: 'Accrual Number',
                colId: 'accrualNumber',
                field: 'accrualNumber',
            },
        ];
        this.rowStyle = { 'border-bottom': '1px solid #e0e0e0 !important' };
    };
    ManualJournalAccrualViewComponent.prototype.clientAccountIdFormatter = function (params) {
        if (params.value && this.masterdata.counterparties) {
            var counterpartiesList = this.masterdata.counterparties.find(function (x) { return x.counterpartyID === params.value; });
            if (counterpartiesList) {
                return counterpartiesList.counterpartyCode;
            }
        }
        return '';
    };
    ManualJournalAccrualViewComponent.prototype.accountLineTypeIdFormatter = function (params) {
        if (params.value && this.masterdata.accountLineTypes) {
            var accountLineTypesList = this.masterdata.accountLineTypes.find(function (x) { return x.accountLineTypeId === params.value; });
            if (accountLineTypesList) {
                return accountLineTypesList.accountLineTypeCode;
            }
        }
        return '';
    };
    ManualJournalAccrualViewComponent.prototype.costTypeIdFormatter = function (params) {
        if (params.value && this.masterdata.costTypes) {
            var costTypesList = this.masterdata.costTypes.find(function (x) { return x.costTypeId === params.value; });
            if (costTypesList) {
                return costTypesList.costTypeCode;
            }
        }
        return '';
    };
    ManualJournalAccrualViewComponent.prototype.departmentIdFormatter = function (params) {
        if (params.value && this.masterdata.departments) {
            var departmentsList = this.masterdata.departments.find(function (x) { return x.departmentId === params.value; });
            if (departmentsList) {
                return departmentsList.departmentCode;
            }
        }
        return '';
    };
    ManualJournalAccrualViewComponent.prototype.commodityIdFormatter = function (params) {
        if (params.value && this.masterdata.commodities) {
            var commoditiesList = this.masterdata.commodities.find(function (x) { return x.commodityId === params.value; });
            if (commoditiesList) {
                return commoditiesList.commodityCode;
            }
        }
        return '';
    };
    ManualJournalAccrualViewComponent.prototype.charterIdFormatter = function (params) {
        if (params.value && this.filteredCharter) {
            var charterList = this.filteredCharter.find(function (x) { return x.charterId === params.value; });
            if (charterList) {
                return charterList.charterCode;
            }
        }
        return '';
    };
    ManualJournalAccrualViewComponent.prototype.currencyFormatterInGrid = function (params) {
        if (isNaN(params.value) || params.value === null) {
            return '';
        }
        return new Intl.NumberFormat(this.amountFormat, { minimumFractionDigits: 2, maximumFractionDigits: 2 }).format(params.value);
    };
    ManualJournalAccrualViewComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'atlas-manual-journal-accrual-view',
            template: __webpack_require__(/*! ./manual-journal-accrual-view.component.html */ "./Client/app/financial/components/posting-process/accounting-entries-component/manual-journal-accrual-view/manual-journal-accrual-view.component.html"),
            styles: [__webpack_require__(/*! ./manual-journal-accrual-view.component.scss */ "./Client/app/financial/components/posting-process/accounting-entries-component/manual-journal-accrual-view/manual-journal-accrual-view.component.scss")],
            providers: [_shared_services_execution_charter_data_loader__WEBPACK_IMPORTED_MODULE_9__["CharterDataLoader"]],
        }),
        __metadata("design:paramtypes", [_shared_services_http_services_preaccounting_service__WEBPACK_IMPORTED_MODULE_11__["PreaccountingService"],
            _angular_router__WEBPACK_IMPORTED_MODULE_2__["ActivatedRoute"],
            _shared_services_ui_service__WEBPACK_IMPORTED_MODULE_13__["UiService"],
            _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormBuilder"],
            _shared_services_form_configuration_provider_service__WEBPACK_IMPORTED_MODULE_10__["FormConfigurationProviderService"],
            _shared_services_execution_charter_data_loader__WEBPACK_IMPORTED_MODULE_9__["CharterDataLoader"],
            _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"],
            _core_services_company_manager_service__WEBPACK_IMPORTED_MODULE_4__["CompanyManagerService"],
            _shared_services_ag_grid_service__WEBPACK_IMPORTED_MODULE_8__["AgGridService"],
            _shared_services_title_service__WEBPACK_IMPORTED_MODULE_12__["TitleService"]])
    ], ManualJournalAccrualViewComponent);
    return ManualJournalAccrualViewComponent;
}(_shared_components_base_form_component_base_form_component_component__WEBPACK_IMPORTED_MODULE_5__["BaseFormComponent"]));



/***/ }),

/***/ "./Client/app/financial/components/posting-process/accounting-file-upload/accounting-file-upload-dialog-box/accounting-file-upload-dialog-box.component.html":
/*!*******************************************************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/posting-process/accounting-file-upload/accounting-file-upload-dialog-box/accounting-file-upload-dialog-box.component.html ***!
  \*******************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"fileUpload\">\r\n    <input class=\"hidden-during-loading\" type=\"file\" accept=\"docType\"\r\n                                                     (change)=\"onFileSelected($event.target.files)\"\r\n                                                     #fileUpload>\r\n\r\n    <button mat-raised-button class=\"fab-text-button\" (click)=\"fileUpload.click()\"\r\n                                                      color=\"accent\">\r\n        <mat-icon class=\"mdc-fab__icon material-icons\">add</mat-icon>\r\n        Import\r\n    </button>\r\n</div>"

/***/ }),

/***/ "./Client/app/financial/components/posting-process/accounting-file-upload/accounting-file-upload-dialog-box/accounting-file-upload-dialog-box.component.scss":
/*!*******************************************************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/posting-process/accounting-file-upload/accounting-file-upload-dialog-box/accounting-file-upload-dialog-box.component.scss ***!
  \*******************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".mat-dialog-content {\n  width: 500px; }\n\n.printing-input-container {\n  margin-top: 2%; }\n\n.error-message {\n  color: #df5a4d;\n  font-size: 0.8em; }\n"

/***/ }),

/***/ "./Client/app/financial/components/posting-process/accounting-file-upload/accounting-file-upload-dialog-box/accounting-file-upload-dialog-box.component.ts":
/*!*****************************************************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/posting-process/accounting-file-upload/accounting-file-upload-dialog-box/accounting-file-upload-dialog-box.component.ts ***!
  \*****************************************************************************************************************************************************************/
/*! exports provided: AccountingFileUploadDialogBoxComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AccountingFileUploadDialogBoxComponent", function() { return AccountingFileUploadDialogBoxComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _shared_services_snackbar_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../shared/services/snackbar.service */ "./Client/app/shared/services/snackbar.service.ts");
/* harmony import */ var _shared_services_ui_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../shared/services/ui.service */ "./Client/app/shared/services/ui.service.ts");
/* harmony import */ var _shared_services_form_configuration_provider_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../shared/services/form-configuration-provider.service */ "./Client/app/shared/services/form-configuration-provider.service.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var AccountingFileUploadDialogBoxComponent = /** @class */ (function () {
    function AccountingFileUploadDialogBoxComponent(snackbarService, formConfigurationProvider, uiService) {
        this.snackbarService = snackbarService;
        this.formConfigurationProvider = formConfigurationProvider;
        this.uiService = uiService;
        this.documentSelected = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
    }
    AccountingFileUploadDialogBoxComponent.prototype.ngOnInit = function () {
    };
    AccountingFileUploadDialogBoxComponent.prototype.onFileSelected = function (files) {
        if (files.length === 0) {
            return;
        }
        var file = files[0];
        this.documentSelected.emit(file);
        event.stopPropagation();
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", String)
    ], AccountingFileUploadDialogBoxComponent.prototype, "docType", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], AccountingFileUploadDialogBoxComponent.prototype, "documentSelected", void 0);
    AccountingFileUploadDialogBoxComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'atlas-accounting-file-upload-dialog-box',
            template: __webpack_require__(/*! ./accounting-file-upload-dialog-box.component.html */ "./Client/app/financial/components/posting-process/accounting-file-upload/accounting-file-upload-dialog-box/accounting-file-upload-dialog-box.component.html"),
            styles: [__webpack_require__(/*! ./accounting-file-upload-dialog-box.component.scss */ "./Client/app/financial/components/posting-process/accounting-file-upload/accounting-file-upload-dialog-box/accounting-file-upload-dialog-box.component.scss")]
        }),
        __metadata("design:paramtypes", [_shared_services_snackbar_service__WEBPACK_IMPORTED_MODULE_1__["SnackbarService"],
            _shared_services_form_configuration_provider_service__WEBPACK_IMPORTED_MODULE_3__["FormConfigurationProviderService"],
            _shared_services_ui_service__WEBPACK_IMPORTED_MODULE_2__["UiService"]])
    ], AccountingFileUploadDialogBoxComponent);
    return AccountingFileUploadDialogBoxComponent;
}());



/***/ }),

/***/ "./Client/app/financial/components/posting-process/accounting-tab-group/accounting-tab-group.component.html":
/*!******************************************************************************************************************!*\
  !*** ./Client/app/financial/components/posting-process/accounting-tab-group/accounting-tab-group.component.html ***!
  \******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<atlas-financial-tab-group></atlas-financial-tab-group>\r\n<div class=\"dark-tab header-tab mat-elevation-z6\">\r\n    <div class=\"header-tab-container\">\r\n        <nav mat-tab-nav-bar>\r\n\r\n            <div *ngIf=\"documentActionsPrivilege\">\r\n                <a mat-tab-link\r\n                   *ifAuthorized=\"routeLinks[0].privilege,company:this.company\"\r\n                   routerLinkActive\r\n                   #rla=\"routerLinkActive\"\r\n                   [matMenuTriggerFor]=\"export\"\r\n                   [active]=\"isActive(routeLinks[0])\">\r\n                    {{ routeLinks[0].label }}\r\n                </a>\r\n                <mat-menu #export=\"matMenu\"\r\n                          [overlapTrigger]=\"false\"\r\n                          xPosition=\"after\">\r\n                    <div *ngFor=\"let routeLinkChild of routeLinks[0].routeLinksChildren\">\r\n                        <a mat-tab-link\r\n                           *ifAuthorized=\"routeLinkChild.privilege,company:this.company\"\r\n                           [routerLink]=\"routeLinkChild.link\"\r\n                           routerLinkActive\r\n                           #rla=\"routerLinkActive\"\r\n                           [active]=\"isActive(routeLinkChild)\">\r\n                            {{ routeLinkChild.label }}\r\n                        </a>\r\n                    </div>\r\n                </mat-menu>\r\n            </div>\r\n            <div *ngFor=\"let routeLink of routeLinks | slice:1\">\r\n                <a mat-tab-link\r\n                   *ifAuthorized=\"routeLink.privilege,company:this.company\"\r\n                   [routerLink]=\"routeLink.link\"\r\n                   routerLinkActive\r\n                   #rla=\"routerLinkActive\"\r\n                   [active]=\"isActive(routeLink)\">\r\n                    {{ routeLink.label }}\r\n                </a>\r\n            </div>\r\n            <a mat-tab-link\r\n               [matMenuTriggerFor]=\"reports\">\r\n                Reports\r\n            </a>\r\n            <mat-menu #reports=\"matMenu\"\r\n                      [overlapTrigger]=\"false\"\r\n                      xPosition=\"after\">\r\n                <span *ngFor=\"let item of filteredTemplates\">\r\n                    <button mat-button\r\n                            (click)=\"OnReportClick(item)\">\r\n                        {{item.name}}\r\n                    </button>\r\n                </span>\r\n            </mat-menu>\r\n        </nav>\r\n    </div>\r\n</div>"

/***/ }),

/***/ "./Client/app/financial/components/posting-process/accounting-tab-group/accounting-tab-group.component.scss":
/*!******************************************************************************************************************!*\
  !*** ./Client/app/financial/components/posting-process/accounting-tab-group/accounting-tab-group.component.scss ***!
  \******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".header-tab {\n  margin-bottom: 0px;\n  margin-top: -18px;\n  background-color: white !important; }\n\n.menu-header {\n  background-color: #53c234;\n  color: white; }\n\n.menu-header mat-icon {\n    color: white; }\n\n.mat-menu-content {\n  padding-top: 0 !important; }\n\n.floating-menu {\n  top: -1px; }\n\n::ng-deep.dark-tab.mat-tab-nav-bar.mat-primary,\n.dark-tab .mat-tab-link,\n.dark-tab .mat-tab-label .mat-tab-label-content {\n  text-transform: none !important;\n  color: #332f30 !important; }\n"

/***/ }),

/***/ "./Client/app/financial/components/posting-process/accounting-tab-group/accounting-tab-group.component.ts":
/*!****************************************************************************************************************!*\
  !*** ./Client/app/financial/components/posting-process/accounting-tab-group/accounting-tab-group.component.ts ***!
  \****************************************************************************************************************/
/*! exports provided: AccountingTabGroupComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AccountingTabGroupComponent", function() { return AccountingTabGroupComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _core_services_authorization_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../core/services/authorization.service */ "./Client/app/core/services/authorization.service.ts");
/* harmony import */ var _core_services_company_manager_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../core/services/company-manager.service */ "./Client/app/core/services/company-manager.service.ts");
/* harmony import */ var _shared_components_generic_report_viewer_generic_report_viewer_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../shared/components/generic-report-viewer/generic-report-viewer.component */ "./Client/app/shared/components/generic-report-viewer/generic-report-viewer.component.ts");
/* harmony import */ var _shared_services_http_services_document_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../shared/services/http-services/document.service */ "./Client/app/shared/services/http-services/document.service.ts");
/* harmony import */ var _shared_services_security_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../shared/services/security.service */ "./Client/app/shared/services/security.service.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};








var AccountingTabGroupComponent = /** @class */ (function () {
    function AccountingTabGroupComponent(router, companyManager, authorizationService, securityService, route, dialog, documentService) {
        var _this = this;
        this.router = router;
        this.companyManager = companyManager;
        this.authorizationService = authorizationService;
        this.securityService = securityService;
        this.route = route;
        this.dialog = dialog;
        this.documentService = documentService;
        this.editAccOrJournalDocumentPrivilege = true;
        this.editDocumentPrivilege = true;
        this.reverseDocumentPrivilege = true;
        this.documentActionsPrivilege = true;
        this.filteredTemplates = new Array();
        this.routeLinks = [
            {
                label: 'Document Actions',
                index: 0,
                privilege: 'Financials.AccountingEntries',
                routeLinksChildren: [
                    {
                        label: 'Create a document',
                        link: '/' + this.companyManager.getCurrentCompanyId() + '/financial/accounting/entry/new',
                        index: 0,
                        privilege: 'Financials.AccountingEntries.CreateEditDocument',
                    },
                    {
                        label: 'Edit a document',
                        link: '/' + this.companyManager.getCurrentCompanyId() + '/financial/edit/document/summary',
                        index: 1,
                        privilege: 'Financials.AccountingEntries.EditAccountingEntries',
                    },
                    {
                        label: 'Reverse document',
                        link: '/' + this.companyManager.getCurrentCompanyId() + '/financial/reverse/document',
                        index: 2,
                        privilege: 'Financials.AccountingEntries.ReverseDocument',
                    },
                ],
            },
            {
                label: 'Create / Delete Match',
                link: '/' + this.companyManager.getCurrentCompanyId() + '/financial/create/matching',
                index: 1,
                privilege: 'Financials.AccountingEntries.CreateDeleteMatchFlag',
            },
            {
                label: 'Posting Management',
                link: '/' + this.companyManager.getCurrentCompanyId() + '/financial/posting/management',
                index: 2,
                privilege: 'Financials.POSTINGMGT',
            },
            {
                label: 'Interface Errors',
                link: '/' + this.companyManager.getCurrentCompanyId() + '/financial/accounting/errormanagement/',
                index: 3,
                privilege: 'Financials.InterfaceErrors',
            },
        ];
        this.activeLinkIndex = -1;
        this.activeLinkIndex = this.routeLinks.indexOf(this.routeLinks.find(function (tab) { return _this.router.url.includes(tab.link); }));
    }
    AccountingTabGroupComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.company = this.route.snapshot.paramMap.get('company');
        var documentType = 76;
        this.documentService.getTemplates(documentType, 'AccountingEntries').subscribe(function (templates) {
            _this.filteredTemplates = templates.value;
        });
        this.securityService.isSecurityReady().subscribe(function () {
            if (_this.authorizationService.isPrivilegeAllowed(_this.company, 'Financials')
                && _this.authorizationService.isPrivilegeAllowed(_this.company, 'AccountingEntries')) {
                _this.editAccOrJournalDocumentPrivilege = _this.authorizationService.isPrivilegeAllowed(_this.company, 'CreateEditDocument');
                _this.editDocumentPrivilege = _this.authorizationService.isPrivilegeAllowed(_this.company, 'EditAccountingEntries');
                _this.reverseDocumentPrivilege = _this.authorizationService.isPrivilegeAllowed(_this.company, 'ReverseDocument');
                _this.documentActionsPrivilege = (_this.editAccOrJournalDocumentPrivilege
                    || _this.editDocumentPrivilege || _this.reverseDocumentPrivilege);
            }
        });
    };
    AccountingTabGroupComponent.prototype.OnReportClick = function (data) {
        var openTradepnlReportDialog = this.dialog.open(_shared_components_generic_report_viewer_generic_report_viewer_component__WEBPACK_IMPORTED_MODULE_5__["GenericReportViewerComponent"], {
            data: {
                reportName: data.name,
                reportPath: data.path,
            },
            width: '90%',
            height: '90%',
        });
    };
    AccountingTabGroupComponent.prototype.isActive = function (routeLink) {
        return this.activeLinkIndex === routeLink.index;
    };
    AccountingTabGroupComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'atlas-accounting-tab-group',
            template: __webpack_require__(/*! ./accounting-tab-group.component.html */ "./Client/app/financial/components/posting-process/accounting-tab-group/accounting-tab-group.component.html"),
            styles: [__webpack_require__(/*! ./accounting-tab-group.component.scss */ "./Client/app/financial/components/posting-process/accounting-tab-group/accounting-tab-group.component.scss")],
        }),
        __metadata("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"],
            _core_services_company_manager_service__WEBPACK_IMPORTED_MODULE_4__["CompanyManagerService"],
            _core_services_authorization_service__WEBPACK_IMPORTED_MODULE_3__["AuthorizationService"],
            _shared_services_security_service__WEBPACK_IMPORTED_MODULE_7__["SecurityService"],
            _angular_router__WEBPACK_IMPORTED_MODULE_2__["ActivatedRoute"],
            _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatDialog"],
            _shared_services_http_services_document_service__WEBPACK_IMPORTED_MODULE_6__["DocumentService"]])
    ], AccountingTabGroupComponent);
    return AccountingTabGroupComponent;
}());



/***/ }),

/***/ "./Client/app/financial/components/posting-process/authorize-posting-dialog/authorize-posting-dialog.component.html":
/*!**************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/posting-process/authorize-posting-dialog/authorize-posting-dialog.component.html ***!
  \**************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<h1 class=\"no-margin\">Authorize documents for posting </h1>\r\n\r\n<div *ngIf=\"isTopCardVisible\"\r\n     fxLayout=\"row\"\r\n     fxLayoutAlign=\"start start\"\r\n     class=\"dialog-top-card\">\r\n    <div class=\"authorize-posting-dialog\"\r\n         fxLayout=\"column\"\r\n         fxLayoutAlign=\"center center\">\r\n        <div class=\"question-circle-icon\">\r\n            <mat-icon>help</mat-icon>\r\n        </div>\r\n    </div>\r\n    <div fxLayout=\"column\">\r\n        <h2 fxLayoutAlign=\"start center\"\r\n            class=\"no-margin\">\r\n            Some documents cannot be authorized for posting\r\n        </h2>\r\n        <div class=\"content-font\"\r\n             *ngIf=\"isTopCardVisible\">\r\n\r\n            <p *ngFor=\"let document of validateAccountingDocument\">\r\n                {{document.documentReference}} : {{document.reason}}\r\n            </p>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<p *ngIf=\"isBottomCardVisible\">\r\n    The following documents will be authorized for posting:\r\n</p>\r\n\r\n<div *ngIf=\"isBottomCardVisible\">\r\n    <mat-chip-list multiple>\r\n        <mat-chip *ngFor=\"let document of passedAccountingDocument\"\r\n                  [selected]=\"true\">\r\n            <mat-icon>cancel</mat-icon>\r\n            {{document.documentReference}}\r\n        </mat-chip>\r\n    </mat-chip-list>\r\n</div>\r\n\r\n<mat-dialog-actions>\r\n    <button mat-button\r\n            (click)=\"onDiscardButtonClicked()\">Discard</button>\r\n    <span class=\"fill-space\"></span>\r\n    <button mat-button\r\n            *ngIf=\"isBottomCardVisible\"\r\n            (click)=\"onConfirmButtonClicked()\">Proceed</button>\r\n</mat-dialog-actions>\r\n"

/***/ }),

/***/ "./Client/app/financial/components/posting-process/authorize-posting-dialog/authorize-posting-dialog.component.scss":
/*!**************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/posting-process/authorize-posting-dialog/authorize-posting-dialog.component.scss ***!
  \**************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".dialog-top-card {\n  margin-top: 2px; }\n\n.question-circle-icon {\n  width: 50px;\n  height: 50px;\n  margin-right: 8px; }\n\n.question-circle-icon .mat-icon {\n    height: 30px;\n    width: 30px;\n    padding: 10px;\n    font-size: 30px; }\n\n.content-padding {\n  padding-top: 16px; }\n\n.content-font {\n  font-size: 15px;\n  font-weight: initial;\n  display: -ms-inline-grid;\n  display: inline-grid;\n  color: rgba(0, 0, 0, 0.54);\n  margin-bottom: 0px; }\n\n.content-font p {\n    margin-top: 8px;\n    margin-bottom: 0; }\n\n.mat-button {\n  margin: 0; }\n"

/***/ }),

/***/ "./Client/app/financial/components/posting-process/authorize-posting-dialog/authorize-posting-dialog.component.ts":
/*!************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/posting-process/authorize-posting-dialog/authorize-posting-dialog.component.ts ***!
  \************************************************************************************************************************/
/*! exports provided: AuthorizePostingDialogComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AuthorizePostingDialogComponent", function() { return AuthorizePostingDialogComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _shared_services_http_services_preaccounting_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../shared/services/http-services/preaccounting.service */ "./Client/app/shared/services/http-services/preaccounting.service.ts");
/* harmony import */ var _shared_services_snackbar_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../shared/services/snackbar.service */ "./Client/app/shared/services/snackbar.service.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};





var AuthorizePostingDialogComponent = /** @class */ (function () {
    function AuthorizePostingDialogComponent(snackbarService, router, route, preaccountingService, thisDialogRef, data) {
        this.snackbarService = snackbarService;
        this.router = router;
        this.route = route;
        this.preaccountingService = preaccountingService;
        this.thisDialogRef = thisDialogRef;
        this.data = data;
        this.isTopCardVisible = true;
        this.isBottomCardVisible = true;
        this.validateAccountingDocument = data.validateAccountingDocument;
        this.passedAccountingDocument = data.passedAccountingDocument;
    }
    AuthorizePostingDialogComponent.prototype.ngOnInit = function () {
        this.isTopCardVisible = this.validateAccountingDocument.length === 0 ? false : true;
        this.isBottomCardVisible = this.passedAccountingDocument.length === 0 ? false : true;
    };
    AuthorizePostingDialogComponent.prototype.onConfirmButtonClicked = function () {
        var _this = this;
        this.authorizePostingSubscription = this.preaccountingService.authorizeForPosting(this.passedAccountingDocument)
            .subscribe(function () {
        }, function (error) {
            console.error(error);
            _this.snackbarService.throwErrorSnackBar('Oops! An error ocurred');
        });
        this.thisDialogRef.close(null);
    };
    AuthorizePostingDialogComponent.prototype.onDiscardButtonClicked = function () {
        this.thisDialogRef.close(null);
    };
    AuthorizePostingDialogComponent.prototype.ngOnDestroy = function () {
        if (this.authorizePostingSubscription) {
            this.authorizePostingSubscription.unsubscribe();
        }
    };
    AuthorizePostingDialogComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'atlas-authorize-posting-dialog',
            template: __webpack_require__(/*! ./authorize-posting-dialog.component.html */ "./Client/app/financial/components/posting-process/authorize-posting-dialog/authorize-posting-dialog.component.html"),
            styles: [__webpack_require__(/*! ./authorize-posting-dialog.component.scss */ "./Client/app/financial/components/posting-process/authorize-posting-dialog/authorize-posting-dialog.component.scss")],
        }),
        __param(5, Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_1__["MAT_DIALOG_DATA"])),
        __metadata("design:paramtypes", [_shared_services_snackbar_service__WEBPACK_IMPORTED_MODULE_4__["SnackbarService"],
            _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"],
            _angular_router__WEBPACK_IMPORTED_MODULE_2__["ActivatedRoute"],
            _shared_services_http_services_preaccounting_service__WEBPACK_IMPORTED_MODULE_3__["PreaccountingService"],
            _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatDialogRef"], Object])
    ], AuthorizePostingDialogComponent);
    return AuthorizePostingDialogComponent;
}());



/***/ }),

/***/ "./Client/app/financial/components/posting-process/posting-management/accounting-document-information-component/accounting-document-information-component.component.html":
/*!*******************************************************************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/posting-process/posting-management/accounting-document-information-component/accounting-document-information-component.component.html ***!
  \*******************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<header class=\"header-background-creation\">\r\n    <div class=\"header-content\">\r\n        <div fxLayout=\"row\"\r\n             fxLayoutAlign=\"start center\"\r\n             fxLayoutGap=\"16px\">\r\n            <h2>Document Reference: {{docReference}}</h2>\r\n            <mat-chip-list>\r\n                <mat-chip [ngClass]=\"statusClassApplied\"\r\n                          selected\r\n                          disabled>\r\n                    {{docStatus}}\r\n                </mat-chip>\r\n                <mat-chip *ngIf=\"!isMappingErrorStatus && showErrorMessage\"\r\n                          [ngClass]=\"errormsg\"\r\n                          selected\r\n                          disabled>\r\n                    {{errorMessage}}\r\n                </mat-chip>\r\n            </mat-chip-list>\r\n        </div>\r\n\r\n        <div fxLayout=\"row\"\r\n             fxLayoutAlign=\"start center\"\r\n             fxLayoutGap=\"16px\"\r\n             class=\"charter-global-info\">\r\n            <div>\r\n                <mat-form-field class=\"mat-disabled-field\">\r\n                    <input matInput\r\n                           placeholder=\"Created By\"\r\n                           disabled\r\n                           autocomplete=\"off\"\r\n                           value=\"{{createdBy}}\">\r\n                </mat-form-field>\r\n            </div>\r\n            <div>\r\n                <mat-form-field fxFlex=\"70\"\r\n                                class=\"mat-disabled-field\">\r\n                    <input matInput\r\n                           placeholder=\"On\"\r\n                           disabled\r\n                           autocomplete=\"off\"\r\n                           value=\"{{creationDate}}\">\r\n                </mat-form-field>\r\n            </div>\r\n            <div>\r\n                <mat-form-field class=\"mat-disabled-field\">\r\n                    <input matInput\r\n                           placeholder=\"Amended By\"\r\n                           disabled\r\n                           autocomplete=\"off\"\r\n                           value=\"{{modifiedBy ? modifiedBy : ' '}}\">\r\n                </mat-form-field>\r\n            </div>\r\n            <div>\r\n                <mat-form-field fxFlex=\"40\"\r\n                                class=\"mat-disabled-field\">\r\n                    <input matInput\r\n                           placeholder=\"On\"\r\n                           disabled\r\n                           autocomplete=\"off\"\r\n                           value=\"{{modifiedDate ? modifiedDate : ' '}}\">\r\n                </mat-form-field>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</header>\r\n<mat-toolbar class=\"menu-bar\">\r\n    <div class=\"toolbar-div\">\r\n        <div fxLayout=\"row\"\r\n             fxLayoutAlign=\"start center\"\r\n             fxFlex=\"30\">\r\n            <button mat-button\r\n                    [matMenuTriggerFor]=\"export\"\r\n                    class=\"menu-bar-button\">Export\r\n            </button>\r\n            <mat-menu #export=\"matMenu\"\r\n                      [overlapTrigger]=\"false\"\r\n                      xPosition=\"after\">\r\n                <button mat-menu-item\r\n                        (click)=\"onExportButtonClickedAsExcel()\">Export As Excel</button>\r\n                <button mat-menu-item\r\n                        (click)=\"onExportButtonClickedAsCSV()\">Export As CSV</button>\r\n            </mat-menu>\r\n            <button mat-button\r\n                    *ifAuthorized=\"'Financials.POSTINGMGT.DELETEACCOUNTINGDOCUMENT',company:this.company\"\r\n                    disabled={{isViewMode}}\r\n                    (click)=\"onDeleteClicked()\"\r\n                    class=\"menu-bar-button\">Delete Document\r\n            </button>\r\n        </div>\r\n        <span class=\"fill-space\"></span>\r\n\r\n        <div fxLayout=\"row\"\r\n             fxLayoutAlign=\"end center\"\r\n             fxFlex=\"20\"\r\n             fxLayoutGap=\"16px\">\r\n            <a matTooltip=\"Back\"\r\n               *ngIf=\"!isViewMode\"\r\n               class=\"menu-bar-action-icon\">\r\n                <mat-icon class=\"white-icon\"\r\n                          (click)=\"onLoadPreviousPageButtonClicked()\">arrow_back</mat-icon>\r\n            </a>\r\n\r\n            <a matTooltip=\"Save\"\r\n               *ngIf=\"!isViewMode\"\r\n               class=\"menu-bar-action-icon\">\r\n                <mat-icon class=\"white-icon\"\r\n                          (click)=\"submitForm()\">save</mat-icon>\r\n            </a>\r\n            <span *ifAuthorized=\"'Financials.POSTINGMGT', company:company, level: PermissionLevels.ReadWrite\">\r\n                <div *ngIf=\"editPostingManagementPrivilege && isMappingErrorStatus && !isAlreadyAuthorized && !isAccOrJournalType\"\r\n                     class=\"menu-bar-action-icon\">\r\n                    <a (click)=\"onEditClicked()\"\r\n                       matTooltip=\"Edit\">\r\n                        <mat-icon class=\"white-icon\">edit</mat-icon>\r\n                    </a>\r\n                </div>\r\n\r\n                <div *ngIf=\"!isMappingErrorStatus && !isAccOrJournalType && readWritePrivilege && !isAlreadyAuthorized\"\r\n                     class=\"menu-bar-action-icon\">\r\n                    <a (click)=\"onEditClicked()\"\r\n                       matTooltip=\"Edit\">\r\n                        <mat-icon class=\"white-icon\">edit</mat-icon>\r\n                    </a>\r\n                </div>\r\n\r\n                <div *ngIf=\" isAccOrJournalType && editAccOrJournalDcoumentPrivilege && !isAlreadyAuthorized\"\r\n                     class=\"menu-bar-action-icon\">\r\n                    <a (click)=\"onEditClicked()\"\r\n                       matTooltip=\"Edit\">\r\n                        <mat-icon class=\"white-icon\">edit</mat-icon>\r\n                    </a>\r\n                </div>\r\n            </span>\r\n        </div>\r\n    </div>\r\n</mat-toolbar>\r\n<div class=\"main-container\">\r\n    <div *ngIf=\"showErrorBanners\">\r\n        <div *ngFor=\"let errorMessage of mappingErrorMessages\">\r\n            <mat-card class=\"warning-card warning-banner-card\">\r\n                <div class=\"warning-circle-icon\">\r\n                    <mat-icon>warning_outline</mat-icon>\r\n                </div>\r\n                <mat-card-header>\r\n                    <mat-card-title>\r\n                        <h4 class=\"no-margin\">Mapping Error {{errorMessage.split(' ')[0]}}</h4>\r\n                    </mat-card-title>\r\n\r\n                    <mat-card-subtitle>\r\n                        {{errorMessage}}\r\n                    </mat-card-subtitle>\r\n                    <button class=\"remove-button\"\r\n                            mat-button\r\n                            (click)=\"onWarningRemoveButtonClicked($event)\">REMOVE\r\n                    </button>\r\n                </mat-card-header>\r\n            </mat-card>\r\n        </div>\r\n    </div>\r\n\r\n    <mat-card>\r\n        <h2>Document Information</h2>\r\n        <div fxLayout=\"row\">\r\n            <div class=\"accounting-document-fields\"\r\n                 fxFlex=\"85%\">\r\n                <div fxLayout=\"column\">\r\n                    <div fxLayout=\"row\"\r\n                         fxLayoutAlign=\"space-between center\"\r\n                         fxLayoutGap=\"5%\"\r\n                         fxFlex=\"90%\">\r\n                        <div class=\"custom-form\"\r\n                             fxFlex=\"30%\"\r\n                             [class.isEmpty]=\"!docDateFormCtrl.value\"\r\n                             [class.required-field]=\"docDateFormCtrl.isRequired\">\r\n                            <mat-form-field>\r\n                                <input matInput\r\n                                       [matDatepicker]=\"frompicker\"\r\n                                       placeholder=\"Document Date\"\r\n                                       (dateChange)=\"documentDateChanged($event)\"\r\n                                       value=\"frompicker\"\r\n                                       autocomplete=\"off\"\r\n                                       [formControl]='docDateFormCtrl'>\r\n                                <mat-datepicker-toggle matSuffix\r\n                                                       [for]=\"frompicker\"></mat-datepicker-toggle>\r\n                                <mat-datepicker #frompicker></mat-datepicker>\r\n                                <mat-error *ngIf=\"docDateFormCtrl.hasError('required')\">\r\n                                    This field is required\r\n                                </mat-error>\r\n                                <mat-hint\r\n                                          *ngIf=\"docDateFormCtrl.isRequired && !isViewMode && !isCashDocumentType && !this.isAlreadyAuthorized && !isInvoiceDocumentType\">\r\n                                    Required *\r\n                                </mat-hint>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <mat-form-field class=\"value-date-control\"\r\n                                        fxFlex=\"40%\">\r\n                            <input matInput\r\n                                   [matDatepicker]=\"valueDatePicker\"\r\n                                   placeholder=\"Value Date\"\r\n                                   value=\"valueDatePicker\"\r\n                                   autocomplete=\"off\"\r\n                                   [formControl]='valueDateFormCtrl'>\r\n                            <mat-datepicker-toggle matSuffix\r\n                                                   [for]=\"valueDatePicker\"></mat-datepicker-toggle>\r\n                            <mat-datepicker #valueDatePicker></mat-datepicker>\r\n                            <mat-hint class=\"value-date-warning\"\r\n                                      *ngIf=\" !isViewMode && isValueDateBeforeDocumentDate()\">Value date is before the\r\n                                document date\r\n                            </mat-hint>\r\n                        </mat-form-field>\r\n\r\n                        <mat-form-field fxFlex=\"30%\">\r\n                            <input matInput\r\n                                   [matDatepicker]=\"glDatePicker\"\r\n                                   placeholder=\"GL Date\"\r\n                                   value=\"glDatePicker\"\r\n                                   autocomplete=\"off\"\r\n                                   [formControl]='glDateFormCtrl'>\r\n                            <mat-datepicker-toggle matSuffix\r\n                                                   [for]=\"glDatePicker\"></mat-datepicker-toggle>\r\n                            <mat-datepicker #glDatePicker></mat-datepicker>\r\n                        </mat-form-field>\r\n\r\n                    </div>\r\n                    <br />\r\n                    <div fxLayout=\"row\"\r\n                         fxLayoutGap=\"5%\"\r\n                         fxLayoutAlign=\"left start\">\r\n\r\n                        <atlas-month-date-picker #monthDatePicker\r\n                                                 fxFlex=\"30%\"\r\n                                                 class=\"month-date-picker\"\r\n                                                 [fieldControl]=\"accPeriodFormCtrl\"\r\n                                                 isEditable=\"!isViewMode\"\r\n                                                 (monthChanged)=\"accountPeriodChanged($event)\"\r\n                                                 [label]=\"'Accounting Period'\"></atlas-month-date-picker>\r\n\r\n                        <atlas-masterdata-user-preferences-input [isEditable]=\"!isViewMode\"\r\n                                                                 [fieldControl]=\"currencyCtrl\"\r\n                                                                 [options]=\"filteredCurrencyList\"\r\n                                                                 label=\"Currency\"\r\n                                                                 displayProperty=\"currencyCode\"\r\n                                                                 tooltip=\"description\"\r\n                                                                 [selectProperties]=\"['currencyCode', 'description']\"\r\n                                                                 [errorMap]=\"currencyErrorMap\"\r\n                                                                 lightBoxTitle=\"Results for Currency\"\r\n                                                                 gridId=\"currenciesGrid\">\r\n                        </atlas-masterdata-user-preferences-input>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </mat-card>\r\n\r\n\r\n\r\n    <mat-card>\r\n        <div *ngIf=\"!isViewMode; else ViewMode\"\r\n             ag-grid=\"accountingLineGridOptions\"\r\n             class=\"ag-theme-material pointer-cursor atr-ag-grid\">\r\n            <div fxLayout=\"row\"\r\n                 fxLayoutAlign=\"space-between center\"\r\n                 class=\" table-title atlas-grid-card-header\">\r\n                <div class=\"adjust-weight-title\">\r\n                    <h2>Accounting lines</h2>\r\n                </div>\r\n                <div>\r\n                    <button mat-icon-button\r\n                            [matMenuTriggerFor]=\"displayedColumnsMenu\">\r\n                        <mat-icon>menu</mat-icon>\r\n                    </button>\r\n                    <div>\r\n                        <mat-menu #displayedColumnsMenu=\"matMenu\">\r\n                            <div *ngFor=\"let col of columnDefs\">\r\n                                <mat-checkbox [checked]=\"!col.hide\"\r\n                                              (click)=\"showOrHideColum($event, col)\"\r\n                                              *ngIf=\"(!col.headerName =='') \">{{col.headerName}}</mat-checkbox>\r\n                            </div>\r\n                        </mat-menu>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div *ngIf=\"!isViewMode && isAccOrJournalType\"\r\n                 fxLayout=\"row\"\r\n                 fxLayoutAlign=\"start center\"\r\n                 fxLayoutGap=\"10px\"\r\n                 class=\"add-line-container\">\r\n                <div fxLayout=\"column\"\r\n                     fxLayoutAlign=\"start start\">\r\n                    <h6>Add new lines:</h6>\r\n                </div>\r\n                <div fxLayout=\"column\"\r\n                     fxLayoutAlign=\"start start\"\r\n                     fxFlex=\"2\">\r\n                    <mat-form-field>\r\n                        <input matInput\r\n                               class=\"input-newline\"\r\n                               autocomplete=\"off\"\r\n                               [formControl]=\"addNewLineCtrl\">\r\n                    </mat-form-field>\r\n                </div>\r\n                <div fxLayout=\"column\"\r\n                     fxLayoutAlign=\"start start\">\r\n                    <button mat-button\r\n                            (click)=\"onAddAccountingLineButtonClicked(addNewLineCtrl.value)\">PROCEED</button>\r\n                </div>\r\n            </div>\r\n            <ag-grid-angular class=\"ag-theme-material atr-ag-grid\"\r\n                             [rowData]=\"accountingDocumentLine\"\r\n                             [columnDefs]=\"columnDefs\"\r\n                             domLayout=\"autoHeight\"\r\n                             (columnVisible)=\"onAddOrDeleteColumn($event)\"\r\n                             (gridReady)=\"onGridReady($event)\"\r\n                             [pagination]=\"true\"\r\n                             [paginationPageSize]=\"10\"\r\n                             [enableSorting]=\"true\"\r\n                             [singleClickEdit]=true\r\n                             [enableColResize]=\"false\"\r\n                             (cellValueChanged)=\"onCellValueChanged($event)\"\r\n                             [rowStyle]=\"rowStyle\"\r\n                             [frameworkComponents]=\"gridComponents\"\r\n                             [enableRangeSelection]=\"true\"\r\n                             [processCellForClipboard]=\"processCellForClipboard\"\r\n                             [rowHeight]=\"atlasAgGridParam.rowHeight\">\r\n            </ag-grid-angular>\r\n        </div>\r\n        <ng-template #ViewMode>\r\n            <atlas-list-and-search class=\"default-height\"\r\n                                   [gridCode]=\"gridCode\"\r\n                                   gridTitle=\"Accounting Lines\"\r\n                                   [company]=\"company\"\r\n                                   [dataLoader]=\"accountingLinesDataLoader\"\r\n                                   #listAndSearchComponent>\r\n            </atlas-list-and-search>\r\n        </ng-template>\r\n\r\n\r\n        <div  fxLayout=\"column\"\r\n              fxFlex=15\r\n              fxLayoutAlign=\"space-around start\"\r\n              *ngIf=\"false\"\r\n              class=\"loading\">\r\n            <mat-spinner color=\"accent\"></mat-spinner>\r\n        </div>\r\n\r\n        <div  fxLayout=\"column\"\r\n              fxLayoutAlign=\"space-around end\">\r\n            <div fxFlex=\"33\">\r\n                <mat-card-subtitle class=\"total-figure \">Amount : <span\r\n                          class=\"total-figure-value\">{{formatValue(amount)}}\r\n                    </span></mat-card-subtitle>\r\n            </div>\r\n            <div fxFlex=\"33\">\r\n                <mat-card-subtitle class=\"total-figure\">Functional ccy. equivalent : <span\r\n                          class=\"total-figure-value\">{{formatValue(functionalAmount)}}\r\n                    </span>\r\n                </mat-card-subtitle>\r\n            </div>\r\n            <div fxFlex=\"33\">\r\n                <mat-card-subtitle class=\"total-figure \">Statutory ccy. equivalent : <span\r\n                          class=\"total-figure-value\">{{formatValue(statutoryAmount)}}\r\n\r\n                    </span> </mat-card-subtitle>\r\n            </div>\r\n        </div>\r\n\r\n    </mat-card>\r\n    <div fxLayout=\"row\">\r\n        <div fxFlex=85>\r\n\r\n        </div>\r\n        <div *ngIf=!isViewMode \r\n             fxLayout=\"column\"\r\n             fxFlex=18\r\n             fxLayoutAlign=\"space-around start\">\r\n            <div>\r\n                <mat-slide-toggle (click)=\"onToInterfaceButtonClicked()\"\r\n                                  *ifAuthorized=\"'Financials.POSTINGMGT.PostingInterface',company:this.company\"\r\n                                  [formControl]=\"\r\n                                  interfaceCtrl\">To interface</mat-slide-toggle>\r\n            </div>\r\n            <div>\r\n                <mat-slide-toggle *ifAuthorized=\"'Financials.POSTINGMGT.AUTHORIZEPOSTING',company:this.company\"\r\n                                  (change)=\"\r\n                                  toggleAuthorizeButton()\"\r\n                                  [formControl]=\"authForCtrl\">Authorize for posting</mat-slide-toggle>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n\r\n    <div fxLayout=\"row\"\r\n         class='mat-buttons'>\r\n        <div fxFlex=\"90\">\r\n            <button mat-button\r\n                    class='mat-button-discard'\r\n                    (click)=\"onCancelButtonClicked()\">DISCARD</button>\r\n        </div>\r\n        <div fxFlex=\"6\" *ngIf=!isViewMode >\r\n            <button mat-raised-button\r\n                    (click)=\"submitForm()\">\r\n                SAVE\r\n            </button>\r\n        </div>\r\n    </div>\r\n</div>\r\n<atlas-lock-interval [resourcesInformation]=\"resourcesInformation\">\r\n</atlas-lock-interval>"

/***/ }),

/***/ "./Client/app/financial/components/posting-process/posting-management/accounting-document-information-component/accounting-document-information-component.component.scss":
/*!*******************************************************************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/posting-process/posting-management/accounting-document-information-component/accounting-document-information-component.component.scss ***!
  \*******************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "::ng-deep.ag-layout-auto-height.ag-body-container {\n  min-height: 100px !important; }\n\n.ag-grid-style {\n  width: 100%;\n  height: 100%; }\n\n.mat-button-user-margin {\n  display: block;\n  width: 24px;\n  height: 24px;\n  background: #53c234;\n  padding: 10px;\n  text-align: center;\n  border-radius: 50%;\n  color: white;\n  font-weight: bold; }\n\n.accounting-document-fields {\n  width: 100%; }\n\n.accounting-document-buttons {\n  width: 10%; }\n\n.value-legs-total-figure {\n  margin-top: 8px;\n  margin-right: 20px; }\n\n.button-accounting-doc {\n  margin: 20%; }\n\n.document-margin {\n  margin-top: 1%;\n  margin-left: 35px;\n  margin-right: 30px; }\n\n.month-date-picker {\n  width: 100%;\n  display: inline-flex; }\n\n.table-title {\n  background-color: white; }\n\n.header-background-creation {\n  background: top/contain url(/assets/img/luke-waves.svg) no-repeat;\n  background-position-x: right;\n  background-color: white;\n  min-height: 130px; }\n\n.mat-toolbar {\n  height: 56px !important;\n  background-color: white !important; }\n\n.menu-bar-button {\n  width: 100% !important; }\n\n::ng-deep.mat-slide-toggle-label {\n  flex-direction: row !important; }\n\n.value-legs-total-figure {\n  margin-top: 8px; }\n\n.mat-button-discard {\n  margin-left: 25px; }\n\n.contextual-search-for-currency {\n  width: 100%; }\n\n.value-date-warning {\n  color: #ec8d2d; }\n\n.value-date-control {\n  width: 200px !important; }\n\n.add-line-container {\n  margin-left: 10px; }\n\n.mat-error-message-chip {\n  background-color: #DF5A4D !important; }\n\n.mat-neutral-message-chip {\n  background-color: #CAE8DC !important; }\n\nmat-card.warning-card.mat-card {\n  padding: 0 !important;\n  height: 75px;\n  display: flex;\n  align-items: center; }\n\nmat-card.warning-card.mat-card mat-card-header.mat-card-header mat-card-title.mat-card-title {\n    margin: 0;\n    padding: 8px 0; }\n\nmat-card.warning-card.mat-card mat-card-header.mat-card-header h4 {\n    margin: 0; }\n\nmat-card.warning-card.mat-card mat-card-header.mat-card-header mat-card-subtitle.mat-card-subtitle {\n    margin: 0; }\n\nbutton.remove-button.mat-button {\n  position: absolute;\n  right: 10px;\n  bottom: 15px; }\n\n:host ::ng-deep .ag-theme-material .mat-form-field-appearance-legacy .mat-form-field-wrapper {\n  padding-bottom: 0px !important; }\n\n:host ::ng-deep .input-newline {\n  padding-bottom: 12px; }\n"

/***/ }),

/***/ "./Client/app/financial/components/posting-process/posting-management/accounting-document-information-component/accounting-document-information-component.component.ts":
/*!*****************************************************************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/posting-process/posting-management/accounting-document-information-component/accounting-document-information-component.component.ts ***!
  \*****************************************************************************************************************************************************************************/
/*! exports provided: AccountingDocumentInformationComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AccountingDocumentInformationComponent", function() { return AccountingDocumentInformationComponent; });
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _execution_services_execution_cash_common_methods__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../..//execution/services/execution-cash-common-methods */ "./Client/app/execution/services/execution-cash-common-methods.ts");
/* harmony import */ var _core_services_authorization_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../../core/services/authorization.service */ "./Client/app/core/services/authorization.service.ts");
/* harmony import */ var _core_services_company_manager_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../../../core/services/company-manager.service */ "./Client/app/core/services/company-manager.service.ts");
/* harmony import */ var _shared_components_ag_contextual_menu_ag_contextual_menu_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../../../shared/components/ag-contextual-menu/ag-contextual-menu.component */ "./Client/app/shared/components/ag-contextual-menu/ag-contextual-menu.component.ts");
/* harmony import */ var _shared_components_ag_grid_accrual_number_ag_grid_accrual_number_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../../../shared/components/ag-grid-accrual-number/ag-grid-accrual-number.component */ "./Client/app/shared/components/ag-grid-accrual-number/ag-grid-accrual-number.component.ts");
/* harmony import */ var _shared_components_ag_grid_contextual_search_ag_grid_contextual_search_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../../../../shared/components/ag-grid/contextual-search/ag-grid-contextual-search.component */ "./Client/app/shared/components/ag-grid/contextual-search/ag-grid-contextual-search.component.ts");
/* harmony import */ var _shared_components_base_form_component_base_form_component_component__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../../../../shared/components/base-form-component/base-form-component.component */ "./Client/app/shared/components/base-form-component/base-form-component.component.ts");
/* harmony import */ var _shared_components_cell_editor_numeric_cell_editor_numeric_component__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../../../../shared/components/cell-editor-numeric/cell-editor-numeric.component */ "./Client/app/shared/components/cell-editor-numeric/cell-editor-numeric.component.ts");
/* harmony import */ var _shared_components_confirmation_dialog_confirmation_dialog_component__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../../../../shared/components/confirmation-dialog/confirmation-dialog.component */ "./Client/app/shared/components/confirmation-dialog/confirmation-dialog.component.ts");
/* harmony import */ var _shared_directives_autocomplete_dropdown_directive__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../../../../shared/directives/autocomplete-dropdown.directive */ "./Client/app/shared/directives/autocomplete-dropdown.directive.ts");
/* harmony import */ var _shared_entities_accounting_document_line_entity__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../../../../../shared/entities/accounting-document-line.entity */ "./Client/app/shared/entities/accounting-document-line.entity.ts");
/* harmony import */ var _shared_entities_accounting_document_status_deleted_entity__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../../../../../shared/entities/accounting-document-status-deleted.entity */ "./Client/app/shared/entities/accounting-document-status-deleted.entity.ts");
/* harmony import */ var _shared_entities_accounting_document_status_entity__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../../../../../shared/entities/accounting-document-status.entity */ "./Client/app/shared/entities/accounting-document-status.entity.ts");
/* harmony import */ var _shared_entities_atlas_form_control__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../../../../../shared/entities/atlas-form-control */ "./Client/app/shared/entities/atlas-form-control.ts");
/* harmony import */ var _shared_entities_lock_functional_context_entity__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../../../../../shared/entities/lock-functional-context.entity */ "./Client/app/shared/entities/lock-functional-context.entity.ts");
/* harmony import */ var _shared_entities_lock_resource_information_entity__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ../../../../../shared/entities/lock-resource-information.entity */ "./Client/app/shared/entities/lock-resource-information.entity.ts");
/* harmony import */ var _shared_enums_account_line_type_enum__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ../../../../../shared/enums/account-line-type.enum */ "./Client/app/shared/enums/account-line-type.enum.ts");
/* harmony import */ var _shared_enums_permission_level_enum__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ../../../../../shared/enums/permission-level.enum */ "./Client/app/shared/enums/permission-level.enum.ts");
/* harmony import */ var _shared_enums_posting_document_tatype_enum__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ../../../../../shared/enums/posting-document-tatype.enum */ "./Client/app/shared/enums/posting-document-tatype.enum.ts");
/* harmony import */ var _shared_enums_posting_document_type_enum__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ../../../../../shared/enums/posting-document-type.enum */ "./Client/app/shared/enums/posting-document-type.enum.ts");
/* harmony import */ var _shared_enums_posting_status_enum__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ../../../../../shared/enums/posting-status.enum */ "./Client/app/shared/enums/posting-status.enum.ts");
/* harmony import */ var _shared_models_posting_management_display_view__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ../../../../../shared/models/posting-management-display-view */ "./Client/app/shared/models/posting-management-display-view.ts");
/* harmony import */ var _shared_numberMask__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ../../../../../shared/numberMask */ "./Client/app/shared/numberMask.ts");
/* harmony import */ var _shared_services_ag_grid_service__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ../../../../../shared/services/ag-grid.service */ "./Client/app/shared/services/ag-grid.service.ts");
/* harmony import */ var _shared_services_execution_charter_data_loader__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ../../../../../shared/services/execution/charter-data-loader */ "./Client/app/shared/services/execution/charter-data-loader.ts");
/* harmony import */ var _shared_services_form_configuration_provider_service__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ../../../../../shared/services/form-configuration-provider.service */ "./Client/app/shared/services/form-configuration-provider.service.ts");
/* harmony import */ var _shared_services_http_services_lock_service__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ../../../../../shared/services/http-services/lock.service */ "./Client/app/shared/services/http-services/lock.service.ts");
/* harmony import */ var _shared_services_http_services_preaccounting_service__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ../../../../../shared/services/http-services/preaccounting.service */ "./Client/app/shared/services/http-services/preaccounting.service.ts");
/* harmony import */ var _shared_services_list_and_search_fxDeal_data_loader__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ../../../../../shared/services/list-and-search/fxDeal-data-loader */ "./Client/app/shared/services/list-and-search/fxDeal-data-loader.ts");
/* harmony import */ var _shared_services_list_and_search_trade_data_loader__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ../../../../../shared/services/list-and-search/trade-data-loader */ "./Client/app/shared/services/list-and-search/trade-data-loader.ts");
/* harmony import */ var _shared_services_preaccounting_transaction_document_data_loader__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ../../../../../shared/services/preaccounting/transaction-document-data-loader */ "./Client/app/shared/services/preaccounting/transaction-document-data-loader.ts");
/* harmony import */ var _shared_services_security_service__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ../../../../../shared/services/security.service */ "./Client/app/shared/services/security.service.ts");
/* harmony import */ var _shared_services_snackbar_service__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ../../../../../shared/services/snackbar.service */ "./Client/app/shared/services/snackbar.service.ts");
/* harmony import */ var _shared_services_title_service__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ../../../../../shared/services/title.service */ "./Client/app/shared/services/title.service.ts");
/* harmony import */ var _shared_services_ui_service__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ../../../../../shared/services/ui.service */ "./Client/app/shared/services/ui.service.ts");
/* harmony import */ var _shared_services_url_management_service__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ../../../../../shared/services/url-management.service */ "./Client/app/shared/services/url-management.service.ts");
/* harmony import */ var _shared_services_util_service__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ../../../../../shared/services/util.service */ "./Client/app/shared/services/util.service.ts");
/* harmony import */ var _shared_validators_date_validators_validator__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ../../../../../shared/validators/date-validators.validator */ "./Client/app/shared/validators/date-validators.validator.ts");
/* harmony import */ var _shared_services_list_and_search_posting_acoount_lines_data_loader__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ../../../../../shared/services/list-and-search/posting-acoount-lines-data-loader */ "./Client/app/shared/services/list-and-search/posting-acoount-lines-data-loader.ts");
/* harmony import */ var _shared_components_list_and_search_list_and_search_component__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ../../../../../shared/components/list-and-search/list-and-search.component */ "./Client/app/shared/components/list-and-search/list-and-search.component.ts");
/* harmony import */ var _shared_services_http_services_form_configuration_service__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ../../../../../shared/services/http-services/form-configuration.service */ "./Client/app/shared/services/http-services/form-configuration.service.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

















































var moment = moment__WEBPACK_IMPORTED_MODULE_5__;
var AccountingDocumentInformationComponent = /** @class */ (function (_super) {
    __extends(AccountingDocumentInformationComponent, _super);
    function AccountingDocumentInformationComponent(route, formBuilder, utilService, urlManagementService, router, preaccountingService, snackbarService, deleteConfirmationDialog, companyManager, tradeDataLoader, charterDataLoader, authorizationService, dialog, location, transactionDocumentDataLoader, formConfigurationProvider, uiService, fxDealLoader, securityService, lockService, titleService, gridService, formConfigurationService, accountingLinesDataLoader) {
        var _this = _super.call(this, formConfigurationProvider) || this;
        _this.route = route;
        _this.formBuilder = formBuilder;
        _this.utilService = utilService;
        _this.urlManagementService = urlManagementService;
        _this.router = router;
        _this.preaccountingService = preaccountingService;
        _this.snackbarService = snackbarService;
        _this.deleteConfirmationDialog = deleteConfirmationDialog;
        _this.companyManager = companyManager;
        _this.tradeDataLoader = tradeDataLoader;
        _this.charterDataLoader = charterDataLoader;
        _this.authorizationService = authorizationService;
        _this.dialog = dialog;
        _this.location = location;
        _this.transactionDocumentDataLoader = transactionDocumentDataLoader;
        _this.formConfigurationProvider = formConfigurationProvider;
        _this.uiService = uiService;
        _this.fxDealLoader = fxDealLoader;
        _this.securityService = securityService;
        _this.lockService = lockService;
        _this.titleService = titleService;
        _this.gridService = gridService;
        _this.formConfigurationService = formConfigurationService;
        _this.accountingLinesDataLoader = accountingLinesDataLoader;
        _this.subscriptions = [];
        _this.agGridOptions = {};
        _this.savingInProgress = false;
        _this.isSave = false;
        _this.isMtmSelected = false;
        _this.docDateFormCtrl = new _shared_entities_atlas_form_control__WEBPACK_IMPORTED_MODULE_21__["AtlasFormControl"]('docDateFormCtrl');
        _this.valueDateFormCtrl = new _shared_entities_atlas_form_control__WEBPACK_IMPORTED_MODULE_21__["AtlasFormControl"]('valueDateFormCtrl');
        _this.accPeriodFormCtrl = new _shared_entities_atlas_form_control__WEBPACK_IMPORTED_MODULE_21__["AtlasFormControl"]('accPeriodFormCtrl');
        _this.glDateFormCtrl = new _shared_entities_atlas_form_control__WEBPACK_IMPORTED_MODULE_21__["AtlasFormControl"]('glDateFormCtrl');
        _this.currencyCtrl = new _shared_entities_atlas_form_control__WEBPACK_IMPORTED_MODULE_21__["AtlasFormControl"]('currencyCtrl');
        _this.interfaceCtrl = new _shared_entities_atlas_form_control__WEBPACK_IMPORTED_MODULE_21__["AtlasFormControl"]('interfaceCtrl');
        _this.authForCtrl = new _shared_entities_atlas_form_control__WEBPACK_IMPORTED_MODULE_21__["AtlasFormControl"]('authForCtrl');
        _this.addNewLineCtrl = new _shared_entities_atlas_form_control__WEBPACK_IMPORTED_MODULE_21__["AtlasFormControl"]('addNewLineCtrl');
        _this.filteredAccountLineTypeForMtm = [];
        _this.isAccrualDocument = false;
        _this.amountColumn = 'amount';
        _this.clientAccountColumn = 'clientAccountId';
        _this.secondaryDocumentReferenceColumn = 'secondaryDocumentReference';
        _this.externalDocumentReferenceColumn = 'extDocReference';
        _this.costCenterColumn = 'costCenter';
        _this.provinceColumn = 'provinceId';
        _this.isAccOrJournalType = false;
        _this.nominalAccount = 'accountReference';
        _this.gridComponents = {
            atlasNumeric: _shared_components_cell_editor_numeric_cell_editor_numeric_component__WEBPACK_IMPORTED_MODULE_15__["CellEditorNumericComponent"],
        };
        _this.isViewMode = true;
        _this.isAlreadyAuthorized = false;
        _this.decimalOptionValue = 2;
        _this.amountFormat = 'en-US';
        _this.statutoryCurrencyColumn = 'statutoryCurrency';
        _this.functionalCurrencyColumn = 'functionalCurrency';
        _this.amountValue = 'amount';
        _this.requiredString = 'Required*';
        _this.editLineMenu = 'editLineMenu';
        _this.accrualNumberColumn = 'accrualNumber';
        _this.paymentTermColumn = 'paymentTermId';
        _this.vatIdColumn = 'vatId';
        _this.showErrorMessage = true;
        _this.accountingDocumentId = 'accountingDocumentId';
        _this.dealNumberColumn = 'dealNumber';
        _this.settlementCurrencyColumn = 'settlementCurrency';
        _this.accountingDocumentMenuActions = {
            exportDocument: 'export',
        };
        _this.excelSheetName = 'Document Lines';
        _this.isAuthorizedControlenabled = false;
        _this.isToInterfaceControlenabled = true;
        _this.isCashDocumentAuthorized = true;
        _this.isInvoiceDocumentType = true;
        _this.monthNames = ['January', 'February', 'March', 'April', 'May', 'June',
            'July', 'August', 'September', 'October', 'November', 'December'];
        _this.currencyErrorMap = new Map()
            .set('required', 'This field is required')
            .set('inDropdownList', 'Invalid entry. Currency not in the list.');
        _this.counterPartyAccountingCategory = 'C';
        _this.postOpClosedPrivilege = {
            profileId: null,
            privilegeName: 'POSTOPCLOSED',
            permission: _shared_enums_permission_level_enum__WEBPACK_IMPORTED_MODULE_25__["PermissionLevels"].ReadWrite,
            privilegeParentLevelOne: 'Financials',
            privilegeParentLevelTwo: 'POSTINGMGT',
        };
        _this.editDocumentMenuActions = {
            copyDocumentLine: 'copy',
            deleteDocumentLine: 'delete',
        };
        _this.date = _this.companyManager.getCurrentCompanyDate().toDate();
        _this.isMappingErrorStatus = false;
        _this.mappingErrorMessages = [];
        _this.showErrorBanners = false;
        _this.editPostingManagementPrivilege = false;
        _this.readWritePrivilege = false;
        _this.editAccOrJournalDcoumentPrivilege = false;
        _this.functionalCurrencyHeader = 'Functional Currency in ';
        _this.statutoryCurrencyHeader = 'Statutory Currency in ';
        _this.PermissionLevels = _shared_enums_permission_level_enum__WEBPACK_IMPORTED_MODULE_25__["PermissionLevels"];
        _this.resourcesInformation = new Array();
        _this.destroy$ = new rxjs__WEBPACK_IMPORTED_MODULE_6__["Subject"]();
        _this.gridCode = "accountingDocByIdGrid";
        _this.accountCreationConfiguration = new Array();
        return _this;
    }
    AccountingDocumentInformationComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.formConfigurationService.getMandatoryFieldsConfigurationForFinancial().subscribe(function (templates) {
            _this.accountCreationConfiguration = templates.value;
            _this.atlasAgGridParam = _this.gridService.getAgGridParam();
            _this.company = _this.route.snapshot.paramMap.get('company');
            _this.companyConfiguration = _this.companyManager.getCompany(_this.company);
            _this.functionalCurrencyHeader = (_this.companyConfiguration.functionalCurrencyCode) ?
                _this.functionalCurrencyHeader + _this.companyConfiguration.functionalCurrencyCode : _this.functionalCurrencyHeader;
            _this.statutoryCurrencyHeader = (_this.companyConfiguration.statutoryCurrencyCode) ?
                _this.statutoryCurrencyHeader + _this.companyConfiguration.statutoryCurrencyCode : _this.statutoryCurrencyHeader;
            _this.securityService.isSecurityReady().subscribe(function () {
                if (_this.authorizationService.isPrivilegeAllowed(_this.company, 'Financials')
                    && _this.authorizationService.isPrivilegeAllowed(_this.company, 'POSTINGMGT')) {
                    _this.editPostingManagementPrivilege = _this.authorizationService.isPrivilegeAllowed(_this.company, 'EditPostingManagement');
                    _this.readWritePrivilege = _this.authorizationService.isPrivilegeAllowed(_this.company, 'POSTINGMGT');
                }
                if (_this.authorizationService.isPrivilegeAllowed(_this.company, 'Financials')
                    && _this.authorizationService.isPrivilegeAllowed(_this.company, 'AccountingEntries')) {
                    _this.editAccOrJournalDcoumentPrivilege = _this.authorizationService.isPrivilegeAllowed(_this.company, 'CreateEditDocument');
                }
            });
            _this.accountingId = Number(_this.route.snapshot.paramMap.get('accountingId'));
            _this.masterdata = _this.route.snapshot.data.masterdata;
            _this.filteredCurrencyList = _this.masterdata.currencies;
            _this.filteredSettlementCurrencyList = _this.filteredCurrencyList;
            _this.filteredCounterpartyList = _this.masterdata.counterparties;
            _this.filteredAccountLineType = _this.masterdata.accountLineTypes;
            _this.filteredCostTypeList = _this.masterdata.costTypes;
            _this.filteredDepartmentList = _this.masterdata.departments;
            _this.filteredCommodityList = _this.masterdata.commodities;
            _this.filtererdPaymentList = _this.masterdata.paymentTerms;
            _this.filteredVatsList = _this.masterdata.vats;
            _this.filteredProvinceList = _this.masterdata.provinces;
            _this.addNewLineCtrl.patchValue(1);
            if (_this.filteredAccountLineType && _this.filteredAccountLineType.length > 0) {
                _this.filteredAccountLineType.forEach(function (account) {
                    if (account.accountLineTypeCode === 'L' || account.accountLineTypeCode == 'B') {
                        _this.filteredAccountLineTypeForMtm.push(account);
                    }
                });
            }
            _this.filteredNominalAccountList = _this.masterdata.nominalAccounts;
            _this.init();
            _this.transactionDocumentDataLoader.getData().subscribe(function (documents) {
                _this.filteredDocuments = documents;
            });
            var filterList = [];
            _this.tradeDataLoader.getData(filterList).subscribe(function (trade) {
                _this.filteredContracts = trade.value;
            });
            _this.charterDataLoader.getData().subscribe(function (charter) {
                _this.filteredCharter = charter;
            });
            _this.fxDealLoader.getData(filterList).subscribe(function (fxDeal) {
                _this.filteredFxDeals = fxDeal.value;
            });
            _this.subscriptions.push(_this.preaccountingService.getAccountingSetupDetails()
                .subscribe(function (data) {
                _this.accountingSetupModel = data;
                _this.operationsLastMonthClosed = new Date(new Date(_this.accountingSetupModel.lastMonthClosedForOperation).toDateString());
                _this.lastMonthClosed = new Date(new Date(_this.accountingSetupModel.lastMonthClosed).toDateString());
                _this.monthNameForlastMonthClosed = _this.monthNames[_this.lastMonthClosed.getMonth()];
                _this.monthNameForoperationsLastMonthClosed = _this.monthNames[_this.operationsLastMonthClosed.getMonth()];
            }));
            _this.initView();
            _this.disableControls();
            _this.getFormGroup();
            _this.setValidators();
        });
    };
    AccountingDocumentInformationComponent.prototype.init = function () {
        this.accountingDocumentGridContextualMenuActions = [{
                icon: 'import_export',
                text: 'Export',
                action: this.accountingDocumentMenuActions.exportDocument,
            },
        ];
        this.editAccountingDocumentGridContextualMenuActions = [
            {
                icon: 'content_copy',
                text: 'Copy Line',
                action: this.editDocumentMenuActions.copyDocumentLine,
            },
            {
                icon: 'delete',
                text: 'Delete Line',
                action: this.editDocumentMenuActions.deleteDocumentLine,
            },
        ];
    };
    AccountingDocumentInformationComponent.prototype.canDeactivate = function () {
        if (this.editDocumentFormGroup.dirty && this.isSave === false) {
            return window.confirm('Leave an unsave form? \nYour changes won\'t be applied!');
        }
        return true;
    };
    AccountingDocumentInformationComponent.prototype.onGridReady = function (params) {
        this.agGridOptions = params;
        this.agGridOptions.columnDefs = this.agGridCols;
        this.agGridApi = this.agGridOptions.api;
        this.agGridColumnApi = this.agGridOptions.columnApi;
        this.agGridColumnApi.autoSizeAllColumns();
    };
    AccountingDocumentInformationComponent.prototype.processCellForClipboard = function (params) {
        if (!params.value || !params.column.colDef.cellRendererParams) {
            return params.value;
        }
        var value = params.value;
        var cellRenderedParams = params.column.colDef.cellRendererParams(null);
        var object = cellRenderedParams.valueProperty ? cellRenderedParams.options
            .find(function (option) { return option[cellRenderedParams.valueProperty] === value; }) : null;
        value = typeof value !== 'string' && cellRenderedParams.displayProperty ? value[cellRenderedParams.displayProperty] : value;
        if (object && cellRenderedParams.displayCode && cellRenderedParams.codeProperty) {
            return object[cellRenderedParams.codeProperty];
        }
        return cellRenderedParams.displayProperty && object ? object[cellRenderedParams.displayProperty] : value;
    };
    AccountingDocumentInformationComponent.prototype.unloadNotification = function ($event) {
        if (this.editDocumentFormGroup.dirty) {
            $event.returnValue = true;
        }
    };
    AccountingDocumentInformationComponent.prototype.disableControls = function () {
        this.currencyCtrl.disable();
        this.docDateFormCtrl.disable();
        //this.valueDateFormCtrl.disable();
        this.accPeriodFormCtrl.disable();
        this.glDateFormCtrl.disable();
        if (!this.isEditable('valueDate')) {
            this.valueDateFormCtrl.disable();
        }
        this.initializeGridColumns();
    };
    AccountingDocumentInformationComponent.prototype.onAddOrDeleteColumn = function (event) {
        var cols = this.columnDefs.filter(function (col) { return col.colId === event.column.colId; });
        if (cols.length !== 1) {
            return;
        }
        cols[0].hide = !event.visible;
    };
    AccountingDocumentInformationComponent.prototype.initView = function () {
        var _this = this;
        this.subscriptions.push(this.preaccountingService.getAccoutingDocumentData(this.accountingId).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_7__["map"])(function (data) {
            _this.documentRefData = data.value.map(function (docRef) {
                return new _shared_models_posting_management_display_view__WEBPACK_IMPORTED_MODULE_29__["PostingManagementDisplayView"](docRef);
            });
            _this.accountingDocumentData = _this.documentRefData[0];
            _this.isAccOrJournalType = _this.accountingDocumentData.transactionDocumentTypeId === _shared_enums_posting_document_type_enum__WEBPACK_IMPORTED_MODULE_27__["PostingDocumentType"].TA
                || _this.accountingDocumentData.transactionDocumentTypeId === _shared_enums_posting_document_type_enum__WEBPACK_IMPORTED_MODULE_27__["PostingDocumentType"].JL;
            _this.isAccrualDocument = _this.accountingDocumentData.transactionDocumentTypeId === _shared_enums_posting_document_type_enum__WEBPACK_IMPORTED_MODULE_27__["PostingDocumentType"].TA;
            _this.currencyControl = _this.filteredCurrencyList
                .find(function (currency) { return currency.currencyCode === _this.accountingDocumentData.currencyCode; });
            _this.isCashDocumentType = _this.accountingDocumentData.transactionDocumentTypeId === _shared_enums_posting_document_type_enum__WEBPACK_IMPORTED_MODULE_27__["PostingDocumentType"].CP
                || _this.accountingDocumentData.transactionDocumentTypeId === _shared_enums_posting_document_type_enum__WEBPACK_IMPORTED_MODULE_27__["PostingDocumentType"].CI;
            _this.isCashDocumentAuthorized = (_this.accountingDocumentData.transactionDocumentTypeId === _shared_enums_posting_document_type_enum__WEBPACK_IMPORTED_MODULE_27__["PostingDocumentType"].CP
                || _this.accountingDocumentData.transactionDocumentTypeId === _shared_enums_posting_document_type_enum__WEBPACK_IMPORTED_MODULE_27__["PostingDocumentType"].CI)
                && _this.accountingDocumentData.statusId === _shared_enums_posting_status_enum__WEBPACK_IMPORTED_MODULE_28__["PostingStatus"].Authorized;
            _this.isInvoiceDocumentType = _this.accountingDocumentData.transactionDocumentTypeId === _shared_enums_posting_document_type_enum__WEBPACK_IMPORTED_MODULE_27__["PostingDocumentType"].PI
                || _this.accountingDocumentData.transactionDocumentTypeId === _shared_enums_posting_document_type_enum__WEBPACK_IMPORTED_MODULE_27__["PostingDocumentType"].SI
                || _this.accountingDocumentData.transactionDocumentTypeId === _shared_enums_posting_document_type_enum__WEBPACK_IMPORTED_MODULE_27__["PostingDocumentType"].CN
                || _this.accountingDocumentData.transactionDocumentTypeId === _shared_enums_posting_document_type_enum__WEBPACK_IMPORTED_MODULE_27__["PostingDocumentType"].DN;
            _this.isDocumentStatusHeld = _this.accountingDocumentData.statusId === _shared_enums_posting_status_enum__WEBPACK_IMPORTED_MODULE_28__["PostingStatus"].Held;
            _this.isMappingErrorStatus = _this.accountingDocumentData.statusId === _shared_enums_posting_status_enum__WEBPACK_IMPORTED_MODULE_28__["PostingStatus"].MappingError;
            if (_this.isMappingErrorStatus) {
                _this.displayErrorMessages();
            }
            _this.accountingDocumentLine = _this.accountingDocumentData.accountingDocumentLines;
            _this.initializeGridColumns();
            _this.assignValuesToControl();
            _this.initializeStatusClass();
            if (!_this.isViewMode) {
                _this.agGridColumnApi.setColumnVisible(_this.editLineMenu, !_this.isViewMode && _this.isAccOrJournalType && !_this.isAlreadyAuthorized);
                _this.agGridColumnApi.setColumnVisible(_this.accrualNumberColumn, _this.isAccrualDocument ? true : false);
                _this.agGridColumnApi.setColumnVisible(_this.paymentTermColumn, _this.isInvoiceDocumentType ? true : false);
                _this.agGridColumnApi.setColumnVisible(_this.vatIdColumn, _this.isInvoiceDocumentType ? true : false);
                _this.agGridColumnApi.setColumnVisible(_this.statutoryCurrencyColumn, _this.isDocumentStatusHeld ? true : false);
                _this.agGridColumnApi.setColumnVisible(_this.functionalCurrencyColumn, _this.isDocumentStatusHeld ? true : false);
                _this.agGridColumnApi.setColumnVisible(_this.dealNumberColumn, false);
                _this.agGridColumnApi.setColumnVisible(_this.settlementCurrencyColumn, false);
                _this.agGridColumnApi.setColumnVisible(_this.provinceColumn, false);
            }
            if (_this.documentRefData[0].taTypeId === 3 && _this.accountingDocumentData.transactionDocumentTypeId === _shared_enums_posting_document_type_enum__WEBPACK_IMPORTED_MODULE_27__["PostingDocumentType"].TA) {
                _this.isMtmSelected = true;
                _this.showHideMtmColumn();
            }
            if (!_this.isViewMode) {
                if (_this.accountingDocumentData.transactionDocumentTypeId == _shared_enums_posting_document_type_enum__WEBPACK_IMPORTED_MODULE_27__["PostingDocumentType"].TA) {
                    _this.currencyCtrl.disable();
                }
                if (_this.accountingDocumentData.taTypeId == _shared_enums_posting_document_tatype_enum__WEBPACK_IMPORTED_MODULE_26__["PostingDocumentTAType"].MonthEndTA) {
                    _this.docDateFormCtrl.disable();
                    _this.valueDateFormCtrl.disable();
                    _this.accPeriodFormCtrl.disable();
                    _this.glDateFormCtrl.disable();
                }
                _this.startLockRefresh(_this.accountingId, _this.docReference);
                _this.titleService.setTitle(_this.docReference + ' - Edit');
            }
            else {
                _this.titleService.setTitle(_this.docReference + ' - View');
            }
        }))
            .subscribe());
    };
    AccountingDocumentInformationComponent.prototype.getFormGroup = function () {
        this.editDocumentFormGroup = this.formBuilder.group({
            currencyCtrl: this.currencyCtrl,
            docDateFormCtrl: this.docDateFormCtrl,
            valueDateFormCtrl: this.valueDateFormCtrl,
            accPeriodFormCtrl: this.accPeriodFormCtrl,
        });
        return _super.prototype.getFormGroup.call(this);
    };
    AccountingDocumentInformationComponent.prototype.showOrHideColum = function (event, col) {
        this.isSave = true;
        this.agGridColumnApi.setColumnVisible(col.colId, (col.hide || false));
        event.stopPropagation();
        return false;
    };
    AccountingDocumentInformationComponent.prototype.initializeGridColumns = function () {
        var _this = this;
        this.columnDefs = [
            {
                headerName: 'Nominal acc.',
                colId: 'accountReference',
                field: 'accountReference',
                onCellValueChanged: this.onNominalAccountSelected.bind(this),
                cellRendererFramework: _shared_components_ag_grid_contextual_search_ag_grid_contextual_search_component__WEBPACK_IMPORTED_MODULE_13__["AgGridContextualSearchComponent"],
                cellRendererParams: function () {
                    return {
                        context: {
                            componentParent: _this,
                            gridEditable: _this.isColumnEditable(),
                        },
                        gridId: 'nominalAccountsGrid',
                        options: _this.filteredNominalAccountList,
                        isRequired: (!_this.isViewMode) ? true : false,
                        displayProperty: 'accountNumber',
                        valueProperty: 'accountNumber',
                        lightBoxTitle: 'Results for Nominal Accounts',
                        showContextualSearchIcon: !_this.isCashDocumentType && !_this.isAlreadyAuthorized
                            && !_this.isInvoiceDocumentType && !_this.isViewMode,
                    };
                },
            },
            {
                headerName: 'Cli. account',
                colId: 'clientAccountId',
                field: 'clientAccountId',
                cellRendererFramework: _shared_components_ag_grid_contextual_search_ag_grid_contextual_search_component__WEBPACK_IMPORTED_MODULE_13__["AgGridContextualSearchComponent"],
                onCellValueChanged: this.onClientAccountIdSelected.bind(this),
                cellRendererParams: function (params) {
                    return {
                        context: {
                            componentParent: _this,
                            gridEditable: _this.isColumnEditable(),
                        },
                        gridId: 'counterpartiesGrid',
                        options: _this.filteredCounterpartyList,
                        isRequired: false,
                        displayProperty: 'counterpartyCode',
                        valueProperty: 'counterpartyID',
                        lightBoxTitle: 'Results for Counterparty',
                        showContextualSearchIcon: !_this.isCashDocumentType && !_this.isAlreadyAuthorized
                            && !_this.isInvoiceDocumentType && !_this.isViewMode,
                    };
                },
            },
            {
                headerName: 'Associated Acc.',
                colId: 'associatedAccountCode',
                field: 'associatedAccountCode',
                cellRendererFramework: _shared_components_ag_grid_contextual_search_ag_grid_contextual_search_component__WEBPACK_IMPORTED_MODULE_13__["AgGridContextualSearchComponent"],
                onCellValueChanged: this.onClientAccountCodeSelected.bind(this),
                cellRendererParams: function () {
                    return {
                        context: {
                            componentParent: _this,
                            gridEditable: _this.isColumnEditable() && _this.isEditable('associatedAccountId'),
                        },
                        gridId: 'counterpartiesGrid',
                        options: _this.filteredCounterpartyList,
                        isEditable: _this.isColumnEditable() && _this.isEditable('associatedAccountId'),
                        isRequired: _this.isRequired('associatedAccountId'),
                        displayProperty: 'counterpartyCode',
                        valueProperty: 'counterpartyCode',
                        lightBoxTitle: 'Results for Counterparty',
                        showContextualSearchIcon: !_this.isCashDocumentType && !_this.isAlreadyAuthorized
                            && !_this.isInvoiceDocumentType && !_this.isViewMode && _this.isEditable('associatedAccountId'),
                    };
                },
            },
            {
                headerName: 'Acc. L. Type',
                colId: 'accountLineTypeId',
                field: 'accountLineTypeId',
                cellRendererFramework: _shared_components_ag_grid_contextual_search_ag_grid_contextual_search_component__WEBPACK_IMPORTED_MODULE_13__["AgGridContextualSearchComponent"],
                cellRendererParams: function (params) {
                    return {
                        context: {
                            componentParent: _this,
                            gridEditable: _this.isColumnEditable() && _this.isEditable('accountLineTypeId'),
                        },
                        gridId: 'accountLineTypeGrid',
                        options: (_this.isMtmSelected) ? _this.filteredAccountLineTypeForMtm : _this.filteredAccountLineType,
                        isEditable: _this.isColumnEditable() && _this.isEditable('accountLineTypeId'),
                        isRequired: _this.isRequired('accountLineTypeId'),
                        displayProperty: 'accountLineTypeCode',
                        valueProperty: 'accountLineTypeId',
                        lightBoxTitle: 'Results for  Account Line Type',
                        nominalAccountList: _this.filteredNominalAccountList,
                        filterContextualSearchFunction: _this.filterAccountLineTypes.bind(_this),
                        showContextualSearchIcon: !_this.isCashDocumentType && !_this.isAlreadyAuthorized
                            && !_this.isInvoiceDocumentType && !_this.isViewMode && _this.isEditable('accountLineTypeId'),
                    };
                },
                onCellValueChanged: this.onAccountLineTypeSelected.bind(this),
            },
            {
                headerName: 'Cost types',
                colId: 'costTypeId',
                field: 'costTypeId',
                cellRendererFramework: _shared_components_ag_grid_contextual_search_ag_grid_contextual_search_component__WEBPACK_IMPORTED_MODULE_13__["AgGridContextualSearchComponent"],
                cellRendererParams: function (params) {
                    return {
                        context: {
                            componentParent: _this,
                            gridEditable: _this.isColumnEditable(),
                        },
                        gridId: 'costTypesGrid',
                        isRequired: (!_this.isViewMode) ? true : false,
                        displayProperty: 'costTypeCode',
                        valueProperty: 'costTypeId',
                        lightBoxTitle: 'Results for Cost',
                        options: _this.filteredCostTypeList,
                        nominalAccountList: _this.filteredNominalAccountList,
                        showContextualSearchIcon: !_this.isCashDocumentType && !_this.isAlreadyAuthorized
                            && !_this.isInvoiceDocumentType && !_this.isViewMode,
                    };
                },
                onCellValueChanged: this.onCostTypeSelected.bind(this),
            },
            {
                headerName: 'Amount',
                colId: 'amount',
                field: 'amount',
                editable: this.makeColumnEditable.bind(this),
                cellRenderer: this.requiredCellForCostAmount.bind(this),
                cellStyle: { textAlign: 'right' },
                cellEditor: 'atlasNumeric',
                cellEditorParams: {
                    displayMask: Object(_shared_numberMask__WEBPACK_IMPORTED_MODULE_30__["CustomNumberMask"])(12, 10, true),
                    isRightAligned: false,
                },
            },
            {
                headerName: this.statutoryCurrencyHeader,
                colId: 'statutoryCurrency',
                field: 'statutoryCurrency',
                editable: this.makeColumnEditable.bind(this),
                valueFormatter: this.currencyFormatterInGrid.bind(this),
                cellStyle: { textAlign: 'right' },
            },
            {
                headerName: this.functionalCurrencyHeader,
                colId: 'functionalCurrency',
                field: 'functionalCurrency',
                editable: this.makeColumnEditable.bind(this),
                valueFormatter: this.currencyFormatterInGrid.bind(this),
                cellStyle: { textAlign: 'right' },
            },
            {
                headerName: 'Narrative',
                colId: 'narrative',
                field: 'narrative',
                cellRenderer: this.requiredCell.bind(this),
                editable: this.makeColumnEditable.bind(this) && this.isEditable('narrative'),
            },
            {
                headerName: 'Department',
                colId: 'departmentId',
                field: 'departmentId',
                cellRendererFramework: _shared_components_ag_grid_contextual_search_ag_grid_contextual_search_component__WEBPACK_IMPORTED_MODULE_13__["AgGridContextualSearchComponent"],
                cellRendererParams: function (params) {
                    return {
                        context: {
                            componentParent: _this,
                            gridEditable: _this.isColumnEditable(),
                        },
                        gridId: 'departmentsGrid',
                        isRequired: !_this.isCashDocumentType && !_this.isAlreadyAuthorized
                            && !_this.isInvoiceDocumentType && !_this.isViewMode,
                        displayProperty: 'departmentCode',
                        valueProperty: 'departmentId',
                        lightBoxTitle: 'Results for Departments',
                        options: _this.filteredDepartmentList,
                        showContextualSearchIcon: !_this.isCashDocumentType && !_this.isAlreadyAuthorized
                            && !_this.isInvoiceDocumentType && !_this.isViewMode,
                    };
                },
                onCellValueChanged: this.onDepartmentSelected.bind(this),
                tooltip: function (params) {
                    return params.value ? params.value : null;
                },
            },
            {
                headerName: 'Sec. Doc. ref',
                colId: 'secondaryDocumentReference',
                field: 'secondaryDocumentReference',
                cellRendererFramework: _shared_components_ag_grid_contextual_search_ag_grid_contextual_search_component__WEBPACK_IMPORTED_MODULE_13__["AgGridContextualSearchComponent"],
                cellRendererParams: function () {
                    return {
                        context: {
                            componentParent: _this,
                            gridEditable: _this.isColumnEditable(),
                        },
                        gridId: 'transactionDocumentGrid',
                        isRequired: false,
                        displayProperty: 'docRef',
                        valueProperty: 'docRef',
                        lightBoxTitle: 'Results for Transaction Documents',
                        dataLoader: _this.transactionDocumentDataLoader,
                        options: _this.filteredDocuments,
                        showContextualSearchIcon: !_this.isCashDocumentType && !_this.isAlreadyAuthorized
                            && !_this.isInvoiceDocumentType && !_this.isViewMode,
                    };
                },
                onCellValueChanged: this.onDocumentSelected.bind(this),
                tooltip: function (params) {
                    return params.value ? params.value.docRef : null;
                },
            },
            {
                headerName: 'Ext. Doc. Ref',
                colId: 'extDocReference',
                field: 'extDocReference',
                editable: this.makeColumnEditable.bind(this),
            },
            {
                headerName: 'Contract ref.',
                colId: 'sectionReference',
                field: 'sectionReference',
                cellRendererFramework: _shared_components_ag_grid_contextual_search_ag_grid_contextual_search_component__WEBPACK_IMPORTED_MODULE_13__["AgGridContextualSearchComponent"],
                cellRendererParams: function (params) {
                    var isContractRefEditable = false;
                    if (params.data && (params.data.dealNumber === '' || params.data.dealNumber === null)) {
                        isContractRefEditable = true;
                    }
                    return {
                        context: {
                            componentParent: _this,
                            gridEditable: (_this.isColumnEditable() && isContractRefEditable),
                        },
                        gridId: 'tradeList',
                        isRequired: false,
                        displayProperty: 'contractLabel',
                        valueProperty: 'contractLabel',
                        lightBoxTitle: 'Results for Contracts',
                        dataLoader: _this.tradeDataLoader,
                        option: _this.filteredContracts,
                        showContextualSearchIcon: !_this.isCashDocumentType && !_this.isAlreadyAuthorized
                            && !_this.isInvoiceDocumentType && !_this.isViewMode && isContractRefEditable,
                    };
                },
                onCellValueChanged: this.onContractSelected.bind(this),
            },
            {
                headerName: 'Commodity',
                colId: 'commodityId',
                field: 'commodityId',
                cellRendererFramework: _shared_components_ag_grid_contextual_search_ag_grid_contextual_search_component__WEBPACK_IMPORTED_MODULE_13__["AgGridContextualSearchComponent"],
                cellRendererParams: function (params) {
                    var isCommodityEditable = false;
                    if (params.data && (params.data.dealNumber === '' || params.data.dealNumber === null)) {
                        isCommodityEditable = true;
                    }
                    return {
                        context: {
                            componentParent: _this,
                            gridEditable: (_this.isColumnEditable() && isCommodityEditable),
                        },
                        isEditable: true,
                        gridId: 'commodityGrid',
                        isRequiredField: false,
                        displayProperty: 'commodityCode',
                        valueProperty: 'commodityId',
                        lightBoxTitle: 'Results for Commodities',
                        options: _this.filteredCommodityList,
                        showContextualSearchIcon: !_this.isCashDocumentType && !_this.isAlreadyAuthorized
                            && !_this.isInvoiceDocumentType && !_this.isViewMode && isCommodityEditable,
                    };
                },
                onCellValueChanged: this.onCommoditySelected.bind(this),
                tooltip: function (params) {
                    return params.value ? params.value.commodityDescription : null;
                },
            },
            {
                headerName: 'Quantity',
                colId: 'quantity',
                field: 'quantity',
                tooltip: function (params) {
                    return _this.validateQuantity(params);
                },
                cellEditor: 'atlasNumeric',
                cellEditorParams: {
                    displayMask: Object(_shared_numberMask__WEBPACK_IMPORTED_MODULE_30__["CustomNumberMask"])(12, 10, true),
                    isRightAligned: false,
                },
                editable: this.makeColumnEditable.bind(this),
                valueFormatter: this.quantityFormatterInGrid.bind(this),
                cellStyle: { textAlign: 'right' },
            },
            {
                headerName: 'Charter',
                colId: 'charterId',
                field: 'charterId',
                cellRendererFramework: _shared_components_ag_grid_contextual_search_ag_grid_contextual_search_component__WEBPACK_IMPORTED_MODULE_13__["AgGridContextualSearchComponent"],
                cellRendererParams: function (params) {
                    return {
                        context: {
                            componentParent: _this,
                            gridEditable: _this.isColumnEditable() && _this.isEditable('charterId'),
                        },
                        isEditable: _this.isColumnEditable() && _this.isEditable('charterId'),
                        gridId: 'charterGrid',
                        isRequired: _this.isRequired('charterId'),
                        isRequiredField: false,
                        displayProperty: 'charterCode',
                        valueProperty: 'charterId',
                        lightBoxTitle: 'Results for Charters',
                        dataLoader: _this.charterDataLoader,
                        options: _this.filteredCharter,
                        showContextualSearchIcon: !_this.isCashDocumentType && !_this.isAlreadyAuthorized
                            && !_this.isInvoiceDocumentType && !_this.isViewMode && _this.isEditable('charterId'),
                    };
                },
                onCellValueChanged: this.onCharterSelected.bind(this),
                tooltip: function (params) {
                    return params.value ? params.value.description : null;
                },
            },
            {
                headerName: 'Cost Center',
                colId: 'costCenter',
                field: 'costCenter',
                editable: this.makeColumnEditable.bind(this) && this.isEditable('costCenter'),
                cellRenderer: this.requiredCell.bind(this),
            },
            {
                headerName: 'Payment terms',
                colId: 'paymentTermId',
                field: 'paymentTermId',
                editable: this.makeColumnEditable.bind(this),
                valueFormatter: this.paymentTermFormatter.bind(this),
                cellEditor: 'agRichSelectCellEditor',
                cellEditorParams: function () {
                    return {
                        values: _this.filtererdPaymentList.map(function (paymentTerm) { return paymentTerm.paymentTermsId; }),
                        displayPropertyName: 'paymentTermsCode',
                        valuePropertyName: 'paymentTermsId',
                        displayFormat: 'paymentTermsCode',
                    };
                },
            },
            {
                headerName: 'Tax code',
                colId: 'vatId',
                field: 'vatId',
                editable: this.makeColumnEditable.bind(this),
                valueFormatter: this.vatCodeFormatter.bind(this),
                cellEditor: 'agRichSelectCellEditor',
                cellEditorParams: function () {
                    return {
                        values: _this.filteredVatsList.map(function (vats) { return vats.vatId; }),
                        displayPropertyName: 'vatCode',
                        valuePropertyName: 'vatId',
                        displayFormat: 'vatCode',
                    };
                },
            },
            {
                headerName: 'Settlement Ccy.',
                colId: 'settlementCurrency',
                field: 'settlementCurrency',
                cellRendererFramework: _shared_components_ag_grid_contextual_search_ag_grid_contextual_search_component__WEBPACK_IMPORTED_MODULE_13__["AgGridContextualSearchComponent"],
                cellRendererParams: function (params) {
                    var issettlementCurrencyEditable = false;
                    if (params.data && (params.data.sectionReference === '' || params.data.sectionReference === null)) {
                        issettlementCurrencyEditable = true;
                    }
                    return {
                        context: {
                            componentParent: _this,
                            gridEditable: _this.isColumnEditable() && issettlementCurrencyEditable,
                        },
                        gridId: 'currenciesGrid',
                        isRequired: false,
                        displayProperty: 'currencyCode',
                        codeProperty: 'currencyCode',
                        descriptionProperty: 'description',
                        valueProperty: 'currencyCode',
                        lightBoxTitle: 'Results for Currencies',
                        options: _this.filteredSettlementCurrencyList,
                        showContextualSearchIcon: (!_this.isCashDocumentType && !_this.isAlreadyAuthorized
                            && !_this.isInvoiceDocumentType && !_this.isViewMode && issettlementCurrencyEditable),
                    };
                },
                onCellValueChanged: this.onContractSelected.bind(this),
            },
            {
                headerName: 'Province',
                colId: 'provinceId',
                field: 'provinceId',
                cellRendererFramework: _shared_components_ag_grid_contextual_search_ag_grid_contextual_search_component__WEBPACK_IMPORTED_MODULE_13__["AgGridContextualSearchComponent"],
                cellRendererParams: function (params) {
                    return {
                        context: {
                            componentParent: _this,
                            gridEditable: _this.isColumnEditable(),
                        },
                        gridId: 'provincesMasterData',
                        isRequired: false,
                        displayProperty: 'stateCode',
                        codeProperty: 'stateCode',
                        descriptionProperty: 'description',
                        valueProperty: 'provinceId',
                        lightBoxTitle: 'Results for Provinces',
                        options: _this.filteredProvinceList,
                        showContextualSearchIcon: (!_this.isCashDocumentType && !_this.isAlreadyAuthorized
                            && !_this.isInvoiceDocumentType && !_this.isViewMode),
                    };
                },
                onCellValueChanged: this.onContractSelected.bind(this),
            },
            {
                headerName: 'Deal No.',
                colId: 'dealNumber',
                field: 'dealNumber',
                cellRendererFramework: _shared_components_ag_grid_contextual_search_ag_grid_contextual_search_component__WEBPACK_IMPORTED_MODULE_13__["AgGridContextualSearchComponent"],
                cellRendererParams: function (params) {
                    var isDealNumberEditable = false;
                    if (params.data && (params.data.sectionReference === '' || params.data.sectionReference === null)) {
                        isDealNumberEditable = true;
                    }
                    return {
                        context: {
                            componentParent: _this,
                            gridEditable: (_this.isColumnEditable() && isDealNumberEditable),
                        },
                        gridId: 'fxDealList',
                        isRequired: false,
                        displayProperty: 'dealNumber',
                        valueProperty: 'dealNumber',
                        lightBoxTitle: 'Results for FxDeals',
                        dataLoader: _this.fxDealLoader,
                        options: _this.filteredFxDeals,
                        showContextualSearchIcon: (!_this.isCashDocumentType && !_this.isAlreadyAuthorized
                            && !_this.isInvoiceDocumentType && !_this.isViewMode && isDealNumberEditable),
                    };
                },
                onCellValueChanged: this.onContractSelected.bind(this),
            },
            {
                colId: 'accrualNumber',
                field: 'accrualNumber',
                editable: false,
                cellRenderer: this.requiredCell.bind(this),
                cellEditor: 'atlasNumeric',
                cellEditorParams: {
                    displayMask: Object(_shared_numberMask__WEBPACK_IMPORTED_MODULE_30__["AllNumberMask"])(),
                },
                headerComponentFramework: _shared_components_ag_grid_accrual_number_ag_grid_accrual_number_component__WEBPACK_IMPORTED_MODULE_12__["AgGridAccrualNumberComponent"],
                headerComponentParams: {
                    headerName: 'Accrual n°',
                },
            },
            {
                headerName: '',
                colId: 'editLineMenu',
                cellRendererFramework: _shared_components_ag_contextual_menu_ag_contextual_menu_component__WEBPACK_IMPORTED_MODULE_11__["AgContextualMenuComponent"],
                cellRendererParams: {
                    context: {
                        componentParent: this,
                    },
                    menuActions: this.editAccountingDocumentGridContextualMenuActions,
                },
                cellClass: 'ag-contextual-menu',
                width: 60,
            },
        ];
        this.rowStyle = { 'border-bottom': '1px solid #e0e0e0 !important' };
    };
    AccountingDocumentInformationComponent.prototype.quantityFormatterInGrid = function (param) {
        if (param && param.value) {
            var commonMethods = new _execution_services_execution_cash_common_methods__WEBPACK_IMPORTED_MODULE_8__["CommonMethods"]();
            return commonMethods.getFormattedNumberValue(param.value, 3);
        }
    };
    AccountingDocumentInformationComponent.prototype.formatValue = function (amount) {
        if (isNaN(amount) || amount === null) {
            return '';
        }
        return new Intl.NumberFormat(this.amountFormat, { minimumFractionDigits: 2, maximumFractionDigits: 2 }).format(amount);
    };
    AccountingDocumentInformationComponent.prototype.assignValuesToControl = function () {
        var _this = this;
        this.amount = 0;
        this.statutoryAmount = 0;
        this.functionalAmount = 0;
        this.errorMessage = this.accountingDocumentData.errorMessage;
        if (!this.errorMessage) {
            this.showErrorMessage = false;
        }
        else {
            this.errormsg = 'mat-error-message-chip';
        }
        this.docReference = this.accountingDocumentData.documentReference;
        this.docStatus = _shared_enums_posting_status_enum__WEBPACK_IMPORTED_MODULE_28__["PostingStatus"][this.accountingDocumentData.statusId];
        this.createdBy = this.accountingDocumentData.createdBy;
        this.creationDate = this.accountingDocumentData.createdDateTime ? this.accountingDocumentData.createdDateTime.toDateString() : '';
        this.modifiedBy = this.accountingDocumentData.modifiedBy;
        this.modifiedDate = this.accountingDocumentData.modifiedDateTime ? this.accountingDocumentData.modifiedDateTime.toDateString() : '';
        this.docDateFormCtrl.patchValue(this.accountingDocumentData.documentDate);
        this.valueDateFormCtrl.patchValue(this.accountingDocumentData.valueDate);
        this.glDateFormCtrl.patchValue((this.isAccOrJournalType) ? null : this.accountingDocumentData.glDate);
        this.accPeriodFormCtrl.patchValue(moment(this.accountingDocumentData.accountingPeriod));
        this.interfaceCtrl.patchValue(this.accountingDocumentData.toInterface);
        this.currencyCtrl.patchValue(this.currencyControl);
        if (!this.isCashDocumentType && !this.isAlreadyAuthorized && !this.isInvoiceDocumentType && !this.isViewMode) {
            this.currencyCtrl.enable();
        }
        else {
            this.currencyCtrl.disable();
        }
        this.accountingDocumentData.accountingDocumentLines.forEach(function (rowData) {
            _this.amount = Math.round((_this.amount + Number(rowData.amount)) * 100) / 100;
            if (_this.isDocumentStatusHeld) {
                _this.statutoryAmount = Math.round((_this.statutoryAmount + Number(rowData.statutoryCurrency)) * 100) / 100;
            }
            if (_this.isDocumentStatusHeld) {
                _this.functionalAmount = Math.round((_this.functionalAmount + Number(rowData.functionalCurrency)) * 100) / 100;
            }
        });
        this.isAlreadyAuthorized = this.accountingDocumentData.statusId === _shared_enums_posting_status_enum__WEBPACK_IMPORTED_MODULE_28__["PostingStatus"].Authorized ? true : false;
    };
    AccountingDocumentInformationComponent.prototype.validateQuantity = function (params) {
        var tooltipMessage = null;
        var reg = new RegExp('^[0-9.]*$');
        var validQuantity = String(params.value).match(reg);
        if (params.colDef) {
            if (!validQuantity) {
                tooltipMessage = 'Not allowed. Only numeric values allowed';
                params.data.isQuantityValid = false;
            }
            else {
                tooltipMessage = null;
                params.data.isQuantityValid = true;
            }
        }
        return tooltipMessage;
    };
    AccountingDocumentInformationComponent.prototype.validateTaxCode = function (params) {
        var tooltipMessage = null;
        if (params.colDef) {
            if (params.data.accountingCategory === this.counterPartyAccountingCategory) {
                tooltipMessage = 'Tax code could not be added on a counterparty leg';
                params.data.isTaxCodeValid = false;
            }
            else {
                tooltipMessage = null;
                params.data.isTaxCodeValid = true;
            }
        }
        return tooltipMessage;
    };
    AccountingDocumentInformationComponent.prototype.onEditClicked = function () {
        var _this = this;
        this.lockService.isLockedAccountingDocument(this.accountingId)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_7__["takeUntil"])(this.destroy$)).subscribe(function (lock) {
            if (lock.isLocked) {
                _this.dialog.open(_shared_components_confirmation_dialog_confirmation_dialog_component__WEBPACK_IMPORTED_MODULE_16__["ConfirmationDialogComponent"], {
                    data: {
                        title: 'Lock',
                        text: lock.message,
                        okButton: 'Got it',
                    },
                });
            }
            else {
                _this.lockService.lockAccountingDocument(_this.accountingId, _shared_entities_lock_functional_context_entity__WEBPACK_IMPORTED_MODULE_22__["LockFunctionalContext"].AccountingDocumentEdition)
                    .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_7__["takeUntil"])(_this.destroy$)).subscribe(function () {
                    _this.isSave = true;
                    _this.isViewMode = false;
                    if (!_this.isCashDocumentType && !_this.isAlreadyAuthorized && !_this.isInvoiceDocumentType && !_this.isViewMode) {
                        _this.enableControls();
                    }
                    _this.init();
                    _this.initView();
                    _this.agGridApi.refreshCells();
                });
            }
        });
    };
    AccountingDocumentInformationComponent.prototype.startLockRefresh = function (accountingId, documentReference) {
        this.resourcesInformation = new Array();
        var resourceInformation = new _shared_entities_lock_resource_information_entity__WEBPACK_IMPORTED_MODULE_23__["LockResourceInformation"]();
        resourceInformation.resourceType = 'Accounting Document';
        resourceInformation.resourceId = accountingId;
        resourceInformation.resourceCode = documentReference;
        resourceInformation.needRefresh = true;
        this.resourcesInformation.push(resourceInformation);
    };
    AccountingDocumentInformationComponent.prototype.stopLockRefresh = function () {
        this.resourcesInformation = new Array();
    };
    AccountingDocumentInformationComponent.prototype.enableControls = function () {
        if (this.isEditable('valueDate')) {
            this.valueDateFormCtrl.enable();
        }
        this.currencyCtrl.enable();
        this.docDateFormCtrl.enable();
        this.accPeriodFormCtrl.enable();
        this.glDateFormCtrl.enable();
    };
    AccountingDocumentInformationComponent.prototype.makeColumnEditable = function (params) {
        if (this.isColumnEditable()) {
            params.data.isEditable = true;
            return true;
        }
        return false;
    };
    AccountingDocumentInformationComponent.prototype.isColumnEditable = function () {
        if (this.isViewMode === false && !this.isCashDocumentType && !this.isAlreadyAuthorized && !this.isInvoiceDocumentType && this.accountingDocumentData.taTypeId !== _shared_enums_posting_document_tatype_enum__WEBPACK_IMPORTED_MODULE_26__["PostingDocumentTAType"].MonthEndTA) {
            return true;
        }
        return false;
    };
    AccountingDocumentInformationComponent.prototype.vatCodeFormatter = function (params) {
        if (params.value && this.masterdata.vats) {
            var vatList = this.masterdata.vats.find(function (x) { return x.vatId === params.value; });
            if (vatList) {
                return vatList.vatCode;
            }
        }
        return '';
    };
    AccountingDocumentInformationComponent.prototype.paymentTermFormatter = function (params) {
        if (params.value && this.masterdata.paymentTerms) {
            var paymentTermsList = this.masterdata.paymentTerms.find(function (x) { return x.paymentTermsId === params.value; });
            if (paymentTermsList) {
                return paymentTermsList.paymentTermCode;
            }
        }
        return '';
    };
    AccountingDocumentInformationComponent.prototype.currencyFormatter = function (amount) {
        if (amount === null) {
            return '';
        }
        return new Intl.NumberFormat(this.amountFormat, { minimumFractionDigits: 2, maximumFractionDigits: 2 }).format(amount);
    };
    AccountingDocumentInformationComponent.prototype.currencyFormatterInGrid = function (param) {
        if (isNaN(param.value) || param.value === null) {
            return '';
        }
        return new Intl.NumberFormat(this.amountFormat, { minimumFractionDigits: 2, maximumFractionDigits: 2 }).format(param.value);
    };
    AccountingDocumentInformationComponent.prototype.getValuesforControls = function () {
        this.accountingDocumentData.documentDate = this.docDateFormCtrl.value;
        this.accountingDocumentData.valueDate = this.valueDateFormCtrl.value;
        if (this.glDateFormCtrl.value) {
            this.accountingDocumentData.glDate = this.glDateFormCtrl.value;
        }
        this.accountingDocumentData.accountingPeriod = this.accPeriodFormCtrl.value;
        this.accountingDocumentData.currencyCode = this.currencyCtrl.value.currencyCode;
        this.accountingDocumentData.toInterface = this.interfaceCtrl.value;
    };
    AccountingDocumentInformationComponent.prototype.onActionButtonClicked = function () {
        var _this = this;
        this.agGridOptions.api.forEachNode(function (node) {
            if (_this.masterdata.departments && node.data.departmentId) {
                var departement = _this.masterdata.departments.find(function (dept) {
                    return dept.departmentId === node.data.departmentId;
                });
                node.data.departmentId = departement ? departement.description : null;
            }
            if (_this.masterdata.costTypes && node.data.costTypeId) {
                var costType = _this.masterdata.costTypes.find(function (cost) {
                    return cost.costTypeId === node.data.costTypeId;
                });
                node.data.costTypeId = costType ? costType.costTypeCode : null;
            }
            if (_this.masterdata.vats && node.data.vatId) {
                var vatSelected = _this.masterdata.vats.find(function (vat) {
                    return vat.vatId === node.data.vatId;
                });
                node.data.vatId = vatSelected ? vatSelected.vatCode : null;
            }
            if (_this.masterdata.commodities && node.data.commodityId) {
                var commoditySelected = _this.masterdata.commodities.find(function (commodity) {
                    return commodity.commodityId === node.data.commodityId;
                });
                node.data.commodityId = commoditySelected ? commoditySelected.commodityCode : null;
            }
            if (_this.masterdata.paymentTerms && node.data.paymentTermsId) {
                var paymentTermSelected = _this.masterdata.paymentTerms.find(function (paymentTerm) {
                    return paymentTerm.paymentTermsId === node.data.paymentTermsId;
                });
                node.data.paymentTermsId = paymentTermSelected ? paymentTermSelected.paymentTermCode : null;
            }
        });
        var params = {
            sheetName: this.excelSheetName,
        };
        this.agGridOptions.api.exportDataAsExcel(params);
    };
    AccountingDocumentInformationComponent.prototype.onDeleteClicked = function () {
        var _this = this;
        this.isSave = true;
        if (this.accountingDocumentData.transactionDocumentTypeId === _shared_enums_posting_document_type_enum__WEBPACK_IMPORTED_MODULE_27__["PostingDocumentType"].TA ||
            this.accountingDocumentData.transactionDocumentTypeId === _shared_enums_posting_document_type_enum__WEBPACK_IMPORTED_MODULE_27__["PostingDocumentType"].JL) {
            var confirmDialog_1 = this.deleteConfirmationDialog.open(_shared_components_confirmation_dialog_confirmation_dialog_component__WEBPACK_IMPORTED_MODULE_16__["ConfirmationDialogComponent"], {
                data: {
                    title: 'Accounting Document Deletion',
                    text: 'You are about to delete the document. This action is irreversible. Continue ?',
                    okButton: 'Yes',
                    cancelButton: 'No',
                },
            });
            confirmDialog_1.afterClosed().subscribe(function (answer) {
                if (answer) {
                    var accountingDocumentStatusToDeleted = new _shared_entities_accounting_document_status_deleted_entity__WEBPACK_IMPORTED_MODULE_19__["AccountingDocumentStatusToDeletedCommand"]();
                    var accountingDocuments = [];
                    var accountingDocumentElement = new _shared_entities_accounting_document_status_entity__WEBPACK_IMPORTED_MODULE_20__["AccountingDocumentStatus"]();
                    accountingDocumentElement.accountingId = _this.accountingDocumentData.accountingId;
                    accountingDocumentElement.documentType = _this.accountingDocumentData.transactionDocumentTypeId;
                    accountingDocumentElement.statusId = _this.accountingDocumentData.statusId;
                    accountingDocuments.push(accountingDocumentElement);
                    accountingDocumentStatusToDeleted.accountingDocuments = accountingDocuments;
                    _this.preaccountingService.deleteAccountingDocument(accountingDocumentStatusToDeleted).subscribe(function () {
                        _this.snackbarService.informationSnackBar('Accounting document deleted successfully');
                    });
                    _this.router.navigate(['/' + _this.urlManagementService.getCurrentCompanyId() + '/financial/posting/management']);
                }
                else {
                    confirmDialog_1.close();
                }
            });
        }
        else {
            this.snackbarService.informationSnackBar('Not allowed. Invoices/cash cannot be deleted');
        }
    };
    AccountingDocumentInformationComponent.prototype.toggleAuthorizeButton = function () {
        this.isAuthorizedControlenabled = !this.isAuthorizedControlenabled;
    };
    AccountingDocumentInformationComponent.prototype.onToInterfaceButtonClicked = function () {
        this.isToInterfaceControlenabled = this.interfaceCtrl.value ? true : false;
    };
    AccountingDocumentInformationComponent.prototype.onCancelButtonClicked = function () {
        var _this = this;
        this.isSave = true;
        if (!this.isViewMode) {
            var confirmDiscardDialog = this.dialog.open(_shared_components_confirmation_dialog_confirmation_dialog_component__WEBPACK_IMPORTED_MODULE_16__["ConfirmationDialogComponent"], {
                data: {
                    title: 'Discard Changes',
                    text: 'You have some modification pending. Close and lose changes?',
                    okButton: 'Ok',
                    cancelButton: 'Cancel',
                },
            });
            confirmDiscardDialog.afterClosed().subscribe(function (answer) {
                if (answer) {
                    _this.router.navigate(['/' + _this.urlManagementService.getCurrentCompanyId() + '/financial/posting/management']);
                }
            });
        }
        else {
            this.router.navigate(['/' + this.urlManagementService.getCurrentCompanyId() + '/financial/posting/management']);
        }
    };
    AccountingDocumentInformationComponent.prototype.ngOnDestroy = function () {
        var _this = this;
        this.stopLockRefresh();
        this.subscriptions.forEach(function (subscription) {
            subscription.unsubscribe();
        });
        this.lockService.cleanSessionLocks().pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_7__["takeUntil"])(this.destroy$)).subscribe(function () {
            _this.destroy$.next();
            _this.destroy$.complete();
        });
    };
    AccountingDocumentInformationComponent.prototype.requiredCell = function (params) {
        if ((!params.value || params.value === '') && !this.isViewMode && this.isAccOrJournalType) {
            if (params.colDef.colId === 'narrative' || params.colDef.colId === 'costCenter') {
                if (this.isRequired(params.colDef.colId)) {
                    return '<div class=\'document-cell-value-required\'>Required*</div>';
                }
            }
            else {
                return '<div class=\'document-cell-value-required\'>Required*</div>';
            }
        }
        if (params.colDef.colId === 'accountLineTypeId') {
            if (params.value && typeof params.value !== 'string') {
                var value = this.filteredAccountLineType.find(function (accountLine) { return accountLine.accountLineTypeId === params.value; });
                params.setValue(value ? value.accountLineTypeCode : null);
            }
            return params.value;
        }
        return params.value;
    };
    AccountingDocumentInformationComponent.prototype.requiredCellForCostAmount = function (params) {
        if ((!params.value || params.value === '') && !this.isViewMode && this.isAccOrJournalType) {
            return '<div class=\'document-cell-value-required\'>Required*</div>';
        }
        if (params.colDef.colId === 'accountLineTypeId') {
            if (params.value && typeof params.value !== 'string') {
                var value = this.filteredAccountLineType.find(function (accountLine) { return accountLine.accountLineTypeId === params.value; });
                params.setValue(value ? value.accountLineTypeCode : null);
            }
            return params.value;
        }
        params.value = (this.decimalFormatter(params.value, this.decimalOptionValue, this.amountFormat));
        return params.value;
    };
    AccountingDocumentInformationComponent.prototype.decimalFormatter = function (input, decimaloption, format) {
        var formattedInput = new Intl.NumberFormat(format, { minimumFractionDigits: 2, maximumFractionDigits: decimaloption }).format(input);
        return formattedInput.toLocaleString();
    };
    AccountingDocumentInformationComponent.prototype.onContractSelected = function (params) {
        if (params.newValue && params.oldValue !== params.newValue) {
            var selectedNominalAccount = this.filteredContracts.find(function (contract) { return contract.contractLabel.toUpperCase() === params.newValue.toUpperCase(); });
            if (selectedNominalAccount) {
                this.snackbarService.throwErrorSnackBar('Not allowed : Contract reference does not exist');
                params.node.setDataValue('sectionId', '');
            }
            else {
                params.node.setDataValue('departmentId', selectedNominalAccount.departmentDescription);
                params.node.setDataValue('commodityId', selectedNominalAccount.commodity1);
                params.node.setDataValue('charterId', selectedNominalAccount.charterReference);
            }
        }
    };
    AccountingDocumentInformationComponent.prototype.onNominalAccountSelected = function (params) {
        if (params.newValue === '' || (params.newValue && params.oldValue !== params.newValue)) {
            this.nominalAccountFound = null;
            var nominalAccountSelected = this.filteredNominalAccountList.find(function (nominalAccount) { return nominalAccount.accountNumber.toUpperCase() === params.newValue.toUpperCase(); });
            if (nominalAccountSelected) {
                this.snackbarService.throwErrorSnackBar('Not allowed : Nominal Account does not exist');
                params.node.setDataValue('accountReference', this.requiredString);
                this.nominalAccountFound = null;
            }
            else {
                this.nominalAccountFound = nominalAccountSelected;
            }
        }
        if (!this.isViewMode && this.isMtmSelected && params.data.accountReference) {
            var nominalAccountSelected = this.filteredNominalAccountList.find(function (nominalAccount) { return nominalAccount.accountNumber
                === params.data.accountReference; });
            if (nominalAccountSelected) {
                if (nominalAccountSelected && nominalAccountSelected.clientAccountMandatory === 1) {
                    params.node.setDataValue('accountLineTypeId', _shared_enums_account_line_type_enum__WEBPACK_IMPORTED_MODULE_24__["AccountLineTypes"].Bank);
                }
                else {
                    params.node.setDataValue('accountLineTypeId', _shared_enums_account_line_type_enum__WEBPACK_IMPORTED_MODULE_24__["AccountLineTypes"].Ledger);
                }
            }
        }
    };
    AccountingDocumentInformationComponent.prototype.onClientAccountCodeSelected = function (params) {
        if (params.newValue && params.oldValue !== params.newValue && params.newValue !== this.requiredString) {
            var selectedClientAccount = this.filteredCounterpartyList.filter(function (clientAccount) { return clientAccount.counterpartyCode.toUpperCase() === params.newValue.toUpperCase(); });
            if (selectedClientAccount.length === 0) {
                this.snackbarService.throwErrorSnackBar('Not allowed : ' + params.colDef.headerName + ' does not exist');
                params.node.setDataValue('associatedAccountCode', '');
            }
        }
    };
    AccountingDocumentInformationComponent.prototype.onClientAccountIdSelected = function (params) {
        if (params.newValue && params.oldValue !== params.newValue && params.newValue !== this.requiredString) {
            var selectedClientAccount = this.filteredCounterpartyList.filter(function (clientAccount) { return clientAccount.counterpartyID === params.newValue; });
            if (selectedClientAccount.length === 0) {
                this.snackbarService.throwErrorSnackBar('Not allowed : ' + params.colDef.headerName + ' does not exist');
                params.node.setDataValue('clientAccountId', params.oldValue);
            }
        }
    };
    AccountingDocumentInformationComponent.prototype.onCostTypeSelected = function (params) {
        if (params.newValue === '' || (params.newValue && params.oldValue !== params.newValue)) {
            var selectedCostType = this.filteredCostTypeList.filter(function (costType) { return costType.costTypeId === params.newValue; });
            if (selectedCostType.length === 0) {
                this.snackbarService.throwErrorSnackBar('Not allowed : Cost Type does not exist');
                params.node.setDataValue('costTypeId', this.requiredString);
            }
        }
    };
    AccountingDocumentInformationComponent.prototype.onAccountLineTypeSelected = function (params) {
        if (params.newValue === '' || (params.newValue && params.oldValue !== params.newValue)) {
            var selectedAccountLineType = this.filteredAccountLineType.filter(function (accountLineType) { return accountLineType.accountLineTypeId === params.newValue; });
            if (selectedAccountLineType.length === 0) {
                this.snackbarService.throwErrorSnackBar('Not allowed : Account Line Type does not exist');
                params.node.setDataValue('accountLineTypeId', this.requiredString);
            }
        }
    };
    AccountingDocumentInformationComponent.prototype.onDepartmentSelected = function (params) {
        if (params.newValue === '' || (params.newValue && params.oldValue !== params.newValue)) {
            var selectedDepartment = this.filteredDepartmentList.filter(function (department) { return department.departmentId === params.newValue; });
            if (selectedDepartment.length === 0) {
                this.snackbarService.throwErrorSnackBar('Not allowed : Department does not exist');
                params.node.setDataValue('departmentId', this.requiredString);
            }
        }
    };
    AccountingDocumentInformationComponent.prototype.onCommoditySelected = function (params) {
        if (params.newValue && params.oldValue !== params.newValue) {
            var selectedCommodity = this.filteredCommodityList.filter(function (commodity) { return commodity.commodityId === params.newValue; });
            if (selectedCommodity.length === 0) {
                this.snackbarService.throwErrorSnackBar('Not allowed : Commodity does not exist');
                params.node.setDataValue('commodityId', null);
            }
        }
    };
    AccountingDocumentInformationComponent.prototype.onCharterSelected = function (params) {
        if (params.newValue && params.oldValue !== params.newValue) {
            var selectedCharter = this.filteredCharter.filter(function (charter) { return charter.charterId === params.newValue; });
            if (selectedCharter.length === 0) {
                this.snackbarService.throwErrorSnackBar('Not allowed : Charter does not exist');
                params.node.setDataValue('charterId', null);
            }
        }
    };
    AccountingDocumentInformationComponent.prototype.onDocumentSelected = function (params) {
        if (params.newValue && params.oldValue !== params.newValue) {
            var selectedNominalAccount = this.filteredDocuments.filter(function (document) { return document.docRef.toUpperCase() === params.newValue.toUpperCase(); });
            if (selectedNominalAccount.length === 0) {
                this.snackbarService.throwErrorSnackBar('Not allowed : Document reference does not exist');
                params.node.setDataValue('SecondaryDocumentReference', '');
            }
        }
    };
    AccountingDocumentInformationComponent.prototype.onCellValueChanged = function (params) {
        var _this = this;
        this.amount = 0;
        this.statutoryAmount = 0;
        this.functionalAmount = 0;
        if (params.oldValue !== params.newValue) {
            params.node.data.isDirty = true;
            this.agGridColumnApi.autoSizeAllColumns();
            if (params.colDef) {
                var columnChanged = params.colDef.field;
                if (columnChanged === this.amountColumn || columnChanged === this.statutoryCurrencyColumn
                    || columnChanged === this.functionalCurrencyColumn) {
                    this.amount = 0;
                    this.agGridApi.forEachNode(function (rownode) {
                        if (rownode.data.amount === 0) {
                            rownode.data.amount = null;
                        }
                        if (rownode.data.amount || rownode.data.statutoryCurrency || rownode.data.functionalCurrency) {
                            _this.amount = Math.round((_this.amount + Number(rownode.data.amount)) * 100) / 100;
                            if (_this.isDocumentStatusHeld) {
                                _this.functionalAmount = Math.round((_this.functionalAmount + Number(rownode.data.functionalCurrency)) * 100) / 100;
                                _this.statutoryAmount = Math.round((_this.statutoryAmount + Number(rownode.data.statutoryCurrency)) * 100) / 100;
                            }
                        }
                    });
                    if (Number(params.newValue) === 0) {
                        this.snackbarService.throwErrorSnackBar(params.colDef.headerName + ' cannot be zero');
                    }
                }
                else if (columnChanged === this.nominalAccount) {
                    if (this.nominalAccountFound && this.nominalAccountFound.clientAccountMandatory === 1) {
                        if (params.data && !params.data.clientAccountId) {
                            params.node.setDataValue('clientAccountId', this.requiredString);
                        }
                    }
                }
                if (this.amount !== 0) {
                    this.snackbarService.throwErrorSnackBar('Not allowed : Sum of amount should be zero');
                }
                if (this.statutoryAmount !== 0) {
                    this.snackbarService.throwErrorSnackBar('Not allowed : Sum of Statutory currency should be zero');
                }
                if (this.functionalAmount !== 0) {
                    this.snackbarService.throwErrorSnackBar('Not allowed : Sum of Functional Currency should be zero');
                }
            }
        }
    };
    AccountingDocumentInformationComponent.prototype.isRowDirty = function (rowData) {
        var _this = this;
        var isRowDataValid = false;
        this.columnDefs.forEach(function (column) {
            if (!isRowDataValid) {
                isRowDataValid = _this.validateEmpty(column.colId, rowData);
            }
        });
        return isRowDataValid;
    };
    AccountingDocumentInformationComponent.prototype.getRequiredColumn = function () {
        var item = [];
        item = this.accountCreationConfiguration.filter(function (x) { return x.isMandatory; });
        return item;
    };
    AccountingDocumentInformationComponent.prototype.validateGridData = function () {
        var _this = this;
        var errorMessage = '';
        var isRowDataValid;
        this.agGridApi.forEachNode(function (rowData) {
            if (rowData.data.isDirty || _this.isRowDirty(rowData)) {
                isRowDataValid = false;
                if (!rowData.data[_this.accountingDocumentId]) {
                    isRowDataValid = true;
                    var addNewRowCheck_1 = true;
                    var columnConfiguration = _this.getRequiredColumn();
                    columnConfiguration.forEach(function (column) {
                        if (isRowDataValid) {
                            var isValidateEmpty = false;
                            isValidateEmpty = _this.validateEmpty(column.id, rowData);
                            if (!isValidateEmpty) {
                                addNewRowCheck_1 = isValidateEmpty;
                            }
                            isRowDataValid = isValidateEmpty;
                        }
                    });
                    isRowDataValid = !addNewRowCheck_1;
                }
                else {
                    var columnConfiguration = _this.getRequiredColumn();
                    columnConfiguration.forEach(function (column) {
                        if (!isRowDataValid) {
                            isRowDataValid = _this.validateEmpty(column.id, rowData);
                        }
                    });
                }
                if ((_this.isAccrualDocument || _this.isMtmSelected) && (!rowData.data.accrualNumber)) {
                    errorMessage = 'Accrual numbers are mandatory';
                }
                else if (_this.amount !== 0) {
                    errorMessage = 'Total Amount should be zero';
                }
                else if (_this.statutoryAmount !== 0) {
                    errorMessage = 'Total Statutory Currency should be zero';
                }
                else if (_this.functionalAmount !== 0) {
                    errorMessage = 'Total Functional Currency should be zero';
                }
                else if (isRowDataValid) {
                    errorMessage = 'Grid data is invalid. Please resolve the errors.';
                }
            }
        });
        return errorMessage;
    };
    AccountingDocumentInformationComponent.prototype.getGridData = function () {
        var _this = this;
        var accountingDocumentLines = new Array();
        var isRowDataValid;
        this.agGridApi.forEachNode(function (rowData) {
            if (rowData.data.isDirty || _this.isRowDirty(rowData)) {
                isRowDataValid = false;
                if (!rowData.data[_this.accountingDocumentId]) {
                    isRowDataValid = true;
                    var addNewRowCheck_2 = true;
                    var columnConfiguration = _this.getRequiredColumn();
                    columnConfiguration.forEach(function (column) {
                        if (isRowDataValid) {
                            var isValidateEmpty = false;
                            isValidateEmpty = _this.validateEmpty(column.id, rowData);
                            if (!isValidateEmpty) {
                                addNewRowCheck_2 = isValidateEmpty;
                            }
                            isRowDataValid = isValidateEmpty;
                        }
                    });
                    isRowDataValid = !addNewRowCheck_2;
                }
                else {
                    var columnConfiguration = _this.getRequiredColumn();
                    columnConfiguration.forEach(function (column) {
                        if (!isRowDataValid) {
                            isRowDataValid = _this.validateEmpty(column.id, rowData);
                        }
                    });
                }
                if (isRowDataValid) {
                    var accountingDocumentLineElement = new _shared_entities_accounting_document_line_entity__WEBPACK_IMPORTED_MODULE_18__["AccountingDocumentLine"]();
                    accountingDocumentLineElement.accountingDocumentLineId = rowData.data.accountingDocumentLineId;
                    accountingDocumentLineElement.accountReferenceId = null;
                    if (rowData.data.accountReference) {
                        var account = _this.filteredNominalAccountList.find(function (nominal) {
                            return nominal.accountNumber.toUpperCase() === rowData.data.accountReference.toUpperCase();
                        });
                        accountingDocumentLineElement.accountReferenceId = account ? account.nominalAccountId : null;
                    }
                    accountingDocumentLineElement.clientAccountId = rowData.data.clientAccountId;
                    accountingDocumentLineElement.associatedAccountId = null;
                    if (rowData.data.associatedAccountCode) {
                        var counterparty = _this.filteredCounterpartyList.find(function (client) {
                            return client.counterpartyCode.toUpperCase() === rowData.data.associatedAccountCode.toUpperCase();
                        });
                        accountingDocumentLineElement.associatedAccountId = counterparty ? counterparty.counterpartyID : null;
                    }
                    accountingDocumentLineElement.accountLineTypeId = rowData.data.accountLineTypeId;
                    accountingDocumentLineElement.costTypeId = rowData.data.costTypeId;
                    accountingDocumentLineElement.amount = rowData.data.amount;
                    accountingDocumentLineElement.statutoryCurrency = rowData.data.statutoryCurrency;
                    accountingDocumentLineElement.functionalCurrency = rowData.data.functionalCurrency;
                    accountingDocumentLineElement.narrative = rowData.data.narrative;
                    accountingDocumentLineElement.departmentId = rowData.data.departmentId;
                    accountingDocumentLineElement.provinceId = rowData.data.provinceId;
                    accountingDocumentLineElement.settlementCurrency = rowData.data.settlementCurrency;
                    accountingDocumentLineElement.dealNumber = rowData.data.dealNumber;
                    accountingDocumentLineElement.secondaryDocumentReference = rowData.data.secondaryDocumentReference;
                    accountingDocumentLineElement.clientReference = rowData.data.extDocReference;
                    if (typeof rowData.data.sectionReference === 'number') {
                        accountingDocumentLineElement.sectionId = rowData.data.sectionId;
                    }
                    else {
                        accountingDocumentLineElement.sectionId = (rowData.data.sectionReference === null ||
                            rowData.data.sectionReference.trim() === '') ? null :
                            _this.filteredContracts.find(function (contract) {
                                return contract.contractLabel.toUpperCase() === rowData.data.sectionReference.toUpperCase();
                            }).sectionId;
                    }
                    accountingDocumentLineElement.commodityId = rowData.data.commodityId;
                    accountingDocumentLineElement.quantity = rowData.data.quantity;
                    accountingDocumentLineElement.charterId = rowData.data.charterId;
                    accountingDocumentLineElement.costCenter = rowData.data.costCenter;
                    accountingDocumentLineElement.paymentTermId = rowData.data.paymentTermId;
                    accountingDocumentLineElement.vatId = rowData.data.vatId;
                    accountingDocumentLineElement.accrualNumber = rowData.data.accrualNumber;
                    accountingDocumentLineElement.journalLineId = rowData.data.journalLineId;
                    accountingDocumentLines.push(accountingDocumentLineElement);
                }
                else {
                    _this.agGridApi.updateRowData({ remove: [rowData.data] });
                }
            }
            else {
                _this.agGridApi.updateRowData({ remove: [rowData.data] });
            }
        });
        return accountingDocumentLines;
    };
    AccountingDocumentInformationComponent.prototype.isRequired = function (params) {
        if (this.accountCreationConfiguration.length > 0) {
            var result = this.accountCreationConfiguration[this.accountCreationConfiguration.findIndex(function (x) { return x.id === params; })];
            if (result) {
                return result.isMandatory;
            }
        }
        return false;
    };
    AccountingDocumentInformationComponent.prototype.isEditable = function (params) {
        if (this.accountCreationConfiguration.length > 0) {
            var result = this.accountCreationConfiguration[this.accountCreationConfiguration.findIndex(function (x) { return x.id === params; })];
            if (result) {
                return result.isEditable;
            }
        }
        return false;
    };
    AccountingDocumentInformationComponent.prototype.setValidators = function () {
        this.currencyCtrl.setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].compose([
            Object(_shared_directives_autocomplete_dropdown_directive__WEBPACK_IMPORTED_MODULE_17__["inDropdownListValidator"])(this.masterdata.currencies, Object(_shared_services_util_service__WEBPACK_IMPORTED_MODULE_44__["nameof"])('currencyCode')),
        ]));
        this.currencyCtrl.setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]));
        this.accPeriodFormCtrl.setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]));
        this.docDateFormCtrl.setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]));
        if (this.isRequired('valueDate')) {
            this.valueDateFormCtrl.setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]));
        }
    };
    AccountingDocumentInformationComponent.prototype.isValueDateBeforeDocumentDate = function () {
        var result = Object(_shared_validators_date_validators_validator__WEBPACK_IMPORTED_MODULE_45__["isDateTwoBeforeDateOne"])(this.docDateFormCtrl.value, this.valueDateFormCtrl.value);
        if (result) {
            return result;
        }
    };
    AccountingDocumentInformationComponent.prototype.accountPeriodChanged = function (event) {
        var lastDateOfMonth = this.companyManager.getCurrentCompanyDate();
        // Acounting Period Rules for Regular Journal
        if (!this.isAccrualDocument) {
            if (this.checkIfUserHasRequiredPrivileges(this.postOpClosedPrivilege)) {
                if ((event.year() === this.lastMonthClosed.getFullYear() && event.month() <= this.lastMonthClosed.getMonth())
                    || (event.year() < this.lastMonthClosed.getFullYear())) {
                    this.snackbarService.informationSnackBar('Not allowed: Last closed accounting period is ' +
                        this.monthNameForlastMonthClosed + ' and Last month closed for operation is ' +
                        this.monthNameForoperationsLastMonthClosed + '; please check the accounting period');
                    this.accPeriodFormCtrl.patchValue('');
                }
                else if (event.year() === this.operationsLastMonthClosed.getFullYear() &&
                    event.month() === this.operationsLastMonthClosed.getMonth()) {
                    this.snackbarService.informationSnackBar('Please check document date and accounting period');
                }
                else if ((!this.checkIfBetweenLastClosedAndOperations(event)) &&
                    (event.year() === this.operationsLastMonthClosed.getFullYear() &&
                        event.month() < this.operationsLastMonthClosed.getMonth())) {
                    this.snackbarService.throwErrorSnackBar('Not allowed: Last closed accounting period is ' +
                        this.monthNameForlastMonthClosed + ' and Last month closed for operation is ' +
                        this.monthNameForoperationsLastMonthClosed
                        + '; The document date and the accounting period must be in an open month');
                    this.accPeriodFormCtrl.patchValue('');
                }
            }
            else {
                if ((event.year() === this.operationsLastMonthClosed.getFullYear() &&
                    event.month() === this.operationsLastMonthClosed.getMonth()) ||
                    (event.year() === this.lastMonthClosed.getFullYear() && event.month() <= this.lastMonthClosed.getMonth())
                    || (event.year() < this.lastMonthClosed.getFullYear())) {
                    this.snackbarService.informationSnackBar('Not allowed: Last closed accounting period is ' +
                        this.monthNameForlastMonthClosed + ' and Last month closed for operation is ' +
                        this.monthNameForoperationsLastMonthClosed + '; please check the accounting period');
                    this.accPeriodFormCtrl.patchValue('');
                }
                else if ((!this.checkIfBetweenLastClosedAndOperations(event)) &&
                    (event.year() === this.operationsLastMonthClosed.getFullYear() &&
                        event.month() < this.operationsLastMonthClosed.getMonth())) {
                    this.snackbarService.throwErrorSnackBar('Not allowed: Last closed accounting period is ' +
                        this.monthNameForlastMonthClosed + ' and Last month closed for operation is ' +
                        this.monthNameForoperationsLastMonthClosed
                        + '; The document date and the accounting period must be in an open month');
                    this.accPeriodFormCtrl.patchValue('');
                }
            } // Acounting Period Rules for Accrual
        }
        else {
            var isLessOrEqualToLastMonthClosed = (event.year() === this.lastMonthClosed.getFullYear()
                && event.month() <= this.lastMonthClosed.getMonth())
                || event.year() < this.lastMonthClosed.getFullYear();
            if (isLessOrEqualToLastMonthClosed) {
                this.snackbarService.throwErrorSnackBar('Not allowed: Last closed accounting period is ' +
                    this.monthNameForlastMonthClosed + ' and Last month closed for operation is ' +
                    this.monthNameForoperationsLastMonthClosed + '; The document date and the accounting period must be in an open month');
                this.accPeriodFormCtrl.patchValue('');
            }
            else {
                if (this.checkIfUserHasRequiredPrivileges(this.postOpClosedPrivilege)) {
                    if (!((event.year() === lastDateOfMonth.year() && event.month() === lastDateOfMonth.month()) ||
                        (event.year() === this.operationsLastMonthClosed.getFullYear() &&
                            event.month() === this.operationsLastMonthClosed.getMonth()) ||
                        (this.checkIfBetweenLastClosedAndOperations(event)))) {
                        this.snackbarService.throwErrorSnackBar('Not allowed: Last closed accounting period is ' +
                            this.monthNameForlastMonthClosed + ' and Last month closed for operation is ' +
                            this.monthNameForoperationsLastMonthClosed
                            + '; The document date and the accounting period must be in an open month');
                        this.accPeriodFormCtrl.patchValue('');
                    }
                }
                else if (!(this.checkIfUserHasRequiredPrivileges(this.postOpClosedPrivilege)) &&
                    event.year() === this.operationsLastMonthClosed.getFullYear() &&
                    event.month() === this.operationsLastMonthClosed.getMonth() ||
                    (event.year() === this.lastMonthClosed.getFullYear() && event.month() <= this.lastMonthClosed.getMonth())
                    || (event.year() < this.lastMonthClosed.getFullYear())) {
                    this.snackbarService.throwErrorSnackBar('Not allowed: Last closed accounting period is ' +
                        this.monthNameForlastMonthClosed + ' and Last month closed for operation is ' +
                        this.monthNameForoperationsLastMonthClosed + '; The document date and the accounting period must be in an open month');
                    this.accPeriodFormCtrl.patchValue('');
                }
                else if (!this.checkIfBetweenLastClosedAndOperations(event) &&
                    (event.year() === this.operationsLastMonthClosed.getFullYear() &&
                        event.month() < this.operationsLastMonthClosed.getMonth())) {
                    this.snackbarService.throwErrorSnackBar('Not allowed: Last closed accounting period is ' +
                        this.monthNameForlastMonthClosed + ' and Last month closed for operation is ' +
                        this.monthNameForoperationsLastMonthClosed + '; The document date and the accounting period must be in an open month');
                    this.accPeriodFormCtrl.patchValue('');
                }
            }
        }
    };
    AccountingDocumentInformationComponent.prototype.checkIfUserHasRequiredPrivileges = function (userCompanyPrivilege) {
        if (this.authorizationService.isUserAllowedForCompany(this.company)) {
            var userPermissionLevel = this.authorizationService.getPermissionLevel(this.company, userCompanyPrivilege.privilegeName, userCompanyPrivilege.privilegeParentLevelOne, userCompanyPrivilege.privilegeParentLevelTwo);
            if (userPermissionLevel === userCompanyPrivilege.permission) {
                return true;
            }
            return false;
        }
    };
    AccountingDocumentInformationComponent.prototype.checkIfBetweenLastClosedAndOperations = function (date) {
        var matchingMonthFound = false;
        for (var i = 1; i <= this.accountingSetupModel.numberOfOpenPeriod; i++) {
            if (!matchingMonthFound) {
                if (date.year() === this.lastMonthClosed.getFullYear() &&
                    this.lastMonthClosed.getMonth() + i < 12 && date.month() === this.lastMonthClosed.getMonth() + i) {
                    matchingMonthFound = true;
                }
                else if (date.year() === this.lastMonthClosed.getFullYear() + 1 &&
                    this.lastMonthClosed.getMonth() + i >= 12 && date.month() === this.lastMonthClosed.getMonth() + i - 12) {
                    matchingMonthFound = true;
                }
            }
        }
        return matchingMonthFound;
    };
    AccountingDocumentInformationComponent.prototype.documentDateChanged = function (event) {
        var isAccountingAndOperationMonthSame = this.operationsLastMonthClosed.getFullYear() === this.lastMonthClosed.getFullYear()
            && this.operationsLastMonthClosed.getMonth() === this.lastMonthClosed.getMonth();
        // Regular Journal Rules
        if (!this.isAccrualDocument) {
            // Date within a closed period
            if ((event.value.year() === this.lastMonthClosed.getFullYear() && event.value.month() <= this.lastMonthClosed.getMonth())
                || (event.value.year() < this.lastMonthClosed.getFullYear())) {
                this.snackbarService.informationSnackBar('Last closed accounting period is ' +
                    this.monthNameForlastMonthClosed + ' and Last month closed for operation is ' +
                    this.monthNameForoperationsLastMonthClosed + '; please check the accounting period');
                if (this.checkIfUserHasRequiredPrivileges(this.postOpClosedPrivilege)) {
                    if (isAccountingAndOperationMonthSame) {
                        this.accPeriodFormCtrl.patchValue(moment(new Date(new Date(this.operationsLastMonthClosed).
                            setMonth(this.operationsLastMonthClosed.getMonth() + 1))));
                    }
                    else {
                        this.accPeriodFormCtrl.patchValue(moment(this.accountingSetupModel.lastMonthClosedForOperation));
                    }
                }
                else {
                    this.accPeriodFormCtrl.patchValue(this.companyManager.getCurrentCompanyDate());
                } // Date within the last month closed for operation
            }
            else if (event.value.year() === this.operationsLastMonthClosed.getFullYear() &&
                event.value.month() === this.operationsLastMonthClosed.getMonth()) {
                if (this.checkIfUserHasRequiredPrivileges(this.postOpClosedPrivilege)) {
                    this.accPeriodFormCtrl.patchValue(moment(this.accountingSetupModel.lastMonthClosedForOperation));
                }
                else {
                    this.snackbarService.informationSnackBar('Last closed accounting period is ' +
                        this.monthNameForlastMonthClosed + ' and Last month closed for operation is ' +
                        this.monthNameForoperationsLastMonthClosed + ' ; please check the accounting period');
                    this.accPeriodFormCtrl.patchValue(moment(new Date(new Date(this.operationsLastMonthClosed).
                        setMonth(this.operationsLastMonthClosed.getMonth() + 1))));
                } // Date between last closed accounting period – last month closed for operation
            }
            else if (this.checkIfBetweenLastClosedAndOperations(event.value)) {
                if (this.checkIfUserHasRequiredPrivileges(this.postOpClosedPrivilege)) {
                    this.accPeriodFormCtrl.patchValue(event.value);
                }
                else {
                    this.accPeriodFormCtrl.patchValue(moment(new Date(new Date(this.operationsLastMonthClosed).
                        setMonth(this.operationsLastMonthClosed.getMonth() + 1))));
                }
            }
            else if (!this.checkIfBetweenLastClosedAndOperations(event.value) &&
                event.value.year() === this.operationsLastMonthClosed.getFullYear() &&
                event.value.month() < this.operationsLastMonthClosed.getMonth()) {
                this.snackbarService.throwErrorSnackBar('Last closed accounting period is ' +
                    this.monthNameForlastMonthClosed + ' and Last month closed for operation is ' +
                    this.monthNameForoperationsLastMonthClosed + '; The document date and the accounting period must be in an open month');
            } // Accrual Document date Rules
        }
        else {
            var todayDate = this.companyManager.getCurrentCompanyDate();
            if ((event.value.year() === this.lastMonthClosed.getFullYear() && event.value.month() <= this.lastMonthClosed.getMonth())
                || (event.value.year() < this.lastMonthClosed.getFullYear())) {
                this.snackbarService.informationSnackBar('Document date cannot be in a closed period');
                this.docDateFormCtrl.patchValue('');
            }
            else if ((event.value <= this.companyManager.getCurrentCompanyDate() || event.value.month() === todayDate.month()) &&
                !(event.value.date() === new Date(event.value.year(), event.value.month() + 1, 0).getDate())) {
                this.snackbarService.throwErrorSnackBar('Document date must be a last month day');
                this.docDateFormCtrl.patchValue('');
            }
            else if (event.value.year() === todayDate.year() && event.value.month() > todayDate.month()) {
                this.snackbarService.throwErrorSnackBar('Document date cannot be in the future');
                this.docDateFormCtrl.patchValue('');
            }
            else if (this.checkIfUserHasRequiredPrivileges(this.postOpClosedPrivilege) &&
                this.checkIfBetweenLastClosedAndOperations(event.value)) {
                this.snackbarService.informationSnackBar('Last closed accounting period is ' +
                    this.monthNameForlastMonthClosed + ' and Last month closed for operation is ' +
                    this.monthNameForoperationsLastMonthClosed + '; please check the accounting period');
                this.accPeriodFormCtrl.patchValue(event.value);
            }
            else if (!this.checkIfUserHasRequiredPrivileges(this.postOpClosedPrivilege) &&
                event.value.year() === this.operationsLastMonthClosed.getFullYear() &&
                event.value.month() === this.operationsLastMonthClosed.getMonth()) {
                this.snackbarService.informationSnackBar('Last closed accounting period is ' +
                    this.monthNameForlastMonthClosed + ' and Last month closed for operation is ' +
                    this.monthNameForoperationsLastMonthClosed + 'The document date and the accounting period must be in an open month');
                this.docDateFormCtrl.patchValue('');
            }
            else if (!this.checkIfBetweenLastClosedAndOperations(event.value) &&
                event.value.year() === this.operationsLastMonthClosed.getFullYear() &&
                event.value.month() < this.operationsLastMonthClosed.getMonth()) {
                this.docDateFormCtrl.patchValue('');
                this.accPeriodFormCtrl.patchValue('');
                this.snackbarService.throwErrorSnackBar('Not allowed: Last closed accounting period is ' +
                    this.monthNameForlastMonthClosed + ' and Last month closed for operation is ' +
                    this.monthNameForoperationsLastMonthClosed + '; The document date and the accounting period must be in an open month');
            }
            else {
                this.accPeriodFormCtrl.patchValue(event.value);
            }
        }
    };
    AccountingDocumentInformationComponent.prototype.checkAccrualNumber = function () {
        var _this = this;
        if (!this.isAuthorizedControlenabled) {
            var confirmDialog = this.dialog.open(_shared_components_confirmation_dialog_confirmation_dialog_component__WEBPACK_IMPORTED_MODULE_16__["ConfirmationDialogComponent"], {
                data: {
                    title: 'Warning Message',
                    text: 'The document is not authorized for posting : Continue with Save ?',
                    okButton: 'Yes',
                    cancelButton: 'No',
                },
            });
            confirmDialog.afterClosed().subscribe(function (answer) {
                if (answer) {
                    _this.afterValidationChecksPassed();
                }
                else if (!answer && (_this.isCashDocumentType || _this.isInvoiceDocumentType)) {
                    _this.disableControls();
                }
            });
        }
        else {
            var groupByAccrual_1 = [];
            var isValid_1 = true;
            this.agGridApi.forEachNode(function (document) {
                groupByAccrual_1[document.data.accrualNumber] = groupByAccrual_1[document.data.accrualNumber] || [];
                groupByAccrual_1[document.data.accrualNumber].push({ amount: document.data.amount });
            });
            groupByAccrual_1.forEach(function (array) {
                if (isValid_1) {
                    var totalSubAmount_1 = 0;
                    array.forEach(function (element) { totalSubAmount_1 = totalSubAmount_1 + element.amount; });
                    if (totalSubAmount_1 !== 0) {
                        isValid_1 = false;
                        _this.snackbarService.throwErrorSnackBar('Accrual numbers : Invalid format. '
                            + 'Rows flagged with the same accrual numbers must be balanced (Amount=0.00)');
                    }
                }
            });
            if (isValid_1) {
                this.afterValidationChecksPassed();
            }
        }
    };
    AccountingDocumentInformationComponent.prototype.submitForm = function () {
        this.isSave = true;
        this.agGridApi.stopEditing();
        this.enableControls();
        if (this.editDocumentFormGroup.valid) {
            var errorMessage = this.validateGridData();
            if (errorMessage === '') {
                this.checkAccrualNumber();
            }
            else {
                this.snackbarService.throwErrorSnackBar(errorMessage);
            }
        }
        else {
            this.snackbarService.throwErrorSnackBar('Form is invalid. Please resolve the errors.');
        }
    };
    AccountingDocumentInformationComponent.prototype.afterValidationChecksPassed = function () {
        var _this = this;
        this.accountingDocumentData.accountingDocumentLines = this.getGridData();
        this.getValuesforControls();
        this.preaccountingService
            .updateAccoutingDocuments(this.accountingDocumentData, this.isAuthorizedControlenabled)
            .subscribe(function () {
            if (_this.isAuthorizedControlenabled) {
                _this.subscriptions.push(_this.preaccountingService.authorizeForPosting(_this.documentRefData).subscribe(function () {
                    _this.snackbarService.informationSnackBar('Accounting Document updated');
                    _this.router.navigate(['/' + _this.urlManagementService.getCurrentCompanyId()
                            + '/financial/posting/management']);
                }, function (error) {
                    console.error(error);
                }));
            }
            else {
                _this.snackbarService.informationSnackBar('Accounting Document updated');
                _this.router.navigate(['/' + _this.urlManagementService.getCurrentCompanyId() + '/financial/posting/management']);
            }
        });
    };
    AccountingDocumentInformationComponent.prototype.onExportButtonClickedAsExcel = function () {
        this.agGridOptions.api.exportDataAsExcel();
    };
    AccountingDocumentInformationComponent.prototype.onExportButtonClickedAsCSV = function () {
        this.agGridOptions.api.exportDataAsCsv();
    };
    AccountingDocumentInformationComponent.prototype.onLoadPreviousPageButtonClicked = function () {
        this.isSave = true;
        this.location.back();
    };
    AccountingDocumentInformationComponent.prototype.onAddAccountingLineButtonClicked = function (numberOfLines) {
        this.isSave = true;
        for (var count = 1; count <= numberOfLines; count++) {
            var newItem = new _shared_entities_accounting_document_line_entity__WEBPACK_IMPORTED_MODULE_18__["AccountingDocumentLine"]();
            newItem.clientAccountId = null;
            newItem.associatedAccountCode = null;
            newItem.secondaryDocumentReference = null;
            newItem.sectionReference = null;
            newItem.commodityId = null;
            newItem.charterId = null;
            newItem.accountReference = null;
            newItem.accountLineTypeId = null;
            newItem.costTypeId = null;
            newItem.departmentId = null;
            newItem.amount = null;
            this.agGridApi.updateRowData({ add: [newItem] });
            this.agGridColumnApi.autoSizeAllColumns();
        }
    };
    AccountingDocumentInformationComponent.prototype.handleAction = function (action, documentLine) {
        var _this = this;
        switch (action) {
            case this.editDocumentMenuActions.copyDocumentLine:
                var newManualLine = new _shared_entities_accounting_document_line_entity__WEBPACK_IMPORTED_MODULE_18__["AccountingDocumentLine"](documentLine);
                this.agGridApi.updateRowData({ add: [newManualLine] });
                this.calculateTotalAmount();
                this.snackbarService.informationSnackBar('Row added successfully at the end of the grid');
                break;
            case this.editDocumentMenuActions.deleteDocumentLine:
                var confirmDialog = this.dialog.open(_shared_components_confirmation_dialog_confirmation_dialog_component__WEBPACK_IMPORTED_MODULE_16__["ConfirmationDialogComponent"], {
                    data: {
                        title: 'Document Line Deletion',
                        text: 'Are you sure you want to delete this line?',
                        okButton: 'Delete anyway',
                        cancelButton: 'Cancel',
                    },
                });
                var confirmationDeleteSubscription = confirmDialog.afterClosed().subscribe(function (answer) {
                    if (answer) {
                        _this.agGridApi.updateRowData({ remove: [documentLine] });
                        _this.calculateTotalAmount();
                    }
                });
                this.subscriptions.push(confirmationDeleteSubscription);
                break;
            default: throw new Error('Unknown action');
        }
    };
    AccountingDocumentInformationComponent.prototype.calculateTotalAmount = function () {
        var _this = this;
        this.amount = 0;
        this.statutoryAmount = 0;
        this.functionalAmount = 0;
        this.agGridApi.forEachNode(function (rowData) {
            if (rowData.data.amount) {
                _this.amount = Math.round((_this.amount + Number(rowData.data.amount)) * 100) / 100;
            }
            if (rowData.data.statutoryCurrency && _this.isDocumentStatusHeld) {
                _this.statutoryAmount = Math.round((_this.statutoryAmount + Number(rowData.data.statutoryCurrency)) * 100) / 100;
            }
            if (rowData.data.functionalCurrency && _this.isDocumentStatusHeld) {
                _this.functionalAmount = Math.round((_this.functionalAmount + Number(rowData.data.functionalCurrency)) * 100) / 100;
            }
        });
    };
    AccountingDocumentInformationComponent.prototype.initializeStatusClass = function () {
        if (this.accountingDocumentData.statusId === _shared_enums_posting_status_enum__WEBPACK_IMPORTED_MODULE_28__["PostingStatus"].MappingError
            || this.accountingDocumentData.statusId === _shared_enums_posting_status_enum__WEBPACK_IMPORTED_MODULE_28__["PostingStatus"].Held) {
            this.statusClassApplied = 'mat-error-message-chip';
        }
        else if (this.accountingDocumentData.statusId === _shared_enums_posting_status_enum__WEBPACK_IMPORTED_MODULE_28__["PostingStatus"].Incomplete
            || this.accountingDocumentData.statusId === _shared_enums_posting_status_enum__WEBPACK_IMPORTED_MODULE_28__["PostingStatus"].Deleted) {
            this.statusClassApplied = 'mat-neutral-message-chip';
        }
        else if (this.accountingDocumentData.statusId === _shared_enums_posting_status_enum__WEBPACK_IMPORTED_MODULE_28__["PostingStatus"].Authorized) {
            this.statusClassApplied = 'mat-success status-chip';
        }
    };
    AccountingDocumentInformationComponent.prototype.validateEmpty = function (colId, rowData) {
        if (colId == "valueDate" || colId == "accountingPeriod" || colId == "paymentDocumentDate") {
            return true;
        }
        else if ((this.isAccrualDocument || this.isMtmSelected) && colId == "accrualNumber") {
            if (rowData.data[colId]
                && rowData.data[colId].toString().trim() != ''
                && rowData.data[colId].toString().trim() != 'Required*') {
                return false;
            }
        }
        else if (this.isRequired(colId) && this.isMtmSelected) {
            if (colId == 'sectionId' || (rowData.data[colId]
                && rowData.data[colId].toString().trim() != ''
                && rowData.data[colId].toString().trim() != 'Required*')) {
                return false;
            }
        }
        else if (this.isRequired(colId) && !this.isMtmSelected) {
            if ((colId == 'settlementCurrency' || colId == 'dealNumber' || colId === "accrualNumber")
                || (rowData.data[colId]
                    && rowData.data[colId].toString().trim() != ''
                    && rowData.data[colId].toString().trim() != 'Required*')) {
                return false;
            }
        }
        else if (!this.isRequired(colId)) {
            return false;
        }
        return true;
    };
    AccountingDocumentInformationComponent.prototype.displayErrorMessages = function () {
        var _this = this;
        if (this.accountingDocumentData.errorMessage) {
            var messages = this.accountingDocumentData.errorMessage.split(';');
            this.showErrorBanners = true;
            messages.forEach(function (message) {
                if (message) {
                    _this.mappingErrorMessages.push(message);
                }
            });
        }
    };
    AccountingDocumentInformationComponent.prototype.onWarningRemoveButtonClicked = function (params) {
        if (params) {
            params.currentTarget.parentElement.parentElement.remove();
        }
    };
    AccountingDocumentInformationComponent.prototype.showHideMtmColumn = function () {
        this.agGridColumnApi.setColumnVisible(this.dealNumberColumn, true);
        this.agGridColumnApi.setColumnVisible(this.settlementCurrencyColumn, true);
        this.agGridColumnApi.setColumnVisible(this.provinceColumn, true);
        this.agGridColumnApi.setColumnVisible(this.accrualNumberColumn, true);
        this.agGridColumnApi.setColumnVisible(this.clientAccountColumn, false);
        this.agGridColumnApi.setColumnVisible(this.secondaryDocumentReferenceColumn, false);
        this.agGridColumnApi.setColumnVisible(this.externalDocumentReferenceColumn, false);
        this.agGridColumnApi.setColumnVisible(this.costCenterColumn, false);
        this.initializeGridColumns();
    };
    AccountingDocumentInformationComponent.prototype.filterAccountLineTypes = function (value, options, rowData) {
        var accountLineTypeList = [];
        accountLineTypeList = options;
        if (rowData.accountReference) {
            var nominalAccountSelected = this.filteredNominalAccountList.find(function (nominalAccount) { return nominalAccount.accountNumber
                === rowData.accountReference; });
            if (nominalAccountSelected) {
                if (this.isMtmSelected) {
                    if (nominalAccountSelected && nominalAccountSelected.clientAccountMandatory === 1) {
                        accountLineTypeList = options.filter(function (accountType) {
                            return accountType.description === 'Bank';
                        });
                    }
                    else {
                        accountLineTypeList = options.filter(function (accountType) {
                            return accountType.description === 'Ledger';
                        });
                    }
                }
                else {
                    if (nominalAccountSelected && nominalAccountSelected.clientAccountMandatory === 1) {
                        accountLineTypeList = options.filter(function (accountType) {
                            return accountType.description === 'Customer' || accountType.description === 'Vendor';
                        });
                    }
                }
            }
        }
        options = accountLineTypeList;
        return options;
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('listAndSearchComponent'),
        __metadata("design:type", _shared_components_list_and_search_list_and_search_component__WEBPACK_IMPORTED_MODULE_47__["ListAndSearchComponent"])
    ], AccountingDocumentInformationComponent.prototype, "listAndSearchComponent", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["HostListener"])('window:beforeunload', ['$event']),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Object]),
        __metadata("design:returntype", void 0)
    ], AccountingDocumentInformationComponent.prototype, "unloadNotification", null);
    AccountingDocumentInformationComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'atlas-accounting-document-information-component',
            template: __webpack_require__(/*! ./accounting-document-information-component.component.html */ "./Client/app/financial/components/posting-process/posting-management/accounting-document-information-component/accounting-document-information-component.component.html"),
            styles: [__webpack_require__(/*! ./accounting-document-information-component.component.scss */ "./Client/app/financial/components/posting-process/posting-management/accounting-document-information-component/accounting-document-information-component.component.scss")],
            providers: [_shared_services_preaccounting_transaction_document_data_loader__WEBPACK_IMPORTED_MODULE_38__["TransactionDocumentDataLoader"], _shared_services_list_and_search_trade_data_loader__WEBPACK_IMPORTED_MODULE_37__["TradeDataLoader"], _shared_services_execution_charter_data_loader__WEBPACK_IMPORTED_MODULE_32__["CharterDataLoader"], _shared_services_list_and_search_fxDeal_data_loader__WEBPACK_IMPORTED_MODULE_36__["FxDealDataLoader"], _shared_services_list_and_search_posting_acoount_lines_data_loader__WEBPACK_IMPORTED_MODULE_46__["PostingAccountLinesDataLoader"]],
        }),
        __metadata("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_4__["ActivatedRoute"],
            _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"],
            _shared_services_util_service__WEBPACK_IMPORTED_MODULE_44__["UtilService"],
            _shared_services_url_management_service__WEBPACK_IMPORTED_MODULE_43__["UrlManagementService"],
            _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"],
            _shared_services_http_services_preaccounting_service__WEBPACK_IMPORTED_MODULE_35__["PreaccountingService"],
            _shared_services_snackbar_service__WEBPACK_IMPORTED_MODULE_40__["SnackbarService"],
            _angular_material__WEBPACK_IMPORTED_MODULE_3__["MatDialog"],
            _core_services_company_manager_service__WEBPACK_IMPORTED_MODULE_10__["CompanyManagerService"],
            _shared_services_list_and_search_trade_data_loader__WEBPACK_IMPORTED_MODULE_37__["TradeDataLoader"],
            _shared_services_execution_charter_data_loader__WEBPACK_IMPORTED_MODULE_32__["CharterDataLoader"],
            _core_services_authorization_service__WEBPACK_IMPORTED_MODULE_9__["AuthorizationService"],
            _angular_material__WEBPACK_IMPORTED_MODULE_3__["MatDialog"],
            _angular_common__WEBPACK_IMPORTED_MODULE_0__["Location"],
            _shared_services_preaccounting_transaction_document_data_loader__WEBPACK_IMPORTED_MODULE_38__["TransactionDocumentDataLoader"],
            _shared_services_form_configuration_provider_service__WEBPACK_IMPORTED_MODULE_33__["FormConfigurationProviderService"],
            _shared_services_ui_service__WEBPACK_IMPORTED_MODULE_42__["UiService"],
            _shared_services_list_and_search_fxDeal_data_loader__WEBPACK_IMPORTED_MODULE_36__["FxDealDataLoader"],
            _shared_services_security_service__WEBPACK_IMPORTED_MODULE_39__["SecurityService"],
            _shared_services_http_services_lock_service__WEBPACK_IMPORTED_MODULE_34__["LockService"],
            _shared_services_title_service__WEBPACK_IMPORTED_MODULE_41__["TitleService"],
            _shared_services_ag_grid_service__WEBPACK_IMPORTED_MODULE_31__["AgGridService"],
            _shared_services_http_services_form_configuration_service__WEBPACK_IMPORTED_MODULE_48__["FormConfigurationService"],
            _shared_services_list_and_search_posting_acoount_lines_data_loader__WEBPACK_IMPORTED_MODULE_46__["PostingAccountLinesDataLoader"]])
    ], AccountingDocumentInformationComponent);
    return AccountingDocumentInformationComponent;
}(_shared_components_base_form_component_base_form_component_component__WEBPACK_IMPORTED_MODULE_14__["BaseFormComponent"]));



/***/ }),

/***/ "./Client/app/financial/components/posting-process/posting-management/posting-management.component.html":
/*!**************************************************************************************************************!*\
  !*** ./Client/app/financial/components/posting-process/posting-management/posting-management.component.html ***!
  \**************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"main-container\">\r\n    <mat-card>\r\n        <atlas-filter-set-display (filtersChanged)=\"onFilterSetDetailsChange($event)\"\r\n                                  [columnConfiguration]=\"columnConfiguration\"\r\n                                  [gridCode]=\"gridCode\"\r\n                                  [company]=\"company\">\r\n        </atlas-filter-set-display>\r\n    </mat-card>\r\n    <mat-card class=\"mat-elevation-z1 padding-small\">\r\n        <div fxLayout=\"row\"\r\n             class=\" table-title atlas-grid-card-header\">\r\n            <h2 class=\"atlas-grid-card-title\">\r\n                {{dataLength}} {{\r\n dataLength > 1 ? 'Accounting Documents' : 'Accounting\r\n                Document'\r\n                }}\r\n            </h2>\r\n            <span class=\"fill-space\"></span>\r\n            <span class=\"span-title\">Refresh every :</span>\r\n            <span>\r\n                <mat-select class=\"mat-select-style\"\r\n                            [formControl]=\"refreshOptionsCtrl\"\r\n                            [(value)]=\"selected\">\r\n                    <mat-option value=\"10\" (click)=\"refreshOptionSelectionChanged(this)\">\r\n                        10 Seconds</mat-option>\r\n                    <mat-option value=\"20\" (click)=\"refreshOptionSelectionChanged(this)\">20 Seconds</mat-option>\r\n                </mat-select>\r\n            </span>\r\n            <button mat-button\r\n                    title=\"Stop Refresh\"\r\n                    (click)=\"onStopRefreshClicked()\"\r\n                    [disabled]=\"isStopRefreshButtonDisable\"\r\n                    class=\"mat-button-user-margin\">\r\n                Stop Refresh\r\n            </button>\r\n            <button mat-button\r\n                    *ifAuthorized=\"'Financials.POSTINGMGT.AUTHORIZEPOSTING',company:this.company\"\r\n                    title=\"Authorize for Posting\"\r\n                    (click)=\"onAuthorizeClicked()\"\r\n                    class=\"mat-button-user-margin\">\r\n                Authorize for posting\r\n            </button>\r\n            <atlas-ag-grid-user-preferences *ngIf=\"postingManagementGridOptions && postingManagementGridOptions.columnDefs\"\r\n                                            [gridOptions]=\"postingManagementGridOptions\"\r\n                                            [company]=\"company\"\r\n                                            [gridId]=\"gridCode\"\r\n                                            [sharingEnabled]=\"hasGridSharing\"\r\n                                            #userPreferences>\r\n            </atlas-ag-grid-user-preferences>\r\n        </div>\r\n        <div fxLayout=\"row\"\r\n             fxLayoutAlign=\"center center\"\r\n             fxLayoutWrap\r\n             *ngIf=\"isLoading\"\r\n             class=\"loading\">\r\n            <mat-spinner color=\"accent\"></mat-spinner>\r\n        </div>\r\n        <div *ngIf=\"!isLoading\">\r\n            <div ag-grid=\"postingManagementGridOptions\"\r\n                 class=\"ag-theme-material pointer-cursor\">\r\n                <ag-grid-angular class=\"ag-theme-material grid-size\"\r\n                                 [rowData]=\"postingManagementGridRows\"\r\n                                 [columnDefs]=\"columnDefs\"\r\n                                 [gridOptions]=\"postingManagementGridOptions\"\r\n                                 (columnVisible)=\"onAddOrDeleteColumn($event)\"\r\n                                 domLayout=\"autoHeight\"\r\n                                 (gridReady)=\"onGridReady($event)\"\r\n                                 (rowSelected)=\"onRowSelected($event)\"\r\n                                 (rowClicked)=\"onRowClicked($event)\"\r\n                                 [pagination]=\"true\"\r\n                                 [rowClassRules]=\"rowClassRules\"\r\n                                 [paginationPageSize]=\"20\"\r\n                                 [enableSorting]=\"true\"\r\n                                 [enableColResize]=\"true\"\r\n                                 enableFilter\r\n                                 [rowSelection]=\"rowSelection\"\r\n                                 [rowHeight]=\"atlasAgGridParam.rowHeight\"\r\n                                 [excelStyles]=\"excelStyles\">\r\n                </ag-grid-angular>\r\n            </div>\r\n            <div fxLayout=\"row\"\r\n                 fxLayoutAlign=\"end\">\r\n                <div *ifAuthorized=\"'Financials.POSTINGMGT.STARTPOSTING',company:this.company\">\r\n                    <mat-slide-toggle  mat-raised-button\r\n                                       class=\"mat-toggle-posting\"\r\n                                       [checked]=\"isPostingProcessActive\"\r\n                                       (change)=\"toggleStartStopPostingProcess()\">\r\n                        The Posting Process is stopped\r\n                    </mat-slide-toggle>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </mat-card>\r\n</div>\r\n<atlas-lock-interval [resourcesInformation]=\"resourcesInformation\">\r\n</atlas-lock-interval>"

/***/ }),

/***/ "./Client/app/financial/components/posting-process/posting-management/posting-management.component.scss":
/*!**************************************************************************************************************!*\
  !*** ./Client/app/financial/components/posting-process/posting-management/posting-management.component.scss ***!
  \**************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".table-title {\n  background-color: white; }\n\n.loading {\n  background-color: white;\n  padding-top: 2%;\n  padding-bottom: 2%; }\n\n.dropdown-width {\n  width: 50px; }\n\n.grid-size {\n  height: 100%; }\n\n.span-title {\n  margin-top: 10px;\n  margin-right: 4px;\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n  font-size: 14px;\n  font-weight: 500; }\n\nbutton.mat-button-user-margin {\n  margin-top: 4px; }\n\n.toggle-button {\n  position: relative;\n  bottom: 40px;\n  padding-left: 12px; }\n\n.mat-select-style {\n  width: 100px;\n  margin-top: 10px;\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n  font-size: 14px;\n  font-weight: 500; }\n\n.mat-toggle-posting::ng-deep.mat-slide-toggle-label {\n  flex-direction: row-reverse !important; }\n\n.mat-toggle-posting::ng-deep.mat-slide-toggle-content {\n  margin-right: 8px !important; }\n"

/***/ }),

/***/ "./Client/app/financial/components/posting-process/posting-management/posting-management.component.ts":
/*!************************************************************************************************************!*\
  !*** ./Client/app/financial/components/posting-process/posting-management/posting-management.component.ts ***!
  \************************************************************************************************************/
/*! exports provided: PostingManagementComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PostingManagementComponent", function() { return PostingManagementComponent; });
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _core_services_authorization_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../core/services/authorization.service */ "./Client/app/core/services/authorization.service.ts");
/* harmony import */ var _core_services_company_manager_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../core/services/company-manager.service */ "./Client/app/core/services/company-manager.service.ts");
/* harmony import */ var _shared_components_ag_grid_user_preferences_ag_grid_user_preferences_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../shared/components/ag-grid-user-preferences/ag-grid-user-preferences.component */ "./Client/app/shared/components/ag-grid-user-preferences/ag-grid-user-preferences.component.ts");
/* harmony import */ var _shared_components_confirmation_dialog_confirmation_dialog_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../../shared/components/confirmation-dialog/confirmation-dialog.component */ "./Client/app/shared/components/confirmation-dialog/confirmation-dialog.component.ts");
/* harmony import */ var _shared_entities_atlas_form_control__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../../shared/entities/atlas-form-control */ "./Client/app/shared/entities/atlas-form-control.ts");
/* harmony import */ var _shared_entities_lock_functional_context_entity__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../../shared/entities/lock-functional-context.entity */ "./Client/app/shared/entities/lock-functional-context.entity.ts");
/* harmony import */ var _shared_entities_lock_resource_information_entity__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../../../shared/entities/lock-resource-information.entity */ "./Client/app/shared/entities/lock-resource-information.entity.ts");
/* harmony import */ var _shared_enums_permission_level_enum__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../../../shared/enums/permission-level.enum */ "./Client/app/shared/enums/permission-level.enum.ts");
/* harmony import */ var _shared_enums_posting_status_enum__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../../../shared/enums/posting-status.enum */ "./Client/app/shared/enums/posting-status.enum.ts");
/* harmony import */ var _shared_pipes_format_date_pipe_pipe__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../../../shared/pipes/format-date-pipe.pipe */ "./Client/app/shared/pipes/format-date-pipe.pipe.ts");
/* harmony import */ var _shared_services_ag_grid_service__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../../../shared/services/ag-grid.service */ "./Client/app/shared/services/ag-grid.service.ts");
/* harmony import */ var _shared_services_http_services_lock_service__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../../../../shared/services/http-services/lock.service */ "./Client/app/shared/services/http-services/lock.service.ts");
/* harmony import */ var _shared_services_http_services_preaccounting_service__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../../../../shared/services/http-services/preaccounting.service */ "./Client/app/shared/services/http-services/preaccounting.service.ts");
/* harmony import */ var _shared_services_snackbar_service__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../../../../shared/services/snackbar.service */ "./Client/app/shared/services/snackbar.service.ts");
/* harmony import */ var _shared_services_title_service__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../../../../shared/services/title.service */ "./Client/app/shared/services/title.service.ts");
/* harmony import */ var _shared_services_ui_service__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../../../../shared/services/ui.service */ "./Client/app/shared/services/ui.service.ts");
/* harmony import */ var _shared_services_url_management_service__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ../../../../shared/services/url-management.service */ "./Client/app/shared/services/url-management.service.ts");
/* harmony import */ var _authorize_posting_dialog_authorize_posting_dialog_component__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ../authorize-posting-dialog/authorize-posting-dialog.component */ "./Client/app/financial/components/posting-process/authorize-posting-dialog/authorize-posting-dialog.component.ts");
/* harmony import */ var _shared_services_grid_configuration_provider_service__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ../../../../shared/services/grid-configuration-provider.service */ "./Client/app/shared/services/grid-configuration-provider.service.ts");
/* harmony import */ var _shared_entities_user_grid_preferences_parameters_entity__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ../../../../shared/entities/user-grid-preferences-parameters.entity */ "./Client/app/shared/entities/user-grid-preferences-parameters.entity.ts");
/* harmony import */ var _shared_services_util_service__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ../../../../shared/services/util.service */ "./Client/app/shared/services/util.service.ts");
/* harmony import */ var _shared_components_filter_set_display_filter_set_display_component__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ../../../../shared/components/filter-set-display/filter-set-display.component */ "./Client/app/shared/components/filter-set-display/filter-set-display.component.ts");
/* harmony import */ var _shared_dtos_list_and_search_list_and_search_filter_dto_dto__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ../../../../shared/dtos/list-and-search/list-and-search-filter-dto.dto */ "./Client/app/shared/dtos/list-and-search/list-and-search-filter-dto.dto.ts");
/* harmony import */ var _execution_services_execution_actions_service__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ../../../../execution/services/execution-actions.service */ "./Client/app/execution/services/execution-actions.service.ts");
var __assign = (undefined && undefined.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};































var PostingManagementComponent = /** @class */ (function () {
    function PostingManagementComponent(route, dialog, companyManager, formBuilder, urlManagementService, router, preaccountingService, authorizationService, snackbarService, uiService, executionActionsService, formatDate, datePipe, utilService, lockService, gridService, titleService, gridConfigurationProvider) {
        this.route = route;
        this.dialog = dialog;
        this.companyManager = companyManager;
        this.formBuilder = formBuilder;
        this.urlManagementService = urlManagementService;
        this.router = router;
        this.preaccountingService = preaccountingService;
        this.authorizationService = authorizationService;
        this.snackbarService = snackbarService;
        this.uiService = uiService;
        this.executionActionsService = executionActionsService;
        this.formatDate = formatDate;
        this.datePipe = datePipe;
        this.utilService = utilService;
        this.lockService = lockService;
        this.gridService = gridService;
        this.titleService = titleService;
        this.gridConfigurationProvider = gridConfigurationProvider;
        this.dataLength = 0;
        this.isHide = true;
        this.selected = '10';
        this.postingManagementGridOptions = {};
        this.rowSelection = 'multiple';
        this.refreshOptionsCtrl = new _shared_entities_atlas_form_control__WEBPACK_IMPORTED_MODULE_11__["AtlasFormControl"]('pricingOptions');
        this.isPostingProcessActive = false;
        this.editDocumentMenuActions = {
            copyDocumentLine: 'view',
        };
        this.excelSheetName = 'Posting Management';
        this.isStopRefreshButtonDisable = false;
        this.isLoading = true;
        this.isRefreshing = false;
        this.isStartPostingaMgmtPrivilege = true;
        this.resourcesInformation = new Array();
        this.locking = [];
        this.unlocking = [];
        this.destroy$ = new rxjs__WEBPACK_IMPORTED_MODULE_5__["Subject"]();
        this.gridCode = "postingRecordsGrid";
        this.hasGridSharing = false;
        this.columnConfiguration = [];
        this.count = 0;
        this.filters = [];
        this.gridPreferences = new _shared_entities_user_grid_preferences_parameters_entity__WEBPACK_IMPORTED_MODULE_26__["UserGridPreferencesParameters"]();
        this.editEstimatedColumnsPrivilege = {
            profileId: null,
            privilegeName: 'POSTINGMGT',
            permission: _shared_enums_permission_level_enum__WEBPACK_IMPORTED_MODULE_14__["PermissionLevels"].ReadWrite,
            privilegeParentLevelOne: 'Financials',
            privilegeParentLevelTwo: null,
        };
        this.gridContext = {
            editPrivileges: false,
        };
        this.rowClassRules = {
            'ag-grid-row-gray-background': function (params) {
                if (params.data) {
                    if (params.data.statusId === _shared_enums_posting_status_enum__WEBPACK_IMPORTED_MODULE_15__["PostingStatus"].Authorized) {
                        return true;
                    }
                    else {
                        return false;
                    }
                }
            },
        };
        this.excelStyles = [
            {
                id: 'dateFormat',
                dataType: 'dateTime',
                numberFormat: {
                    format: 'dd/mm/yyyy',
                },
            },
        ];
        this.userActiveDirectoryName = this.authorizationService.getCurrentUser().samAccountName;
        this.company = this.companyManager.getCurrentCompanyId();
        this.atlasAgGridParam = this.gridService.getAgGridParam();
    }
    PostingManagementComponent.prototype.ngOnInit = function () {
        var _this = this;
        if (this.authorizationService.isPrivilegeAllowed(this.company, 'Financials')
            && this.authorizationService.isPrivilegeAllowed(this.company, 'POSTINGMGT')) {
            this.isStartPostingaMgmtPrivilege = this.authorizationService.isPrivilegeAllowed(this.company, 'STARTPOSTING');
            if (this.isStartPostingaMgmtPrivilege) {
                this.getStartStopPostingProcessActiveStatus();
            }
        }
        this.titleService.setTitle(this.route.snapshot.data.title);
        this.masterdata = this.route.snapshot.data.masterdata;
        this.refreshOptionsCtrl.patchValue(this.selected);
        this.loadGridConfiguration();
        this.getAllposingDocument();
        this.route.paramMap
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_6__["map"])(function (params) { return params.get('company'); }))
            .subscribe(function (company) {
            _this.company = company;
        });
        var intervalValue = Number(this.refreshOptionsCtrl.value);
        this.init();
        this.refreshGrid(intervalValue);
    };
    PostingManagementComponent.prototype.init = function () {
        this.editAccountingDocumentGridContextualMenuActions = [
            {
                icon: 'content_copy',
                text: 'View Summary',
                action: this.editDocumentMenuActions.copyDocumentLine,
            },
        ];
    };
    PostingManagementComponent.prototype.handleAction = function (action, rowSelected) {
        switch (action) {
            case this.editDocumentMenuActions.copyDocumentLine:
                if (rowSelected.invoiceId) {
                    var invoiceOption = rowSelected.invoiceId.toString();
                    var invoiceType = rowSelected.invoiceTypeId;
                    this.router.navigate(['/' + this.companyManager.getCurrentCompanyId() +
                            '/execution/invoicing/summary/' + encodeURIComponent(invoiceOption)], {
                        queryParams: { invoiceType: invoiceType },
                    });
                }
                if (rowSelected.cashId) {
                    var costDirectionId = rowSelected.costDirectionId;
                    var cashId = rowSelected.cashId;
                    this.router.navigate(['/' + this.companyManager.getCurrentCompanyId() + '/execution/cash/display/'
                            + costDirectionId + '/', cashId]);
                }
                break;
            default: throw new Error('Unknown action');
        }
    };
    PostingManagementComponent.prototype.onGridReady = function (params) {
        params.columnDefs = this.postingManagementGridColumns;
        this.gridApi = params.api;
        this.gridColumnApi = params.columnApi;
        this.gridService.sizeColumns(this.postingManagementGridOptions);
    };
    PostingManagementComponent.prototype.onGridSizeChanged = function (params) {
        this.gridService.sizeColumns(params);
    };
    PostingManagementComponent.prototype.getAllposingDocument = function () {
        this.initView();
    };
    PostingManagementComponent.prototype.onFilterSetDetailsChange = function (filters) {
        this.executionActionsService.EditCriteriaRetainFilter = filters;
        this.filters = filters;
        if (this.count === 1) {
            this.filters = this.savedFilters;
            this.savedFilters = null;
            this.count = 0;
        }
        if (this.savedFilters && this.count === 0) {
            if (this.filterSetDisplayComponent) {
                this.count = 1;
                var localFilters = this.savedFilters.map(function (filter) {
                    return new _shared_dtos_list_and_search_list_and_search_filter_dto_dto__WEBPACK_IMPORTED_MODULE_29__["ListAndSearchFilterDto"](filter);
                });
                this.filterSetDisplayComponent.loadFilters(localFilters);
            }
        }
        else {
            this.getAllposingDocument();
        }
    };
    PostingManagementComponent.prototype.loadGridConfiguration = function () {
        var _this = this;
        this.gridConfigurationProvider.getConfiguration(this.company, this.gridCode)
            .subscribe(function (configuration) {
            _this.columnConfiguration = configuration.columns;
            _this.initColumns(_this.columnConfiguration);
            _this.hasGridSharing = configuration.hasMultipleViewsPerUser;
            _this.gridPreferences = {
                company: _this.company,
                gridId: _this.gridCode,
                gridOptions: _this.postingManagementGridOptions,
                sharingEnabled: _this.hasGridSharing,
            };
        });
    };
    PostingManagementComponent.prototype.initColumns = function (configuration) {
        var _this = this;
        this.columnDefs = [];
        this.columnDefs.push({
            headerName: '',
            colId: 'selection',
            headerCheckboxSelection: true,
            checkboxSelection: true,
            pinned: 'left',
            minWidth: 40,
            maxWidth: 40,
        });
        var numericColumns = [];
        configuration.forEach(function (column) {
            if (column.gridType === 'numeric') {
                numericColumns.push(column.fieldName.toLowerCase());
            }
        });
        this.columnDefs = this.columnDefs.concat(configuration.map(function (config) {
            var columnDef = {
                colId: _this.utilService.convertToCamelCase(config.fieldName),
                headerName: config.friendlyName,
                field: _this.utilService.convertToCamelCase(config.fieldName),
                hide: !config.isVisible,
            };
            var formatter = _this.uiService.getFormatterForType(config.gridType);
            if (formatter) {
                columnDef.valueFormatter = formatter;
            }
            var dateGetter = _this.uiService.getterForDateType(config.gridType);
            if (dateGetter) {
                columnDef.cellClass = 'dateFormat';
                columnDef.valueGetter = dateGetter;
            }
            return columnDef;
        }));
        if (this.postingManagementGridOptions) {
            this.postingManagementGridOptions.columnDefs = this.columnDefs;
            if (this.postingManagementGridOptions.columnApi) {
                this.postingManagementGridOptions.columnApi.autoSizeAllColumns();
            }
        }
    };
    PostingManagementComponent.prototype.initView = function () {
        var _this = this;
        if (this.isRefreshing) {
            return;
        }
        this.isRefreshing = true;
        this.stopLockRefresh();
        this.lockService.cleanSessionLocks().pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_6__["takeUntil"])(this.destroy$)).subscribe();
        var postingId = 1;
        if (this.filters) {
            var filters = this.filters.map(function (x) { return (__assign({}, x)); });
            this.preaccountingService.getAllPostingManagement(filters)
                .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_6__["finalize"])(function () {
                _this.isLoading = false;
            }))
                .subscribe(function (data) {
                _this.postingManagementGridRows = data.value;
                _this.checkIfUserHasRequiredPrivileges(_this.editEstimatedColumnsPrivilege);
            });
        }
    };
    PostingManagementComponent.prototype.onEditButtonClicked = function () {
        this.gridContext.editPrivileges = true;
    };
    PostingManagementComponent.prototype.checkIfUserHasRequiredPrivileges = function (userCompanyPrivilege) {
        if (this.authorizationService.isUserAllowedForCompany(this.company)) {
            var userPermissionLevel = this.authorizationService.getPermissionLevel(this.company, userCompanyPrivilege.privilegeName, userCompanyPrivilege.privilegeParentLevelOne, userCompanyPrivilege.privilegeParentLevelTwo);
            if (userPermissionLevel >= userCompanyPrivilege.permission) {
                this.isHide = false;
            }
            this.dataLength = this.postingManagementGridRows.length;
        }
    };
    PostingManagementComponent.prototype.postingStatusFormatter = function (params) {
        if (params.value) {
            return _shared_enums_posting_status_enum__WEBPACK_IMPORTED_MODULE_15__["PostingStatus"][params.value].toString();
        }
    };
    PostingManagementComponent.prototype.toolTipValue = function (params) {
        return params.value;
    };
    PostingManagementComponent.prototype.departmentFormatter = function (params) {
        var department = this.masterdata.departments.find(function (dept) { return dept.departmentId === params.value; });
        return department ? department.description : '';
    };
    PostingManagementComponent.prototype.dateFormatterHour = function (params) {
        if (params.value) {
            var authorizedDate = new Date(params.value);
            return this.padStart(authorizedDate.getHours(), 2) + ':' + this.padStart(authorizedDate.getMinutes(), 2);
        }
        return '';
    };
    PostingManagementComponent.prototype.padStart = function (num, size) {
        var s = num + '';
        while (s.length < size) {
            s = '0' + s;
        }
        return s;
    };
    PostingManagementComponent.prototype.currencyFormatter = function (params) {
        if (isNaN(params.value) || params.value === null) {
            return '';
        }
        return new Intl.NumberFormat('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 }).format(params.value);
    };
    PostingManagementComponent.prototype.onAuthorizeClicked = function () {
        var _this = this;
        this.interval.unsubscribe();
        this.accountingDocuments = this.postingManagementGridOptions.api.getSelectedRows();
        if (this.accountingDocuments.length > 0) {
            this.accountingDocuments.forEach(function (document) {
                document.reason = '';
                if (document.statusId === _shared_enums_posting_status_enum__WEBPACK_IMPORTED_MODULE_15__["PostingStatus"].Authorized) {
                    document.reason = 'Accounting Document is already authorized.';
                }
                else if (document.total > 0) {
                    document.reason = 'Unbalanced document.';
                }
                else if (document.documentDate > _this.companyManager.getCurrentCompanyDate().toDate()) {
                    document.reason = 'Future document date';
                }
            });
            var validateAccountingDocument = this.accountingDocuments.filter(function (doc) {
                return doc.reason !== '';
            });
            var passedAccountingDocument = this.accountingDocuments.filter(function (doc) {
                return doc.reason === '';
            });
            var accountingDocumentSectionDialog = this.dialog.open(_authorize_posting_dialog_authorize_posting_dialog_component__WEBPACK_IMPORTED_MODULE_24__["AuthorizePostingDialogComponent"], {
                panelClass: 'authorize-posting-dialog',
                data: { validateAccountingDocument: validateAccountingDocument, passedAccountingDocument: passedAccountingDocument },
            });
            accountingDocumentSectionDialog.afterClosed().subscribe(function () {
                _this.initView();
                if (_this.isStopRefreshButtonDisable === false) {
                    var intervalValue = Number(_this.refreshOptionsCtrl.value);
                    _this.refreshGrid(intervalValue);
                }
            });
        }
        else {
            this.snackbarService.informationSnackBar('No Contract Selected.');
        }
    };
    PostingManagementComponent.prototype.startLockRefresh = function (accountingId, documentReference) {
        this.resourcesInformation = new Array();
        var resourceInformation = new _shared_entities_lock_resource_information_entity__WEBPACK_IMPORTED_MODULE_13__["LockResourceInformation"]();
        resourceInformation.resourceType = 'Accounting Document';
        resourceInformation.resourceId = accountingId;
        resourceInformation.resourceCode = documentReference;
        resourceInformation.needRefresh = true;
        this.resourcesInformation.push(resourceInformation);
    };
    PostingManagementComponent.prototype.stopLockRefresh = function () {
        this.resourcesInformation = new Array();
    };
    PostingManagementComponent.prototype.ngOnDestroy = function () {
        var _this = this;
        this.interval.unsubscribe();
        this.stopLockRefresh();
        if (this.postingProcessSubscription) {
            this.postingProcessSubscription.unsubscribe();
        }
        this.lockService.cleanSessionLocks().pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_6__["takeUntil"])(this.destroy$)).subscribe(function () {
            _this.destroy$.next();
            _this.destroy$.complete();
        });
    };
    PostingManagementComponent.prototype.refreshOptionSelectionChanged = function (event) {
        this.isStopRefreshButtonDisable = false;
        this.interval.unsubscribe();
        this.refreshGrid(Number(event.selected));
    };
    PostingManagementComponent.prototype.refreshGrid = function (intervalValue) {
        var _this = this;
        var source = Object(rxjs__WEBPACK_IMPORTED_MODULE_5__["interval"])(intervalValue * 1000);
        this.interval = source.subscribe(function () {
            _this.getAllposingDocument();
        });
    };
    PostingManagementComponent.prototype.onAddOrDeleteColumn = function (col) {
        this.userPreferencesComponent.onChangeColumnVisibility(col);
    };
    PostingManagementComponent.prototype.onRowClicked = function (rowSelected, event) {
        if (rowSelected.data) {
            this.router.navigate(['/' + this.urlManagementService.getCurrentCompanyId() + '/financial/posting/accountingdocument/viewedit', rowSelected.data.accountingId]);
        }
    };
    PostingManagementComponent.prototype.getStartStopPostingProcessActiveStatus = function () {
        var _this = this;
        this.postingProcessSubscription = this.preaccountingService.getPostingProcessStatus()
            .subscribe(function (result) {
            _this.isPostingProcessActive = result;
        }, function (error) {
            console.error(error);
            _this.snackbarService.throwErrorSnackBar('Oops! An error ocurred');
        });
    };
    PostingManagementComponent.prototype.toggleStartStopPostingProcess = function () {
        var _this = this;
        this.isPostingProcessActive = !this.isPostingProcessActive;
        this.postingProcessSubscription = this.preaccountingService.startStopPostingProcess(this.isPostingProcessActive)
            .subscribe(function (result) {
            if (result) {
                _this.snackbarService.throwErrorSnackBar('Posting Process is started successfully.');
            }
            else {
                _this.snackbarService.throwErrorSnackBar('Posting Process is stopped successfully.');
            }
        }, function (error) {
            console.error(error);
            _this.snackbarService.throwErrorSnackBar('Oops! An error ocurred');
        });
    };
    PostingManagementComponent.prototype.onStopRefreshClicked = function () {
        this.interval.unsubscribe();
        if (this.postingProcessSubscription) {
            this.postingProcessSubscription.unsubscribe();
        }
        this.isStopRefreshButtonDisable = true;
    };
    PostingManagementComponent.prototype.onRowSelected = function (event) {
        this.grantLock(Number(event.data.accountingId), event.node);
    };
    PostingManagementComponent.prototype.grantLock = function (accountingId, node) {
        var _this = this;
        if (node.isSelected()) {
            if (!this.locking.includes(accountingId)) {
                this.locking.push(accountingId);
                this.lockService.isLockedAccountingDocument(accountingId).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_6__["takeUntil"])(this.destroy$)).subscribe(function (lock) {
                    if (lock.isLocked) {
                        _this.dialog.open(_shared_components_confirmation_dialog_confirmation_dialog_component__WEBPACK_IMPORTED_MODULE_10__["ConfirmationDialogComponent"], {
                            data: {
                                title: 'Lock',
                                text: lock.message,
                                okButton: 'Got it',
                            },
                        });
                        _this.postingManagementGridOptions.api.deselectNode(node);
                        _this.locking = _this.locking.filter(function (id) { return id !== accountingId; });
                    }
                    else {
                        _this.lockService.lockAccountingDocument(accountingId, _shared_entities_lock_functional_context_entity__WEBPACK_IMPORTED_MODULE_12__["LockFunctionalContext"].AccountingDocumentAuthorizeForPosting).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_6__["takeUntil"])(_this.destroy$)).subscribe(function (lockState) {
                            _this.refeshResourceInformation();
                            _this.locking = _this.locking.filter(function (id) { return id !== accountingId; });
                        });
                    }
                });
            }
        }
        else {
            if (!this.unlocking.includes(accountingId)) {
                this.unlocking.push(accountingId);
                this.refeshResourceInformation();
                if (this.resourcesInformation.filter(function (rsc) { return rsc.resourceId === accountingId; }).length === 0) {
                    this.lockService.unlockAccountingDocument(accountingId, _shared_entities_lock_functional_context_entity__WEBPACK_IMPORTED_MODULE_12__["LockFunctionalContext"].AccountingDocumentAuthorizeForPosting).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_6__["takeUntil"])(this.destroy$)).subscribe(function () {
                        node.setRowSelectable(true);
                        _this.unlocking = _this.unlocking.filter(function (id) { return id !== accountingId; });
                    });
                }
                else {
                    node.setRowSelectable(true);
                    this.unlocking = this.unlocking.filter(function (id) { return id !== accountingId; });
                }
            }
        }
    };
    PostingManagementComponent.prototype.refeshResourceInformation = function () {
        var _this = this;
        this.resourcesInformation = new Array();
        this.postingManagementGridOptions.api.forEachNode(function (node) {
            if (node.isSelected()) {
                var resourceInformation = new _shared_entities_lock_resource_information_entity__WEBPACK_IMPORTED_MODULE_13__["LockResourceInformation"]();
                resourceInformation.resourceType = 'Accounting Document';
                resourceInformation.resourceId = node.data.accountingId;
                resourceInformation.resourceCode = node.data.documentReference;
                _this.resourcesInformation.push(resourceInformation);
            }
        });
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('userPreferences'),
        __metadata("design:type", _shared_components_ag_grid_user_preferences_ag_grid_user_preferences_component__WEBPACK_IMPORTED_MODULE_9__["AgGridUserPreferencesComponent"])
    ], PostingManagementComponent.prototype, "userPreferencesComponent", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('filterSetDisplayComponent'),
        __metadata("design:type", _shared_components_filter_set_display_filter_set_display_component__WEBPACK_IMPORTED_MODULE_28__["FilterSetDisplayComponent"])
    ], PostingManagementComponent.prototype, "filterSetDisplayComponent", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(_angular_material__WEBPACK_IMPORTED_MODULE_3__["MatPaginator"]),
        __metadata("design:type", _angular_material__WEBPACK_IMPORTED_MODULE_3__["MatPaginator"])
    ], PostingManagementComponent.prototype, "paginator", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(_angular_material__WEBPACK_IMPORTED_MODULE_3__["MatSort"]),
        __metadata("design:type", _angular_material__WEBPACK_IMPORTED_MODULE_3__["MatSort"])
    ], PostingManagementComponent.prototype, "sort", void 0);
    PostingManagementComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'atlas-posting-management',
            template: __webpack_require__(/*! ./posting-management.component.html */ "./Client/app/financial/components/posting-process/posting-management/posting-management.component.html"),
            styles: [__webpack_require__(/*! ./posting-management.component.scss */ "./Client/app/financial/components/posting-process/posting-management/posting-management.component.scss")],
            providers: [_angular_common__WEBPACK_IMPORTED_MODULE_0__["DatePipe"]],
        }),
        __metadata("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_4__["ActivatedRoute"],
            _angular_material__WEBPACK_IMPORTED_MODULE_3__["MatDialog"],
            _core_services_company_manager_service__WEBPACK_IMPORTED_MODULE_8__["CompanyManagerService"],
            _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"],
            _shared_services_url_management_service__WEBPACK_IMPORTED_MODULE_23__["UrlManagementService"],
            _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"],
            _shared_services_http_services_preaccounting_service__WEBPACK_IMPORTED_MODULE_19__["PreaccountingService"],
            _core_services_authorization_service__WEBPACK_IMPORTED_MODULE_7__["AuthorizationService"],
            _shared_services_snackbar_service__WEBPACK_IMPORTED_MODULE_20__["SnackbarService"],
            _shared_services_ui_service__WEBPACK_IMPORTED_MODULE_22__["UiService"],
            _execution_services_execution_actions_service__WEBPACK_IMPORTED_MODULE_30__["ExecutionActionsService"],
            _shared_pipes_format_date_pipe_pipe__WEBPACK_IMPORTED_MODULE_16__["FormatDatePipe"],
            _angular_common__WEBPACK_IMPORTED_MODULE_0__["DatePipe"],
            _shared_services_util_service__WEBPACK_IMPORTED_MODULE_27__["UtilService"],
            _shared_services_http_services_lock_service__WEBPACK_IMPORTED_MODULE_18__["LockService"],
            _shared_services_ag_grid_service__WEBPACK_IMPORTED_MODULE_17__["AgGridService"],
            _shared_services_title_service__WEBPACK_IMPORTED_MODULE_21__["TitleService"],
            _shared_services_grid_configuration_provider_service__WEBPACK_IMPORTED_MODULE_25__["GridConfigurationProviderService"]])
    ], PostingManagementComponent);
    return PostingManagementComponent;
}());



/***/ }),

/***/ "./Client/app/financial/components/posting-process/reverse-document/reverse-document-create/reverse-document-create.component.html":
/*!*****************************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/posting-process/reverse-document/reverse-document-create/reverse-document-create.component.html ***!
  \*****************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div fxLayout=\"row\"\r\n     class=\"quick-sum-div-height\"\r\n     fxLayoutAlign=\"space-between center\">\r\n    <div fxLayout=\"column \"\r\n         fxLayoutAlign=\"start \">\r\n        <h3>Original document reference: [{{this.documentReference}}]</h3>\r\n    </div>\r\n</div>\r\n<div fxLayout=\"row\"\r\n     class=\"quick-sum-div-height\"\r\n     fxLayoutAlign=\"space-between center\">\r\n    <div class=\"create-accounting-document-fields\">\r\n        <div fxLayout=\"column\">\r\n            <div fxLayout=\"row\"\r\n                 fxLayoutAlign=\"left start\"\r\n                 fxLayoutGap=\"10px\">\r\n                <div fxLayout=\"column\">\r\n                    <mat-form-field>\r\n                        <input matInput\r\n                               placeholder=\"Document Date\"\r\n                               autocomplete=\"off\"\r\n                               readonly=\"true\"\r\n                               [formControl]='docDateFromCtrl'>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div fxLayout=\"column\">\r\n                    <mat-form-field>\r\n                        <input matInput\r\n                               placeholder=\"Value Date\"\r\n                               readonly=\"true\"\r\n                               autocomplete=\"off\"\r\n                               [formControl]='valueDateFormCtrl'>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div fxLayout=\"column\">\r\n                    <mat-form-field>\r\n                        <input matInput\r\n                               [matDatepicker]=\"reverseDatePicker\"\r\n                               placeholder=\"Reverse Document Date\"\r\n                               [matTooltip]=\"'Reverse Document Date'\"\r\n                               (dateChange)=\"validateReversalDate()\"\r\n                               [required]=\"true\"\r\n                               autocomplete=\"off\"\r\n                               [formControl]='reverseDateFormCtrl'>\r\n                        <mat-datepicker-toggle matSuffix\r\n                                               [for]=\"reverseDatePicker\"></mat-datepicker-toggle>\r\n                        <mat-datepicker #reverseDatePicker></mat-datepicker>\r\n                        <mat-hint>\r\n                            <div class=\"reverse-date-error\"\r\n                                 *ngIf=\"this.isReversalDateBefore\">\r\n                                Not allowed. Reversal doc. date prior to original document date.\r\n                            </div>\r\n                            <div class=\"reverse-date-error\"\r\n                                 *ngIf=\"this.isReversalDateNotInLastDay && isAccrualDocument\">\r\n                                Reversal doc. date must be a last month day.\r\n                            </div>\r\n                            <div class=\"reverse-date-error\"\r\n                                 *ngIf=\"this.isReversalDateAfter\">\r\n                                Not allowed. Reversal doc. cannot be in the future.\r\n                            </div>\r\n                        </mat-hint>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div fxLayout=\"column\">\r\n            <div fxLayout=\"row\"\r\n                 fxLayoutAlign=\"left start\"\r\n                 fxLayoutGap=\"10px\">\r\n                <div fxLayout=\"column\">\r\n                    <mat-form-field>\r\n                        <input matInput\r\n                               placeholder=\"Accounting Period\"\r\n                               [formControl]='accPeriodFormCtrl'\r\n                               autocomplete=\"off\"\r\n                               readonly=\"true\">\r\n                    </mat-form-field>\r\n                </div>\r\n                <div fxLayout=\"column\">\r\n                    <mat-form-field>\r\n                        <mat-label>Currency</mat-label>\r\n                        <input matInput\r\n                               [formControl]='currencyCtrl'\r\n                               autocomplete=\"off\"\r\n                               readonly=\"true\">\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div fxLayout=\"row\"\r\n     fxLayoutAlign=\"space-between start\">\r\n    <div fxLayout=\"column\"\r\n         fxFlex=\"98.5\">\r\n        <div ag-grid=\"reverseDocumntGridOptions\">\r\n            <ag-grid-angular class=\"ag-theme-material grid-size\"\r\n                             [rowData]=\"accountingDocumentLine\"\r\n                             [columnDefs]=\"reverseDocumentCreateGridCols\"\r\n                             domLayout=\"autoHeight\"\r\n                             (gridReady)=\"onGridReady($event)\"\r\n                             [pagination]=\"false\"\r\n                             [paginationPageSize]=\"20\"\r\n                             [enableSorting]=\"true\"\r\n                             [enableColResize]=\"true\"\r\n                             enableFilter=\"false\"\r\n                             [rowHeight]=\"atlasAgGridParam.rowHeight\">\r\n            </ag-grid-angular>\r\n        </div>\r\n        <span class=\"fill-space\"></span>\r\n        <div fxLayout=\"column\"\r\n             fxLayoutAlign=\"start end\"\r\n             class=\"total-amount-content\">\r\n            <mat-card-subtitle class=\"total-figure\">Total Amount:\r\n                <span class=\"total-figure-value\">{{totalAmount}}</span> </mat-card-subtitle>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div fxLayout=\"row\"\r\n     class=\"quick-sum-div-height\"\r\n     fxLayoutAlign=\"space-between center\">\r\n    <div fxLayout=\"column \"\r\n         *ifAuthorized=\"'Financials.POSTINGMGT.AUTHORIZEPOSTING',company:this.company\"\r\n         fxLayoutAlign=\"start\">\r\n        <mat-slide-toggle [formControl]=\"interfaceCtrl\">To Interface</mat-slide-toggle>\r\n    </div>\r\n</div>\r\n"

/***/ }),

/***/ "./Client/app/financial/components/posting-process/reverse-document/reverse-document-create/reverse-document-create.component.scss":
/*!*****************************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/posting-process/reverse-document/reverse-document-create/reverse-document-create.component.scss ***!
  \*****************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".reverse-date-warning {\n  color: #ec8d2d; }\n\n.reverse-date-error {\n  color: #df5a4d; }\n"

/***/ }),

/***/ "./Client/app/financial/components/posting-process/reverse-document/reverse-document-create/reverse-document-create.component.ts":
/*!***************************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/posting-process/reverse-document/reverse-document-create/reverse-document-create.component.ts ***!
  \***************************************************************************************************************************************/
/*! exports provided: ReverseDocumentCreateComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ReverseDocumentCreateComponent", function() { return ReverseDocumentCreateComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _core_services_authorization_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../core/services/authorization.service */ "./Client/app/core/services/authorization.service.ts");
/* harmony import */ var _core_services_company_manager_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../../core/services/company-manager.service */ "./Client/app/core/services/company-manager.service.ts");
/* harmony import */ var _shared_components_confirmation_dialog_confirmation_dialog_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../../shared/components/confirmation-dialog/confirmation-dialog.component */ "./Client/app/shared/components/confirmation-dialog/confirmation-dialog.component.ts");
/* harmony import */ var _shared_entities_atlas_form_control__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../../shared/entities/atlas-form-control */ "./Client/app/shared/entities/atlas-form-control.ts");
/* harmony import */ var _shared_enums_permission_level_enum__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../../shared/enums/permission-level.enum */ "./Client/app/shared/enums/permission-level.enum.ts");
/* harmony import */ var _shared_enums_posting_document_type_enum__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../../../shared/enums/posting-document-type.enum */ "./Client/app/shared/enums/posting-document-type.enum.ts");
/* harmony import */ var _shared_models_posting_management_display_view__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../../../shared/models/posting-management-display-view */ "./Client/app/shared/models/posting-management-display-view.ts");
/* harmony import */ var _shared_services_ag_grid_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../../../shared/services/ag-grid.service */ "./Client/app/shared/services/ag-grid.service.ts");
/* harmony import */ var _shared_services_http_services_execution_service__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../../../../shared/services/http-services/execution.service */ "./Client/app/shared/services/http-services/execution.service.ts");
/* harmony import */ var _shared_services_http_services_preaccounting_service__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../../../../shared/services/http-services/preaccounting.service */ "./Client/app/shared/services/http-services/preaccounting.service.ts");
/* harmony import */ var _shared_services_snackbar_service__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../../../../shared/services/snackbar.service */ "./Client/app/shared/services/snackbar.service.ts");
/* harmony import */ var _shared_validators_date_validators_validator__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../../../../shared/validators/date-validators.validator */ "./Client/app/shared/validators/date-validators.validator.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

















var ReverseDocumentCreateComponent = /** @class */ (function () {
    function ReverseDocumentCreateComponent(route, router, authorizationService, executionService, companyManager, snackbarService, preaccountingService, dialog, gridService) {
        this.route = route;
        this.router = router;
        this.authorizationService = authorizationService;
        this.executionService = executionService;
        this.companyManager = companyManager;
        this.snackbarService = snackbarService;
        this.preaccountingService = preaccountingService;
        this.dialog = dialog;
        this.gridService = gridService;
        this.agGridOptions = {};
        this.currentStep = 0;
        this.docDateFromCtrl = new _shared_entities_atlas_form_control__WEBPACK_IMPORTED_MODULE_8__["AtlasFormControl"]('docDateFromCtrl');
        this.valueDateFormCtrl = new _shared_entities_atlas_form_control__WEBPACK_IMPORTED_MODULE_8__["AtlasFormControl"]('valueDateFormCtrl');
        this.accPeriodFormCtrl = new _shared_entities_atlas_form_control__WEBPACK_IMPORTED_MODULE_8__["AtlasFormControl"]('accPeriodFormCtrl');
        this.currencyCtrl = new _shared_entities_atlas_form_control__WEBPACK_IMPORTED_MODULE_8__["AtlasFormControl"]('currencyCtrl');
        this.reverseDateFormCtrl = new _shared_entities_atlas_form_control__WEBPACK_IMPORTED_MODULE_8__["AtlasFormControl"]('reverseDateFormCtrl');
        this.interfaceCtrl = new _shared_entities_atlas_form_control__WEBPACK_IMPORTED_MODULE_8__["AtlasFormControl"]('interfaceCtrl');
        this.isAccrualDocument = false;
        this.totalAmount = 0;
        this.notifyParentForDisableNextButton = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"](true);
        this.amountFormat = 'en-US';
        this.subscription = [];
        this.isAnyAmountColumnZero = false;
        this.monthNames = ['January', 'February', 'March', 'April', 'May', 'June',
            'July', 'August', 'September', 'October', 'November', 'December'];
        this.postOpClosedPrivilege = {
            profileId: null,
            privilegeName: 'POSTOPCLOSED',
            permission: _shared_enums_permission_level_enum__WEBPACK_IMPORTED_MODULE_9__["PermissionLevels"].ReadWrite,
            privilegeParentLevelOne: 'Financials',
            privilegeParentLevelTwo: 'POSTINGMGT',
        };
    }
    ReverseDocumentCreateComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.company = this.route.snapshot.paramMap.get('company');
        this.masterdata = this.route.snapshot.data.masterdata;
        this.interfaceCtrl.patchValue(true);
        this.subscription.push(this.preaccountingService.getAccountingSetupDetails()
            .subscribe(function (data) {
            _this.accountingSetupModel = data;
            _this.operationsLastMonthClosed = new Date(new Date(_this.accountingSetupModel.lastMonthClosedForOperation).toDateString());
            _this.lastMonthClosed = new Date(new Date(_this.accountingSetupModel.lastMonthClosed).toDateString());
            _this.monthNameForlastMonthClosed = _this.monthNames[_this.lastMonthClosed.getMonth()];
            _this.monthNameForoperationsLastMonthClosed = _this.monthNames[_this.operationsLastMonthClosed.getMonth()];
        }));
        this.initializeGridColumns();
        this.atlasAgGridParam = this.gridService.getAgGridParam();
    };
    ReverseDocumentCreateComponent.prototype.getAccountingLinesByAccountingId = function () {
        var _this = this;
        if (this.accountingId) {
            this.getAccountingLinesByAccountingIdSubscription = (this.preaccountingService.getAccoutingDocumentAllData(this.transactionDocumentId).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])(function (data) {
                _this.documentRefData = data.value.map(function (docRef) {
                    return new _shared_models_posting_management_display_view__WEBPACK_IMPORTED_MODULE_11__["PostingManagementDisplayView"](docRef);
                });
                _this.accountingDocumentData = _this.documentRefData[0];
                if (_this.accountingDocumentData) {
                    _this.accountingDocumentLine = _this.accountingDocumentData.accountingDocumentLines;
                    _this.assignValuesToControl();
                }
            }))
                .subscribe());
            (this.preaccountingService.getAccoutingDocumentAllData(this.transactionDocumentId).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])(function (data) {
                var documentRefData = data.value.map(function (docRef) {
                    return new _shared_models_posting_management_display_view__WEBPACK_IMPORTED_MODULE_11__["PostingManagementDisplayView"](docRef);
                });
                _this.accountingDocDetail = documentRefData[0];
                if (_this.transactionDocumentTypeId === _shared_enums_posting_document_type_enum__WEBPACK_IMPORTED_MODULE_10__["PostingDocumentType"].TA) {
                    _this.isAccrualDocument = true;
                    _this.validateReversalDate();
                }
            }))
                .subscribe());
        }
    };
    ReverseDocumentCreateComponent.prototype.onGridReady = function (params) {
        this.agGridOptions = params;
        this.agGridOptions.columnDefs = this.reverseDocumentCreateGridCols;
        this.agGridApi = this.agGridOptions.api;
        this.agGridColumnApi = this.agGridOptions.columnApi;
        this.agGridColumnApi.autoSizeAllColumns();
        this.agGridApi.setRowData([]);
    };
    ReverseDocumentCreateComponent.prototype.getDefaultValue = function (params) {
        return 0;
    };
    ReverseDocumentCreateComponent.prototype.currencyFormatterInGrid = function (params) {
        if (params.value > 0) {
            params.value = -Math.abs(params.value);
        }
        else {
            params.value = Math.abs(params.value);
        }
        if (isNaN(params.value) || params.value === null) {
            return '';
        }
        return new Intl.NumberFormat('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 }).format(params.value);
    };
    ReverseDocumentCreateComponent.prototype.currencyFormatterForTotalInGrid = function (totalAmount) {
        var _this = this;
        return function (params) {
            if (params.value > 0) {
                params.value = -Math.abs(params.value);
            }
            else {
                params.value = Math.abs(params.value);
            }
            _this.totalAmount += params.value;
            if (isNaN(params.value) || params.value === null) {
                return '';
            }
            return new Intl.NumberFormat('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 }).format(params.value);
        };
    };
    ReverseDocumentCreateComponent.prototype.costTypeFormatter = function (params) {
        if (params.value && this.masterdata.costTypes) {
            var costTypeList = this.masterdata.costTypes.find(function (x) { return x.costTypeId === params.value; });
            if (costTypeList) {
                return costTypeList.costTypeCode;
            }
        }
        return '';
    };
    ReverseDocumentCreateComponent.prototype.accountLineTypeFormatter = function (params) {
        if (params.value && this.masterdata.accountLineTypes) {
            var accountLineTypes = this.masterdata.accountLineTypes.find(function (x) { return x.accountLineTypeId === params.value; });
            if (accountLineTypes) {
                return accountLineTypes.accountLineTypeCode;
            }
        }
        return '';
    };
    ReverseDocumentCreateComponent.prototype.departmentValueFormatter = function (params) {
        if (params.value && this.masterdata.departments) {
            var department = this.masterdata.departments.find(function (x) { return x.departmentId === params.value; });
            if (department) {
                return department.departmentCode;
            }
        }
        return '';
    };
    ReverseDocumentCreateComponent.prototype.commodityFormatter = function (params) {
        if (params.value && this.masterdata.commodities) {
            var commodityList = this.masterdata.commodities.find(function (x) { return x.commodityId === params.value; });
            if (commodityList) {
                return commodityList.commodityCode;
            }
        }
        return '';
    };
    ReverseDocumentCreateComponent.prototype.paymentTermFormatter = function (params) {
        if (params.value && this.masterdata.paymentTerms) {
            var paymentTermsList = this.masterdata.paymentTerms.find(function (x) { return x.paymentTermsId === params.value; });
            if (paymentTermsList) {
                return paymentTermsList.paymentTermCode;
            }
        }
        return '';
    };
    ReverseDocumentCreateComponent.prototype.vatCodeFormatter = function (params) {
        if (params.value && this.masterdata.vats) {
            var vatList = this.masterdata.vats.find(function (x) { return x.vatId === params.value; });
            if (vatList) {
                return vatList.vatCode;
            }
        }
        return '';
    };
    ReverseDocumentCreateComponent.prototype.initializeGridColumns = function () {
        this.reverseDocumentCreateGridCols = [
            {
                headerName: 'Nominal acc.',
                colId: 'accountReference',
                field: 'accountReference',
            },
            {
                headerName: 'Associated Acc.',
                colId: 'associatedAccountCode',
                field: 'associatedAccountCode',
            },
            {
                headerName: 'Acc. L. Type',
                colId: 'accountLineTypeId',
                field: 'accountLineTypeId',
                valueFormatter: this.accountLineTypeFormatter.bind(this),
            },
            {
                headerName: 'Cost types',
                colId: 'costTypeId',
                field: 'costTypeId',
                valueFormatter: this.costTypeFormatter.bind(this),
            },
            {
                headerName: 'Amount',
                colId: 'amount',
                field: 'amount',
                type: 'numericColumn',
                valueFormatter: this.currencyFormatterForTotalInGrid(this.totalAmount)
            },
            {
                headerName: 'Statutory currency',
                colId: 'statutoryCurrency',
                field: 'statutoryCurrency',
                type: 'numericColumn',
                valueFormatter: this.currencyFormatterInGrid.bind(this),
            },
            {
                headerName: 'Functional currency',
                colId: 'functionalCurrency',
                field: 'functionalCurrency',
                type: 'numericColumn',
                valueFormatter: this.currencyFormatterInGrid.bind(this),
            },
            {
                headerName: 'Narrative',
                colId: 'narrative',
                field: 'narrative',
            },
            {
                headerName: 'Department',
                colId: 'departmentId',
                field: 'departmentId',
                valueFormatter: this.departmentValueFormatter.bind(this),
            },
            {
                headerName: 'Sec. Doc. ref',
                colId: 'secDocReference',
                field: 'secDocReference',
            },
            {
                headerName: 'Ext. Doc. Ref',
                colId: 'extDocReference',
                field: 'extDocReference',
            },
            {
                headerName: 'Contract ref.',
                colId: 'clientReference',
                field: 'clientReference',
            },
            {
                headerName: 'Commodity',
                colId: 'commodityId',
                field: 'commodityId',
                valueFormatter: this.commodityFormatter.bind(this),
            },
            {
                headerName: 'Quantity',
                colId: 'quantity',
                field: 'quantity',
                type: 'numericColumn',
            },
            {
                headerName: 'Charter',
                colId: 'charter',
                field: 'charter',
            },
            {
                headerName: 'Cost Center',
                colId: 'costCenter',
                field: 'costCenter',
            },
            {
                headerName: 'Payment terms',
                colId: 'paymentTermId',
                field: 'paymentTermId',
                valueFormatter: this.paymentTermFormatter.bind(this),
            },
            {
                headerName: 'Tax code',
                colId: 'vatId',
                field: 'vatId',
                valueFormatter: this.vatCodeFormatter.bind(this),
            },
            {
                headerName: '',
                hide: true,
                width: 40,
            },
        ];
    };
    ReverseDocumentCreateComponent.prototype.assignValuesToControl = function () {
        this.docDateFromCtrl.patchValue(moment__WEBPACK_IMPORTED_MODULE_3__(this.accountingDocumentData.documentDate).format("DD/MM/YYYY"));
        var valueDate = moment__WEBPACK_IMPORTED_MODULE_3__(this.accountingDocumentData.valueDate, "DD-MM-YYYY");
        if (valueDate.isValid()) {
            this.valueDateFormCtrl.patchValue(moment__WEBPACK_IMPORTED_MODULE_3__(this.accountingDocumentData.valueDate).format("DD/MM/YYYY"));
        }
        this.accPeriodFormCtrl.patchValue(moment__WEBPACK_IMPORTED_MODULE_3__(this.accountingDocumentData.accountingPeriod).format("MM/YYYY"));
        this.currencyCtrl.patchValue(this.accountingDocumentData.currencyCode);
    };
    ReverseDocumentCreateComponent.prototype.isReverseDateBeforeDocumentDate = function () {
        var dateOne = moment__WEBPACK_IMPORTED_MODULE_3__(this.docDateFromCtrl.value, "DD-MM-YYYY");
        var dateTwo = moment__WEBPACK_IMPORTED_MODULE_3__(this.reverseDateFormCtrl.value, "DD-MM-YYYY");
        if (dateOne.isValid() && dateTwo.isValid()) {
            var result = Object(_shared_validators_date_validators_validator__WEBPACK_IMPORTED_MODULE_16__["isDateTwoBeforeDateOne"])(dateOne.toDate(), dateTwo.toDate());
            if (result) {
                this.isReversalDateBefore = true;
                this.notifyParentForDisableNextButton.emit(true);
                return result;
            }
            else {
                this.isReversalDateBefore = false;
                this.notifyParentForDisableNextButton.emit(false);
            }
        }
    };
    ReverseDocumentCreateComponent.prototype.isReverseDateAfterCurrentAtlasDate = function () {
        var dateOne = moment__WEBPACK_IMPORTED_MODULE_3__(this.reverseDateFormCtrl.value, "DD-MM-YYYY");
        var dateTwo = moment__WEBPACK_IMPORTED_MODULE_3__(this.companyManager.getCurrentCompanyDate().toDate(), "DD-MM-YYYY");
        if (dateOne.isValid() && dateTwo.isValid()) {
            var result = Object(_shared_validators_date_validators_validator__WEBPACK_IMPORTED_MODULE_16__["isDateTwoBeforeDateOne"])(dateOne.toDate(), dateTwo.toDate());
            if (result) {
                this.isReversalDateAfter = true;
                this.notifyParentForDisableNextButton.emit(true);
                return result;
            }
            else {
                this.isReversalDateAfter = false;
                this.notifyParentForDisableNextButton.emit(false);
            }
        }
    };
    ReverseDocumentCreateComponent.prototype.isReverseDateInOtherMonth = function () {
        var _this = this;
        var dateOneMonth = moment__WEBPACK_IMPORTED_MODULE_3__(this.docDateFromCtrl.value, "DD-MM-YYYY");
        var dateTwoMonth = moment__WEBPACK_IMPORTED_MODULE_3__(this.reverseDateFormCtrl.value, 'DD-MM-YYYY');
        var documentDate = moment__WEBPACK_IMPORTED_MODULE_3__(this.accountingDocDetail.documentDate);
        var valueToPatchForAccPeriod = dateTwoMonth;
        if (dateOneMonth.isValid() && dateTwoMonth.isValid()) {
            var result = (dateOneMonth.toDate().getMonth() == dateTwoMonth.toDate().getMonth());
            if (!result) {
                this.isWarningMessage = true;
                if (this.transactionDocumentTypeId === _shared_enums_posting_document_type_enum__WEBPACK_IMPORTED_MODULE_10__["PostingDocumentType"].TA) {
                    this.warningMessage = 'The document will be posted on ' + documentDate.format("MM") + "/" + documentDate.format("YYYY");
                    valueToPatchForAccPeriod = documentDate;
                }
                else {
                    this.warningMessage = 'The document will be posted on ' + dateTwoMonth.format("MM") + "/" + dateTwoMonth.format("YYYY");
                    valueToPatchForAccPeriod = dateTwoMonth;
                }
                var confirmDialog = this.dialog.open(_shared_components_confirmation_dialog_confirmation_dialog_component__WEBPACK_IMPORTED_MODULE_7__["ConfirmationDialogComponent"], {
                    data: {
                        title: 'Warning',
                        text: this.warningMessage,
                        okButton: 'Ok',
                    },
                });
                confirmDialog.afterClosed().subscribe(function (answer) {
                    if (answer) {
                        _this.accPeriodFormCtrl.patchValue(moment__WEBPACK_IMPORTED_MODULE_3__(valueToPatchForAccPeriod).format("MM/YYYY"));
                    }
                });
            }
            else {
                this.accPeriodFormCtrl.patchValue(moment__WEBPACK_IMPORTED_MODULE_3__(valueToPatchForAccPeriod).format("MM/YYYY"));
                this.isWarningMessage = false;
                this.warningMessage = "";
            }
        }
        else {
            this.isWarningMessage = false;
            this.warningMessage = '';
        }
    };
    ReverseDocumentCreateComponent.prototype.validateReversalDate = function () {
        var result = false;
        var docResult = false;
        this.isWarningMessage = true;
        this.warningMessage = '';
        this.isReversalDateAfter = false;
        this.isReversalDateBefore = false;
        this.isReversalDateNotInLastDay = false;
        if (this.transactionDocumentTypeId === _shared_enums_posting_document_type_enum__WEBPACK_IMPORTED_MODULE_10__["PostingDocumentType"].TA) {
            docResult = this.checkIfDocumentIsValid();
            if (docResult) {
                result = this.isReverseDateBeforeDocumentDate();
                if (!result) {
                    result = this.isReverseDateAfterCurrentAtlasDate();
                }
                this.isReverseDateInOtherMonth();
            }
            else {
                this.notifyParentForDisableNextButton.emit(true);
            }
        }
        else {
            result = this.isReverseDateBeforeDocumentDate();
            if (!result) {
                result = this.isReverseDateAfterCurrentAtlasDate();
            }
            this.isReverseDateInOtherMonth();
        }
        var docDate = moment__WEBPACK_IMPORTED_MODULE_3__(this.docDateFromCtrl.value, "DD-MM-YYYY");
        var reversalDate = moment__WEBPACK_IMPORTED_MODULE_3__(this.reverseDateFormCtrl.value, "DD-MM-YYYY");
        if (docDate.isValid() == false || reversalDate.isValid() == false) {
            this.notifyParentForDisableNextButton.emit(true);
            return false;
        }
    };
    ReverseDocumentCreateComponent.prototype.onOkButtonClicked = function () {
        //this.dialog.close(null);
    };
    ReverseDocumentCreateComponent.prototype.checkIfDocumentIsValid = function () {
        var isProceed = true;
        var todayDate = this.companyManager.getCurrentCompanyDate();
        var documentDate = moment__WEBPACK_IMPORTED_MODULE_3__(this.accountingDocDetail.documentDate);
        var reverseDate = moment__WEBPACK_IMPORTED_MODULE_3__(this.reverseDateFormCtrl.value, "DD-MM-YYYY");
        var throwErrorNotOpenMonth = false;
        var throwErrorAccountingPeriod = false;
        if (reverseDate.isValid()) {
            var isSameMonthAndYearThanOperationsLastMonthClosed = reverseDate.year() === this.operationsLastMonthClosed.getFullYear() &&
                reverseDate.month() === this.operationsLastMonthClosed.getMonth();
            var isLessOrEqualToLastMonthClosed = (reverseDate.year() === this.lastMonthClosed.getFullYear()
                && reverseDate.month() <= this.lastMonthClosed.getMonth())
                || (reverseDate.year() < this.lastMonthClosed.getFullYear());
            var isSameYearLessMonthThanOperationsLastMonthClosed = reverseDate.year() === this.operationsLastMonthClosed.getFullYear() &&
                reverseDate.month() < this.operationsLastMonthClosed.getMonth();
            if (isLessOrEqualToLastMonthClosed) {
                this.snackbarService.informationSnackBar('Not allowed. [' + this.documentReference + '] can not be reversed as the period is closed');
                this.reverseDateFormCtrl.patchValue('');
                isProceed = false;
            }
            else if (reverseDate < documentDate && documentDate.month() !== reverseDate.month()) {
                this.snackbarService.throwErrorSnackBar('Not allowed. Reversal doc. date prior to original document date.');
                this.isReversalDateBefore = true;
                this.isReversalDateNotInLastDay = false;
                this.reverseDateFormCtrl.patchValue('');
                isProceed = false;
            }
            else if (!(reverseDate.date() === new Date(reverseDate.year(), reverseDate.month() + 1, 0).getDate())) {
                this.snackbarService.throwErrorSnackBar('Document date must be a last month day');
                this.isReversalDateBefore = false;
                this.isReversalDateNotInLastDay = true;
                this.reverseDateFormCtrl.patchValue('');
                isProceed = false;
            }
            else if (reverseDate.year() === todayDate.year() && reverseDate.month() > todayDate.month()) {
                this.snackbarService.throwErrorSnackBar('Document date cannot be in the future');
                this.reverseDateFormCtrl.patchValue('');
                isProceed = false;
            }
            else if (this.checkIfUserHasRequiredPrivileges(this.postOpClosedPrivilege) &&
                this.checkIfBetweenLastClosedAndOperations(reverseDate)) {
                throwErrorAccountingPeriod = true;
                isProceed = true;
            }
            else if (!this.checkIfUserHasRequiredPrivileges(this.postOpClosedPrivilege) &&
                isSameMonthAndYearThanOperationsLastMonthClosed) {
                throwErrorNotOpenMonth = true;
                this.reverseDateFormCtrl.patchValue('');
                isProceed = false;
            }
            else if (!this.checkIfBetweenLastClosedAndOperations(reverseDate) &&
                isSameYearLessMonthThanOperationsLastMonthClosed) {
                this.reverseDateFormCtrl.patchValue('');
                throwErrorNotOpenMonth = true;
                isProceed = false;
            }
            if (throwErrorNotOpenMonth) {
                this.snackbarService.throwErrorSnackBar('Not allowed: Last closed accounting period is ' +
                    this.monthNameForlastMonthClosed + ' and Last month closed for operation is ' +
                    this.monthNameForoperationsLastMonthClosed + '; The document date and the accounting period must be in an open month');
            }
            if (throwErrorAccountingPeriod) {
                this.snackbarService.informationSnackBar('Last closed accounting period is ' +
                    this.monthNameForlastMonthClosed + ' and Last month closed for operation is ' +
                    this.monthNameForoperationsLastMonthClosed + ' ; please check the accounting period');
            }
        }
        else {
            isProceed = false;
        }
        this.notifyParentForDisableNextButton.emit(!isProceed);
        return isProceed;
    };
    ReverseDocumentCreateComponent.prototype.checkIfUserHasRequiredPrivileges = function (userCompanyPrivilege) {
        if (this.authorizationService.isUserAllowedForCompany(this.company)) {
            var userPermissionLevel = this.authorizationService.getPermissionLevel(this.company, userCompanyPrivilege.privilegeName, userCompanyPrivilege.privilegeParentLevelOne, userCompanyPrivilege.privilegeParentLevelTwo);
            if (userPermissionLevel === userCompanyPrivilege.permission) {
                return true;
            }
            return false;
        }
    };
    ReverseDocumentCreateComponent.prototype.checkIfBetweenLastClosedAndOperations = function (date) {
        var matchingMonthFound = false;
        for (var i = 1; i <= this.accountingSetupModel.numberOfOpenPeriod; i++) {
            if (!matchingMonthFound) {
                if (date.year() === this.lastMonthClosed.getFullYear() &&
                    this.lastMonthClosed.getMonth() + i < 12 && date.month() === this.lastMonthClosed.getMonth() + i) {
                    matchingMonthFound = true;
                }
                else if (date.year() === this.lastMonthClosed.getFullYear() + 1 &&
                    this.lastMonthClosed.getMonth() + i >= 12 && date.month() === this.lastMonthClosed.getMonth() + i - 12) {
                    matchingMonthFound = true;
                }
            }
        }
        return matchingMonthFound;
    };
    ReverseDocumentCreateComponent.prototype.ngOnDestroy = function () {
        if (this.getAccountingLinesByAccountingIdSubscription) {
            this.getAccountingLinesByAccountingIdSubscription.unsubscribe();
        }
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('stepper'),
        __metadata("design:type", _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatStepper"])
    ], ReverseDocumentCreateComponent.prototype, "stepper", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Number)
    ], ReverseDocumentCreateComponent.prototype, "accountingId", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", String)
    ], ReverseDocumentCreateComponent.prototype, "documentReference", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Number)
    ], ReverseDocumentCreateComponent.prototype, "transactionDocumentId", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Number)
    ], ReverseDocumentCreateComponent.prototype, "transactionDocumentTypeId", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"])
    ], ReverseDocumentCreateComponent.prototype, "notifyParentForDisableNextButton", void 0);
    ReverseDocumentCreateComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'atlas-reverse-document-create',
            template: __webpack_require__(/*! ./reverse-document-create.component.html */ "./Client/app/financial/components/posting-process/reverse-document/reverse-document-create/reverse-document-create.component.html"),
            styles: [__webpack_require__(/*! ./reverse-document-create.component.scss */ "./Client/app/financial/components/posting-process/reverse-document/reverse-document-create/reverse-document-create.component.scss")]
        }),
        __metadata("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_2__["ActivatedRoute"],
            _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"],
            _core_services_authorization_service__WEBPACK_IMPORTED_MODULE_5__["AuthorizationService"],
            _shared_services_http_services_execution_service__WEBPACK_IMPORTED_MODULE_13__["ExecutionService"],
            _core_services_company_manager_service__WEBPACK_IMPORTED_MODULE_6__["CompanyManagerService"],
            _shared_services_snackbar_service__WEBPACK_IMPORTED_MODULE_15__["SnackbarService"],
            _shared_services_http_services_preaccounting_service__WEBPACK_IMPORTED_MODULE_14__["PreaccountingService"],
            _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatDialog"],
            _shared_services_ag_grid_service__WEBPACK_IMPORTED_MODULE_12__["AgGridService"]])
    ], ReverseDocumentCreateComponent);
    return ReverseDocumentCreateComponent;
}());



/***/ }),

/***/ "./Client/app/financial/components/posting-process/reverse-document/reverse-document-summary/reverse-document-summary.component.html":
/*!*******************************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/posting-process/reverse-document/reverse-document-summary/reverse-document-summary.component.html ***!
  \*******************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"main-container\">\r\n    <div fxLayout=\"row\"\r\n         class=\"quick-sum-div-height\"\r\n         fxLayoutAlign=\"space-between center\">\r\n        <div fxLayout=\"column \"\r\n             fxLayoutAlign=\"start \">\r\n            <h3>Original document [{{this.documentReference}}], reversed by Reversal document:\r\n                [{{this.reversedDocumentReference}}]</h3>\r\n        </div>\r\n        <div fxLayout=\"column\"\r\n             fxLayoutAlign=\"end\">\r\n            <button mat-icon-button\r\n                    [matMenuTriggerFor]=\"menu1\">\r\n                <i class=\"material-icons\">more_vert</i>\r\n            </button>\r\n            <mat-menu #menu1=\"matMenu\">\r\n                <button mat-menu-item\r\n                        [matMenuTriggerFor]=\"exportMenu\"\r\n                        (mouseover)=\"OnExportButton()\">\r\n                    <mat-icon>import_export</mat-icon><span>Export</span>\r\n                </button>\r\n            </mat-menu>\r\n            <mat-menu #exportMenu=\"matMenu\">\r\n                <button mat-menu-item\r\n                        (click)=\"onExportButtonClickedAsExcel()\">\r\n                    <mat-icon>import_export</mat-icon><span>Export as Excel</span>\r\n                </button>\r\n                <button mat-menu-item\r\n                        (click)=\"onExportButtonClickedAsCSV()\">\r\n                    <mat-icon>import_export</mat-icon><span>Export as CSV</span>\r\n                </button>\r\n            </mat-menu>\r\n        </div>\r\n    </div>\r\n    <div fxLayout=\"row\"\r\n         class=\"quick-sum-div-height\"\r\n         fxLayoutAlign=\"space-between center\">\r\n        <div class=\"create-accounting-document-fields\">\r\n            <div fxLayout=\"column\">\r\n                <div fxLayout=\"row\"\r\n                     fxLayoutAlign=\"left start\"\r\n                     fxLayoutGap=\"10px\">\r\n                    <mat-form-field>\r\n                        <input matInput\r\n                               placeholder=\"Document Date\"\r\n                               [formControl]='docDateFromCtrl'\r\n                               autocomplete=\"off\"\r\n                               readonly=\"true\">\r\n                    </mat-form-field>\r\n                    <mat-form-field>\r\n                        <input matInput\r\n                               placeholder=\"Value Date\"\r\n                               readonly=\"true\"\r\n                               autocomplete=\"off\"\r\n                               [formControl]='valueDateFormCtrl'>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div fxLayout=\"row\"\r\n                     fxLayoutAlign=\"left start\"\r\n                     fxLayoutGap=\"10px\">\r\n                    <mat-form-field>\r\n                        <input matInput\r\n                               placeholder=\"Accounting Period\"\r\n                               readonly=\"true\"\r\n                               autocomplete=\"off\"\r\n                               [formControl]='accPeriodFormCtrl'>\r\n                    </mat-form-field>\r\n                    <mat-form-field>\r\n                        <mat-label>Currency</mat-label>\r\n                        <input matInput\r\n                               [formControl]='currencyCtrl'\r\n                               autocomplete=\"off\"\r\n                               readonly=\"true\">\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div fxLayout=\"row\"\r\n         fxLayoutAlign=\"space-between start\">\r\n        <div fxLayout=\"column\"\r\n             fxFlex=\"98.5\">\r\n            <div ag-grid=\"reverseDocumntSummaryGridOptions\">\r\n                <ag-grid-angular class=\"ag-theme-material grid-size\"\r\n                                 [rowData]=\"accountingDocumentLine\"\r\n                                 [columnDefs]=\"reverseDocumentSummaryGridCols\"\r\n                                 domLayout=\"autoHeight\"\r\n                                 (gridReady)=\"onGridReady($event)\"\r\n                                 [pagination]=\"false\"\r\n                                 [paginationPageSize]=\"20\"\r\n                                 [enableSorting]=\"true\"\r\n                                 [enableColResize]=\"true\"\r\n                                 enableFilter=\"false\"\r\n                                 [rowHeight]=\"atlasAgGridParam.rowHeight\">\r\n                </ag-grid-angular>\r\n            </div>\r\n            <span class=\"fill-space\"></span>\r\n            <div fxLayout=\"column\"\r\n                 fxLayoutAlign=\"start end\"\r\n                 class=\"total-amount-content\">\r\n                <mat-card-subtitle class=\"total-figure\">Total Amount:\r\n                    <span class=\"total-figure-value\">{{totalAmount}}</span> </mat-card-subtitle>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n"

/***/ }),

/***/ "./Client/app/financial/components/posting-process/reverse-document/reverse-document-summary/reverse-document-summary.component.scss":
/*!*******************************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/posting-process/reverse-document/reverse-document-summary/reverse-document-summary.component.scss ***!
  \*******************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ""

/***/ }),

/***/ "./Client/app/financial/components/posting-process/reverse-document/reverse-document-summary/reverse-document-summary.component.ts":
/*!*****************************************************************************************************************************************!*\
  !*** ./Client/app/financial/components/posting-process/reverse-document/reverse-document-summary/reverse-document-summary.component.ts ***!
  \*****************************************************************************************************************************************/
/*! exports provided: ReverseDocumentSummaryComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ReverseDocumentSummaryComponent", function() { return ReverseDocumentSummaryComponent; });
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _core_services_authorization_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../../core/services/authorization.service */ "./Client/app/core/services/authorization.service.ts");
/* harmony import */ var _shared_entities_atlas_form_control__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../../shared/entities/atlas-form-control */ "./Client/app/shared/entities/atlas-form-control.ts");
/* harmony import */ var _shared_enums_posting_document_type_enum__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../../shared/enums/posting-document-type.enum */ "./Client/app/shared/enums/posting-document-type.enum.ts");
/* harmony import */ var _shared_models_posting_management_display_view__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../../shared/models/posting-management-display-view */ "./Client/app/shared/models/posting-management-display-view.ts");
/* harmony import */ var _shared_services_ag_grid_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../../../shared/services/ag-grid.service */ "./Client/app/shared/services/ag-grid.service.ts");
/* harmony import */ var _shared_services_http_services_preaccounting_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../../../shared/services/http-services/preaccounting.service */ "./Client/app/shared/services/http-services/preaccounting.service.ts");
/* harmony import */ var _shared_services_title_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../../../shared/services/title.service */ "./Client/app/shared/services/title.service.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};













var ReverseDocumentSummaryComponent = /** @class */ (function () {
    function ReverseDocumentSummaryComponent(route, router, datePipe, authorizationService, preaccountingService, gridService, titleService) {
        this.route = route;
        this.router = router;
        this.datePipe = datePipe;
        this.authorizationService = authorizationService;
        this.preaccountingService = preaccountingService;
        this.gridService = gridService;
        this.titleService = titleService;
        this.agGridOptions = {};
        this.currentStep = 0;
        this.docDateFromCtrl = new _shared_entities_atlas_form_control__WEBPACK_IMPORTED_MODULE_7__["AtlasFormControl"]('docDateFromCtrl');
        this.valueDateFormCtrl = new _shared_entities_atlas_form_control__WEBPACK_IMPORTED_MODULE_7__["AtlasFormControl"]('valueDateFormCtrl');
        this.accPeriodFormCtrl = new _shared_entities_atlas_form_control__WEBPACK_IMPORTED_MODULE_7__["AtlasFormControl"]('accPeriodFormCtrl');
        this.currencyCtrl = new _shared_entities_atlas_form_control__WEBPACK_IMPORTED_MODULE_7__["AtlasFormControl"]('currencyCtrl');
        this.totalAmount = 0;
        this.amountFormat = 'en-US';
        this.screenName = 'ReverseDocumentSummary';
        this.userActiveDirectoryName = this.authorizationService.getCurrentUser().samAccountName;
    }
    ReverseDocumentSummaryComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.totalAmount = 0;
        this.company = this.route.snapshot.paramMap.get('company');
        this.transactionDocumentIdFromRoute = Number(this.route.snapshot.paramMap.get('transactionDocumentId'));
        this.masterdata = this.route.snapshot.data.masterdata;
        this.initializeGridColumns();
        this.atlasAgGridParam = this.gridService.getAgGridParam();
        if (this.transactionDocumentIdFromRoute) {
            this.documentReferenceId = this.transactionDocumentIdFromRoute;
            this.route.queryParams.subscribe(function (params) {
                _this.reversedDocumentReference = params['originalReference'];
                _this.documentReference = params['documentReference'];
                _this.titleService.setTitle(_this.reversedDocumentReference + '- Reverse Summary View');
            });
            this.getAccountingLinesByAccountingId();
        }
    };
    ReverseDocumentSummaryComponent.prototype.getAccountingLinesByAccountingId = function () {
        var _this = this;
        if (this.accountingId || this.transactionDocumentIdFromRoute) {
            this.getAccountingLinesByAccountingIdSubscription = (this.preaccountingService.getAccoutingDocumentAllData(this.documentReferenceId).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_5__["map"])(function (data) {
                _this.documentRefData = data.value.map(function (docRef) {
                    return new _shared_models_posting_management_display_view__WEBPACK_IMPORTED_MODULE_9__["PostingManagementDisplayView"](docRef);
                });
                _this.accountingDocumentData = _this.documentRefData[0];
                if (_this.accountingDocumentData) {
                    _this.accountingDocumentLine = _this.accountingDocumentData.accountingDocumentLines;
                    _this.assignValuesToControl();
                }
            }))
                .subscribe());
        }
    };
    ReverseDocumentSummaryComponent.prototype.onGridReady = function (params) {
        this.agGridOptions = params;
        this.agGridOptions.columnDefs = this.reverseDocumentSummaryGridCols;
        this.agGridApi = this.agGridOptions.api;
        this.agGridColumnApi = this.agGridOptions.columnApi;
        this.agGridColumnApi.autoSizeAllColumns();
        this.agGridApi.setRowData([]);
    };
    ReverseDocumentSummaryComponent.prototype.currencyFormatterInGrid = function (params) {
        if (params.value > 0) {
            params.value = -Math.abs(params.value);
        }
        else {
            params.value = Math.abs(params.value);
        }
        if (isNaN(params.value) || params.value === null) {
            return '';
        }
        return new Intl.NumberFormat('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 }).format(params.value);
    };
    ReverseDocumentSummaryComponent.prototype.currencyFormatterForTotalInGrid = function (totalAmount) {
        var _this = this;
        return function (params) {
            if (params.value > 0) {
                params.value = -Math.abs(params.value);
            }
            else {
                params.value = Math.abs(params.value);
            }
            _this.totalAmount += params.value;
            if (isNaN(params.value) || params.value === null) {
                return '';
            }
            return new Intl.NumberFormat('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 }).format(params.value);
        };
    };
    ReverseDocumentSummaryComponent.prototype.costTypeFormatter = function (params) {
        if (params.value && this.masterdata.costTypes) {
            var costTypeList = this.masterdata.costTypes.find(function (x) { return x.costTypeId === params.value; });
            if (costTypeList) {
                return costTypeList.costTypeCode;
            }
        }
        return '';
    };
    ReverseDocumentSummaryComponent.prototype.departmentValueFormatter = function (params) {
        if (params.value && this.masterdata.departments) {
            return this.masterdata.departments.find(function (x) { return x.departmentId === params.value; }).description;
        }
        return '';
    };
    ReverseDocumentSummaryComponent.prototype.commodityFormatter = function (params) {
        if (params.value && this.masterdata.commodities) {
            var commodityList = this.masterdata.commodities.find(function (x) { return x.commodityId === params.value; });
            if (commodityList) {
                return commodityList.commodityCode;
            }
        }
        return '';
    };
    ReverseDocumentSummaryComponent.prototype.accountLineTypeFormatter = function (params) {
        if (params.value && this.masterdata.accountLineTypes) {
            var accountLineTypes = this.masterdata.accountLineTypes.find(function (x) { return x.accountLineTypeId === params.value; });
            if (accountLineTypes) {
                return accountLineTypes.accountLineTypeCode;
            }
        }
        return '';
    };
    ReverseDocumentSummaryComponent.prototype.paymentTermFormatter = function (params) {
        if (params.value && this.masterdata.paymentTerms) {
            var paymentTermsList = this.masterdata.paymentTerms.find(function (x) { return x.paymentTermsId === params.value; });
            if (paymentTermsList) {
                return paymentTermsList.paymentTermCode;
            }
        }
        return '';
    };
    ReverseDocumentSummaryComponent.prototype.vatCodeFormatter = function (params) {
        if (params.value && this.masterdata.vats) {
            var vatList = this.masterdata.vats.find(function (x) { return x.vatId === params.value; });
            if (vatList) {
                return vatList.vatCode;
            }
        }
        return '';
    };
    ReverseDocumentSummaryComponent.prototype.initializeGridColumns = function () {
        this.reverseDocumentSummaryGridCols = [
            {
                headerName: 'Nominal acc.',
                colId: 'accountReference',
                field: 'accountReference',
            },
            {
                headerName: 'Associated Acc.',
                colId: 'associatedAccountCode',
                field: 'associatedAccountCode',
            },
            {
                headerName: 'Acc. L. Type',
                colId: 'accountLineTypeId',
                field: 'accountLineTypeId',
                valueFormatter: this.accountLineTypeFormatter.bind(this),
            },
            {
                headerName: 'Cost types',
                colId: 'costTypeId',
                field: 'costTypeId',
                valueFormatter: this.costTypeFormatter.bind(this),
            },
            {
                headerName: 'Amount',
                colId: 'amount',
                type: 'numericColumn',
                field: 'amount',
                valueFormatter: this.currencyFormatterForTotalInGrid(this.totalAmount),
            },
            {
                headerName: 'Statutory currency',
                colId: 'statutoryCurrency',
                field: 'statutoryCurrency',
                type: 'numericColumn',
                valueFormatter: this.currencyFormatterInGrid.bind(this),
            },
            {
                headerName: 'Functional currency',
                colId: 'functionalCurrency',
                field: 'functionalCurrency',
                type: 'numericColumn',
                valueFormatter: this.currencyFormatterInGrid.bind(this),
            },
            {
                headerName: 'Narrative',
                colId: 'narrative',
                field: 'narrative',
            },
            {
                headerName: 'Department',
                colId: 'departmentId',
                field: 'departmentId',
                valueFormatter: this.departmentValueFormatter.bind(this),
            },
            {
                headerName: 'Sec. Doc. ref',
                colId: 'secDocReference',
                field: 'secDocReference',
            },
            {
                headerName: 'Ext. Doc. Ref',
                colId: 'extDocReference',
                field: 'extDocReference',
            },
            {
                headerName: 'Contract ref.',
                colId: 'clientReference',
                field: 'clientReference',
            },
            {
                headerName: 'Commodity',
                colId: 'commodityId',
                field: 'commodityId',
                valueFormatter: this.commodityFormatter.bind(this),
            },
            {
                headerName: 'Quantity',
                colId: 'quantity',
                field: 'quantity',
                type: 'numericColumn',
            },
            {
                headerName: 'Charter',
                colId: 'charter',
                field: 'charter',
            },
            {
                headerName: 'Cost Center',
                colId: 'costCenter',
                field: 'costCenter',
            },
            {
                headerName: 'Payment terms',
                colId: 'paymentTermId',
                field: 'paymentTermId',
                valueFormatter: this.paymentTermFormatter.bind(this),
            },
            {
                headerName: 'Tax code',
                colId: 'vatId',
                field: 'vatId',
                valueFormatter: this.vatCodeFormatter.bind(this),
            },
            {
                headerName: '',
                hide: true,
                width: 40,
            },
        ];
    };
    ReverseDocumentSummaryComponent.prototype.assignValuesToControl = function () {
        if (this.transactionDocumentTypeId !== _shared_enums_posting_document_type_enum__WEBPACK_IMPORTED_MODULE_8__["PostingDocumentType"].TA) {
            this.docDateFromCtrl.patchValue(moment__WEBPACK_IMPORTED_MODULE_4__(this.reverseDocumentDate).format('DD/MM/YYYY'));
        }
        else {
            this.docDateFromCtrl.patchValue(moment__WEBPACK_IMPORTED_MODULE_4__(this.accountingDocumentData.documentDate).format('DD/MM/YYYY'));
        }
        var valueDate = moment__WEBPACK_IMPORTED_MODULE_4__(this.accountingDocumentData.valueDate, 'DD-MM-YYYY');
        if (valueDate.isValid()) {
            this.valueDateFormCtrl.patchValue(moment__WEBPACK_IMPORTED_MODULE_4__(this.accountingDocumentData.valueDate).format('DD/MM/YYYY'));
        }
        this.accPeriodFormCtrl.patchValue(this.accountingPeriod ? this.accountingPeriod : moment__WEBPACK_IMPORTED_MODULE_4__(this.accountingDocumentData.accountingPeriod).format('MM/YYYY'));
        this.currencyCtrl.patchValue(this.accountingDocumentData.currencyCode);
    };
    ReverseDocumentSummaryComponent.prototype.OnExportButton = function () {
    };
    ReverseDocumentSummaryComponent.prototype.onExportButtonClickedAsExcel = function () {
        this.agGridOptions.api.exportDataAsExcel(this.getExportParams('.xlsx'));
    };
    ReverseDocumentSummaryComponent.prototype.onExportButtonClickedAsCSV = function () {
        this.agGridOptions.api.exportDataAsCsv(this.getExportParams('.csv'));
    };
    ReverseDocumentSummaryComponent.prototype.getExportParams = function (fileExtension) {
        var now = new Date();
        var currentDate = this.datePipe.transform(now, 'yyyyMMdd_hhmm').toString().toUpperCase();
        var params = {
            fileName: currentDate + '_' + this.company + '_' + this.screenName + '_' + this.userActiveDirectoryName + fileExtension,
        };
        return params;
    };
    ReverseDocumentSummaryComponent.prototype.ngOnDestroy = function () {
        if (this.getAccountingLinesByAccountingIdSubscription) {
            this.getAccountingLinesByAccountingIdSubscription.unsubscribe();
        }
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('stepper'),
        __metadata("design:type", _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatStepper"])
    ], ReverseDocumentSummaryComponent.prototype, "stepper", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        __metadata("design:type", Number)
    ], ReverseDocumentSummaryComponent.prototype, "accountingId", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        __metadata("design:type", Number)
    ], ReverseDocumentSummaryComponent.prototype, "documentReferenceId", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        __metadata("design:type", String)
    ], ReverseDocumentSummaryComponent.prototype, "documentReference", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        __metadata("design:type", String)
    ], ReverseDocumentSummaryComponent.prototype, "reversedDocumentReference", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        __metadata("design:type", Number)
    ], ReverseDocumentSummaryComponent.prototype, "transactionDocumentTypeId", void 0);
    ReverseDocumentSummaryComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'atlas-reverse-document-summary',
            template: __webpack_require__(/*! ./reverse-document-summary.component.html */ "./Client/app/financial/components/posting-process/reverse-document/reverse-document-summary/reverse-document-summary.component.html"),
            styles: [__webpack_require__(/*! ./reverse-document-summary.component.scss */ "./Client/app/financial/components/posting-process/reverse-document/reverse-document-summary/reverse-document-summary.component.scss")],
            providers: [_angular_common__WEBPACK_IMPORTED_MODULE_0__["DatePipe"]],
        }),
        __metadata("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"],
            _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"],
            _angular_common__WEBPACK_IMPORTED_MODULE_0__["DatePipe"],
            _core_services_authorization_service__WEBPACK_IMPORTED_MODULE_6__["AuthorizationService"],
            _shared_services_http_services_preaccounting_service__WEBPACK_IMPORTED_MODULE_11__["PreaccountingService"],
            _shared_services_ag_grid_service__WEBPACK_IMPORTED_MODULE_10__["AgGridService"],
            _shared_services_title_service__WEBPACK_IMPORTED_MODULE_12__["TitleService"]])
    ], ReverseDocumentSummaryComponent);
    return ReverseDocumentSummaryComponent;
}());



/***/ }),

/***/ "./Client/app/financial/components/posting-process/reverse-document/reverse-document.component.html":
/*!**********************************************************************************************************!*\
  !*** ./Client/app/financial/components/posting-process/reverse-document/reverse-document.component.html ***!
  \**********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"main-container\">\r\n\r\n    <h2>Accounting document reversal</h2>\r\n\r\n    <mat-horizontal-stepper [linear]\r\n                            (selectionChange)=\"onChangeStepAction($event)\"\r\n                            #stepper>\r\n        <ng-template matStepperIcon=\"edit\">\r\n            <mat-icon>check</mat-icon>\r\n        </ng-template>\r\n        <mat-step>\r\n            <ng-template matStepLabel>Selection</ng-template>\r\n            <atlas-cash-selection-form-component #selectionFormComponent>\r\n            </atlas-cash-selection-form-component>\r\n\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"start start\">\r\n                <mat-card fxFlex=\"100%\">\r\n                    <div fxLayout=\"row\"\r\n                         fxLayoutAlign=\"start none\"\r\n                         class=\"search\">\r\n                        <atlas-masterdata-user-preferences-input fxFlex=\"100%\"\r\n                                                                 class=\"contextual-search-for-currency\"\r\n                                                                 isEditable=\"true\"\r\n                                                                 [fieldControl]=\"documentCtrl\"\r\n                                                                 label=\"Document\"\r\n                                                                 [options]=\"filteredDocumentReferences\"\r\n                                                                 displayProperty=\"documentReference\"\r\n                                                                 [selectProperties]=\"['documentReference']\"\r\n                                                                 lightBoxTitle=\"Results for Document\"\r\n                                                                 gridId=\"documentReferenceGrid\"\r\n                                                                 (valueChange)='valueChanged($event)'\r\n                                                                 (optionSelected)=\"valueChanged($event)\"\r\n                                                                 (keyup.enter)=\"OnChangeValue($event)\"\r\n                                                                 isSearchBar=\"true\">\r\n                        </atlas-masterdata-user-preferences-input>\r\n                    </div>\r\n                </mat-card>\r\n            </div>\r\n            <div fxLayout=\"row\"\r\n                 fxLayoutAlign=\"start\">\r\n                <mat-card fxFlex=\"100\">\r\n                    <div fxLayout=\"row\"\r\n                         fxLayoutAlign=\"space-between\"\r\n                         class=\"atlas-grid-card-header\">\r\n                        <span class=\"fill-space\"> </span>\r\n                    </div>\r\n                    <h2 class=\"header-accounting-entries\">{{noOfAccountingEntries}} Accounting Entries Found</h2>\r\n                    <div ag-grid=\"reverseDocumntGridOptions\">\r\n                        <ag-grid-angular class=\"ag-theme-material grid-size\"\r\n                                         [rowData]=\"accountingDocumentLine\"\r\n                                         [columnDefs]=\"reverseDocumentGridCols\"\r\n                                         domLayout=\"autoHeight\"\r\n                                         (gridReady)=\"onGridReady($event)\"\r\n                                         [pagination]=\"false\"\r\n                                         [paginationPageSize]=\"20\"\r\n                                         [enableSorting]=\"true\"\r\n                                         [enableColResize]=\"true\"\r\n                                         enableFilter=\"false\"\r\n                                         [rowHeight]=\"atlasAgGridParam.rowHeight\">\r\n                        </ag-grid-angular>\r\n                    </div>\r\n                </mat-card>\r\n            </div>\r\n            <div fxLayout=\"row \"\r\n                 fxLayoutAlign=\"space-between start\"\r\n                 class=\"button-details\">\r\n                <div fxLayout=\"column \"\r\n                     fxLayoutAlign=\"start \">\r\n                    <button mat-button\r\n                            (click)=\"onSelectionDiscardButtonClicked()\">\r\n                        CANCEL\r\n                    </button>\r\n                </div>\r\n                <div fxLayout=\"column \"\r\n                     fxLayoutAlign=\"start \">\r\n                    <div fxLayout=\"row \"\r\n                         fxLayoutAlign=\"end start \">\r\n                        <button mat-raised-button\r\n                                [disabled]=\"this.accountingDocumentLine == null || this.accountingDocumentLine.length == 0 || this.disableNextButton\"\r\n                                (click)=\"onSelectionNextButtonClicked()\">\r\n                            Next\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </mat-step>\r\n        <mat-step>\r\n            <ng-template matStepLabel>Create</ng-template>\r\n            <atlas-reverse-document-create #reverseDocumentCreateComponent\r\n                                           (notifyParentForDisableNextButton)=\"getDisabledState($event)\"\r\n                                           [accountingId]='accountingId'\r\n                                           [transactionDocumentId]='transactionDocumentId'\r\n                                           [transactionDocumentTypeId]='transactionDocumentTypeId'\r\n                                           [documentReference]='documentReference'>\r\n            </atlas-reverse-document-create>\r\n            <div fxLayout=\"row\"\r\n                 fxLayoutAlign=\"space-between start\"\r\n                 class=\"button-details\">\r\n                <div fxLayout=\"column\"\r\n                     fxLayoutAlign=\"start center\">\r\n                    <div fxLayout=\"row\"\r\n                         fxLayoutAlign=\"space-between start\">\r\n                        <button mat-button\r\n                                (click)=\"onCreateCancelButtonClicked()\">\r\n                            CANCEL\r\n                        </button>\r\n                        <button mat-raised-button\r\n                                (click)=\"onCreatePreviousButtonClicked()\">\r\n                            Previous\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div fxLayout=\"column \"\r\n                     fxLayoutAlign=\"end center\">\r\n                    <div fxLayout=\"row \"\r\n                         fxLayoutAlign=\"end start\">\r\n                        <button mat-raised-button\r\n                                [disabled]=\"disableButton\"\r\n                                (click)=\"onCreateNextButtonClicked()\">\r\n                            Next\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </mat-step>\r\n        <mat-step>\r\n            <ng-template matStepLabel>Summary</ng-template>\r\n            <atlas-reverse-document-summary #revervseDocumentSummaryComponent\r\n                                            [accountingId]='accountingId'\r\n                                            [transactionDocumentTypeId]='transactionDocumentTypeId'\r\n                                            [documentReferenceId]='transactionDocumentId'\r\n                                            [documentReference]='documentReference'\r\n                                            [reversedDocumentReference]='reversedDocumentReference'>\r\n            </atlas-reverse-document-summary>\r\n            <div fxLayout=\"row\"\r\n                 fxLayoutAlign=\"space-between start\"\r\n                 class=\"button-details\">\r\n                <div fxLayout=\"column\"\r\n                     fxLayoutAlign=\"start center\">\r\n                </div>\r\n                <div fxLayout=\"column \"\r\n                     fxLayoutAlign=\"end center\">\r\n                    <div fxLayout=\"row \"\r\n                         fxLayoutAlign=\"end start\">\r\n                        <button mat-raised-button\r\n                                (click)=\"onSummaryFinishButtonClicked()\">\r\n                            Finish\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </mat-step>\r\n    </mat-horizontal-stepper>\r\n</div>\r\n<atlas-lock-interval [resourcesInformation]=\"resourcesInformation\">\r\n</atlas-lock-interval>\r\n"

/***/ }),

/***/ "./Client/app/financial/components/posting-process/reverse-document/reverse-document.component.scss":
/*!**********************************************************************************************************!*\
  !*** ./Client/app/financial/components/posting-process/reverse-document/reverse-document.component.scss ***!
  \**********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".contextual-search-for-document {\n  width: 400px; }\n\n.mat-stepper-horizontal {\n  background-color: transparent; }\n\n.header-accounting-entries {\n  margin-left: 20px; }\n"

/***/ }),

/***/ "./Client/app/financial/components/posting-process/reverse-document/reverse-document.component.ts":
/*!********************************************************************************************************!*\
  !*** ./Client/app/financial/components/posting-process/reverse-document/reverse-document.component.ts ***!
  \********************************************************************************************************/
/*! exports provided: ReverseDocumentComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ReverseDocumentComponent", function() { return ReverseDocumentComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _core_services_authorization_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../core/services/authorization.service */ "./Client/app/core/services/authorization.service.ts");
/* harmony import */ var _core_services_company_manager_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../core/services/company-manager.service */ "./Client/app/core/services/company-manager.service.ts");
/* harmony import */ var _shared_components_base_form_component_base_form_component_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../shared/components/base-form-component/base-form-component.component */ "./Client/app/shared/components/base-form-component/base-form-component.component.ts");
/* harmony import */ var _shared_components_confirmation_dialog_confirmation_dialog_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../../shared/components/confirmation-dialog/confirmation-dialog.component */ "./Client/app/shared/components/confirmation-dialog/confirmation-dialog.component.ts");
/* harmony import */ var _shared_entities_atlas_form_control__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../../shared/entities/atlas-form-control */ "./Client/app/shared/entities/atlas-form-control.ts");
/* harmony import */ var _shared_entities_create_transaction_document_entity__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../../shared/entities/create-transaction-document.entity */ "./Client/app/shared/entities/create-transaction-document.entity.ts");
/* harmony import */ var _shared_entities_lock_functional_context_entity__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../../../shared/entities/lock-functional-context.entity */ "./Client/app/shared/entities/lock-functional-context.entity.ts");
/* harmony import */ var _shared_entities_lock_resource_information_entity__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../../../shared/entities/lock-resource-information.entity */ "./Client/app/shared/entities/lock-resource-information.entity.ts");
/* harmony import */ var _shared_enums_permission_level_enum__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../../../shared/enums/permission-level.enum */ "./Client/app/shared/enums/permission-level.enum.ts");
/* harmony import */ var _shared_enums_posting_document_type_enum__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../../../shared/enums/posting-document-type.enum */ "./Client/app/shared/enums/posting-document-type.enum.ts");
/* harmony import */ var _shared_models_reversal_document_display_view__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../../../shared/models/reversal-document-display-view */ "./Client/app/shared/models/reversal-document-display-view.ts");
/* harmony import */ var _shared_models_transaction_detail_display_view__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../../../../shared/models/transaction-detail-display-view */ "./Client/app/shared/models/transaction-detail-display-view.ts");
/* harmony import */ var _shared_services_ag_grid_service__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../../../../shared/services/ag-grid.service */ "./Client/app/shared/services/ag-grid.service.ts");
/* harmony import */ var _shared_services_form_configuration_provider_service__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../../../../shared/services/form-configuration-provider.service */ "./Client/app/shared/services/form-configuration-provider.service.ts");
/* harmony import */ var _shared_services_http_services_execution_service__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../../../../shared/services/http-services/execution.service */ "./Client/app/shared/services/http-services/execution.service.ts");
/* harmony import */ var _shared_services_http_services_lock_service__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../../../../shared/services/http-services/lock.service */ "./Client/app/shared/services/http-services/lock.service.ts");
/* harmony import */ var _shared_services_http_services_preaccounting_service__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ../../../../shared/services/http-services/preaccounting.service */ "./Client/app/shared/services/http-services/preaccounting.service.ts");
/* harmony import */ var _shared_services_preaccounting_document_reference_data_loader__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ../../../../shared/services/preaccounting/document-reference-data-loader */ "./Client/app/shared/services/preaccounting/document-reference-data-loader.ts");
/* harmony import */ var _shared_services_snackbar_service__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ../../../../shared/services/snackbar.service */ "./Client/app/shared/services/snackbar.service.ts");
/* harmony import */ var _shared_services_title_service__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ../../../../shared/services/title.service */ "./Client/app/shared/services/title.service.ts");
/* harmony import */ var _shared_services_ui_service__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ../../../../shared/services/ui.service */ "./Client/app/shared/services/ui.service.ts");
/* harmony import */ var _shared_services_util_service__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ../../../../shared/services/util.service */ "./Client/app/shared/services/util.service.ts");
/* harmony import */ var _reverse_document_create_reverse_document_create_component__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./reverse-document-create/reverse-document-create.component */ "./Client/app/financial/components/posting-process/reverse-document/reverse-document-create/reverse-document-create.component.ts");
/* harmony import */ var _reverse_document_summary_reverse_document_summary_component__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./reverse-document-summary/reverse-document-summary.component */ "./Client/app/financial/components/posting-process/reverse-document/reverse-document-summary/reverse-document-summary.component.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};































var ReverseDocumentComponent = /** @class */ (function (_super) {
    __extends(ReverseDocumentComponent, _super);
    function ReverseDocumentComponent(route, router, utilService, documentReferenceDataLoader, formBuilder, snackbarService, uiService, preaccountingService, executionService, formConfigurationProvider, dialog, authorizationService, companyManager, lockService, titleService, gridService) {
        var _this = _super.call(this, formConfigurationProvider) || this;
        _this.route = route;
        _this.router = router;
        _this.utilService = utilService;
        _this.documentReferenceDataLoader = documentReferenceDataLoader;
        _this.formBuilder = formBuilder;
        _this.snackbarService = snackbarService;
        _this.uiService = uiService;
        _this.preaccountingService = preaccountingService;
        _this.executionService = executionService;
        _this.formConfigurationProvider = formConfigurationProvider;
        _this.dialog = dialog;
        _this.authorizationService = authorizationService;
        _this.companyManager = companyManager;
        _this.lockService = lockService;
        _this.titleService = titleService;
        _this.gridService = gridService;
        _this.agGridOptions = {};
        _this.currentStep = 0;
        _this.documentCtrl = new _shared_entities_atlas_form_control__WEBPACK_IMPORTED_MODULE_11__["AtlasFormControl"]('documentCtrl');
        _this.disableButton = true;
        _this.disableNextButton = true;
        _this.isSave = false;
        _this.createAccountingDocumentLines = [];
        _this.subscription = [];
        _this.noOfAccountingEntries = 0;
        _this.destroy$ = new rxjs__WEBPACK_IMPORTED_MODULE_5__["Subject"]();
        _this.resourcesInformation = new Array();
        _this.isAccrualDocument = false;
        _this.isAnyAmountColumnZero = false;
        _this.actionResult = false;
        _this.monthNames = ['January', 'February', 'March', 'April', 'May', 'June',
            'July', 'August', 'September', 'October', 'November', 'December'];
        _this.postOpClosedPrivilege = {
            profileId: null,
            privilegeName: 'POSTOPCLOSED',
            permission: _shared_enums_permission_level_enum__WEBPACK_IMPORTED_MODULE_15__["PermissionLevels"].ReadWrite,
            privilegeParentLevelOne: 'Financials',
            privilegeParentLevelTwo: 'POSTINGMGT',
        };
        _this.searchForm = _this.formBuilder.group({
            searchReferenceCtrl: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
        });
        return _this;
    }
    ReverseDocumentComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.company = this.route.snapshot.paramMap.get('company');
        this.initializeGridColumns();
        this.titleService.setTitle(this.route.snapshot.data.title);
        this.documentReferenceDataLoader.getData().subscribe(function (documents) {
            _this.filteredDocumentReferences = documents;
            _this.allDocumentReferences = documents;
        });
        this.documentCtrl.valueChanges.subscribe(function (input) {
            _this.filteredDocumentReferences = _this.utilService.filterListforAutocomplete(input, _this.allDocumentReferences, ['documentReference']);
        });
        this.subscription.push(this.preaccountingService.getAccountingSetupDetails()
            .subscribe(function (data) {
            _this.accountingSetupModel = data;
            _this.operationsLastMonthClosed = new Date(new Date(_this.accountingSetupModel.lastMonthClosedForOperation).toDateString());
            _this.lastMonthClosed = new Date(new Date(_this.accountingSetupModel.lastMonthClosed).toDateString());
            _this.monthNameForlastMonthClosed = _this.monthNames[_this.lastMonthClosed.getMonth()];
            _this.monthNameForoperationsLastMonthClosed = _this.monthNames[_this.operationsLastMonthClosed.getMonth()];
        }));
        this.getFormGroup();
        this.atlasAgGridParam = this.gridService.getAgGridParam();
    };
    ReverseDocumentComponent.prototype.canDeactivate = function () {
        if (this.createDocumentFormGroup.dirty && this.isSave === false) {
            return window.confirm('Leave an unsave form? \nYour changes won\'t be applied!');
        }
        return true;
    };
    ReverseDocumentComponent.prototype.getFormGroup = function () {
        this.createDocumentFormGroup = this.formBuilder.group({
            documentCtrl: this.documentCtrl,
        });
        return _super.prototype.getFormGroup.call(this);
    };
    ReverseDocumentComponent.prototype.onGridReady = function (params) {
        this.agGridOptions = params;
        this.agGridOptions.columnDefs = this.reverseDocumentGridCols;
        this.agGridApi = this.agGridOptions.api;
        this.agGridColumnApi = this.agGridOptions.columnApi;
        this.agGridColumnApi.autoSizeAllColumns();
        this.agGridApi.setRowData([]);
    };
    ReverseDocumentComponent.prototype.initializeGridColumns = function () {
        var _this = this;
        this.reverseDocumentGridCols = [
            {
                headerName: 'Doc. Ref.',
                field: 'documentReference',
                colId: 'documentReference',
                hide: false,
                editable: false,
            },
            {
                headerName: 'Posting Line No',
                field: 'postingLineId',
                colId: 'postingLineId',
                hide: false,
                editable: false,
            },
            {
                headerName: 'Nom. Account',
                field: 'nomAccount',
                colId: 'nomAccount',
                hide: false,
                editable: false,
            },
            {
                headerName: 'Match Flag',
                field: 'matchFlag',
                colId: 'matchFlag',
                hide: false,
                editable: false,
            },
            {
                headerName: 'Client Ref.',
                field: 'clientReference',
                colId: 'clientReference',
                hide: false,
                editable: false,
            },
            {
                headerName: 'Cost Type',
                field: 'costType',
                colId: 'costType',
                hide: false,
                editable: false,
            },
            {
                headerName: 'Cost Center',
                field: 'costCenter',
                colId: 'costCenter',
                hide: false,
                editable: false,
            },
            {
                headerName: 'DMS ID',
                field: 'dmsId',
                colId: 'dmsId',
                hide: false,
                editable: false,
            },
            {
                headerName: 'Amount',
                field: 'amount',
                colId: 'amount',
                type: 'numericColumn',
                valueFormatter: this.NumberFormatterForTotalInGrid.bind(this),
                hide: false,
                editable: false,
            },
            {
                headerName: 'Dept',
                field: 'department',
                colId: 'department',
                hide: false,
                editable: false,
            },
            {
                headerName: 'Associate A/c',
                field: 'associatedAccountCode',
                colId: 'associatedAccountCode',
                hide: false,
                editable: false,
            },
            {
                headerName: 'Payment Terms',
                field: 'paymentTerm',
                colId: 'paymentTerm',
                hide: false,
                editable: false,
            },
            {
                headerName: 'Contract No',
                field: 'contractSectionCode',
                colId: 'contractSectionCode',
                hide: false,
                editable: false,
            },
            {
                headerName: 'Sec. Ref.',
                field: 'sectionReference',
                colId: 'sectionReference',
                hide: false,
                editable: false,
            },
            {
                headerName: 'Ccy',
                field: 'currencyCode',
                colId: 'currencyCode',
                hide: false,
                editable: false,
            },
            {
                headerName: 'Acc. Period',
                field: 'accountingPeriod',
                colId: 'accountingPeriod',
                hide: false,
                editable: false,
            },
            {
                headerName: 'Doc. Date',
                field: 'documentDate',
                colId: 'documentDate',
                hide: false,
                valueFormatter: function (params) { return _this.uiService.dateFormatter(params); },
                editable: false,
            },
            {
                headerName: 'Value Date',
                field: 'valueDate',
                colId: 'valueDate',
                hide: false,
                valueFormatter: function (params) { return _this.uiService.dateFormatter(params); },
                editable: false,
            },
            {
                headerName: 'Posted Date',
                field: 'postedDate',
                colId: 'postedDate',
                hide: false,
                valueFormatter: function (params) { return _this.uiService.dateFormatter(params); },
                editable: false,
            },
            {
                headerName: 'Functional Currency',
                field: 'functionalCurrency',
                colId: 'functionalCurrency',
                hide: false,
                editable: false,
                type: 'numericColumn',
                valueFormatter: this.NumberFormatterForTotalInGrid.bind(this)
            },
            {
                headerName: 'Statutory Currency',
                field: 'statutoryCurrency',
                colId: 'statutoryCurrency',
                hide: false,
                editable: false,
                type: 'numericColumn',
                valueFormatter: this.NumberFormatterForTotalInGrid.bind(this)
            },
            {
                headerName: 'Secure Payment',
                field: 'securePayment',
                colId: 'securePayment',
                hide: false,
                editable: false,
            },
            {
                headerName: 'VAT TurnOver',
                field: 'vatTurnover',
                colId: 'vatTurnover',
                hide: false,
                editable: false,
            },
            {
                headerName: 'Account Category',
                field: 'accountCategory',
                colId: 'accountCategory',
                hide: false,
                editable: false,
            },
            {
                headerName: 'Province',
                field: 'province',
                colId: 'province',
                hide: false,
                editable: false,
            },
            {
                headerName: 'Pre-match',
                field: 'preMatch',
                colId: 'preMatch',
                hide: false,
                editable: false,
            },
            {
                headerName: 'Interface Status',
                field: 'interfaceStatus',
                colId: 'interfaceStatus',
                hide: false,
                editable: false,
            },
            {
                headerName: 'Original Ref.',
                field: 'originalReferenceId',
                colId: 'originalReferenceId',
                hide: false,
                editable: false,
            },
            {
                headerName: 'Payee',
                field: 'payee',
                colId: 'payee',
                hide: false,
                editable: false,
            },
            {
                headerName: 'R.O.E.',
                field: 'roe',
                colId: 'roe',
                hide: false,
                editable: false,
            },
            {
                headerName: 'ROE Type M/D',
                field: 'roeType',
                colId: 'roeType',
                hide: false,
                editable: false,
            },
            {
                headerName: 'Commodity',
                field: 'commodity',
                colId: 'commodity',
                hide: false,
                editable: false,
            },
            {
                headerName: 'Accrual Number',
                field: 'accuralNumber',
                colId: 'accuralNumber',
                type: 'numericColumn',
                hide: false,
                editable: false,
            },
            {
                headerName: 'Back Office Doc ID',
                field: 'backOfficeDocId',
                colId: 'backOfficeDocId',
                hide: false,
                editable: false,
            },
            {
                headerName: 'GL Date(BL Date)',
                field: 'glDate',
                colId: 'glDate',
                hide: false,
                valueFormatter: function (params) { return _this.uiService.dateFormatter(params); },
                editable: false,
            },
            {
                headerName: 'Back Office Posting Date',
                field: 'backOfficePostingDate',
                colId: 'backOfficePostingDate',
                hide: false,
                valueFormatter: function (params) { return _this.uiService.dateFormatter(params); },
                editable: false,
            },
            {
                headerName: 'Document Type',
                field: 'documentType',
                colId: 'documentType',
                hide: false,
                editable: false,
            },
            {
                headerName: 'Payment Trax ID',
                field: 'paymentTraxId',
                colId: 'paymentTraxId',
                hide: false,
                editable: false,
            },
            {
                headerName: 'ptime',
                field: 'postedTime',
                colId: 'postedTime',
                hide: false,
                editable: false,
            },
            {
                headerName: 'Setup User',
                field: 'setupUser',
                colId: 'setupUser',
                hide: false,
                editable: false,
            },
            {
                headerName: 'Setup Date',
                field: 'setupDate',
                colId: 'setupDate',
                hide: false,
                valueFormatter: function (params) { return _this.uiService.dateFormatter(params); },
                editable: false,
            },
            {
                headerName: 'Setup Time',
                field: 'setupTime',
                colId: 'setupTime',
                hide: false,
                editable: false,
            },
            {
                headerName: 'Original Value Date',
                field: 'originalValueDate',
                colId: 'originalValueDate',
                hide: false,
                valueFormatter: function (params) { return _this.uiService.dateFormatter(params); },
                editable: false,
            },
            {
                headerName: 'Tax Code',
                field: 'vatCode',
                colId: 'vatCode',
                hide: false,
                editable: false,
            },
            {
                headerName: 'Match Date',
                field: 'matchDate',
                colId: 'matchDate',
                hide: false,
                valueFormatter: function (params) { return _this.uiService.dateFormatter(params); },
                editable: false,
            },
            {
                headerName: 'Match Time',
                field: 'matchTime',
                colId: 'matchTime',
                hide: false,
                editable: false,
            },
            {
                headerName: 'Payment Document date',
                field: 'paymentDocumentdate',
                colId: 'paymentDocumentdate',
                hide: false,
                editable: false,
            },
            {
                headerName: 'Narrative',
                field: 'narrative',
                colId: 'narrative',
                hide: false,
                editable: false,
            },
            {
                headerName: 'Inhouse/External',
                field: 'inhouseExternal',
                colId: 'inhouseExternal',
                hide: false,
                editable: false,
            },
            {
                headerName: 'Account Line Type',
                field: 'accountLineType',
                colId: 'accountLineType',
                hide: false,
                editable: false,
            },
            {
                headerName: 'Charter',
                field: 'charter',
                colId: 'charter',
                hide: false,
                editable: false,
            },
            {
                headerName: 'Contract Cmy Description',
                field: 'contractCommodityDescription',
                colId: 'contractCommodityDescription',
                hide: false,
                editable: false,
            },
            {
                headerName: 'Contract Cmy Type',
                field: 'contractCommodityType',
                colId: 'contractCommodityType',
                hide: false,
                editable: false,
            },
            {
                headerName: 'Contract IncoTerms',
                field: 'contractIncoTerms',
                colId: 'contractIncoTerms',
                hide: false,
                editable: false,
            },
            {
                headerName: 'Contract BL Date',
                field: 'contractBLDate',
                colId: 'contractBLDate',
                hide: false,
                valueFormatter: function (params) { return _this.uiService.dateFormatter(params); },
                editable: false,
            },
            {
                headerName: 'Client Group A/c',
                field: 'clientGroupAccount',
                colId: 'clientGroupAccount',
                hide: false,
                editable: false,
            },
            {
                headerName: 'Contract Group No',
                field: 'contractGroupNumber',
                colId: 'contractGroupNumber',
                hide: false,
                editable: false,
            },
            {
                headerName: 'Contract Port Origin',
                field: 'contractPortOrigin',
                colId: 'contractPortOrigin',
                hide: false,
                editable: false,
            },
            {
                headerName: 'Contract Port Dest',
                field: 'contractPortDestination',
                colId: 'contractPortDestination',
                hide: false,
                editable: false,
            },
            {
                headerName: 'Contract IncoTerm Port',
                field: 'contractIntercomPort',
                colId: 'contractIntercomPort',
                hide: false,
                editable: false,
            },
            {
                headerName: 'Contract Shipping Period',
                field: 'contractShippingPeriod',
                colId: 'contractShippingPeriod',
                hide: false,
                editable: false,
            },
            {
                headerName: 'Contract Trader',
                field: 'contractTrader',
                colId: 'contractTrader',
                hide: false,
                editable: false,
            },
            {
                headerName: 'Contract Vessel',
                field: 'contractVessel',
                colId: 'contractVessel',
                hide: false,
                editable: false,
            },
            {
                headerName: 'Contract Vessel IMO',
                field: 'contractVesselImo',
                colId: 'contractVesselImo',
                hide: false,
                editable: false,
            },
            {
                headerName: 'Accounting Date',
                field: 'accountingDate',
                colId: 'accountingDate',
                hide: false,
                valueFormatter: function (params) { return _this.uiService.dateFormatter(params); },
                editable: false,
            },
            {
                headerName: 'Weight (in MT)',
                field: 'weight',
                colId: 'weight',
                hide: false,
                editable: false,
            },
        ];
    };
    ReverseDocumentComponent.prototype.onSelectionDiscardButtonClicked = function () {
        this.isSave = true;
        this.onCancelWarning();
    };
    ReverseDocumentComponent.prototype.onSelectionNextButtonClicked = function () {
        var _this = this;
        this.lockService.isLockedAccountingDocument(this.accountingId).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_6__["takeUntil"])(this.destroy$)).subscribe(function (lock) {
            if (lock.isLocked) {
                _this.dialog.open(_shared_components_confirmation_dialog_confirmation_dialog_component__WEBPACK_IMPORTED_MODULE_10__["ConfirmationDialogComponent"], {
                    data: {
                        title: 'Lock',
                        text: lock.message,
                        okButton: 'Got it',
                    },
                });
            }
            else {
                _this.lockService.cleanSessionLocks().pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_6__["takeUntil"])(_this.destroy$)).subscribe(function () {
                    _this.lockService.lockAccountingDocument(_this.accountingId, _shared_entities_lock_functional_context_entity__WEBPACK_IMPORTED_MODULE_13__["LockFunctionalContext"].AccountingDocumentReversal).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_6__["takeUntil"])(_this.destroy$)).subscribe(function (lockState) {
                        _this.childReverseDocumentCreateComponent.getAccountingLinesByAccountingId();
                        if (_this.currentStep === 0) {
                            _this.stepper.next();
                        }
                        _this.startLockRefresh(_this.accountingId, _this.documentReference);
                        _this.titleService.setTitle(_this.documentReference + ' - Create Reversal');
                    });
                });
            }
        });
    };
    ReverseDocumentComponent.prototype.validateReversalDate = function () {
        var docResult = false;
        if (this.transactionDocumentTypeId === _shared_enums_posting_document_type_enum__WEBPACK_IMPORTED_MODULE_16__["PostingDocumentType"].TA) {
            docResult = this.checkIfDocumentIsValid();
        }
        else {
            docResult = true;
        }
        return docResult;
    };
    ReverseDocumentComponent.prototype.checkIfDocumentIsValid = function () {
        var isProceed = true;
        var todayDate = this.companyManager.getCurrentCompanyDate();
        var documentDate = moment__WEBPACK_IMPORTED_MODULE_4__(this.accountingDocumentData.accountingDocumentLines[0].documentDate);
        var throwErrorNotOpenMonth = false;
        var throwErrorAccountingPeriod = false;
        var isSameMonthAndYearThanOperationsLastMonthClosed = documentDate.year() === this.operationsLastMonthClosed.getFullYear() &&
            documentDate.month() === this.operationsLastMonthClosed.getMonth();
        var isLessOrEqualToLastMonthClosed = (documentDate.year() === this.lastMonthClosed.getFullYear()
            && documentDate.month() <= this.lastMonthClosed.getMonth())
            || (documentDate.year() < this.lastMonthClosed.getFullYear());
        var isSameYearLessMonthThanOperationsLastMonthClosed = documentDate.year() === this.operationsLastMonthClosed.getFullYear() &&
            documentDate.month() < this.operationsLastMonthClosed.getMonth();
        if (isLessOrEqualToLastMonthClosed) {
            this.snackbarService.informationSnackBar('Not allowed. [' + this.documentReference + '] can not be reversed as the period is closed');
            isProceed = false;
        }
        else if ((documentDate <= this.companyManager.getCurrentCompanyDate() || documentDate.month() === todayDate.month()) &&
            !(documentDate.date() === new Date(documentDate.year(), documentDate.month() + 1, 0).getDate())) {
            this.snackbarService.throwErrorSnackBar('Document date must be a last month day');
            isProceed = false;
        }
        else if (documentDate.year() === todayDate.year() && documentDate.month() > todayDate.month()) {
            this.snackbarService.throwErrorSnackBar('Document date cannot be in the future');
            isProceed = false;
        }
        else if (this.checkIfUserHasRequiredPrivileges(this.postOpClosedPrivilege) &&
            this.checkIfBetweenLastClosedAndOperations(documentDate)) {
            throwErrorAccountingPeriod = true;
            isProceed = true;
        }
        else if (!this.checkIfUserHasRequiredPrivileges(this.postOpClosedPrivilege) &&
            isSameMonthAndYearThanOperationsLastMonthClosed) {
            throwErrorNotOpenMonth = true;
            isProceed = false;
        }
        else if (!this.checkIfBetweenLastClosedAndOperations(documentDate) &&
            isSameYearLessMonthThanOperationsLastMonthClosed) {
            throwErrorNotOpenMonth = true;
            isProceed = false;
        }
        if (throwErrorNotOpenMonth) {
            this.snackbarService.throwErrorSnackBar('Not allowed: Last closed accounting period is ' +
                this.monthNameForlastMonthClosed + ' and Last month closed for operation is ' +
                this.monthNameForoperationsLastMonthClosed + '; The document date and the accounting period must be in an open month');
        }
        if (throwErrorAccountingPeriod) {
            this.snackbarService.informationSnackBar('Last closed accounting period is ' +
                this.monthNameForlastMonthClosed + ' and Last month closed for operation is ' +
                this.monthNameForoperationsLastMonthClosed + ' ; please check the accounting period');
        }
        return isProceed;
    };
    ReverseDocumentComponent.prototype.checkIfUserHasRequiredPrivileges = function (userCompanyPrivilege) {
        if (this.authorizationService.isUserAllowedForCompany(this.company)) {
            var userPermissionLevel = this.authorizationService.getPermissionLevel(this.company, userCompanyPrivilege.privilegeName, userCompanyPrivilege.privilegeParentLevelOne, userCompanyPrivilege.privilegeParentLevelTwo);
            if (userPermissionLevel === userCompanyPrivilege.permission) {
                return true;
            }
            return false;
        }
    };
    ReverseDocumentComponent.prototype.checkIfBetweenLastClosedAndOperations = function (date) {
        var matchingMonthFound = false;
        for (var i = 1; i <= this.accountingSetupModel.numberOfOpenPeriod; i++) {
            if (!matchingMonthFound) {
                if (date.year() === this.lastMonthClosed.getFullYear() &&
                    this.lastMonthClosed.getMonth() + i < 12 && date.month() === this.lastMonthClosed.getMonth() + i) {
                    matchingMonthFound = true;
                }
                else if (date.year() === this.lastMonthClosed.getFullYear() + 1 &&
                    this.lastMonthClosed.getMonth() + i >= 12 && date.month() === this.lastMonthClosed.getMonth() + i - 12) {
                    matchingMonthFound = true;
                }
            }
        }
        return matchingMonthFound;
    };
    ReverseDocumentComponent.prototype.onCreateCancelButtonClicked = function () {
        this.isSave = true;
        this.onCancelWarning();
    };
    ReverseDocumentComponent.prototype.onCreatePreviousButtonClicked = function () {
        this.isSave = true;
        this.stepper.previous();
    };
    ReverseDocumentComponent.prototype.onCreateNextButtonClicked = function () {
        var _this = this;
        this.childReverseDocumentSummaryComponent.getAccountingLinesByAccountingId();
        this.createTransactionDocument = new _shared_entities_create_transaction_document_entity__WEBPACK_IMPORTED_MODULE_12__["CreateTransactionDocument"]();
        this.createTransactionDocument.transactionDocumentTypeId = this.transactionDocumentTypeId;
        this.createTransactionDocument.transactionDocumentId = this.transactionDocumentId;
        this.createTransactionDocument.documentDate = this.transactionDocumentTypeId !== _shared_enums_posting_document_type_enum__WEBPACK_IMPORTED_MODULE_16__["PostingDocumentType"].TA ? moment__WEBPACK_IMPORTED_MODULE_4__(this.childReverseDocumentCreateComponent.reverseDateFormCtrl.value, 'DD-MM-YYYY').toDate() : moment__WEBPACK_IMPORTED_MODULE_4__(this.childReverseDocumentCreateComponent.docDateFromCtrl.value, 'DD-MM-YYYY').toDate();
        this.createTransactionDocument.currencyCode = this.childReverseDocumentCreateComponent.currencyCtrl.value;
        this.createTransactionDocument.authorizedForPosting = false;
        this.createTransactionDocument.toInterface = this.childReverseDocumentCreateComponent.interfaceCtrl.value;
        this.childReverseDocumentSummaryComponent.reverseDocumentDate = moment__WEBPACK_IMPORTED_MODULE_4__(this.childReverseDocumentCreateComponent.reverseDateFormCtrl.value, 'DD-MM-YYYY').toDate();
        this.childReverseDocumentSummaryComponent.accountingPeriod = this.childReverseDocumentCreateComponent.accPeriodFormCtrl.value;
        this.createTransactionDocument.physicalDocumentId =
            this.subscription.push(this.executionService.CreateTransactionDocument(this.createTransactionDocument).subscribe(function (data) {
                _this.reversedDocumentReference = data.documentReference;
                _this.reversedTransactionDocumentId = data.transactionDocumentId;
            }));
        this.stepper.next();
        this.titleService.setTitle(this.documentReference + ' - Summary Accounting Document Reversal');
    };
    ReverseDocumentComponent.prototype.onSummaryFinishButtonClicked = function () {
        this.isSave = true;
        // this.preaccountingService.createAccountingDocument(this.reversedTransactionDocumentId).subscribe((data) => {
        //     this.router.navigate([this.company + '/financial/accounting/entries']);
        // });
        this.router.navigate([this.company + '/financial/accounting/entries']);
    };
    ReverseDocumentComponent.prototype.onChangeStepAction = function (event) {
        this.currentStep = event.selectedIndex;
    };
    ReverseDocumentComponent.prototype.displayNotFoundError = function () {
        this.agGridApi.setRowData([]);
        this.accountingId = null;
        this.documentReference = null;
        this.accountingDocumentLine = [];
        this.snackbarService.throwErrorSnackBar('Document reference not existing');
    };
    ReverseDocumentComponent.prototype.OnChangeValue = function (refrerence) {
        var _this = this;
        this.searchTerm = this.documentCtrl.value;
        if (this.filteredDocumentReferences && this.searchTerm) {
            if (typeof this.searchTerm === 'object') {
                this.accountingId = this.documentCtrl.value.accountingId;
                this.documentReference = this.documentCtrl.value.documentReference;
            }
            else {
                var documentSelected = this.filteredDocumentReferences.filter(function (searchData) {
                    return searchData.documentReference.toUpperCase() === _this.searchTerm.toUpperCase();
                });
                if (documentSelected.length === 0) {
                    this.displayNotFoundError();
                }
                else {
                    this.accountingId = documentSelected[0].accountingId;
                    this.documentReference = documentSelected[0].documentReference;
                }
            }
        }
        if (this.accountingId) {
            this.getTransactionDetailSunscription = this.preaccountingService.getTransactionDetail(this.accountingId).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_6__["map"])(function (data) {
                _this.transactionData = data.value.map(function (transactionData) {
                    return new _shared_models_transaction_detail_display_view__WEBPACK_IMPORTED_MODULE_18__["TransactionDetailDisplayView"](transactionData);
                });
                if (_this.transactionData && _this.transactionData.length > 0) {
                    _this.transactionDocumentId = _this.transactionData[0].transactionDocumentId;
                    _this.transactionDocumentTypeId = _this.transactionData[0].transactionDocumentTypeId;
                }
            }))
                .subscribe();
            this.getAccountingLinesByDocumentIdSubscription = (this.preaccountingService.getAccoutingLinesAllData(this.accountingId).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_6__["map"])(function (data) {
                _this.documentRefData = data.value.map(function (docRef) {
                    return new _shared_models_reversal_document_display_view__WEBPACK_IMPORTED_MODULE_17__["ReversalDocumentDisplayView"](docRef);
                });
                _this.accountingDocumentData = _this.documentRefData[0];
                if (_this.accountingDocumentData) {
                    _this.accountingDocumentLine = _this.accountingDocumentData.accountingDocumentLines;
                    _this.noOfAccountingEntries = _this.accountingDocumentLine.length;
                    if (_this.accountingDocumentLine && _this.accountingDocumentLine.length > 0) {
                        var isValid = _this.validateReversalDate();
                        if (isValid) {
                            _this.disableNextButton = false;
                        }
                    }
                }
            }))
                .subscribe());
        }
    };
    ReverseDocumentComponent.prototype.getDisabledState = function (value) {
        this.disableButton = value;
    };
    ReverseDocumentComponent.prototype.startLockRefresh = function (accountingId, documentReference) {
        this.resourcesInformation = new Array();
        var resourceInformation = new _shared_entities_lock_resource_information_entity__WEBPACK_IMPORTED_MODULE_14__["LockResourceInformation"]();
        resourceInformation.resourceType = 'Accounting Document';
        resourceInformation.resourceId = accountingId;
        resourceInformation.resourceCode = documentReference;
        resourceInformation.needRefresh = true;
        this.resourcesInformation.push(resourceInformation);
    };
    ReverseDocumentComponent.prototype.stopLockRefresh = function () {
        this.resourcesInformation = new Array();
    };
    ReverseDocumentComponent.prototype.ngOnDestroy = function () {
        var _this = this;
        this.stopLockRefresh();
        if (this.getTransactionDetailSunscription) {
            this.getTransactionDetailSunscription.unsubscribe();
        }
        if (this.getAccountingLinesByDocumentIdSubscription) {
            this.getAccountingLinesByDocumentIdSubscription.unsubscribe();
        }
        this.lockService.cleanSessionLocks().pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_6__["takeUntil"])(this.destroy$)).subscribe(function () {
            _this.destroy$.next();
            _this.destroy$.complete();
        });
    };
    ReverseDocumentComponent.prototype.onCancelWarning = function () {
        var _this = this;
        var confirmDialog = this.dialog.open(_shared_components_confirmation_dialog_confirmation_dialog_component__WEBPACK_IMPORTED_MODULE_10__["ConfirmationDialogComponent"], {
            data: {
                title: 'Warning',
                text: 'Reversal is not done.',
                okButton: 'Ok',
            },
        });
        confirmDialog.afterClosed().subscribe(function (answer) {
            if (answer) {
                _this.router.navigate([_this.company + '/financial/accounting/entries']);
            }
        });
    };
    ReverseDocumentComponent.prototype.unloadNotification = function ($event) {
        if (this.createDocumentFormGroup.dirty) {
            $event.returnValue = true;
        }
    };
    ReverseDocumentComponent.prototype.valueChanged = function (value) {
        this.documentCtrl.patchValue(value);
        this.OnChangeValue(value);
    };
    ReverseDocumentComponent.prototype.NumberFormatterForTotalInGrid = function (params) {
        if (isNaN(params.value) || params.value === null) {
            return '';
        }
        return new Intl.NumberFormat('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 }).format(params.value);
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])(_angular_material__WEBPACK_IMPORTED_MODULE_2__["MatMenuTrigger"]),
        __metadata("design:type", _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatMenuTrigger"])
    ], ReverseDocumentComponent.prototype, "columnMenuTrigger", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('stepper'),
        __metadata("design:type", _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatStepper"])
    ], ReverseDocumentComponent.prototype, "stepper", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])(_reverse_document_create_reverse_document_create_component__WEBPACK_IMPORTED_MODULE_29__["ReverseDocumentCreateComponent"]),
        __metadata("design:type", _reverse_document_create_reverse_document_create_component__WEBPACK_IMPORTED_MODULE_29__["ReverseDocumentCreateComponent"])
    ], ReverseDocumentComponent.prototype, "childReverseDocumentCreateComponent", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])(_reverse_document_summary_reverse_document_summary_component__WEBPACK_IMPORTED_MODULE_30__["ReverseDocumentSummaryComponent"]),
        __metadata("design:type", _reverse_document_summary_reverse_document_summary_component__WEBPACK_IMPORTED_MODULE_30__["ReverseDocumentSummaryComponent"])
    ], ReverseDocumentComponent.prototype, "childReverseDocumentSummaryComponent", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["HostListener"])('window:beforeunload', ['$event']),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Object]),
        __metadata("design:returntype", void 0)
    ], ReverseDocumentComponent.prototype, "unloadNotification", null);
    ReverseDocumentComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'atlas-reverse-document',
            template: __webpack_require__(/*! ./reverse-document.component.html */ "./Client/app/financial/components/posting-process/reverse-document/reverse-document.component.html"),
            styles: [__webpack_require__(/*! ./reverse-document.component.scss */ "./Client/app/financial/components/posting-process/reverse-document/reverse-document.component.scss")],
            providers: [_shared_services_preaccounting_document_reference_data_loader__WEBPACK_IMPORTED_MODULE_24__["DocumentReferenceDataLoader"]],
        }),
        __metadata("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"],
            _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"],
            _shared_services_util_service__WEBPACK_IMPORTED_MODULE_28__["UtilService"],
            _shared_services_preaccounting_document_reference_data_loader__WEBPACK_IMPORTED_MODULE_24__["DocumentReferenceDataLoader"],
            _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormBuilder"],
            _shared_services_snackbar_service__WEBPACK_IMPORTED_MODULE_25__["SnackbarService"],
            _shared_services_ui_service__WEBPACK_IMPORTED_MODULE_27__["UiService"],
            _shared_services_http_services_preaccounting_service__WEBPACK_IMPORTED_MODULE_23__["PreaccountingService"],
            _shared_services_http_services_execution_service__WEBPACK_IMPORTED_MODULE_21__["ExecutionService"],
            _shared_services_form_configuration_provider_service__WEBPACK_IMPORTED_MODULE_20__["FormConfigurationProviderService"],
            _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialog"],
            _core_services_authorization_service__WEBPACK_IMPORTED_MODULE_7__["AuthorizationService"],
            _core_services_company_manager_service__WEBPACK_IMPORTED_MODULE_8__["CompanyManagerService"],
            _shared_services_http_services_lock_service__WEBPACK_IMPORTED_MODULE_22__["LockService"],
            _shared_services_title_service__WEBPACK_IMPORTED_MODULE_26__["TitleService"],
            _shared_services_ag_grid_service__WEBPACK_IMPORTED_MODULE_19__["AgGridService"]])
    ], ReverseDocumentComponent);
    return ReverseDocumentComponent;
}(_shared_components_base_form_component_base_form_component_component__WEBPACK_IMPORTED_MODULE_9__["BaseFormComponent"]));



/***/ }),

/***/ "./Client/app/financial/components/tab-group/financial-tab-group.component.html":
/*!**************************************************************************************!*\
  !*** ./Client/app/financial/components/tab-group/financial-tab-group.component.html ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div matToolbarHighlight\r\n     class=\"dark-tab header-tab mat-elevation-z6\">\r\n    <div class=\"header-tab-container\">\r\n        <nav mat-tab-nav-bar\r\n             matToolbarHighlight>\r\n            <div *ngFor=\"let routeLink of routeLinks\">\r\n                <a mat-tab-link\r\n                   *ifAuthorized=\"routeLink.privilege,company:this.company\"\r\n                   [routerLink]=\"routeLink.link\"\r\n                   routerLinkActive\r\n                   #rla=\"routerLinkActive\"\r\n                   [active]=\"isActive(routeLink)\">\r\n                    {{ routeLink.label }}\r\n                </a>\r\n            </div>\r\n        </nav>\r\n        <span class=\"fill-space\"></span>\r\n        <atlas-floating-action-button *ngIf=\"hasAddButton\"\r\n                                      [fabTitle]=\"fabTitle\"\r\n                                      [fabType]=\"fabType\"\r\n                                      [fabActions]=\"fabMenuActions\"\r\n                                      [isParentLoaded]=\"isLoaded\"\r\n                                      (fabActionClicked)=\"onFabActionClicked($event)\">\r\n        </atlas-floating-action-button>\r\n    </div>\r\n</div>\r\n"

/***/ }),

/***/ "./Client/app/financial/components/tab-group/financial-tab-group.component.scss":
/*!**************************************************************************************!*\
  !*** ./Client/app/financial/components/tab-group/financial-tab-group.component.scss ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".header-tab {\n  margin-bottom: 19px; }\n\n.menu-header {\n  background-color: #53c234;\n  color: white; }\n\n.menu-header mat-icon {\n    color: white; }\n\n.mat-menu-content {\n  padding-top: 0 !important; }\n\n.floating-menu {\n  top: -1px;\n  min-height: 400px; }\n\n.dark-tab .mat-tab-nav-bar {\n  border-bottom: 0; }\n\n::ng-deep .mat-menu-content-min-height-290 > div:first-child {\n  min-height: 290px; }\n"

/***/ }),

/***/ "./Client/app/financial/components/tab-group/financial-tab-group.component.ts":
/*!************************************************************************************!*\
  !*** ./Client/app/financial/components/tab-group/financial-tab-group.component.ts ***!
  \************************************************************************************/
/*! exports provided: FinancialTabGroupComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FinancialTabGroupComponent", function() { return FinancialTabGroupComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _core_services_authorization_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../core/services/authorization.service */ "./Client/app/core/services/authorization.service.ts");
/* harmony import */ var _core_services_company_manager_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../core/services/company-manager.service */ "./Client/app/core/services/company-manager.service.ts");
/* harmony import */ var _shared_components_floating_action_button_floating_action_button_type_enum__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../shared/components/floating-action-button/floating-action-button-type.enum */ "./Client/app/shared/components/floating-action-button/floating-action-button-type.enum.ts");
/* harmony import */ var _shared_enums_permission_level_enum__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../shared/enums/permission-level.enum */ "./Client/app/shared/enums/permission-level.enum.ts");
/* harmony import */ var _shared_services_title_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../shared/services/title.service */ "./Client/app/shared/services/title.service.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};







var FinancialTabGroupComponent = /** @class */ (function () {
    function FinancialTabGroupComponent(router, companyManager, authorizationService, route, titleService) {
        var _this = this;
        this.router = router;
        this.companyManager = companyManager;
        this.authorizationService = authorizationService;
        this.route = route;
        this.titleService = titleService;
        this.routeLinks = [
            {
                label: 'ACCOUNTING ENTRIES',
                link: '/' + this.companyManager.getCurrentCompanyId() + '/financial/accounting/entries',
                index: 0,
                privilege: 'Financials',
                title: 'Financials - Accounting Entries',
            },
            {
                label: 'CUT-OFF',
                link: '/' + this.companyManager.getCurrentCompanyId() + '/financial/cut-off/freeze/new',
                index: 1,
                privilege: 'Financials.CutOff',
                title: 'Financials - Cut-Off',
            },
            {
                label: 'Market Data',
                link: '/' + this.companyManager.getCurrentCompanyId() + '/financial/fx/rates',
                index: 2,
                privilege: 'Financials.MarketData',
                title: 'Financials - Market Data',
            },
        ];
        this.activeLinkIndex = -1;
        this.PermissionLevels = _shared_enums_permission_level_enum__WEBPACK_IMPORTED_MODULE_5__["PermissionLevels"];
        this.buttonEditable = false;
        this.fabMenuActions = [];
        this.isLoaded = false;
        this.hasCreateFreezePrivilege = false;
        this.hasViewFrozenDBPrivilege = false;
        this.hasRecalculatePrivilege = false;
        this.hasGenEOfYPrivilege = false;
        this.hasAddButton = false;
        this.buttonText = '';
        this.buttonClicked = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.editGenerateEndOfMonthPrivilege = {
            profileId: null,
            privilegeName: 'GenerateEndOfMonth',
            permission: _shared_enums_permission_level_enum__WEBPACK_IMPORTED_MODULE_5__["PermissionLevels"].Read,
            privilegeParentLevelOne: 'Financials',
            privilegeParentLevelTwo: 'CutOff',
        };
        this.activeLinkIndex = this.routeLinks.indexOf(this.routeLinks.find(function (tab) { return _this.router.url.includes(tab.link); }));
    }
    FinancialTabGroupComponent.prototype.ngOnInit = function () {
        this.titleService.setTitle('Financials');
        this.company = this.route.snapshot.paramMap.get('company');
        this.buttonEditable = this.checkIfUserHasRequiredPrivileges(this.editGenerateEndOfMonthPrivilege);
        this.initFABActions();
    };
    FinancialTabGroupComponent.prototype.checkIfUserHasRequiredPrivileges = function (userCompanyPrivilege) {
        if (this.authorizationService.isUserAllowedForCompany(this.company)) {
            var userPermissionLevel = this.authorizationService.getPermissionLevel(this.company, userCompanyPrivilege.privilegeName, userCompanyPrivilege.privilegeParentLevelOne, userCompanyPrivilege.privilegeParentLevelTwo);
            if (userPermissionLevel <= userCompanyPrivilege.permission) {
                return true;
            }
        }
        return false;
    };
    FinancialTabGroupComponent.prototype.isActive = function (routeLink) {
        if (this.activeLinkIndex === routeLink.index) {
            this.titleService.setTitle(this.routeLinks[this.activeLinkIndex].title);
        }
        return this.activeLinkIndex === routeLink.index;
    };
    FinancialTabGroupComponent.prototype.onAddButtonClicked = function () {
        this.buttonClicked.emit();
    };
    FinancialTabGroupComponent.prototype.onFreezeButtonClicked = function () {
        this.router.navigate(['/' + this.companyManager.getCurrentCompanyId() + '/financial/cut-off/freeze/new']);
    };
    FinancialTabGroupComponent.prototype.onFreezeViewButtonClicked = function () {
        this.router.navigate(['/' + this.companyManager.getCurrentCompanyId() + '/financial/cut-off/freeze']);
    };
    FinancialTabGroupComponent.prototype.onFreezeRecalculateButtonClicked = function () {
        this.router.navigate(['/' + this.companyManager.getCurrentCompanyId() + '/financial/cut-off/freeze/recalculate']);
    };
    FinancialTabGroupComponent.prototype.onCloseMonthButtonClicked = function () {
        this.router.navigate(['/' + this.companyManager.getCurrentCompanyId() + '/financial/cut-off/close-month']);
    };
    FinancialTabGroupComponent.prototype.onGenerateEndOfMonthButtonClicked = function () {
        this.router.navigate(['/' + this.companyManager.getCurrentCompanyId() + '/financial/cut-off/generate-end-of-month']);
    };
    FinancialTabGroupComponent.prototype.onGenerateEndOfYearButtonClicked = function () {
        this.router.navigate(['/' + this.companyManager.getCurrentCompanyId() + '/financial/cut-off/generate-end-of-year']);
    };
    FinancialTabGroupComponent.prototype.initFABActions = function () {
        this.fabTitle = 'Cut-Off Actions';
        this.fabType = _shared_components_floating_action_button_floating_action_button_type_enum__WEBPACK_IMPORTED_MODULE_4__["FABType"].ExtendedMenu;
        var actionCreateFreeze = {
            icon: 'ac_unit',
            text: 'Create a freeze',
            action: 'createFreeze',
            disabled: false,
            index: 0,
        };
        var actionViewFrozenDB = {
            icon: 'ac_unit',
            text: 'View Frozen Database',
            action: 'viewFrozenDb',
            disabled: false,
            index: 1,
        };
        var actionRecalc = {
            icon: 'settings_backup_restore',
            text: 'Recalculate Frozen Database',
            action: 'recalculate',
            disabled: false,
            index: 2,
        };
        var actionClose = {
            icon: 'calendar_today',
            text: 'Close Month',
            action: 'closeMonth',
            disabled: false,
            index: 3,
        };
        var actionGenerateMonth = {
            icon: 'calendar_today',
            text: 'Generate End of Month',
            action: 'generateEOM',
            disabled: false,
            index: 4,
        };
        var actionGenerateYear = {
            icon: 'calendar_today',
            text: 'Generate End of Year',
            action: 'generateEOY',
            disabled: false,
            index: 5,
        };
        this.checkPrivileges();
        if (this.hasCreateFreezePrivilege) {
            this.fabMenuActions.push(actionCreateFreeze);
        }
        if (this.hasViewFrozenDBPrivilege) {
            this.fabMenuActions.push(actionViewFrozenDB);
        }
        if (this.hasRecalculatePrivilege) {
            this.fabMenuActions.push(actionRecalc);
        }
        this.fabMenuActions.push(actionClose);
        if (this.buttonEditable) {
            actionGenerateMonth.disabled = true;
        }
        this.fabMenuActions.push(actionGenerateMonth);
        if (this.hasGenEOfYPrivilege) {
            this.fabMenuActions.push(actionGenerateYear);
        }
        this.isLoaded = true;
    };
    FinancialTabGroupComponent.prototype.checkPrivileges = function () {
        if (this.authorizationService.isPrivilegeAllowed(this.company, 'Financials')) {
            if (this.authorizationService.isPrivilegeAllowed(this.company, 'CreateFreeze', _shared_enums_permission_level_enum__WEBPACK_IMPORTED_MODULE_5__["PermissionLevels"].ReadWrite)) {
                this.hasCreateFreezePrivilege = true;
            }
            if (this.authorizationService.isPrivilegeAllowed(this.company, 'FrozenDatabase', _shared_enums_permission_level_enum__WEBPACK_IMPORTED_MODULE_5__["PermissionLevels"].ReadWrite)) {
                this.hasViewFrozenDBPrivilege = true;
            }
            if (this.authorizationService.isPrivilegeAllowed(this.company, 'RecalculateFrozenDatabase', _shared_enums_permission_level_enum__WEBPACK_IMPORTED_MODULE_5__["PermissionLevels"].ReadWrite)) {
                this.hasRecalculatePrivilege = true;
            }
            if (this.authorizationService.isPrivilegeAllowed(this.company, 'GenerateEndOfYear', _shared_enums_permission_level_enum__WEBPACK_IMPORTED_MODULE_5__["PermissionLevels"].ReadWrite)) {
                this.hasGenEOfYPrivilege = true;
            }
        }
    };
    FinancialTabGroupComponent.prototype.onFabActionClicked = function (action) {
        switch (action) {
            case 'createFreeze': {
                this.onFreezeButtonClicked();
                break;
            }
            case 'actionCreateFrozenDB': {
                this.onFreezeViewButtonClicked();
                break;
            }
            case 'recalculate': {
                this.onFreezeRecalculateButtonClicked();
                break;
            }
            case 'closeMonth': {
                this.onCloseMonthButtonClicked();
                break;
            }
            case 'generateEOM': {
                this.onGenerateEndOfMonthButtonClicked();
                break;
            }
            case 'generateEOY': {
                this.onGenerateEndOfYearButtonClicked();
                break;
            }
        }
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Boolean)
    ], FinancialTabGroupComponent.prototype, "hasAddButton", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", String)
    ], FinancialTabGroupComponent.prototype, "buttonText", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], FinancialTabGroupComponent.prototype, "buttonClicked", void 0);
    FinancialTabGroupComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'atlas-financial-tab-group',
            template: __webpack_require__(/*! ./financial-tab-group.component.html */ "./Client/app/financial/components/tab-group/financial-tab-group.component.html"),
            styles: [__webpack_require__(/*! ./financial-tab-group.component.scss */ "./Client/app/financial/components/tab-group/financial-tab-group.component.scss")],
        }),
        __metadata("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_1__["Router"],
            _core_services_company_manager_service__WEBPACK_IMPORTED_MODULE_3__["CompanyManagerService"],
            _core_services_authorization_service__WEBPACK_IMPORTED_MODULE_2__["AuthorizationService"],
            _angular_router__WEBPACK_IMPORTED_MODULE_1__["ActivatedRoute"],
            _shared_services_title_service__WEBPACK_IMPORTED_MODULE_6__["TitleService"]])
    ], FinancialTabGroupComponent);
    return FinancialTabGroupComponent;
}());



/***/ }),

/***/ "./Client/app/financial/entities/fx-rates-selected-type.entity.ts":
/*!************************************************************************!*\
  !*** ./Client/app/financial/entities/fx-rates-selected-type.entity.ts ***!
  \************************************************************************/
/*! exports provided: FxRatesSelectedType */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FxRatesSelectedType", function() { return FxRatesSelectedType; });
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _shared_enums_foreign_exchange_rate_viewmode_enum__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../../shared/enums/foreign-exchange-rate-viewmode.enum */ "./Client/app/shared/enums/foreign-exchange-rate-viewmode.enum.ts");


var FxRatesSelectedType = /** @class */ (function () {
    function FxRatesSelectedType() {
        this.date = moment__WEBPACK_IMPORTED_MODULE_0__["utc"]();
        this.type = _shared_enums_foreign_exchange_rate_viewmode_enum__WEBPACK_IMPORTED_MODULE_1__["ForeignExchangeRateViewMode"].Spot;
        this.inactiveCurrencies = false;
    }
    return FxRatesSelectedType;
}());



/***/ }),

/***/ "./Client/app/financial/financial.module.ts":
/*!**************************************************!*\
  !*** ./Client/app/financial/financial.module.ts ***!
  \**************************************************/
/*! exports provided: FinancialModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FinancialModule", function() { return FinancialModule; });
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _angular_material_moment_adapter__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material-moment-adapter */ "./node_modules/@angular/material-moment-adapter/esm5/material-moment-adapter.es5.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var ag_grid_angular__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ag-grid-angular */ "./node_modules/ag-grid-angular/main.js");
/* harmony import */ var ag_grid_angular__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(ag_grid_angular__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var angular2_text_mask__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! angular2-text-mask */ "./node_modules/angular2-text-mask/dist/angular2TextMask.js");
/* harmony import */ var angular2_text_mask__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(angular2_text_mask__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _shared_components_ag_grid_accrual_number_ag_grid_accrual_number_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../shared/components/ag-grid-accrual-number/ag-grid-accrual-number.component */ "./Client/app/shared/components/ag-grid-accrual-number/ag-grid-accrual-number.component.ts");
/* harmony import */ var _shared_components_ag_grid_contextual_search_ag_grid_contextual_search_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../shared/components/ag-grid/contextual-search/ag-grid-contextual-search.component */ "./Client/app/shared/components/ag-grid/contextual-search/ag-grid-contextual-search.component.ts");
/* harmony import */ var _shared_components_form_components_masterdata_masterdata_input_masterdata_input_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../shared/components/form-components/masterdata/masterdata-input/masterdata-input.component */ "./Client/app/shared/components/form-components/masterdata/masterdata-input/masterdata-input.component.ts");
/* harmony import */ var _shared_material_module__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../shared/material.module */ "./Client/app/shared/material.module.ts");
/* harmony import */ var _shared_shared_module__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../shared/shared.module */ "./Client/app/shared/shared.module.ts");
/* harmony import */ var _components_cash_matching_cash_matching_dialog_cash_matching_dialog_cash_matching_dialog_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./components/cash-matching/cash-matching-dialog/cash-matching-dialog/cash-matching-dialog.component */ "./Client/app/financial/components/cash-matching/cash-matching-dialog/cash-matching-dialog/cash-matching-dialog.component.ts");
/* harmony import */ var _components_cash_matching_cash_matching_dialog_delete_matching_dialog_delete_matching_dialog_component__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./components/cash-matching/cash-matching-dialog/delete-matching-dialog/delete-matching-dialog.component */ "./Client/app/financial/components/cash-matching/cash-matching-dialog/delete-matching-dialog/delete-matching-dialog.component.ts");
/* harmony import */ var _components_cash_matching_cash_matching_dialog_document_date_dialog_document_date_dialog_component__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./components/cash-matching/cash-matching-dialog/document-date-dialog/document-date-dialog.component */ "./Client/app/financial/components/cash-matching/cash-matching-dialog/document-date-dialog/document-date-dialog.component.ts");
/* harmony import */ var _components_cash_matching_cash_matching_dialog_payment_document_date_dialog_payment_document_date_dialog_component__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./components/cash-matching/cash-matching-dialog/payment-document-date-dialog/payment-document-date-dialog.component */ "./Client/app/financial/components/cash-matching/cash-matching-dialog/payment-document-date-dialog/payment-document-date-dialog.component.ts");
/* harmony import */ var _components_cash_matching_cash_matching_home_cash_matching_home_component__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./components/cash-matching/cash-matching-home/cash-matching-home.component */ "./Client/app/financial/components/cash-matching/cash-matching-home/cash-matching-home.component.ts");
/* harmony import */ var _components_cash_matching_create_match_flag_create_match_flag_component__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./components/cash-matching/create-match-flag/create-match-flag.component */ "./Client/app/financial/components/cash-matching/create-match-flag/create-match-flag.component.ts");
/* harmony import */ var _components_cash_matching_delete_match_flag_delete_match_flag_component__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./components/cash-matching/delete-match-flag/delete-match-flag.component */ "./Client/app/financial/components/cash-matching/delete-match-flag/delete-match-flag.component.ts");
/* harmony import */ var _components_cut_off_close_month_cards_accounting_closure_accounting_closure_component__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./components/cut-off/close-month/cards/accounting-closure/accounting-closure.component */ "./Client/app/financial/components/cut-off/close-month/cards/accounting-closure/accounting-closure.component.ts");
/* harmony import */ var _components_cut_off_close_month_cards_operations_closure_operations_closure_component__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./components/cut-off/close-month/cards/operations-closure/operations-closure.component */ "./Client/app/financial/components/cut-off/close-month/cards/operations-closure/operations-closure.component.ts");
/* harmony import */ var _components_cut_off_close_month_close_month_component__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./components/cut-off/close-month/close-month.component */ "./Client/app/financial/components/cut-off/close-month/close-month.component.ts");
/* harmony import */ var _components_cut_off_close_month_dialog_boxes_close_month_edit_dialog_close_month_edit_dialog_component__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./components/cut-off/close-month/dialog-boxes/close-month-edit-dialog/close-month-edit-dialog.component */ "./Client/app/financial/components/cut-off/close-month/dialog-boxes/close-month-edit-dialog/close-month-edit-dialog.component.ts");
/* harmony import */ var _components_cut_off_close_month_dialog_boxes_close_month_warning_dialog_close_month_warning_dialog_component__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./components/cut-off/close-month/dialog-boxes/close-month-warning-dialog/close-month-warning-dialog.component */ "./Client/app/financial/components/cut-off/close-month/dialog-boxes/close-month-warning-dialog/close-month-warning-dialog.component.ts");
/* harmony import */ var _components_cut_off_freeze_cards_grid_freeze_grid_component__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./components/cut-off/freeze/cards/grid/freeze-grid.component */ "./Client/app/financial/components/cut-off/freeze/cards/grid/freeze-grid.component.ts");
/* harmony import */ var _components_cut_off_freeze_cards_header_filter_freeze_header_filter_component__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./components/cut-off/freeze/cards/header-filter/freeze-header-filter.component */ "./Client/app/financial/components/cut-off/freeze/cards/header-filter/freeze-header-filter.component.ts");
/* harmony import */ var _components_cut_off_freeze_cards_header_freeze_header_component__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./components/cut-off/freeze/cards/header/freeze-header.component */ "./Client/app/financial/components/cut-off/freeze/cards/header/freeze-header.component.ts");
/* harmony import */ var _components_cut_off_freeze_freeze_component__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./components/cut-off/freeze/freeze.component */ "./Client/app/financial/components/cut-off/freeze/freeze.component.ts");
/* harmony import */ var _components_cut_off_freeze_recalculate_freeze_recalculate_component__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./components/cut-off/freeze/recalculate/freeze-recalculate.component */ "./Client/app/financial/components/cut-off/freeze/recalculate/freeze-recalculate.component.ts");
/* harmony import */ var _components_cut_off_generate_end_of_month_cards_end_of_month_selection_end_of_month_selection_component__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./components/cut-off/generate-end-of-month/cards/end-of-month-selection/end-of-month-selection.component */ "./Client/app/financial/components/cut-off/generate-end-of-month/cards/end-of-month-selection/end-of-month-selection.component.ts");
/* harmony import */ var _components_cut_off_generate_end_of_month_generate_end_of_month_summary_associated_client_dropdown_associated_client_dropdown_component__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./components/cut-off/generate-end-of-month/generate-end-of-month-summary/associated-client-dropdown/associated-client-dropdown.component */ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/associated-client-dropdown/associated-client-dropdown.component.ts");
/* harmony import */ var _components_cut_off_generate_end_of_month_generate_end_of_month_summary_charter_dropdown_charter_dropdown_component__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./components/cut-off/generate-end-of-month/generate-end-of-month-summary/charter-dropdown/charter-dropdown.component */ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/charter-dropdown/charter-dropdown.component.ts");
/* harmony import */ var _components_cut_off_generate_end_of_month_generate_end_of_month_summary_cost_type_dropdown_cost_type_dropdown_component__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./components/cut-off/generate-end-of-month/generate-end-of-month-summary/cost-type-dropdown/cost-type-dropdown.component */ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/cost-type-dropdown/cost-type-dropdown.component.ts");
/* harmony import */ var _components_cut_off_generate_end_of_month_generate_end_of_month_summary_department_dropdown_department_dropdown_component__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./components/cut-off/generate-end-of-month/generate-end-of-month-summary/department-dropdown/department-dropdown.component */ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/department-dropdown/department-dropdown.component.ts");
/* harmony import */ var _components_cut_off_generate_end_of_month_generate_end_of_month_summary_generate_end_of_month_summary_component__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./components/cut-off/generate-end-of-month/generate-end-of-month-summary/generate-end-of-month-summary.component */ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/generate-end-of-month-summary.component.ts");
/* harmony import */ var _components_cut_off_generate_end_of_month_generate_end_of_month_summary_generate_end_of_month_tab_group_generate_end_of_month_tab_group_component__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./components/cut-off/generate-end-of-month/generate-end-of-month-summary/generate-end-of-month-tab-group/generate-end-of-month-tab-group.component */ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/generate-end-of-month-tab-group/generate-end-of-month-tab-group.component.ts");
/* harmony import */ var _components_cut_off_generate_end_of_month_generate_end_of_month_summary_tabs_details_tab_details_tab_component__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./components/cut-off/generate-end-of-month/generate-end-of-month-summary/tabs/details-tab/details-tab.component */ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/tabs/details-tab/details-tab.component.ts");
/* harmony import */ var _components_cut_off_generate_end_of_month_generate_end_of_month_summary_tabs_details_tab_fx_deal_details_month_end_fx_deal_month_end_component__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./components/cut-off/generate-end-of-month/generate-end-of-month-summary/tabs/details-tab/fx-deal-details-month-end/fx-deal-month-end.component */ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/tabs/details-tab/fx-deal-details-month-end/fx-deal-month-end.component.ts");
/* harmony import */ var _components_cut_off_generate_end_of_month_generate_end_of_month_summary_tabs_fx_deal_month_end_summary_fx_deal_month_end_summary_component__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./components/cut-off/generate-end-of-month/generate-end-of-month-summary/tabs/fx-deal-month-end-summary/fx-deal-month-end-summary.component */ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/tabs/fx-deal-month-end-summary/fx-deal-month-end-summary.component.ts");
/* harmony import */ var _components_cut_off_generate_end_of_month_generate_end_of_month_summary_tabs_overview_tab_overview_tab_component__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./components/cut-off/generate-end-of-month/generate-end-of-month-summary/tabs/overview-tab/overview-tab.component */ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/tabs/overview-tab/overview-tab.component.ts");
/* harmony import */ var _components_cut_off_generate_end_of_month_generate_end_of_month_summary_tabs_postings_tab_fx_deal_postings_month_end_fx_deal_month_end_component__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ./components/cut-off/generate-end-of-month/generate-end-of-month-summary/tabs/postings-tab/fx-deal-postings-month-end/fx-deal-month-end.component */ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/tabs/postings-tab/fx-deal-postings-month-end/fx-deal-month-end.component.ts");
/* harmony import */ var _components_cut_off_generate_end_of_month_generate_end_of_month_summary_tabs_postings_tab_postings_tab_component__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ./components/cut-off/generate-end-of-month/generate-end-of-month-summary/tabs/postings-tab/postings-tab.component */ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/tabs/postings-tab/postings-tab.component.ts");
/* harmony import */ var _components_cut_off_generate_end_of_month_generate_end_of_month_component__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ./components/cut-off/generate-end-of-month/generate-end-of-month.component */ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month.component.ts");
/* harmony import */ var _components_cut_off_generate_end_of_year_generate_end_of_year_component__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ./components/cut-off/generate-end-of-year/generate-end-of-year.component */ "./Client/app/financial/components/cut-off/generate-end-of-year/generate-end-of-year.component.ts");
/* harmony import */ var _components_foreign_exchange_market_data_tab_group_market_data_tab_group_component__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ./components/foreign-exchange/market-data-tab-group/market-data-tab-group.component */ "./Client/app/financial/components/foreign-exchange/market-data-tab-group/market-data-tab-group.component.ts");
/* harmony import */ var _components_foreign_exchange_rates_cards_grid_foreign_exchange_rates_grid_component__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ./components/foreign-exchange/rates/cards/grid/foreign-exchange-rates-grid.component */ "./Client/app/financial/components/foreign-exchange/rates/cards/grid/foreign-exchange-rates-grid.component.ts");
/* harmony import */ var _components_foreign_exchange_rates_cards_select_types_foreign_exchange_rates_select_types_component__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ./components/foreign-exchange/rates/cards/select-types/foreign-exchange-rates-select-types.component */ "./Client/app/financial/components/foreign-exchange/rates/cards/select-types/foreign-exchange-rates-select-types.component.ts");
/* harmony import */ var _components_foreign_exchange_rates_foreign_exchange_rates_component__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ./components/foreign-exchange/rates/foreign-exchange-rates.component */ "./Client/app/financial/components/foreign-exchange/rates/foreign-exchange-rates.component.ts");
/* harmony import */ var _components_foreign_exchange_warning_error_msg_dialog_warning_error_msg_dialog_component__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! ./components/foreign-exchange/warning-error-msg-dialog/warning-error-msg-dialog.component */ "./Client/app/financial/components/foreign-exchange/warning-error-msg-dialog/warning-error-msg-dialog.component.ts");
/* harmony import */ var _components_home_home_component__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! ./components/home/home.component */ "./Client/app/financial/components/home/home.component.ts");
/* harmony import */ var _components_interface_accounting_error_management_accounting_error_management_component__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! ./components/interface/accounting-error-management/accounting-error-management.component */ "./Client/app/financial/components/interface/accounting-error-management/accounting-error-management.component.ts");
/* harmony import */ var _components_interface_functional_errors_functional_errors_component__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! ./components/interface/functional-errors/functional-errors.component */ "./Client/app/financial/components/interface/functional-errors/functional-errors.component.ts");
/* harmony import */ var _components_interface_technical_errors_technical_errors_component__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(/*! ./components/interface/technical-errors/technical-errors.component */ "./Client/app/financial/components/interface/technical-errors/technical-errors.component.ts");
/* harmony import */ var _components_posting_process_accounting_creation_accounting_creation_component__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(/*! ./components/posting-process/accounting-creation/accounting-creation.component */ "./Client/app/financial/components/posting-process/accounting-creation/accounting-creation.component.ts");
/* harmony import */ var _components_posting_process_accounting_edit_base_accounting_edit_base_component__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(/*! ./components/posting-process/accounting-edit-base/accounting-edit-base.component */ "./Client/app/financial/components/posting-process/accounting-edit-base/accounting-edit-base.component.ts");
/* harmony import */ var _components_posting_process_accounting_edit_accounting_edit_summary_accounting_edit_summary_component__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(/*! ./components/posting-process/accounting-edit/accounting-edit-summary/accounting-edit-summary.component */ "./Client/app/financial/components/posting-process/accounting-edit/accounting-edit-summary/accounting-edit-summary.component.ts");
/* harmony import */ var _components_posting_process_accounting_edit_accounting_edit_component__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(/*! ./components/posting-process/accounting-edit/accounting-edit.component */ "./Client/app/financial/components/posting-process/accounting-edit/accounting-edit.component.ts");
/* harmony import */ var _components_posting_process_accounting_entries_component_accounting_entries_component_component__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(/*! ./components/posting-process/accounting-entries-component/accounting-entries-component.component */ "./Client/app/financial/components/posting-process/accounting-entries-component/accounting-entries-component.component.ts");
/* harmony import */ var _components_posting_process_accounting_entries_component_manual_journal_accrual_view_manual_journal_accrual_view_component__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(/*! ./components/posting-process/accounting-entries-component/manual-journal-accrual-view/manual-journal-accrual-view.component */ "./Client/app/financial/components/posting-process/accounting-entries-component/manual-journal-accrual-view/manual-journal-accrual-view.component.ts");
/* harmony import */ var _components_posting_process_accounting_tab_group_accounting_tab_group_component__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(/*! ./components/posting-process/accounting-tab-group/accounting-tab-group.component */ "./Client/app/financial/components/posting-process/accounting-tab-group/accounting-tab-group.component.ts");
/* harmony import */ var _components_posting_process_authorize_posting_dialog_authorize_posting_dialog_component__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(/*! ./components/posting-process/authorize-posting-dialog/authorize-posting-dialog.component */ "./Client/app/financial/components/posting-process/authorize-posting-dialog/authorize-posting-dialog.component.ts");
/* harmony import */ var _components_posting_process_posting_management_accounting_document_information_component_accounting_document_information_component_component__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(/*! ./components/posting-process/posting-management/accounting-document-information-component/accounting-document-information-component.component */ "./Client/app/financial/components/posting-process/posting-management/accounting-document-information-component/accounting-document-information-component.component.ts");
/* harmony import */ var _components_posting_process_posting_management_posting_management_component__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(/*! ./components/posting-process/posting-management/posting-management.component */ "./Client/app/financial/components/posting-process/posting-management/posting-management.component.ts");
/* harmony import */ var _components_posting_process_reverse_document_reverse_document_create_reverse_document_create_component__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(/*! ./components/posting-process/reverse-document/reverse-document-create/reverse-document-create.component */ "./Client/app/financial/components/posting-process/reverse-document/reverse-document-create/reverse-document-create.component.ts");
/* harmony import */ var _components_posting_process_reverse_document_reverse_document_summary_reverse_document_summary_component__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__(/*! ./components/posting-process/reverse-document/reverse-document-summary/reverse-document-summary.component */ "./Client/app/financial/components/posting-process/reverse-document/reverse-document-summary/reverse-document-summary.component.ts");
/* harmony import */ var _components_posting_process_reverse_document_reverse_document_component__WEBPACK_IMPORTED_MODULE_66__ = __webpack_require__(/*! ./components/posting-process/reverse-document/reverse-document.component */ "./Client/app/financial/components/posting-process/reverse-document/reverse-document.component.ts");
/* harmony import */ var _components_tab_group_financial_tab_group_component__WEBPACK_IMPORTED_MODULE_67__ = __webpack_require__(/*! ./components/tab-group/financial-tab-group.component */ "./Client/app/financial/components/tab-group/financial-tab-group.component.ts");
/* harmony import */ var _financial_route__WEBPACK_IMPORTED_MODULE_68__ = __webpack_require__(/*! ./financial.route */ "./Client/app/financial/financial.route.ts");
/* harmony import */ var _components_cut_off_generate_end_of_month_generate_end_of_month_summary_dealt_currency_dropdown_dealt_currency_dropdown_component__WEBPACK_IMPORTED_MODULE_69__ = __webpack_require__(/*! ./components/cut-off/generate-end-of-month/generate-end-of-month-summary/dealt-currency-dropdown/dealt-currency-dropdown.component */ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/dealt-currency-dropdown/dealt-currency-dropdown.component.ts");
/* harmony import */ var _components_cut_off_generate_end_of_month_generate_end_of_month_summary_settlement_currency_dropdown_settlement_currency_dropdown_component__WEBPACK_IMPORTED_MODULE_70__ = __webpack_require__(/*! ./components/cut-off/generate-end-of-month/generate-end-of-month-summary/settlement-currency-dropdown/settlement-currency-dropdown.component */ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/settlement-currency-dropdown/settlement-currency-dropdown.component.ts");
/* harmony import */ var _components_cut_off_generate_end_of_month_generate_end_of_month_summary_deal_number_dropdown_deal_number_dropdown_component__WEBPACK_IMPORTED_MODULE_71__ = __webpack_require__(/*! ./components/cut-off/generate-end-of-month/generate-end-of-month-summary/deal-number-dropdown/deal-number-dropdown.component */ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/deal-number-dropdown/deal-number-dropdown.component.ts");
/* harmony import */ var _components_posting_process_accounting_file_upload_accounting_file_upload_dialog_box_accounting_file_upload_dialog_box_component__WEBPACK_IMPORTED_MODULE_72__ = __webpack_require__(/*! ./components/posting-process/accounting-file-upload/accounting-file-upload-dialog-box/accounting-file-upload-dialog-box.component */ "./Client/app/financial/components/posting-process/accounting-file-upload/accounting-file-upload-dialog-box/accounting-file-upload-dialog-box.component.ts");
/* harmony import */ var _components_posting_process_accounting_creation_accounting_warning_error_msg_dialog_accounting_warning_error_msg_dialog_component__WEBPACK_IMPORTED_MODULE_73__ = __webpack_require__(/*! ./components/posting-process/accounting-creation/accounting-warning-error-msg-dialog/accounting-warning-error-msg-dialog.component */ "./Client/app/financial/components/posting-process/accounting-creation/accounting-warning-error-msg-dialog/accounting-warning-error-msg-dialog.component.ts");
/* harmony import */ var _components_cut_off_generate_end_of_year_cards_generate_end_of_year_warning_message_generate_end_of_year_warning_message_component__WEBPACK_IMPORTED_MODULE_74__ = __webpack_require__(/*! ./components/cut-off/generate-end-of-year/cards/generate-end-of-year-warning-message/generate-end-of-year-warning-message.component */ "./Client/app/financial/components/cut-off/generate-end-of-year/cards/generate-end-of-year-warning-message/generate-end-of-year-warning-message.component.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};











































































var FinancialModule = /** @class */ (function () {
    function FinancialModule() {
    }
    FinancialModule = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
            imports: [
                _angular_common__WEBPACK_IMPORTED_MODULE_0__["CommonModule"],
                _shared_material_module__WEBPACK_IMPORTED_MODULE_11__["MaterialModule"],
                _financial_route__WEBPACK_IMPORTED_MODULE_68__["FinancialRoutingModule"],
                ag_grid_angular__WEBPACK_IMPORTED_MODULE_6__["AgGridModule"].withComponents([]),
                _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormsModule"],
                _angular_forms__WEBPACK_IMPORTED_MODULE_2__["ReactiveFormsModule"],
                _angular_router__WEBPACK_IMPORTED_MODULE_5__["RouterModule"],
                _shared_shared_module__WEBPACK_IMPORTED_MODULE_12__["SharedModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_3__["MatCardModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_3__["MatButtonModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_3__["MatDialogModule"],
                angular2_text_mask__WEBPACK_IMPORTED_MODULE_7__["TextMaskModule"],
            ],
            entryComponents: [
                _components_posting_process_posting_management_accounting_document_information_component_accounting_document_information_component_component__WEBPACK_IMPORTED_MODULE_62__["AccountingDocumentInformationComponent"],
                _components_cut_off_close_month_dialog_boxes_close_month_edit_dialog_close_month_edit_dialog_component__WEBPACK_IMPORTED_MODULE_23__["CloseMonthEditDialogComponent"],
                _components_cut_off_close_month_dialog_boxes_close_month_warning_dialog_close_month_warning_dialog_component__WEBPACK_IMPORTED_MODULE_24__["CloseMonthWarningDialogComponent"],
                _components_posting_process_authorize_posting_dialog_authorize_posting_dialog_component__WEBPACK_IMPORTED_MODULE_61__["AuthorizePostingDialogComponent"],
                _components_posting_process_accounting_file_upload_accounting_file_upload_dialog_box_accounting_file_upload_dialog_box_component__WEBPACK_IMPORTED_MODULE_72__["AccountingFileUploadDialogBoxComponent"],
                _components_cash_matching_cash_matching_dialog_cash_matching_dialog_cash_matching_dialog_component__WEBPACK_IMPORTED_MODULE_13__["CashMatchingDialogComponent"],
                _components_cash_matching_cash_matching_dialog_payment_document_date_dialog_payment_document_date_dialog_component__WEBPACK_IMPORTED_MODULE_16__["PaymentDocumentDateDialogComponent"],
                _components_cash_matching_cash_matching_dialog_document_date_dialog_document_date_dialog_component__WEBPACK_IMPORTED_MODULE_15__["DocumentDateDialogComponent"],
                _components_cash_matching_cash_matching_dialog_delete_matching_dialog_delete_matching_dialog_component__WEBPACK_IMPORTED_MODULE_14__["DeleteMatchingDialogComponent"],
                _shared_components_ag_grid_contextual_search_ag_grid_contextual_search_component__WEBPACK_IMPORTED_MODULE_9__["AgGridContextualSearchComponent"],
                _shared_components_ag_grid_accrual_number_ag_grid_accrual_number_component__WEBPACK_IMPORTED_MODULE_8__["AgGridAccrualNumberComponent"],
                _shared_components_form_components_masterdata_masterdata_input_masterdata_input_component__WEBPACK_IMPORTED_MODULE_10__["MasterdataInputComponent"],
                _components_posting_process_accounting_creation_accounting_warning_error_msg_dialog_accounting_warning_error_msg_dialog_component__WEBPACK_IMPORTED_MODULE_73__["AccountingWarningErrorMsgDialogComponent"],
                _components_cut_off_generate_end_of_year_cards_generate_end_of_year_warning_message_generate_end_of_year_warning_message_component__WEBPACK_IMPORTED_MODULE_74__["GenerateEndOfYearWarningMessageComponent"],
            ],
            declarations: [
                _components_home_home_component__WEBPACK_IMPORTED_MODULE_50__["HomeComponent"],
                _components_foreign_exchange_rates_foreign_exchange_rates_component__WEBPACK_IMPORTED_MODULE_48__["ForeignExchangeRatesComponent"],
                _components_foreign_exchange_rates_cards_select_types_foreign_exchange_rates_select_types_component__WEBPACK_IMPORTED_MODULE_47__["ForeignExchangeRatesSelectTypesComponent"],
                _components_foreign_exchange_rates_cards_grid_foreign_exchange_rates_grid_component__WEBPACK_IMPORTED_MODULE_46__["ForeignExchangeRatesGridComponent"],
                _components_tab_group_financial_tab_group_component__WEBPACK_IMPORTED_MODULE_67__["FinancialTabGroupComponent"],
                _components_cut_off_freeze_freeze_component__WEBPACK_IMPORTED_MODULE_28__["FreezeComponent"],
                _components_cut_off_freeze_cards_header_freeze_header_component__WEBPACK_IMPORTED_MODULE_27__["FreezeHeaderComponent"],
                _components_cut_off_freeze_cards_grid_freeze_grid_component__WEBPACK_IMPORTED_MODULE_25__["FreezeGridComponent"],
                _components_posting_process_posting_management_posting_management_component__WEBPACK_IMPORTED_MODULE_63__["PostingManagementComponent"],
                _components_posting_process_accounting_entries_component_accounting_entries_component_component__WEBPACK_IMPORTED_MODULE_58__["AccountingEntriesComponent"],
                _components_posting_process_accounting_tab_group_accounting_tab_group_component__WEBPACK_IMPORTED_MODULE_60__["AccountingTabGroupComponent"],
                _components_posting_process_accounting_creation_accounting_creation_component__WEBPACK_IMPORTED_MODULE_54__["AccountingCreationComponent"],
                _components_cut_off_close_month_close_month_component__WEBPACK_IMPORTED_MODULE_22__["CloseMonthComponent"],
                _components_cut_off_close_month_cards_operations_closure_operations_closure_component__WEBPACK_IMPORTED_MODULE_21__["OperationsClosureComponent"],
                _components_cut_off_close_month_cards_accounting_closure_accounting_closure_component__WEBPACK_IMPORTED_MODULE_20__["AccountingClosureComponent"],
                _components_posting_process_posting_management_accounting_document_information_component_accounting_document_information_component_component__WEBPACK_IMPORTED_MODULE_62__["AccountingDocumentInformationComponent"],
                _components_cut_off_close_month_dialog_boxes_close_month_edit_dialog_close_month_edit_dialog_component__WEBPACK_IMPORTED_MODULE_23__["CloseMonthEditDialogComponent"],
                _components_cut_off_close_month_dialog_boxes_close_month_warning_dialog_close_month_warning_dialog_component__WEBPACK_IMPORTED_MODULE_24__["CloseMonthWarningDialogComponent"],
                _components_posting_process_authorize_posting_dialog_authorize_posting_dialog_component__WEBPACK_IMPORTED_MODULE_61__["AuthorizePostingDialogComponent"],
                _components_posting_process_accounting_file_upload_accounting_file_upload_dialog_box_accounting_file_upload_dialog_box_component__WEBPACK_IMPORTED_MODULE_72__["AccountingFileUploadDialogBoxComponent"],
                _components_cut_off_generate_end_of_month_generate_end_of_month_component__WEBPACK_IMPORTED_MODULE_43__["GenerateEndOfMonthComponent"],
                _components_cut_off_generate_end_of_month_cards_end_of_month_selection_end_of_month_selection_component__WEBPACK_IMPORTED_MODULE_30__["EndOfMonthSelectionComponent"],
                _components_cut_off_generate_end_of_month_generate_end_of_month_summary_generate_end_of_month_summary_component__WEBPACK_IMPORTED_MODULE_35__["GenerateEndOfMonthSummaryComponent"],
                _components_cut_off_generate_end_of_month_generate_end_of_month_summary_tabs_overview_tab_overview_tab_component__WEBPACK_IMPORTED_MODULE_40__["OverviewTabComponent"],
                _components_cut_off_generate_end_of_month_generate_end_of_month_summary_tabs_details_tab_details_tab_component__WEBPACK_IMPORTED_MODULE_37__["DetailsTabComponent"],
                _components_cut_off_generate_end_of_month_generate_end_of_month_summary_tabs_postings_tab_postings_tab_component__WEBPACK_IMPORTED_MODULE_42__["PostingsTabComponent"],
                _components_cash_matching_cash_matching_home_cash_matching_home_component__WEBPACK_IMPORTED_MODULE_17__["CashMatchingHomeComponent"],
                _components_cash_matching_create_match_flag_create_match_flag_component__WEBPACK_IMPORTED_MODULE_18__["CreateMatchFlagComponent"],
                _components_cash_matching_delete_match_flag_delete_match_flag_component__WEBPACK_IMPORTED_MODULE_19__["DeleteMatchFlagComponent"],
                _components_cash_matching_cash_matching_dialog_cash_matching_dialog_cash_matching_dialog_component__WEBPACK_IMPORTED_MODULE_13__["CashMatchingDialogComponent"],
                _components_cash_matching_cash_matching_dialog_document_date_dialog_document_date_dialog_component__WEBPACK_IMPORTED_MODULE_15__["DocumentDateDialogComponent"],
                _components_cut_off_generate_end_of_month_generate_end_of_month_summary_generate_end_of_month_tab_group_generate_end_of_month_tab_group_component__WEBPACK_IMPORTED_MODULE_36__["GenerateEndOfMonthTabGroupComponent"],
                _components_posting_process_reverse_document_reverse_document_component__WEBPACK_IMPORTED_MODULE_66__["ReverseDocumentComponent"],
                _components_posting_process_reverse_document_reverse_document_create_reverse_document_create_component__WEBPACK_IMPORTED_MODULE_64__["ReverseDocumentCreateComponent"],
                _components_posting_process_reverse_document_reverse_document_summary_reverse_document_summary_component__WEBPACK_IMPORTED_MODULE_65__["ReverseDocumentSummaryComponent"],
                _components_cut_off_freeze_recalculate_freeze_recalculate_component__WEBPACK_IMPORTED_MODULE_29__["FreezeRecalculateComponent"],
                _components_cut_off_freeze_cards_header_filter_freeze_header_filter_component__WEBPACK_IMPORTED_MODULE_26__["FreezeHeaderFilterComponent"],
                _components_cash_matching_cash_matching_dialog_delete_matching_dialog_delete_matching_dialog_component__WEBPACK_IMPORTED_MODULE_14__["DeleteMatchingDialogComponent"],
                _components_cut_off_generate_end_of_month_generate_end_of_month_summary_department_dropdown_department_dropdown_component__WEBPACK_IMPORTED_MODULE_34__["DepartmentDropdownComponent"],
                _components_cut_off_generate_end_of_month_generate_end_of_month_summary_charter_dropdown_charter_dropdown_component__WEBPACK_IMPORTED_MODULE_32__["CharterDropdownComponent"],
                _components_cut_off_generate_end_of_month_generate_end_of_month_summary_cost_type_dropdown_cost_type_dropdown_component__WEBPACK_IMPORTED_MODULE_33__["CostTypeDropdownComponent"],
                _components_cut_off_generate_end_of_month_generate_end_of_month_summary_associated_client_dropdown_associated_client_dropdown_component__WEBPACK_IMPORTED_MODULE_31__["AssociatedClientDropdownComponent"],
                _components_posting_process_accounting_edit_accounting_edit_component__WEBPACK_IMPORTED_MODULE_57__["AccountingEditComponent"],
                _components_posting_process_accounting_edit_accounting_edit_summary_accounting_edit_summary_component__WEBPACK_IMPORTED_MODULE_56__["AccountingEditSummaryComponent"],
                _components_cash_matching_cash_matching_dialog_payment_document_date_dialog_payment_document_date_dialog_component__WEBPACK_IMPORTED_MODULE_16__["PaymentDocumentDateDialogComponent"],
                _components_interface_accounting_error_management_accounting_error_management_component__WEBPACK_IMPORTED_MODULE_51__["AccountingErrorManagementComponent"],
                _components_interface_functional_errors_functional_errors_component__WEBPACK_IMPORTED_MODULE_52__["FunctionalErrorsComponent"],
                _components_interface_technical_errors_technical_errors_component__WEBPACK_IMPORTED_MODULE_53__["TechnicalErrorsComponent"],
                _components_posting_process_accounting_entries_component_manual_journal_accrual_view_manual_journal_accrual_view_component__WEBPACK_IMPORTED_MODULE_59__["ManualJournalAccrualViewComponent"],
                _components_foreign_exchange_market_data_tab_group_market_data_tab_group_component__WEBPACK_IMPORTED_MODULE_45__["MarketDataTabGroupComponent"],
                _components_foreign_exchange_warning_error_msg_dialog_warning_error_msg_dialog_component__WEBPACK_IMPORTED_MODULE_49__["WarningErrorMsgDialogComponent"],
                _components_posting_process_accounting_edit_base_accounting_edit_base_component__WEBPACK_IMPORTED_MODULE_55__["AccountingEditBaseComponent"],
                _components_cut_off_generate_end_of_year_generate_end_of_year_component__WEBPACK_IMPORTED_MODULE_44__["GenerateEndOfYearComponent"],
                _components_cut_off_generate_end_of_month_generate_end_of_month_summary_tabs_details_tab_fx_deal_details_month_end_fx_deal_month_end_component__WEBPACK_IMPORTED_MODULE_38__["DetailTabFxDealMonthEndComponent"],
                _components_cut_off_generate_end_of_month_generate_end_of_month_summary_tabs_postings_tab_fx_deal_postings_month_end_fx_deal_month_end_component__WEBPACK_IMPORTED_MODULE_41__["PostingTabFxDealMonthEndComponent"],
                _components_cut_off_generate_end_of_month_generate_end_of_month_summary_tabs_fx_deal_month_end_summary_fx_deal_month_end_summary_component__WEBPACK_IMPORTED_MODULE_39__["FxDealMonthEndSummaryComponent"],
                _components_posting_process_accounting_creation_accounting_warning_error_msg_dialog_accounting_warning_error_msg_dialog_component__WEBPACK_IMPORTED_MODULE_73__["AccountingWarningErrorMsgDialogComponent"],
                _components_cut_off_generate_end_of_month_generate_end_of_month_summary_dealt_currency_dropdown_dealt_currency_dropdown_component__WEBPACK_IMPORTED_MODULE_69__["DealtCurrencyDropdownComponent"],
                _components_cut_off_generate_end_of_month_generate_end_of_month_summary_settlement_currency_dropdown_settlement_currency_dropdown_component__WEBPACK_IMPORTED_MODULE_70__["SettlementCurrencyDropdownComponent"],
                _components_cut_off_generate_end_of_month_generate_end_of_month_summary_deal_number_dropdown_deal_number_dropdown_component__WEBPACK_IMPORTED_MODULE_71__["DealNumberDropdownComponent"],
                _components_cut_off_generate_end_of_year_cards_generate_end_of_year_warning_message_generate_end_of_year_warning_message_component__WEBPACK_IMPORTED_MODULE_74__["GenerateEndOfYearWarningMessageComponent"],
            ],
            providers: [
                { provide: _angular_material__WEBPACK_IMPORTED_MODULE_3__["MAT_DATE_LOCALE"], useValue: 'en' },
                { provide: _angular_material__WEBPACK_IMPORTED_MODULE_3__["DateAdapter"], useClass: _angular_material_moment_adapter__WEBPACK_IMPORTED_MODULE_4__["MomentDateAdapter"] },
                { provide: _angular_material__WEBPACK_IMPORTED_MODULE_3__["MAT_DATE_FORMATS"], useValue: _shared_shared_module__WEBPACK_IMPORTED_MODULE_12__["ATLAS_DATE_FORMATS"] },
            ],
            schemas: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["CUSTOM_ELEMENTS_SCHEMA"]],
        })
    ], FinancialModule);
    return FinancialModule;
}());



/***/ }),

/***/ "./Client/app/financial/financial.route.ts":
/*!*************************************************!*\
  !*** ./Client/app/financial/financial.route.ts ***!
  \*************************************************/
/*! exports provided: routes, FinancialRoutingModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "routes", function() { return routes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FinancialRoutingModule", function() { return FinancialRoutingModule; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _financial_components_foreign_exchange_warning_error_msg_dialog_warning_error_msg_dialog_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../financial/components/foreign-exchange/warning-error-msg-dialog/warning-error-msg-dialog.component */ "./Client/app/financial/components/foreign-exchange/warning-error-msg-dialog/warning-error-msg-dialog.component.ts");
/* harmony import */ var _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../shared/entities/masterdata-props.entity */ "./Client/app/shared/entities/masterdata-props.entity.ts");
/* harmony import */ var _shared_guards_can_deactivate_guard_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../shared/guards/can-deactivate-guard.service */ "./Client/app/shared/guards/can-deactivate-guard.service.ts");
/* harmony import */ var _shared_guards_security_guard__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../shared/guards/security.guard */ "./Client/app/shared/guards/security.guard.ts");
/* harmony import */ var _shared_resolvers_company_date_resolver__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../shared/resolvers/company-date.resolver */ "./Client/app/shared/resolvers/company-date.resolver.ts");
/* harmony import */ var _shared_resolvers_form_configuration_resolver__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../shared/resolvers/form-configuration.resolver */ "./Client/app/shared/resolvers/form-configuration.resolver.ts");
/* harmony import */ var _shared_resolvers_masterdata_resolver__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../shared/resolvers/masterdata.resolver */ "./Client/app/shared/resolvers/masterdata.resolver.ts");
/* harmony import */ var _components_cash_matching_create_match_flag_create_match_flag_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./components/cash-matching/create-match-flag/create-match-flag.component */ "./Client/app/financial/components/cash-matching/create-match-flag/create-match-flag.component.ts");
/* harmony import */ var _components_cash_matching_delete_match_flag_delete_match_flag_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./components/cash-matching/delete-match-flag/delete-match-flag.component */ "./Client/app/financial/components/cash-matching/delete-match-flag/delete-match-flag.component.ts");
/* harmony import */ var _components_cut_off_close_month_close_month_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./components/cut-off/close-month/close-month.component */ "./Client/app/financial/components/cut-off/close-month/close-month.component.ts");
/* harmony import */ var _components_cut_off_freeze_freeze_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./components/cut-off/freeze/freeze.component */ "./Client/app/financial/components/cut-off/freeze/freeze.component.ts");
/* harmony import */ var _components_cut_off_freeze_recalculate_freeze_recalculate_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./components/cut-off/freeze/recalculate/freeze-recalculate.component */ "./Client/app/financial/components/cut-off/freeze/recalculate/freeze-recalculate.component.ts");
/* harmony import */ var _components_cut_off_generate_end_of_month_generate_end_of_month_summary_generate_end_of_month_summary_component__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./components/cut-off/generate-end-of-month/generate-end-of-month-summary/generate-end-of-month-summary.component */ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/generate-end-of-month-summary.component.ts");
/* harmony import */ var _components_cut_off_generate_end_of_month_generate_end_of_month_summary_tabs_fx_deal_month_end_summary_fx_deal_month_end_summary_component__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./components/cut-off/generate-end-of-month/generate-end-of-month-summary/tabs/fx-deal-month-end-summary/fx-deal-month-end-summary.component */ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month-summary/tabs/fx-deal-month-end-summary/fx-deal-month-end-summary.component.ts");
/* harmony import */ var _components_cut_off_generate_end_of_month_generate_end_of_month_component__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./components/cut-off/generate-end-of-month/generate-end-of-month.component */ "./Client/app/financial/components/cut-off/generate-end-of-month/generate-end-of-month.component.ts");
/* harmony import */ var _components_cut_off_generate_end_of_year_generate_end_of_year_component__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./components/cut-off/generate-end-of-year/generate-end-of-year.component */ "./Client/app/financial/components/cut-off/generate-end-of-year/generate-end-of-year.component.ts");
/* harmony import */ var _components_foreign_exchange_rates_foreign_exchange_rates_component__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./components/foreign-exchange/rates/foreign-exchange-rates.component */ "./Client/app/financial/components/foreign-exchange/rates/foreign-exchange-rates.component.ts");
/* harmony import */ var _components_home_home_component__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./components/home/home.component */ "./Client/app/financial/components/home/home.component.ts");
/* harmony import */ var _components_interface_accounting_error_management_accounting_error_management_component__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./components/interface/accounting-error-management/accounting-error-management.component */ "./Client/app/financial/components/interface/accounting-error-management/accounting-error-management.component.ts");
/* harmony import */ var _components_posting_process_accounting_creation_accounting_creation_component__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./components/posting-process/accounting-creation/accounting-creation.component */ "./Client/app/financial/components/posting-process/accounting-creation/accounting-creation.component.ts");
/* harmony import */ var _components_posting_process_accounting_edit_accounting_edit_summary_accounting_edit_summary_component__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./components/posting-process/accounting-edit/accounting-edit-summary/accounting-edit-summary.component */ "./Client/app/financial/components/posting-process/accounting-edit/accounting-edit-summary/accounting-edit-summary.component.ts");
/* harmony import */ var _components_posting_process_accounting_edit_accounting_edit_component__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./components/posting-process/accounting-edit/accounting-edit.component */ "./Client/app/financial/components/posting-process/accounting-edit/accounting-edit.component.ts");
/* harmony import */ var _components_posting_process_accounting_entries_component_accounting_entries_component_component__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./components/posting-process/accounting-entries-component/accounting-entries-component.component */ "./Client/app/financial/components/posting-process/accounting-entries-component/accounting-entries-component.component.ts");
/* harmony import */ var _components_posting_process_accounting_entries_component_manual_journal_accrual_view_manual_journal_accrual_view_component__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./components/posting-process/accounting-entries-component/manual-journal-accrual-view/manual-journal-accrual-view.component */ "./Client/app/financial/components/posting-process/accounting-entries-component/manual-journal-accrual-view/manual-journal-accrual-view.component.ts");
/* harmony import */ var _components_posting_process_posting_management_accounting_document_information_component_accounting_document_information_component_component__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./components/posting-process/posting-management/accounting-document-information-component/accounting-document-information-component.component */ "./Client/app/financial/components/posting-process/posting-management/accounting-document-information-component/accounting-document-information-component.component.ts");
/* harmony import */ var _components_posting_process_posting_management_posting_management_component__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./components/posting-process/posting-management/posting-management.component */ "./Client/app/financial/components/posting-process/posting-management/posting-management.component.ts");
/* harmony import */ var _components_posting_process_reverse_document_reverse_document_summary_reverse_document_summary_component__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./components/posting-process/reverse-document/reverse-document-summary/reverse-document-summary.component */ "./Client/app/financial/components/posting-process/reverse-document/reverse-document-summary/reverse-document-summary.component.ts");
/* harmony import */ var _components_posting_process_reverse_document_reverse_document_component__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./components/posting-process/reverse-document/reverse-document.component */ "./Client/app/financial/components/posting-process/reverse-document/reverse-document.component.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};






























var routes = [
    {
        path: '',
        pathMatch: 'full',
        redirectTo: 'home',
    },
    {
        path: 'home',
        component: _components_home_home_component__WEBPACK_IMPORTED_MODULE_19__["HomeComponent"],
        canActivate: [_shared_guards_security_guard__WEBPACK_IMPORTED_MODULE_5__["SecurityGuard"]],
        resolve: {
            companyDate: _shared_resolvers_company_date_resolver__WEBPACK_IMPORTED_MODULE_6__["CompanyDateResolver"],
        },
    },
    {
        path: 'accounting/entries',
        component: _components_posting_process_accounting_entries_component_accounting_entries_component_component__WEBPACK_IMPORTED_MODULE_24__["AccountingEntriesComponent"],
        canActivate: [_shared_guards_security_guard__WEBPACK_IMPORTED_MODULE_5__["SecurityGuard"]],
        data: {
            animation: 'AccountingEntries',
            title: 'Financials', isHomePage: true, privilegeLevel1Name: 'Financials',
        },
        resolve: {
            companyDate: _shared_resolvers_company_date_resolver__WEBPACK_IMPORTED_MODULE_6__["CompanyDateResolver"],
        },
    },
    {
        path: 'accounting/entries/:invoiceReference',
        component: _components_posting_process_accounting_entries_component_accounting_entries_component_component__WEBPACK_IMPORTED_MODULE_24__["AccountingEntriesComponent"],
        canActivate: [_shared_guards_security_guard__WEBPACK_IMPORTED_MODULE_5__["SecurityGuard"]],
        data: {
            animation: 'AccountingEntries',
            title: 'Financials', isHomePage: false, privilegeLevel1Name: 'Financials',
        },
        resolve: {
            companyDate: _shared_resolvers_company_date_resolver__WEBPACK_IMPORTED_MODULE_6__["CompanyDateResolver"],
        },
    },
    {
        path: 'fx/rates',
        component: _components_foreign_exchange_rates_foreign_exchange_rates_component__WEBPACK_IMPORTED_MODULE_18__["ForeignExchangeRatesComponent"],
        canActivate: [_shared_guards_security_guard__WEBPACK_IMPORTED_MODULE_5__["SecurityGuard"]],
        data: {
            animation: 'ForeignExchangeRates',
            title: 'Financials', isHomePage: true, privilegeLevel1Name: 'Financials',
            authorizations: [
                {
                    privilegeName: 'Financials',
                    permission: 1,
                    parentLevelOne: 'MarketData',
                    parentLevelTwo: null,
                },
            ],
        },
        resolve: {
            companyDate: _shared_resolvers_company_date_resolver__WEBPACK_IMPORTED_MODULE_6__["CompanyDateResolver"],
        },
    },
    {
        path: 'cut-off/close-month',
        component: _components_cut_off_close_month_close_month_component__WEBPACK_IMPORTED_MODULE_11__["CloseMonthComponent"],
        canActivate: [_shared_guards_security_guard__WEBPACK_IMPORTED_MODULE_5__["SecurityGuard"]],
        data: {
            animation: 'CloseMonth',
            title: 'Close Month',
            isHomePage: false,
            privilegeLevel1Name: null,
        },
        resolve: {
            companyDate: _shared_resolvers_company_date_resolver__WEBPACK_IMPORTED_MODULE_6__["CompanyDateResolver"],
        },
    },
    {
        path: 'cut-off/generate-end-of-month',
        component: _components_cut_off_generate_end_of_month_generate_end_of_month_component__WEBPACK_IMPORTED_MODULE_16__["GenerateEndOfMonthComponent"],
        canActivate: [_shared_guards_security_guard__WEBPACK_IMPORTED_MODULE_5__["SecurityGuard"]],
        data: {
            animation: 'GenerateEndOfMonth',
            title: 'Generate End of Month',
            isHomePage: false,
            privilegeLevel1Name: null,
            masterdataList: [
                _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_3__["MasterDataProps"].MonthEndReportType,
            ],
        },
        resolve: {
            masterdata: _shared_resolvers_masterdata_resolver__WEBPACK_IMPORTED_MODULE_8__["MasterDataResolver"],
            companyDate: _shared_resolvers_company_date_resolver__WEBPACK_IMPORTED_MODULE_6__["CompanyDateResolver"],
        },
    },
    {
        path: 'cut-off/generate-end-of-year',
        component: _components_cut_off_generate_end_of_year_generate_end_of_year_component__WEBPACK_IMPORTED_MODULE_17__["GenerateEndOfYearComponent"],
        canActivate: [_shared_guards_security_guard__WEBPACK_IMPORTED_MODULE_5__["SecurityGuard"]],
        data: {
            animation: 'GenerateEndOfYear',
            title: 'Generate End of Year',
            isHomePage: false,
            privilegeLevel1Name: null,
            masterdataList: [
                _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_3__["MasterDataProps"].MonthEndReportType,
                _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_3__["MasterDataProps"].NominalAccounts,
                _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_3__["MasterDataProps"].Departments,
            ],
        },
        resolve: {
            masterdata: _shared_resolvers_masterdata_resolver__WEBPACK_IMPORTED_MODULE_8__["MasterDataResolver"],
            companyDate: _shared_resolvers_company_date_resolver__WEBPACK_IMPORTED_MODULE_6__["CompanyDateResolver"],
        },
    },
    {
        path: 'cut-off/generate-end-of-month/summary',
        component: _components_cut_off_generate_end_of_month_generate_end_of_month_summary_generate_end_of_month_summary_component__WEBPACK_IMPORTED_MODULE_14__["GenerateEndOfMonthSummaryComponent"],
        canActivate: [_shared_guards_security_guard__WEBPACK_IMPORTED_MODULE_5__["SecurityGuard"]],
        resolve: {
            companyDate: _shared_resolvers_company_date_resolver__WEBPACK_IMPORTED_MODULE_6__["CompanyDateResolver"],
        },
    },
    {
        path: 'cut-off/freeze',
        component: _components_cut_off_freeze_freeze_component__WEBPACK_IMPORTED_MODULE_12__["FreezeComponent"],
        canActivate: [_shared_guards_security_guard__WEBPACK_IMPORTED_MODULE_5__["SecurityGuard"]],
        data: {
            animation: 'FreezeView',
            title: 'View frozen database', isHomePage: false, privilegeLevel1Name: null,
            isNew: false,
            authorizations: [
                {
                    privilegeName: 'FrozenDatabase',
                    permission: 2,
                    parentLevelOne: 'CutOff',
                    parentLevelTwo: 'Financials',
                },
            ],
        },
        resolve: {
            companyDate: _shared_resolvers_company_date_resolver__WEBPACK_IMPORTED_MODULE_6__["CompanyDateResolver"],
        },
    },
    {
        path: 'cut-off/freeze/new',
        component: _components_cut_off_freeze_freeze_component__WEBPACK_IMPORTED_MODULE_12__["FreezeComponent"],
        canActivate: [_shared_guards_security_guard__WEBPACK_IMPORTED_MODULE_5__["SecurityGuard"]],
        data: {
            animation: 'Freeze',
            title: 'Financials', isHomePage: true, privilegeLevel1Name: 'Financials',
            isNew: true,
            authorizations: [
                {
                    privilegeName: 'CutOff',
                    permission: 1,
                    parentLevelOne: 'Financials',
                },
            ],
        },
        resolve: {
            companyDate: _shared_resolvers_company_date_resolver__WEBPACK_IMPORTED_MODULE_6__["CompanyDateResolver"],
        },
    },
    {
        path: 'cut-off/freeze/recalculate',
        component: _components_cut_off_freeze_recalculate_freeze_recalculate_component__WEBPACK_IMPORTED_MODULE_13__["FreezeRecalculateComponent"],
        canActivate: [_shared_guards_security_guard__WEBPACK_IMPORTED_MODULE_5__["SecurityGuard"]],
        data: {
            animation: 'Freeze',
            title: 'Financials', isHomePage: true, icon: 'Financials',
            authorizations: [
                {
                    privilegeName: 'RecalculateFrozenDatabase',
                    permission: 2,
                    parentLevelOne: 'CutOff',
                    parentLevelTwo: 'Financials',
                },
            ],
        },
        resolve: {
            companyDate: _shared_resolvers_company_date_resolver__WEBPACK_IMPORTED_MODULE_6__["CompanyDateResolver"],
        },
    },
    {
        path: 'posting/management',
        component: _components_posting_process_posting_management_posting_management_component__WEBPACK_IMPORTED_MODULE_27__["PostingManagementComponent"],
        canActivate: [_shared_guards_security_guard__WEBPACK_IMPORTED_MODULE_5__["SecurityGuard"]],
        canDeactivate: [_shared_guards_can_deactivate_guard_service__WEBPACK_IMPORTED_MODULE_4__["CanDeactivateGuard"]],
        data: {
            animation: 'PostingmanagementView',
            title: 'Posting Management', isHomePage: false, privilegeLevel1Name: null,
            authorizations: [
                {
                    privilegeName: 'POSTINGMGT',
                    permission: 1,
                    parentLevelOne: 'Financials',
                    privilegeParentLevelTwo: null,
                },
            ],
            masterdataList: [
                _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_3__["MasterDataProps"].Departments,
            ],
        },
        resolve: {
            masterdata: _shared_resolvers_masterdata_resolver__WEBPACK_IMPORTED_MODULE_8__["MasterDataResolver"],
            companyDate: _shared_resolvers_company_date_resolver__WEBPACK_IMPORTED_MODULE_6__["CompanyDateResolver"],
        },
    },
    {
        path: 'reverse/document',
        component: _components_posting_process_reverse_document_reverse_document_component__WEBPACK_IMPORTED_MODULE_29__["ReverseDocumentComponent"],
        canActivate: [_shared_guards_security_guard__WEBPACK_IMPORTED_MODULE_5__["SecurityGuard"]],
        canDeactivate: [_shared_guards_can_deactivate_guard_service__WEBPACK_IMPORTED_MODULE_4__["CanDeactivateGuard"]],
        data: {
            animation: 'reverseDocument',
            formId: 'reverseDocument',
            title: 'Reverse Document', isHomePage: false, icon: '',
            authorizations: [
                {
                    privilegeName: 'ReverseDocument',
                    permission: 2,
                    parentLevelOne: 'Financials',
                    privilegeParentLevelTwo: 'AccountingEntries',
                },
            ],
            masterdataList: [
                _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_3__["MasterDataProps"].Departments,
                _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_3__["MasterDataProps"].Counterparties,
                _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_3__["MasterDataProps"].Currencies,
                _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_3__["MasterDataProps"].CostTypes,
                _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_3__["MasterDataProps"].Commodities,
                _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_3__["MasterDataProps"].PaymentTerms,
                _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_3__["MasterDataProps"].Vats,
                _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_3__["MasterDataProps"].AccountLineType,
            ],
        },
        resolve: {
            masterdata: _shared_resolvers_masterdata_resolver__WEBPACK_IMPORTED_MODULE_8__["MasterDataResolver"],
            formConfiguration: _shared_resolvers_form_configuration_resolver__WEBPACK_IMPORTED_MODULE_7__["FormConfigurationResolver"],
            companyDate: _shared_resolvers_company_date_resolver__WEBPACK_IMPORTED_MODULE_6__["CompanyDateResolver"],
        },
    },
    {
        path: 'create/matching',
        component: _components_cash_matching_create_match_flag_create_match_flag_component__WEBPACK_IMPORTED_MODULE_9__["CreateMatchFlagComponent"],
        canActivate: [_shared_guards_security_guard__WEBPACK_IMPORTED_MODULE_5__["SecurityGuard"]],
        canDeactivate: [_shared_guards_can_deactivate_guard_service__WEBPACK_IMPORTED_MODULE_4__["CanDeactivateGuard"]],
        data: {
            animation: 'createMatching',
            formId: 'cashMatching',
            title: 'Create Match Flag', isHomePage: false, privilegeLevel1Name: null,
            masterdataList: [
                _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_3__["MasterDataProps"].Departments,
                _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_3__["MasterDataProps"].Counterparties,
                _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_3__["MasterDataProps"].Currencies,
                _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_3__["MasterDataProps"].Companies,
            ],
        },
        resolve: {
            masterdata: _shared_resolvers_masterdata_resolver__WEBPACK_IMPORTED_MODULE_8__["MasterDataResolver"],
            formConfiguration: _shared_resolvers_form_configuration_resolver__WEBPACK_IMPORTED_MODULE_7__["FormConfigurationResolver"],
            companyDate: _shared_resolvers_company_date_resolver__WEBPACK_IMPORTED_MODULE_6__["CompanyDateResolver"],
        },
    },
    {
        path: 'delete/matching',
        component: _components_cash_matching_delete_match_flag_delete_match_flag_component__WEBPACK_IMPORTED_MODULE_10__["DeleteMatchFlagComponent"],
        canActivate: [_shared_guards_security_guard__WEBPACK_IMPORTED_MODULE_5__["SecurityGuard"]],
        canDeactivate: [_shared_guards_can_deactivate_guard_service__WEBPACK_IMPORTED_MODULE_4__["CanDeactivateGuard"]],
        data: {
            animation: 'cashmatching',
            formId: 'cashMatching',
            title: 'Delete Match Flag', isHomePage: false, privilegeLevel1Name: null,
            masterdataList: [
                _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_3__["MasterDataProps"].Departments,
                _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_3__["MasterDataProps"].Counterparties,
                _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_3__["MasterDataProps"].Currencies,
                _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_3__["MasterDataProps"].Companies,
            ],
        },
        resolve: {
            masterdata: _shared_resolvers_masterdata_resolver__WEBPACK_IMPORTED_MODULE_8__["MasterDataResolver"],
            formConfiguration: _shared_resolvers_form_configuration_resolver__WEBPACK_IMPORTED_MODULE_7__["FormConfigurationResolver"],
            companyDate: _shared_resolvers_company_date_resolver__WEBPACK_IMPORTED_MODULE_6__["CompanyDateResolver"],
        },
    },
    {
        path: 'posting/accountingdocument/viewedit/:accountingId',
        component: _components_posting_process_posting_management_accounting_document_information_component_accounting_document_information_component_component__WEBPACK_IMPORTED_MODULE_26__["AccountingDocumentInformationComponent"],
        canActivate: [_shared_guards_security_guard__WEBPACK_IMPORTED_MODULE_5__["SecurityGuard"]],
        canDeactivate: [_shared_guards_can_deactivate_guard_service__WEBPACK_IMPORTED_MODULE_4__["CanDeactivateGuard"]],
        data: {
            animation: 'AccountDocumentView',
            title: 'Accounting Document', isHomePage: false, privilegeLevel1Name: null,
            authorizations: [
                {
                    privilegeName: 'AccountingEntries',
                    permission: 1,
                    parentLevelOne: 'Financials',
                    privilegeParentLevelTwo: null,
                },
            ],
            masterdataList: [
                _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_3__["MasterDataProps"].Departments,
                _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_3__["MasterDataProps"].Currencies,
                _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_3__["MasterDataProps"].CostTypes,
                _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_3__["MasterDataProps"].Vats,
                _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_3__["MasterDataProps"].Commodities,
                _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_3__["MasterDataProps"].PaymentTerms,
                _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_3__["MasterDataProps"].Counterparties,
                _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_3__["MasterDataProps"].Commodities,
                _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_3__["MasterDataProps"].NominalAccounts,
                _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_3__["MasterDataProps"].AccountLineType,
                _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_3__["MasterDataProps"].PaymentTerms,
                _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_3__["MasterDataProps"].Vats,
                _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_3__["MasterDataProps"].Province,
            ],
        },
        resolve: {
            masterdata: _shared_resolvers_masterdata_resolver__WEBPACK_IMPORTED_MODULE_8__["MasterDataResolver"],
            companyDate: _shared_resolvers_company_date_resolver__WEBPACK_IMPORTED_MODULE_6__["CompanyDateResolver"],
        },
    },
    {
        path: 'accounting/entry/new',
        component: _components_posting_process_accounting_creation_accounting_creation_component__WEBPACK_IMPORTED_MODULE_21__["AccountingCreationComponent"],
        canActivate: [_shared_guards_security_guard__WEBPACK_IMPORTED_MODULE_5__["SecurityGuard"]],
        canDeactivate: [_shared_guards_can_deactivate_guard_service__WEBPACK_IMPORTED_MODULE_4__["CanDeactivateGuard"]],
        data: {
            animation: 'CreateEntries',
            title: 'Create document', isHomePage: false, privilegeLevel1Name: null,
            authorizations: [
                {
                    privilegeName: 'CreateEditDocument',
                    permission: 2,
                    parentLevelOne: 'Financials',
                    privilegeParentLevelTwo: 'AccountingEntries',
                },
            ],
            masterdataList: [
                _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_3__["MasterDataProps"].Currencies,
                _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_3__["MasterDataProps"].Departments,
                _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_3__["MasterDataProps"].Counterparties,
                _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_3__["MasterDataProps"].CostTypes,
                _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_3__["MasterDataProps"].Commodities,
                _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_3__["MasterDataProps"].NominalAccounts,
                _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_3__["MasterDataProps"].AccountLineType,
                _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_3__["MasterDataProps"].Province,
                _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_3__["MasterDataProps"].Branches
            ],
        },
        resolve: {
            masterdata: _shared_resolvers_masterdata_resolver__WEBPACK_IMPORTED_MODULE_8__["MasterDataResolver"],
            companyDate: _shared_resolvers_company_date_resolver__WEBPACK_IMPORTED_MODULE_6__["CompanyDateResolver"],
        },
    },
    {
        path: 'edit/document/summary',
        component: _components_posting_process_accounting_edit_accounting_edit_summary_accounting_edit_summary_component__WEBPACK_IMPORTED_MODULE_22__["AccountingEditSummaryComponent"],
        canActivate: [_shared_guards_security_guard__WEBPACK_IMPORTED_MODULE_5__["SecurityGuard"]],
        data: {
            animation: 'editDocumentSummary',
            formId: 'editDocumentSummary',
            title: 'Edit Document Summary', isHomePage: false, icon: '',
            masterdataList: [
                _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_3__["MasterDataProps"].Departments,
                _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_3__["MasterDataProps"].Counterparties,
                _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_3__["MasterDataProps"].Currencies,
                _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_3__["MasterDataProps"].CostTypes,
                _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_3__["MasterDataProps"].Commodities,
                _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_3__["MasterDataProps"].NominalAccounts,
                _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_3__["MasterDataProps"].PaymentTerms,
                _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_3__["MasterDataProps"].Vats,
            ],
            authorizations: [
                {
                    privilegeName: 'EditAccountingEntries',
                    permission: 2,
                    parentLevelOne: 'Financials',
                    privilegeParentLevelTwo: 'AccountingEntries',
                },
            ],
        },
        resolve: {
            masterdata: _shared_resolvers_masterdata_resolver__WEBPACK_IMPORTED_MODULE_8__["MasterDataResolver"],
            formConfiguration: _shared_resolvers_form_configuration_resolver__WEBPACK_IMPORTED_MODULE_7__["FormConfigurationResolver"],
            companyDate: _shared_resolvers_company_date_resolver__WEBPACK_IMPORTED_MODULE_6__["CompanyDateResolver"],
        },
    },
    {
        path: 'edit/document/:accountingId',
        component: _components_posting_process_accounting_edit_accounting_edit_component__WEBPACK_IMPORTED_MODULE_23__["AccountingEditComponent"],
        canActivate: [_shared_guards_security_guard__WEBPACK_IMPORTED_MODULE_5__["SecurityGuard"]],
        canDeactivate: [_shared_guards_can_deactivate_guard_service__WEBPACK_IMPORTED_MODULE_4__["CanDeactivateGuard"]],
        data: {
            animation: 'editDocument',
            title: 'Edit Document', isHomePage: false, privilegeLevel1Name: null,
            masterdataList: [
                _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_3__["MasterDataProps"].Departments,
                _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_3__["MasterDataProps"].Currencies,
                _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_3__["MasterDataProps"].CostTypes,
                _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_3__["MasterDataProps"].Vats,
                _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_3__["MasterDataProps"].Commodities,
                _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_3__["MasterDataProps"].PaymentTerms,
                _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_3__["MasterDataProps"].Counterparties,
                _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_3__["MasterDataProps"].Commodities,
                _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_3__["MasterDataProps"].NominalAccounts,
                _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_3__["MasterDataProps"].AccountLineType,
                _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_3__["MasterDataProps"].PaymentTerms,
                _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_3__["MasterDataProps"].Vats,
            ],
        },
        resolve: {
            masterdata: _shared_resolvers_masterdata_resolver__WEBPACK_IMPORTED_MODULE_8__["MasterDataResolver"],
            companyDate: _shared_resolvers_company_date_resolver__WEBPACK_IMPORTED_MODULE_6__["CompanyDateResolver"],
        },
    },
    {
        path: 'financial/fx/rates/',
        component: _financial_components_foreign_exchange_warning_error_msg_dialog_warning_error_msg_dialog_component__WEBPACK_IMPORTED_MODULE_2__["WarningErrorMsgDialogComponent"],
        canActivate: [_shared_guards_security_guard__WEBPACK_IMPORTED_MODULE_5__["SecurityGuard"]],
        data: {
            animation: 'WarningErrorMsgDialogComponent',
            title: 'Warning Error Management', isHomePage: false, privilegeLevel1Name: null,
        },
        resolve: {
            companyDate: _shared_resolvers_company_date_resolver__WEBPACK_IMPORTED_MODULE_6__["CompanyDateResolver"],
        },
    },
    {
        path: 'accounting/errormanagement',
        component: _components_interface_accounting_error_management_accounting_error_management_component__WEBPACK_IMPORTED_MODULE_20__["AccountingErrorManagementComponent"],
        canActivate: [_shared_guards_security_guard__WEBPACK_IMPORTED_MODULE_5__["SecurityGuard"]],
        data: {
            animation: 'AccountingErrorManagement',
            title: 'Accounting Error Management', isHomePage: false, privilegeLevel1Name: null,
        },
        resolve: {
            companyDate: _shared_resolvers_company_date_resolver__WEBPACK_IMPORTED_MODULE_6__["CompanyDateResolver"],
        },
    },
    {
        path: 'accounting/entry/view/:accountingId',
        component: _components_posting_process_accounting_entries_component_manual_journal_accrual_view_manual_journal_accrual_view_component__WEBPACK_IMPORTED_MODULE_25__["ManualJournalAccrualViewComponent"],
        canActivate: [_shared_guards_security_guard__WEBPACK_IMPORTED_MODULE_5__["SecurityGuard"]],
        canDeactivate: [_shared_guards_can_deactivate_guard_service__WEBPACK_IMPORTED_MODULE_4__["CanDeactivateGuard"]],
        data: {
            animation: 'ManualJournalAccrualView',
            title: 'Manual Journal Accrual View', isHomePage: false, privilegeLevel1Name: null,
            authorizations: [
                {
                    privilegeName: 'AccountingEntries',
                    permission: 1,
                    parentLevelOne: 'Financials',
                    privilegeParentLevelTwo: null,
                },
            ],
            masterdataList: [
                _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_3__["MasterDataProps"].Departments,
                _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_3__["MasterDataProps"].Currencies,
                _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_3__["MasterDataProps"].CostTypes,
                _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_3__["MasterDataProps"].Vats,
                _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_3__["MasterDataProps"].Commodities,
                _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_3__["MasterDataProps"].PaymentTerms,
                _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_3__["MasterDataProps"].Counterparties,
                _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_3__["MasterDataProps"].Commodities,
                _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_3__["MasterDataProps"].NominalAccounts,
                _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_3__["MasterDataProps"].AccountLineType,
                _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_3__["MasterDataProps"].PaymentTerms,
                _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_3__["MasterDataProps"].Vats,
            ],
        },
        resolve: {
            masterdata: _shared_resolvers_masterdata_resolver__WEBPACK_IMPORTED_MODULE_8__["MasterDataResolver"],
            companyDate: _shared_resolvers_company_date_resolver__WEBPACK_IMPORTED_MODULE_6__["CompanyDateResolver"],
        },
    },
    {
        path: 'reverse/document/summary/:transactionDocumentId',
        component: _components_posting_process_reverse_document_reverse_document_summary_reverse_document_summary_component__WEBPACK_IMPORTED_MODULE_28__["ReverseDocumentSummaryComponent"],
        canActivate: [_shared_guards_security_guard__WEBPACK_IMPORTED_MODULE_5__["SecurityGuard"]],
        canDeactivate: [_shared_guards_can_deactivate_guard_service__WEBPACK_IMPORTED_MODULE_4__["CanDeactivateGuard"]],
        data: {
            animation: 'reverseDocument',
            title: 'Reverse Summary', isHomePage: false, privilegeLevel1Name: null,
            formId: 'ReverseSummary',
            masterdataList: [
                _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_3__["MasterDataProps"].Departments,
                _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_3__["MasterDataProps"].Counterparties,
                _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_3__["MasterDataProps"].Currencies,
                _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_3__["MasterDataProps"].CostTypes,
                _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_3__["MasterDataProps"].Commodities,
                _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_3__["MasterDataProps"].PaymentTerms,
                _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_3__["MasterDataProps"].Vats,
                _shared_entities_masterdata_props_entity__WEBPACK_IMPORTED_MODULE_3__["MasterDataProps"].AccountLineType,
            ],
            authorizations: [
                {
                    privilegeName: 'ReverseDocument',
                    permission: 2,
                    parentLevelOne: 'Financials',
                    privilegeParentLevelTwo: 'AccountingEntries',
                },
            ],
        },
        resolve: {
            masterdata: _shared_resolvers_masterdata_resolver__WEBPACK_IMPORTED_MODULE_8__["MasterDataResolver"],
            formConfiguration: _shared_resolvers_form_configuration_resolver__WEBPACK_IMPORTED_MODULE_7__["FormConfigurationResolver"],
            companyDate: _shared_resolvers_company_date_resolver__WEBPACK_IMPORTED_MODULE_6__["CompanyDateResolver"],
        },
    },
    {
        path: 'cut-off/fx-deal-generate-end-of-month/summary',
        component: _components_cut_off_generate_end_of_month_generate_end_of_month_summary_tabs_fx_deal_month_end_summary_fx_deal_month_end_summary_component__WEBPACK_IMPORTED_MODULE_15__["FxDealMonthEndSummaryComponent"],
        canActivate: [_shared_guards_security_guard__WEBPACK_IMPORTED_MODULE_5__["SecurityGuard"]],
        resolve: {
            companyDate: _shared_resolvers_company_date_resolver__WEBPACK_IMPORTED_MODULE_6__["CompanyDateResolver"],
        },
    },
];
var FinancialRoutingModule = /** @class */ (function () {
    function FinancialRoutingModule() {
    }
    FinancialRoutingModule = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"])({
            imports: [_angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"].forChild(routes)],
            exports: [_angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"]],
            providers: [],
        })
    ], FinancialRoutingModule);
    return FinancialRoutingModule;
}());



/***/ }),

/***/ "./Client/app/shared/entities/accounting-document-line.entity.ts":
/*!***********************************************************************!*\
  !*** ./Client/app/shared/entities/accounting-document-line.entity.ts ***!
  \***********************************************************************/
/*! exports provided: AccountingDocumentLine */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AccountingDocumentLine", function() { return AccountingDocumentLine; });
var AccountingDocumentLine = /** @class */ (function () {
    function AccountingDocumentLine(accountingLine) {
        if (accountingLine === void 0) { accountingLine = null; }
        if (accountingLine !== null) {
            this.accountingDocumentLineId = null;
            this.accountReferenceId = accountingLine.accountReferenceId;
            this.clientAccountId = accountingLine.clientAccountId;
            this.associatedAccountId = accountingLine.associatedAccountId;
            this.accountLineTypeId = accountingLine.accountLineTypeId;
            this.costTypeId = accountingLine.costTypeId;
            this.amount = accountingLine.amount;
            this.statutoryCurrency = accountingLine.statutoryCurrency;
            this.functionalCurrency = accountingLine.functionalCurrency;
            this.narrative = accountingLine.narrative;
            this.departmentId = accountingLine.departmentId;
            this.secondaryDocumentReference = accountingLine.secondaryDocumentReference;
            this.clientReference = accountingLine.clientReference;
            this.sectionId = accountingLine.sectionId;
            this.commodityId = accountingLine.commodityId;
            this.quantity = accountingLine.quantity;
            this.charterId = accountingLine.charterId;
            this.costCenter = accountingLine.costCenter;
            this.paymentTermId = accountingLine.paymentTermId;
            this.vatId = accountingLine.vatId;
            this.accrualNumber = accountingLine.accrualNumber;
            this.accountReference = accountingLine.accountReference;
            this.associatedAccountCode = accountingLine.associatedAccountCode;
            this.extDocReference = accountingLine.extDocReference;
            this.sectionReference = accountingLine.sectionReference;
            this.dealNumber = accountingLine.dealNumber;
            this.settlementCurrency = accountingLine.settlementCurrency;
            this.provinceId = accountingLine.provinceId;
            this.journalLineId = accountingLine.journalLineId;
            this.postingLineId = accountingLine.postingLineId;
        }
    }
    return AccountingDocumentLine;
}());



/***/ }),

/***/ "./Client/app/shared/entities/accounting-document-status-deleted.entity.ts":
/*!*********************************************************************************!*\
  !*** ./Client/app/shared/entities/accounting-document-status-deleted.entity.ts ***!
  \*********************************************************************************/
/*! exports provided: AccountingDocumentStatusToDeletedCommand */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AccountingDocumentStatusToDeletedCommand", function() { return AccountingDocumentStatusToDeletedCommand; });
var AccountingDocumentStatusToDeletedCommand = /** @class */ (function () {
    function AccountingDocumentStatusToDeletedCommand() {
    }
    return AccountingDocumentStatusToDeletedCommand;
}());



/***/ }),

/***/ "./Client/app/shared/entities/accounting-document-status.entity.ts":
/*!*************************************************************************!*\
  !*** ./Client/app/shared/entities/accounting-document-status.entity.ts ***!
  \*************************************************************************/
/*! exports provided: AccountingDocumentStatus */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AccountingDocumentStatus", function() { return AccountingDocumentStatus; });
var AccountingDocumentStatus = /** @class */ (function () {
    function AccountingDocumentStatus() {
    }
    return AccountingDocumentStatus;
}());



/***/ }),

/***/ "./Client/app/shared/entities/accounting-setup.entity.ts":
/*!***************************************************************!*\
  !*** ./Client/app/shared/entities/accounting-setup.entity.ts ***!
  \***************************************************************/
/*! exports provided: AccountingSetup */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AccountingSetup", function() { return AccountingSetup; });
var AccountingSetup = /** @class */ (function () {
    function AccountingSetup() {
    }
    return AccountingSetup;
}());



/***/ }),

/***/ "./Client/app/shared/entities/accountingImportReport.entity.ts":
/*!*********************************************************************!*\
  !*** ./Client/app/shared/entities/accountingImportReport.entity.ts ***!
  \*********************************************************************/
/*! exports provided: AccountingImportReport */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AccountingImportReport", function() { return AccountingImportReport; });
var AccountingImportReport = /** @class */ (function () {
    function AccountingImportReport() {
        this.blockerData = [];
        this.goodDataList = [];
    }
    return AccountingImportReport;
}());



/***/ }),

/***/ "./Client/app/shared/entities/create-transaction-document.entity.ts":
/*!**************************************************************************!*\
  !*** ./Client/app/shared/entities/create-transaction-document.entity.ts ***!
  \**************************************************************************/
/*! exports provided: CreateTransactionDocument */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CreateTransactionDocument", function() { return CreateTransactionDocument; });
var CreateTransactionDocument = /** @class */ (function () {
    function CreateTransactionDocument() {
    }
    return CreateTransactionDocument;
}());



/***/ }),

/***/ "./Client/app/shared/entities/filter-gem.entity.ts":
/*!*********************************************************!*\
  !*** ./Client/app/shared/entities/filter-gem.entity.ts ***!
  \*********************************************************/
/*! exports provided: FilterGem */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FilterGem", function() { return FilterGem; });
var FilterGem = /** @class */ (function () {
    function FilterGem() {
    }
    return FilterGem;
}());



/***/ }),

/***/ "./Client/app/shared/entities/filter-value-generate-end-month.entity.ts":
/*!******************************************************************************!*\
  !*** ./Client/app/shared/entities/filter-value-generate-end-month.entity.ts ***!
  \******************************************************************************/
/*! exports provided: FilterValueGenerateEndMonth */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FilterValueGenerateEndMonth", function() { return FilterValueGenerateEndMonth; });
var FilterValueGenerateEndMonth = /** @class */ (function () {
    function FilterValueGenerateEndMonth() {
    }
    return FilterValueGenerateEndMonth;
}());



/***/ }),

/***/ "./Client/app/shared/entities/foreign-exchange-rate-display-view.entity.ts":
/*!*********************************************************************************!*\
  !*** ./Client/app/shared/entities/foreign-exchange-rate-display-view.entity.ts ***!
  \*********************************************************************************/
/*! exports provided: ForeignExchangeRateDisplayView */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ForeignExchangeRateDisplayView", function() { return ForeignExchangeRateDisplayView; });
var ForeignExchangeRateDisplayView = /** @class */ (function () {
    function ForeignExchangeRateDisplayView(foreignExchangeRate) {
        this.isTouched = false;
        this.highlight = false;
        this.currencyCode = foreignExchangeRate.currencyCode;
        this.rateType = foreignExchangeRate.currencyRoeType;
        this.date = foreignExchangeRate.date;
        this.exchangeRate = foreignExchangeRate.rate;
        this.oneMonthForwardPeriodPoints = foreignExchangeRate.fwdMonth1;
        this.twoMonthsForwardPeriodPoints = foreignExchangeRate.fwdMonth2;
        this.threeMonthsForwardPeriodPoints = foreignExchangeRate.fwdMonth3;
        this.sixMonthsForwardPeriodPoints = foreignExchangeRate.fwdMonth6;
        this.oneYearForwardPeriodPoints = foreignExchangeRate.fwdYear1;
        this.twoYearForwardPeriodPoints = foreignExchangeRate.fwdYear2;
        this.isInactive = foreignExchangeRate.currencyIsDeactivated;
        this.currencyDescription = foreignExchangeRate.currencyDescription;
        this.lastAmendmentOn = foreignExchangeRate.modifiedBy ? foreignExchangeRate.modifiedDateTime : foreignExchangeRate.createdDateTime;
        this.lastAmendmentBy = foreignExchangeRate.modifiedBy ? foreignExchangeRate.modifiedBy : foreignExchangeRate.createdBy;
        this.creationMode = foreignExchangeRate.creationMode;
        this.time = this.lastAmendmentOn ? this.lastAmendmentOn.toISOString().substr(11, 8) : '';
    }
    return ForeignExchangeRateDisplayView;
}());



/***/ }),

/***/ "./Client/app/shared/entities/lock-functional-context.entity.ts":
/*!**********************************************************************!*\
  !*** ./Client/app/shared/entities/lock-functional-context.entity.ts ***!
  \**********************************************************************/
/*! exports provided: LockFunctionalContext */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LockFunctionalContext", function() { return LockFunctionalContext; });
var LockFunctionalContext;
(function (LockFunctionalContext) {
    LockFunctionalContext[LockFunctionalContext["TradeEdit"] = 100] = "TradeEdit";
    LockFunctionalContext[LockFunctionalContext["RelativeTradeEdit"] = 101] = "RelativeTradeEdit";
    LockFunctionalContext[LockFunctionalContext["TradeApproval"] = 102] = "TradeApproval";
    LockFunctionalContext[LockFunctionalContext["TradeSplit"] = 103] = "TradeSplit";
    LockFunctionalContext[LockFunctionalContext["TradeTranche"] = 104] = "TradeTranche";
    LockFunctionalContext[LockFunctionalContext["RelativeTradeSplit"] = 105] = "RelativeTradeSplit";
    LockFunctionalContext[LockFunctionalContext["RelativeTradeTranche"] = 106] = "RelativeTradeTranche";
    LockFunctionalContext[LockFunctionalContext["TradeAssignment"] = 107] = "TradeAssignment";
    LockFunctionalContext[LockFunctionalContext["TradeDeassignment"] = 108] = "TradeDeassignment";
    LockFunctionalContext[LockFunctionalContext["BulkEdition"] = 109] = "BulkEdition";
    LockFunctionalContext[LockFunctionalContext["BulkApproval"] = 110] = "BulkApproval";
    LockFunctionalContext[LockFunctionalContext["TradeReassignment"] = 111] = "TradeReassignment";
    LockFunctionalContext[LockFunctionalContext["TradeMerge"] = 112] = "TradeMerge";
    LockFunctionalContext[LockFunctionalContext["TradeBulkClosure"] = 113] = "TradeBulkClosure";
    LockFunctionalContext[LockFunctionalContext["FxDeal"] = 114] = "FxDeal";
    LockFunctionalContext[LockFunctionalContext["CharterEdit"] = 200] = "CharterEdit";
    LockFunctionalContext[LockFunctionalContext["CharterDeletion"] = 201] = "CharterDeletion";
    LockFunctionalContext[LockFunctionalContext["CharterBulkClosure"] = 202] = "CharterBulkClosure";
    LockFunctionalContext[LockFunctionalContext["ContractInvoicing"] = 300] = "ContractInvoicing";
    LockFunctionalContext[LockFunctionalContext["CostInvoicing"] = 301] = "CostInvoicing";
    LockFunctionalContext[LockFunctionalContext["GoodsAndCostsInvoicing"] = 302] = "GoodsAndCostsInvoicing";
    LockFunctionalContext[LockFunctionalContext["WashoutInvoicing"] = 303] = "WashoutInvoicing";
    LockFunctionalContext[LockFunctionalContext["ReversalInvoicing"] = 304] = "ReversalInvoicing";
    LockFunctionalContext[LockFunctionalContext["Allocation"] = 400] = "Allocation";
    LockFunctionalContext[LockFunctionalContext["RelativeAllocation"] = 401] = "RelativeAllocation";
    LockFunctionalContext[LockFunctionalContext["Deallocation"] = 402] = "Deallocation";
    LockFunctionalContext[LockFunctionalContext["BulkAllocation"] = 403] = "BulkAllocation";
    LockFunctionalContext[LockFunctionalContext["BulkDeallocation"] = 404] = "BulkDeallocation";
    LockFunctionalContext[LockFunctionalContext["RelativeDeallocation"] = 403] = "RelativeDeallocation";
    LockFunctionalContext[LockFunctionalContext["CostMatrixEdition"] = 500] = "CostMatrixEdition";
    LockFunctionalContext[LockFunctionalContext["CostMatrixDeletion"] = 501] = "CostMatrixDeletion";
    LockFunctionalContext[LockFunctionalContext["MasterDataEdition"] = 600] = "MasterDataEdition";
    LockFunctionalContext[LockFunctionalContext["UserAccountEdition"] = 700] = "UserAccountEdition";
    LockFunctionalContext[LockFunctionalContext["UserAccountDeletion"] = 701] = "UserAccountDeletion";
    LockFunctionalContext[LockFunctionalContext["UserProfileEdition"] = 800] = "UserProfileEdition";
    LockFunctionalContext[LockFunctionalContext["UserProfileDeletion"] = 801] = "UserProfileDeletion";
    LockFunctionalContext[LockFunctionalContext["AccountingDocumentEdition"] = 900] = "AccountingDocumentEdition";
    LockFunctionalContext[LockFunctionalContext["AccountingDocumentAuthorizeForPosting"] = 901] = "AccountingDocumentAuthorizeForPosting";
    LockFunctionalContext[LockFunctionalContext["AccountingDocumentReversal"] = 902] = "AccountingDocumentReversal";
    LockFunctionalContext[LockFunctionalContext["CashDocumentEdition"] = 1000] = "CashDocumentEdition";
    LockFunctionalContext[LockFunctionalContext["CashDocumentDeletion"] = 1001] = "CashDocumentDeletion";
})(LockFunctionalContext || (LockFunctionalContext = {}));


/***/ }),

/***/ "./Client/app/shared/entities/manual-journal-document-line.entity.ts":
/*!***************************************************************************!*\
  !*** ./Client/app/shared/entities/manual-journal-document-line.entity.ts ***!
  \***************************************************************************/
/*! exports provided: ManualJournalLine */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ManualJournalLine", function() { return ManualJournalLine; });
var ManualJournalLine = /** @class */ (function () {
    function ManualJournalLine(manualLine) {
        if (manualLine === void 0) { manualLine = null; }
        this.accountReferenceId = manualLine !== null ? manualLine.accountReferenceId : null;
        this.clientAccountId = manualLine !== null ? manualLine.clientAccountId : null;
        this.associatedAccountId = manualLine !== null ? manualLine.associatedAccountId : null;
        this.accountLineTypeId = manualLine !== null ? manualLine.accountLineTypeId : null;
        this.costTypeId = manualLine !== null ? manualLine.costTypeId : null;
        this.amount = manualLine !== null ? manualLine.amount : null;
        this.narrative = manualLine !== null ? manualLine.narrative : null;
        this.departmentId = manualLine !== null ? manualLine.departmentId : null;
        this.secondaryDocumentReference = manualLine !== null ? manualLine.secondaryDocumentReference : null;
        this.externalDocumentReference = manualLine !== null ? manualLine.externalDocumentReference : null;
        this.sectionId = manualLine !== null ? manualLine.sectionId : null;
        this.commodityId = manualLine !== null ? manualLine.commodityId : null;
        this.quantity = manualLine !== null ? manualLine.quantity : null;
        this.costCenter = manualLine !== null ? manualLine.costCenter : null;
        this.accrualNumber = manualLine !== null ? manualLine.accrualNumber : null;
        this.charterId = manualLine !== null ? manualLine.charterId : null;
        this.fullAmount = manualLine !== null ? manualLine.fullAmount : null;
        this.fullQuantity = manualLine !== null ? manualLine.fullQuantity : null;
        this.dealNumber = manualLine !== null ? manualLine.dealNumber : null;
        this.settlementCurrency = manualLine !== null ? manualLine.settlementCurrency : null;
        this.provinceId = manualLine !== null ? manualLine.provinceId : null;
        this.branchId = manualLine !== null ? manualLine.branchId : null;
    }
    return ManualJournalLine;
}());



/***/ }),

/***/ "./Client/app/shared/entities/manual-journal-document.entity.ts":
/*!**********************************************************************!*\
  !*** ./Client/app/shared/entities/manual-journal-document.entity.ts ***!
  \**********************************************************************/
/*! exports provided: ManualJournalDocument */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ManualJournalDocument", function() { return ManualJournalDocument; });
var ManualJournalDocument = /** @class */ (function () {
    function ManualJournalDocument(manualJournalLines) {
        if (manualJournalLines === void 0) { manualJournalLines = null; }
        this.manualJournalLines = manualJournalLines;
    }
    return ManualJournalDocument;
}());



/***/ }),

/***/ "./Client/app/shared/entities/manualImportReport.entity.ts":
/*!*****************************************************************!*\
  !*** ./Client/app/shared/entities/manualImportReport.entity.ts ***!
  \*****************************************************************/
/*! exports provided: ManualImportReport */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ManualImportReport", function() { return ManualImportReport; });
var ManualImportReport = /** @class */ (function () {
    function ManualImportReport() {
        this.fxRateStageIds = [];
        this.blockerData = [];
        this.warningData = [];
    }
    return ManualImportReport;
}());



/***/ }),

/***/ "./Client/app/shared/enums/account-line-type.enum.ts":
/*!***********************************************************!*\
  !*** ./Client/app/shared/enums/account-line-type.enum.ts ***!
  \***********************************************************/
/*! exports provided: AccountLineTypes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AccountLineTypes", function() { return AccountLineTypes; });
var AccountLineTypes;
(function (AccountLineTypes) {
    AccountLineTypes[AccountLineTypes["Customer"] = 1] = "Customer";
    AccountLineTypes[AccountLineTypes["Vendor"] = 2] = "Vendor";
    AccountLineTypes[AccountLineTypes["Ledger"] = 3] = "Ledger";
    AccountLineTypes[AccountLineTypes["Bank"] = 4] = "Bank";
})(AccountLineTypes || (AccountLineTypes = {}));


/***/ }),

/***/ "./Client/app/shared/enums/generate-month-end-type.enum.ts":
/*!*****************************************************************!*\
  !*** ./Client/app/shared/enums/generate-month-end-type.enum.ts ***!
  \*****************************************************************/
/*! exports provided: GenerateMonthEndEnum */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GenerateMonthEndEnum", function() { return GenerateMonthEndEnum; });
var GenerateMonthEndEnum;
(function (GenerateMonthEndEnum) {
    GenerateMonthEndEnum[GenerateMonthEndEnum["Overview"] = 1] = "Overview";
    GenerateMonthEndEnum[GenerateMonthEndEnum["Details"] = 2] = "Details";
    GenerateMonthEndEnum[GenerateMonthEndEnum["Postings"] = 3] = "Postings";
})(GenerateMonthEndEnum || (GenerateMonthEndEnum = {}));


/***/ }),

/***/ "./Client/app/shared/enums/matching-type.enum.ts":
/*!*******************************************************!*\
  !*** ./Client/app/shared/enums/matching-type.enum.ts ***!
  \*******************************************************/
/*! exports provided: MatchingType */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatchingType", function() { return MatchingType; });
var MatchingType;
(function (MatchingType) {
    MatchingType[MatchingType["createMatch"] = 1] = "createMatch";
    MatchingType[MatchingType["deleteMatch"] = 2] = "deleteMatch";
    MatchingType["Credit"] = "Cr";
    MatchingType["Debit"] = "Dr";
})(MatchingType || (MatchingType = {}));


/***/ }),

/***/ "./Client/app/shared/enums/posting-document-tatype.enum.ts":
/*!*****************************************************************!*\
  !*** ./Client/app/shared/enums/posting-document-tatype.enum.ts ***!
  \*****************************************************************/
/*! exports provided: PostingDocumentTAType */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PostingDocumentTAType", function() { return PostingDocumentTAType; });
var PostingDocumentTAType;
(function (PostingDocumentTAType) {
    PostingDocumentTAType[PostingDocumentTAType["ManualTA"] = 1] = "ManualTA";
    PostingDocumentTAType[PostingDocumentTAType["MonthEndTA"] = 2] = "MonthEndTA";
})(PostingDocumentTAType || (PostingDocumentTAType = {}));


/***/ }),

/***/ "./Client/app/shared/enums/posting-document-type.enum.ts":
/*!***************************************************************!*\
  !*** ./Client/app/shared/enums/posting-document-type.enum.ts ***!
  \***************************************************************/
/*! exports provided: PostingDocumentType */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PostingDocumentType", function() { return PostingDocumentType; });
var PostingDocumentType;
(function (PostingDocumentType) {
    PostingDocumentType[PostingDocumentType["PI"] = 1] = "PI";
    PostingDocumentType[PostingDocumentType["SI"] = 2] = "SI";
    PostingDocumentType[PostingDocumentType["CN"] = 3] = "CN";
    PostingDocumentType[PostingDocumentType["DN"] = 4] = "DN";
    PostingDocumentType[PostingDocumentType["CP"] = 5] = "CP";
    PostingDocumentType[PostingDocumentType["CI"] = 6] = "CI";
    PostingDocumentType[PostingDocumentType["TA"] = 7] = "TA";
    PostingDocumentType[PostingDocumentType["MC"] = 8] = "MC";
    PostingDocumentType[PostingDocumentType["JL"] = 9] = "JL";
    PostingDocumentType[PostingDocumentType["FJ"] = 10] = "FJ";
    PostingDocumentType[PostingDocumentType["YE"] = 11] = "YE";
})(PostingDocumentType || (PostingDocumentType = {}));


/***/ }),

/***/ "./Client/app/shared/enums/posting-status.enum.ts":
/*!********************************************************!*\
  !*** ./Client/app/shared/enums/posting-status.enum.ts ***!
  \********************************************************/
/*! exports provided: PostingStatus */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PostingStatus", function() { return PostingStatus; });
var PostingStatus;
(function (PostingStatus) {
    PostingStatus[PostingStatus["Incomplete"] = 1] = "Incomplete";
    PostingStatus[PostingStatus["Held"] = 2] = "Held";
    PostingStatus[PostingStatus["MappingError"] = 3] = "MappingError";
    PostingStatus[PostingStatus["Authorized"] = 4] = "Authorized";
    PostingStatus[PostingStatus["Posted"] = 5] = "Posted";
    PostingStatus[PostingStatus["Deleted"] = 6] = "Deleted";
})(PostingStatus || (PostingStatus = {}));


/***/ }),

/***/ "./Client/app/shared/enums/report-type.enum.ts":
/*!*****************************************************!*\
  !*** ./Client/app/shared/enums/report-type.enum.ts ***!
  \*****************************************************/
/*! exports provided: ReportType */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ReportType", function() { return ReportType; });
var ReportType;
(function (ReportType) {
    ReportType[ReportType["Realized"] = 1] = "Realized";
    ReportType[ReportType["UnRealized"] = 2] = "UnRealized";
    ReportType[ReportType["MTMOpenFx"] = 3] = "MTMOpenFx";
})(ReportType || (ReportType = {}));


/***/ }),

/***/ "./Client/app/shared/models/fx-deal-generate-end-of-month-display-view.ts":
/*!********************************************************************************!*\
  !*** ./Client/app/shared/models/fx-deal-generate-end-of-month-display-view.ts ***!
  \********************************************************************************/
/*! exports provided: FxDealGenerateEndOfMonthDisplayView */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FxDealGenerateEndOfMonthDisplayView", function() { return FxDealGenerateEndOfMonthDisplayView; });
var FxDealGenerateEndOfMonthDisplayView = /** @class */ (function () {
    function FxDealGenerateEndOfMonthDisplayView(fxDeal) {
        if (fxDeal) {
            this.costType = fxDeal.costType;
            this.departmentCode = fxDeal.departmentCode;
            this.associatedClient = fxDeal.associatedClient;
            this.accrualNumber = fxDeal.accrualNumber;
            this.dealNumber = fxDeal.dealNumber;
            this.dealCurrency = fxDeal.dealCurrency;
            this.settlementCurrency = fxDeal.settlementCurrency;
            this.dealAmount = fxDeal.dealAmount;
            this.maturityDate = fxDeal.maturityDate;
            this.settlementAmount = fxDeal.settlementAmount;
            this.marketCcyRoeDealt = fxDeal.marketCcyRoeDealt;
            this.marketCcyRoeSettlement = fxDeal.marketCcyRoeSettlement;
            this.variationMargin = fxDeal.variationMargin;
            this.accountNumber = fxDeal.accountNumber;
            this.accountDescription = fxDeal.accountDescription;
            this.currencyCode = fxDeal.currencyCode;
            this.line1NominalAccountCode = fxDeal.line1NominalAccountCode;
            this.line2NominalAccountCode = fxDeal.line2NominalAccountCode;
            this.line1NominalAccountDesc = fxDeal.line1NominalAccountDesc;
            this.line2NominalAccountDesc = fxDeal.line2NominalAccountDesc;
            this.fxDealMonthEndMappingErrors = fxDeal.fxDealMonthEndMappingErrors;
        }
    }
    return FxDealGenerateEndOfMonthDisplayView;
}());



/***/ }),

/***/ "./Client/app/shared/models/overview-generate-end-of-month-display-view.ts":
/*!*********************************************************************************!*\
  !*** ./Client/app/shared/models/overview-generate-end-of-month-display-view.ts ***!
  \*********************************************************************************/
/*! exports provided: OverviewGenerateEndOfMonthDisplayView */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OverviewGenerateEndOfMonthDisplayView", function() { return OverviewGenerateEndOfMonthDisplayView; });
var OverviewGenerateEndOfMonthDisplayView = /** @class */ (function () {
    function OverviewGenerateEndOfMonthDisplayView(CostTrade, reportType) {
        if (CostTrade) {
            this.costType = CostTrade.costType;
            this.charterCode = CostTrade.charterCode;
            this.currencyCode = CostTrade.currencyCode;
            this.departmentCode = CostTrade.departmentCode;
            this.associatedClient = CostTrade.associatedClient;
            this.fullValue = CostTrade.fullValue;
            this.invoicedAmount = CostTrade.invoicedAmount;
            this.accruedAmount = (reportType === 1) ? ((CostTrade.accountLineTypeId !== 3) ?
                (-1 * (CostTrade.fullValue - CostTrade.invoicedAmount)) : (CostTrade.fullValue - CostTrade.invoicedAmount))
                : ((CostTrade.isOriginal === 0 ? ((CostTrade.fullValue - CostTrade.invoicedAmount))
                    : (-1 * (CostTrade.fullValue - CostTrade.invoicedAmount))));
            this.blDate = CostTrade.blDate;
            this.percentageActualized = CostTrade.percentageActualized;
            this.quantity = CostTrade.quantity;
            this.contractNumber = CostTrade.contractNumber;
            this.accrualNumber = CostTrade.accrualNumber;
            this.accountNumber = CostTrade.accountNumber;
            this.description = CostTrade.description;
            this.sectionId = CostTrade.sectionId;
            this.costId = CostTrade.costId;
            this.accountLineTypeId = CostTrade.accountLineTypeId;
            this.postingCostType = CostTrade.postingCostType;
            this.documentReference = CostTrade.documentReference;
            this.documentDate = CostTrade.documentDate;
            this.inhouseOrExternal = CostTrade.inhouseOrExternal;
        }
    }
    return OverviewGenerateEndOfMonthDisplayView;
}());



/***/ }),

/***/ "./Client/app/shared/models/posting-management-display-view.ts":
/*!*********************************************************************!*\
  !*** ./Client/app/shared/models/posting-management-display-view.ts ***!
  \*********************************************************************/
/*! exports provided: PostingManagementDisplayView */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PostingManagementDisplayView", function() { return PostingManagementDisplayView; });
var PostingManagementDisplayView = /** @class */ (function () {
    function PostingManagementDisplayView(postingManagement) {
        if (postingManagement) {
            this.accountingId = postingManagement.accountingId;
            this.documentReference = postingManagement.documentReference;
            this.documentDate = postingManagement.documentDate;
            this.associatedAcc = postingManagement.associatedAcc;
            this.statusId = postingManagement.statusId;
            this.errorMessage = postingManagement.errorMessage;
            this.amount = postingManagement.amount;
            this.currency = postingManagement.currencyCode;
            this.departmentId = postingManagement.departmentId;
            this.authorizedOn = postingManagement.localAuthorizedDate;
            this.authorizedDate = postingManagement.authorizedDate;
            this.localAuthorizedDate = postingManagement.localAuthorizedDate;
            var localAuthorizedDate = postingManagement.localAuthorizedDate;
            this.authorizedAt = localAuthorizedDate ? localAuthorizedDate.toISOString() : null;
            this.authorizedBy = postingManagement.authorizedBy;
            this.createdDateTime = postingManagement.createdDateTime;
            this.createdBy = postingManagement.createdBy;
            this.modifiedDateTime = postingManagement.modifiedDateTime;
            this.modifiedBy = postingManagement.modifiedBy;
            this.valueDate = postingManagement.valueDate;
            this.glDate = postingManagement.glDate;
            this.accountingPeriod = postingManagement.accountingPeriod;
            this.currencyCode = postingManagement.currencyCode;
            this.total = postingManagement.total;
            this.reason = '';
            this.accountingDocumentLines = postingManagement.accountingDocumentLines;
            this.isAmountValid = true;
            this.isFunctionalAmountValid = true;
            this.isStatuoryAmountValid = true;
            this.transactionDocumentTypeId = postingManagement.transactionDocumentTypeId;
            this.originalValueDate = postingManagement.originalValueDate;
            this.dmsId = postingManagement.dmsId;
            this.toInterface = postingManagement.toInterface;
            this.invoiceId = postingManagement.invoiceId;
            this.invoiceTypeId = postingManagement.invoiceTypeId;
            this.cashId = postingManagement.cashId;
            this.costDirectionId = postingManagement.costDirectionId;
            this.taTypeId = postingManagement.taTypeId;
            this.dealNumber = postingManagement.dealNumber;
            this.journalLineId = postingManagement.journalLineId;
            this.settlementCurrency = postingManagement.settlementCurrency;
        }
    }
    return PostingManagementDisplayView;
}());



/***/ }),

/***/ "./Client/app/shared/models/reversal-document-display-view.ts":
/*!********************************************************************!*\
  !*** ./Client/app/shared/models/reversal-document-display-view.ts ***!
  \********************************************************************/
/*! exports provided: ReversalDocumentDisplayView */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ReversalDocumentDisplayView", function() { return ReversalDocumentDisplayView; });
var ReversalDocumentDisplayView = /** @class */ (function () {
    function ReversalDocumentDisplayView(reversalDocument) {
        if (reversalDocument) {
            this.accountingId = reversalDocument.accountingId;
            this.accountingDocumentLines = reversalDocument.accountingDocumentLines;
        }
    }
    return ReversalDocumentDisplayView;
}());



/***/ }),

/***/ "./Client/app/shared/models/transaction-detail-display-view.ts":
/*!*********************************************************************!*\
  !*** ./Client/app/shared/models/transaction-detail-display-view.ts ***!
  \*********************************************************************/
/*! exports provided: TransactionDetailDisplayView */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TransactionDetailDisplayView", function() { return TransactionDetailDisplayView; });
var TransactionDetailDisplayView = /** @class */ (function () {
    function TransactionDetailDisplayView(transactionDetail) {
        if (transactionDetail) {
            this.transactionDocumentId = transactionDetail.transactionDocumentId;
            this.transactionDocumentTypeId = transactionDetail.transactionDocumentTypeId;
        }
    }
    return TransactionDetailDisplayView;
}());



/***/ }),

/***/ "./Client/app/shared/services/execution/dtos/document-matching.ts":
/*!************************************************************************!*\
  !*** ./Client/app/shared/services/execution/dtos/document-matching.ts ***!
  \************************************************************************/
/*! exports provided: DocumentMatching */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DocumentMatching", function() { return DocumentMatching; });
var DocumentMatching = /** @class */ (function () {
    function DocumentMatching() {
    }
    return DocumentMatching;
}());



/***/ }),

/***/ "./Client/app/shared/services/execution/dtos/fxdeal-month-end-temporary-adjustment-list-command.ts":
/*!*********************************************************************************************************!*\
  !*** ./Client/app/shared/services/execution/dtos/fxdeal-month-end-temporary-adjustment-list-command.ts ***!
  \*********************************************************************************************************/
/*! exports provided: FXDealMonthEndTemporaryAdjustmentListCommand */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FXDealMonthEndTemporaryAdjustmentListCommand", function() { return FXDealMonthEndTemporaryAdjustmentListCommand; });
var FXDealMonthEndTemporaryAdjustmentListCommand = /** @class */ (function () {
    function FXDealMonthEndTemporaryAdjustmentListCommand() {
    }
    return FXDealMonthEndTemporaryAdjustmentListCommand;
}());



/***/ }),

/***/ "./Client/app/shared/services/execution/dtos/month-end-temporary-adjustment-list-command.ts":
/*!**************************************************************************************************!*\
  !*** ./Client/app/shared/services/execution/dtos/month-end-temporary-adjustment-list-command.ts ***!
  \**************************************************************************************************/
/*! exports provided: MonthEndTemporaryAdjustmentListCommand */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MonthEndTemporaryAdjustmentListCommand", function() { return MonthEndTemporaryAdjustmentListCommand; });
var MonthEndTemporaryAdjustmentListCommand = /** @class */ (function () {
    function MonthEndTemporaryAdjustmentListCommand() {
    }
    return MonthEndTemporaryAdjustmentListCommand;
}());



/***/ }),

/***/ "./Client/app/shared/services/execution/year-end-process-command.ts":
/*!**************************************************************************!*\
  !*** ./Client/app/shared/services/execution/year-end-process-command.ts ***!
  \**************************************************************************/
/*! exports provided: YearEndProcessCommand */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "YearEndProcessCommand", function() { return YearEndProcessCommand; });
var YearEndProcessCommand = /** @class */ (function () {
    function YearEndProcessCommand() {
    }
    return YearEndProcessCommand;
}());



/***/ }),

/***/ "./Client/app/shared/services/list-and-search/financials-edit-document-data-loader.ts":
/*!********************************************************************************************!*\
  !*** ./Client/app/shared/services/list-and-search/financials-edit-document-data-loader.ts ***!
  \********************************************************************************************/
/*! exports provided: FinancialsEditDocumentDataLoader */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FinancialsEditDocumentDataLoader", function() { return FinancialsEditDocumentDataLoader; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _dtos_list_and_search_list_and_search_filter_dto_dto__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../dtos/list-and-search/list-and-search-filter-dto.dto */ "./Client/app/shared/dtos/list-and-search/list-and-search-filter-dto.dto.ts");
/* harmony import */ var _http_services_preaccounting_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../http-services/preaccounting.service */ "./Client/app/shared/services/http-services/preaccounting.service.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





var FinancialsEditDocumentDataLoader = /** @class */ (function () {
    function FinancialsEditDocumentDataLoader(preaccountingService) {
        this.preaccountingService = preaccountingService;
    }
    FinancialsEditDocumentDataLoader.prototype.getData = function (filters, accountingId, dataVersionId, offset, limit) {
        var filtersForColumns = filters.map(function (filter) {
            return new _dtos_list_and_search_list_and_search_filter_dto_dto__WEBPACK_IMPORTED_MODULE_3__["ListAndSearchFilterDto"](filter);
        });
        var request = {
            clauses: { clauses: filtersForColumns },
            offset: offset,
            limit: limit,
        };
        var list = Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(new rxjs__WEBPACK_IMPORTED_MODULE_1__["Observable"]());
        // has to replace with execution search service call
        if (accountingId) {
            list = this.preaccountingService.getAccoutingLinesData(request)
                .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (data) {
                data.value = data.value.filter(function (row) { return row.accountingDocumentId === accountingId; });
                return data;
            }));
        }
        return list;
    };
    FinancialsEditDocumentDataLoader = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])(),
        __metadata("design:paramtypes", [_http_services_preaccounting_service__WEBPACK_IMPORTED_MODULE_4__["PreaccountingService"]])
    ], FinancialsEditDocumentDataLoader);
    return FinancialsEditDocumentDataLoader;
}());



/***/ }),

/***/ "./Client/app/shared/services/list-and-search/posting-acoount-lines-data-loader.ts":
/*!*****************************************************************************************!*\
  !*** ./Client/app/shared/services/list-and-search/posting-acoount-lines-data-loader.ts ***!
  \*****************************************************************************************/
/*! exports provided: PostingAccountLinesDataLoader */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PostingAccountLinesDataLoader", function() { return PostingAccountLinesDataLoader; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _dtos_list_and_search_list_and_search_filter_dto_dto__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../dtos/list-and-search/list-and-search-filter-dto.dto */ "./Client/app/shared/dtos/list-and-search/list-and-search-filter-dto.dto.ts");
/* harmony import */ var _http_services_preaccounting_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../http-services/preaccounting.service */ "./Client/app/shared/services/http-services/preaccounting.service.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var PostingAccountLinesDataLoader = /** @class */ (function () {
    function PostingAccountLinesDataLoader(preaccountingService) {
        this.preaccountingService = preaccountingService;
    }
    PostingAccountLinesDataLoader.prototype.getData = function (filters, dataVersionId, offset, limit) {
        var filtersForColumns = filters.map(function (filter) {
            return new _dtos_list_and_search_list_and_search_filter_dto_dto__WEBPACK_IMPORTED_MODULE_2__["ListAndSearchFilterDto"](filter);
        });
        var request = {
            clauses: { clauses: filtersForColumns },
            offset: offset,
            limit: limit,
        };
        var list = this.preaccountingService.getAccoutingDocumentDataList(request)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["map"])(function (data) {
            return data;
        }));
        return list;
    };
    PostingAccountLinesDataLoader = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])(),
        __metadata("design:paramtypes", [_http_services_preaccounting_service__WEBPACK_IMPORTED_MODULE_3__["PreaccountingService"]])
    ], PostingAccountLinesDataLoader);
    return PostingAccountLinesDataLoader;
}());



/***/ }),

/***/ "./Client/app/shared/services/preaccounting/all-document-reference-data-loader.ts":
/*!****************************************************************************************!*\
  !*** ./Client/app/shared/services/preaccounting/all-document-reference-data-loader.ts ***!
  \****************************************************************************************/
/*! exports provided: AllDocumentReferenceDataLoader */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AllDocumentReferenceDataLoader", function() { return AllDocumentReferenceDataLoader; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _http_services_accounting_document_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../http-services/accounting-document.service */ "./Client/app/shared/services/http-services/accounting-document.service.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var AllDocumentReferenceDataLoader = /** @class */ (function () {
    function AllDocumentReferenceDataLoader(accountingDocumentService) {
        this.accountingDocumentService = accountingDocumentService;
    }
    AllDocumentReferenceDataLoader.prototype.getData = function () {
        var filtersForColumns = [];
        var request = {
            clauses: { clauses: filtersForColumns },
        };
        var list = this.accountingDocumentService.documentReferenceContexuaSearch(request, false)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["map"])(function (data) {
            return data.value;
        }));
        return list;
    };
    AllDocumentReferenceDataLoader = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])(),
        __metadata("design:paramtypes", [_http_services_accounting_document_service__WEBPACK_IMPORTED_MODULE_2__["AccountingDocumentService"]])
    ], AllDocumentReferenceDataLoader);
    return AllDocumentReferenceDataLoader;
}());



/***/ }),

/***/ "./Client/app/shared/services/preaccounting/document-reference-data-loader.ts":
/*!************************************************************************************!*\
  !*** ./Client/app/shared/services/preaccounting/document-reference-data-loader.ts ***!
  \************************************************************************************/
/*! exports provided: DocumentReferenceDataLoader */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DocumentReferenceDataLoader", function() { return DocumentReferenceDataLoader; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _http_services_accounting_document_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../http-services/accounting-document.service */ "./Client/app/shared/services/http-services/accounting-document.service.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var DocumentReferenceDataLoader = /** @class */ (function () {
    function DocumentReferenceDataLoader(accountingDocumentService) {
        this.accountingDocumentService = accountingDocumentService;
    }
    DocumentReferenceDataLoader.prototype.getData = function () {
        var filtersForColumns = [];
        var request = {
            clauses: { clauses: filtersForColumns },
        };
        var list = this.accountingDocumentService.documentReferenceContexuaSearch(request)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["map"])(function (data) {
            return data.value;
        }));
        return list;
    };
    DocumentReferenceDataLoader = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])(),
        __metadata("design:paramtypes", [_http_services_accounting_document_service__WEBPACK_IMPORTED_MODULE_2__["AccountingDocumentService"]])
    ], DocumentReferenceDataLoader);
    return DocumentReferenceDataLoader;
}());



/***/ }),

/***/ "./Client/app/shared/services/preaccounting/dtos/document-matching-record.ts":
/*!***********************************************************************************!*\
  !*** ./Client/app/shared/services/preaccounting/dtos/document-matching-record.ts ***!
  \***********************************************************************************/
/*! exports provided: DocumentMatchingRecord */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DocumentMatchingRecord", function() { return DocumentMatchingRecord; });
var DocumentMatchingRecord = /** @class */ (function () {
    function DocumentMatchingRecord() {
        this.documentMatchings = [];
        this.manualDocumentMatchings = [];
        this.unmatchDocuments = [];
    }
    return DocumentMatchingRecord;
}());



/***/ }),

/***/ "./Client/app/shared/services/preaccounting/transaction-document-data-loader.ts":
/*!**************************************************************************************!*\
  !*** ./Client/app/shared/services/preaccounting/transaction-document-data-loader.ts ***!
  \**************************************************************************************/
/*! exports provided: TransactionDocumentDataLoader */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TransactionDocumentDataLoader", function() { return TransactionDocumentDataLoader; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _http_services_accounting_document_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../http-services/accounting-document.service */ "./Client/app/shared/services/http-services/accounting-document.service.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var TransactionDocumentDataLoader = /** @class */ (function () {
    function TransactionDocumentDataLoader(accountingDocumentService) {
        this.accountingDocumentService = accountingDocumentService;
    }
    TransactionDocumentDataLoader.prototype.getData = function () {
        var filtersForColumns = [];
        var request = {
            clauses: { clauses: filtersForColumns },
        };
        var list = this.accountingDocumentService.transactionDocumentContexuaSearch(request)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["map"])(function (data) {
            return data.value;
        }));
        return list;
    };
    TransactionDocumentDataLoader = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])(),
        __metadata("design:paramtypes", [_http_services_accounting_document_service__WEBPACK_IMPORTED_MODULE_2__["AccountingDocumentService"]])
    ], TransactionDocumentDataLoader);
    return TransactionDocumentDataLoader;
}());



/***/ })

}]);
//# sourceMappingURL=financial-financial-module.js.map