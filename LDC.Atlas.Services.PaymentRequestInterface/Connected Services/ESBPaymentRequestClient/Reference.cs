//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     //
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ESBPaymentRequestClient
{
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://esb-api.ldc.com/paymentOrder")]
    public partial class soapFaultDoc
    {
        
        private string messageField;
        
        private string categoryField;
        
        private string codeField;
        
        private string errorTypeField;
        
        private errors[] errorsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true, Order=0)]
        public string message
        {
            get
            {
                return this.messageField;
            }
            set
            {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true, Order=1)]
        public string category
        {
            get
            {
                return this.categoryField;
            }
            set
            {
                this.categoryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true, Order=2)]
        public string code
        {
            get
            {
                return this.codeField;
            }
            set
            {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true, Order=3)]
        public string errorType
        {
            get
            {
                return this.errorTypeField;
            }
            set
            {
                this.errorTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("errors", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true, Order=4)]
        public errors[] errors
        {
            get
            {
                return this.errorsField;
            }
            set
            {
                this.errorsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://esb-api.ldc.com/paymentOrder")]
    public partial class errors
    {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://esb-api.ldc.com/paymentOrder", ConfigurationName="ESBPaymentRequestClient.ws_PortType")]
    internal interface ws_PortType
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="LDC_API_processPaymentOrder_v1_soap_ws_Binder_process", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(ESBPaymentRequestClient.soapFaultDoc), Action="LDC_API_processPaymentOrder_v1_soap_ws_Binder_process", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ESBPaymentRequestClient.processResponse> processAsync(ESBPaymentRequestClient.processRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="process", WrapperNamespace="http://esb-api.ldc.com/paymentOrder", IsWrapped=true)]
    internal partial class processRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://esb-api.ldc.com/paymentOrder", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string fileName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://esb-api.ldc.com/paymentOrder", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string legalEntityCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://esb-api.ldc.com/paymentOrder", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary", IsNullable=true)]
        public byte[] attachment;
        
        public processRequest()
        {
        }
        
        public processRequest(string fileName, string legalEntityCode, byte[] attachment)
        {
            this.fileName = fileName;
            this.legalEntityCode = legalEntityCode;
            this.attachment = attachment;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="processResponse", WrapperNamespace="http://esb-api.ldc.com/paymentOrder", IsWrapped=true)]
    internal partial class processResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://esb-api.ldc.com/paymentOrder", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string uuid;
        
        public processResponse()
        {
        }
        
        public processResponse(string uuid)
        {
            this.uuid = uuid;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    internal interface ws_PortTypeChannel : ESBPaymentRequestClient.ws_PortType, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    internal partial class ws_PortTypeClient : System.ServiceModel.ClientBase<ESBPaymentRequestClient.ws_PortType>, ESBPaymentRequestClient.ws_PortType
    {
        
    /// <summary>
    /// Implement this partial method to configure the service endpoint.
    /// </summary>
    /// <param name="serviceEndpoint">The endpoint to configure</param>
    /// <param name="clientCredentials">The client credentials</param>
    static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public ws_PortTypeClient() : 
                base(ws_PortTypeClient.GetDefaultBinding(), ws_PortTypeClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.LDC_API_processPaymentOrder_v1_soap_ws_Port.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ws_PortTypeClient(EndpointConfiguration endpointConfiguration) : 
                base(ws_PortTypeClient.GetBindingForEndpoint(endpointConfiguration), ws_PortTypeClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ws_PortTypeClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(ws_PortTypeClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ws_PortTypeClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(ws_PortTypeClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ws_PortTypeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ESBPaymentRequestClient.processResponse> ESBPaymentRequestClient.ws_PortType.processAsync(ESBPaymentRequestClient.processRequest request)
        {
            return base.Channel.processAsync(request);
        }
        
        public System.Threading.Tasks.Task<ESBPaymentRequestClient.processResponse> processAsync(string fileName, string legalEntityCode, byte[] attachment)
        {
            ESBPaymentRequestClient.processRequest inValue = new ESBPaymentRequestClient.processRequest();
            inValue.fileName = fileName;
            inValue.legalEntityCode = legalEntityCode;
            inValue.attachment = attachment;
            return ((ESBPaymentRequestClient.ws_PortType)(this)).processAsync(inValue);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.LDC_API_processPaymentOrder_v1_soap_ws_Port))
            {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                System.ServiceModel.Channels.TextMessageEncodingBindingElement textBindingElement = new System.ServiceModel.Channels.TextMessageEncodingBindingElement();
                textBindingElement.MessageVersion = System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion.Soap12, System.ServiceModel.Channels.AddressingVersion.None);
                result.Elements.Add(textBindingElement);
                System.ServiceModel.Channels.HttpsTransportBindingElement httpsBindingElement = new System.ServiceModel.Channels.HttpsTransportBindingElement();
                httpsBindingElement.AllowCookies = true;
                httpsBindingElement.MaxBufferSize = int.MaxValue;
                httpsBindingElement.MaxReceivedMessageSize = int.MaxValue;
                result.Elements.Add(httpsBindingElement);
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.LDC_API_processPaymentOrder_v1_soap_ws_Port))
            {
                return new System.ServiceModel.EndpointAddress("https://esb-api-int.ldc.com/ws/LDC.API.processPaymentOrder_v1.soap:ws/LD" +
                        "C_API_processPaymentOrder_v1_soap_ws_Port");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return ws_PortTypeClient.GetBindingForEndpoint(EndpointConfiguration.LDC_API_processPaymentOrder_v1_soap_ws_Port);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return ws_PortTypeClient.GetEndpointAddress(EndpointConfiguration.LDC_API_processPaymentOrder_v1_soap_ws_Port);
        }
        
        public enum EndpointConfiguration
        {
            
            LDC_API_processPaymentOrder_v1_soap_ws_Port,
        }
    }
}
